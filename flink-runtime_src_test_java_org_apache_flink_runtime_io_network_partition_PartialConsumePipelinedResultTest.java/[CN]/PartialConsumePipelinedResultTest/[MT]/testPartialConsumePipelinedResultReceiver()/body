{
  final JobVertex sender=new JobVertex("Sender");
  sender.setInvokableClass(SlowBufferSender.class);
  sender.setParallelism(PARALLELISM);
  final JobVertex receiver=new JobVertex("Receiver");
  receiver.setInvokableClass(SingleBufferReceiver.class);
  receiver.setParallelism(PARALLELISM);
  receiver.connectNewDataSetAsInput(sender,DistributionPattern.POINTWISE,ResultPartitionType.PIPELINED);
  final JobGraph jobGraph=new JobGraph("Partial Consume of Pipelined Result",new ExecutionConfig(),sender,receiver);
  final SlotSharingGroup slotSharingGroup=new SlotSharingGroup(sender.getID(),receiver.getID());
  sender.setSlotSharingGroup(slotSharingGroup);
  receiver.setSlotSharingGroup(slotSharingGroup);
  flink.submitJobAndWait(jobGraph,false,TestingUtils.TESTING_DURATION());
}
