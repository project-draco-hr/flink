{
  try {
    TypeSerializer<T> serializer=getSerializer();
    T[] testData=getData();
    for (    T value : testData) {
      TestOutputView out=new TestOutputView();
      serializer.serialize(value,out);
      TestInputView in=out.getInputView();
      assertTrue("No data available during deserialization.",in.available() > 0);
      T deserialized=serializer.deserialize(serializer.createInstance(),in);
      deserialized.toString();
      deepEquals("Deserialized value if wrong.",value,deserialized);
      assertTrue("Trailing data available after deserialization.",in.available() == 0);
    }
  }
 catch (  Exception e) {
    System.err.println(e.getMessage());
    e.printStackTrace();
    fail("Exception in test: " + e.getMessage());
  }
}
