{
  JaqlTree.topdown_return retval=new JaqlTree.topdown_return();
  retval.start=input.LT(1);
  CommonTree root_0=null;
  CommonTree _first_0=null;
  CommonTree _last=null;
  JaqlTree.fieldAccess_return fieldAccess1=null;
  JaqlTree.methodCalls_return methodCalls2=null;
  JaqlTree.streaming_return streaming3=null;
  JaqlTree.arrayAccess_return arrayAccess4=null;
  try {
    int alt1=4;
    alt1=dfa1.predict(input);
switch (alt1) {
case 1:
{
        _last=(CommonTree)input.LT(1);
        pushFollow(FOLLOW_fieldAccess_in_topdown53);
        fieldAccess1=fieldAccess();
        state._fsp--;
        if (state.failed)         return retval;
        if (state.backtracking == 1)         if (_first_0 == null)         _first_0=fieldAccess1.tree;
        if (state.backtracking == 1) {
          retval.tree=(CommonTree)_first_0;
          if (adaptor.getParent(retval.tree) != null && adaptor.isNil(adaptor.getParent(retval.tree)))           retval.tree=(CommonTree)adaptor.getParent(retval.tree);
        }
      }
    break;
case 2:
{
    _last=(CommonTree)input.LT(1);
    pushFollow(FOLLOW_methodCalls_in_topdown57);
    methodCalls2=methodCalls();
    state._fsp--;
    if (state.failed)     return retval;
    if (state.backtracking == 1)     if (_first_0 == null)     _first_0=methodCalls2.tree;
    if (state.backtracking == 1) {
      retval.tree=(CommonTree)_first_0;
      if (adaptor.getParent(retval.tree) != null && adaptor.isNil(adaptor.getParent(retval.tree)))       retval.tree=(CommonTree)adaptor.getParent(retval.tree);
    }
  }
break;
case 3:
{
_last=(CommonTree)input.LT(1);
pushFollow(FOLLOW_streaming_in_topdown61);
streaming3=streaming();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 1) if (_first_0 == null) _first_0=streaming3.tree;
if (state.backtracking == 1) {
  retval.tree=(CommonTree)_first_0;
  if (adaptor.getParent(retval.tree) != null && adaptor.isNil(adaptor.getParent(retval.tree)))   retval.tree=(CommonTree)adaptor.getParent(retval.tree);
}
}
break;
case 4:
{
_last=(CommonTree)input.LT(1);
pushFollow(FOLLOW_arrayAccess_in_topdown65);
arrayAccess4=arrayAccess();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 1) if (_first_0 == null) _first_0=arrayAccess4.tree;
if (state.backtracking == 1) {
retval.tree=(CommonTree)_first_0;
if (adaptor.getParent(retval.tree) != null && adaptor.isNil(adaptor.getParent(retval.tree))) retval.tree=(CommonTree)adaptor.getParent(retval.tree);
}
}
break;
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return retval;
}
