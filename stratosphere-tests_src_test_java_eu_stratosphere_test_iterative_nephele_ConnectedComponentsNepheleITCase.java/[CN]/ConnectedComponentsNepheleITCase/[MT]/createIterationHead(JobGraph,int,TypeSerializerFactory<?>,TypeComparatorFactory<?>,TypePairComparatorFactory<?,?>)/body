{
  JobTaskVertex head=JobGraphUtils.createTask(IterationHeadPactTask.class,"Join With Edges (Iteration Head)",jobGraph,numSubTasks,numSubTasks);
  TaskConfig headConfig=new TaskConfig(head.getConfiguration());
{
    headConfig.setIterationId(ITERATION_ID);
    headConfig.addInputToGroup(0);
    headConfig.setInputSerializer(serializer,0);
    headConfig.setInputComparator(comparator,0);
    headConfig.setInputLocalStrategy(0,LocalStrategy.NONE);
    headConfig.setIterationHeadPartialSolutionOrWorksetInputIndex(0);
    headConfig.addInputToGroup(1);
    headConfig.setInputSerializer(serializer,1);
    headConfig.setInputComparator(comparator,1);
    headConfig.setInputLocalStrategy(1,LocalStrategy.NONE);
    headConfig.setInputCached(1,true);
    headConfig.setInputMaterializationMemory(1,MEM_PER_CONSUMER * JobGraphUtils.MEGABYTE);
    headConfig.addInputToGroup(2);
    headConfig.setInputSerializer(serializer,2);
    headConfig.setInputComparator(comparator,2);
    headConfig.setInputLocalStrategy(2,LocalStrategy.NONE);
    headConfig.setIterationHeadSolutionSetInputIndex(2);
    headConfig.setSolutionSetSerializer(serializer);
    headConfig.setSolutionSetComparator(comparator);
    headConfig.setIsWorksetIteration();
    headConfig.setBackChannelMemory(MEM_PER_CONSUMER * JobGraphUtils.MEGABYTE);
    headConfig.setSolutionSetMemory(MEM_PER_CONSUMER * JobGraphUtils.MEGABYTE);
    headConfig.setOutputSerializer(serializer);
    headConfig.addOutputShipStrategy(ShipStrategyType.PARTITION_HASH);
    headConfig.setOutputComparator(comparator,0);
    TaskConfig headFinalOutConfig=new TaskConfig(new Configuration());
    headFinalOutConfig.setOutputSerializer(serializer);
    headFinalOutConfig.addOutputShipStrategy(ShipStrategyType.FORWARD);
    headConfig.setIterationHeadFinalOutputConfig(headFinalOutConfig);
    headConfig.setIterationHeadIndexOfSyncOutput(2);
    headConfig.setDriver(BuildSecondCachedMatchDriver.class);
    headConfig.setDriverStrategy(DriverStrategy.HYBRIDHASH_BUILD_SECOND);
    headConfig.setStubWrapper(new UserCodeClassWrapper<NeighborWithComponentIDJoin>(NeighborWithComponentIDJoin.class));
    headConfig.setDriverComparator(comparator,0);
    headConfig.setDriverComparator(comparator,1);
    headConfig.setDriverPairComparator(pairComparator);
    headConfig.setMemoryDriver(MEM_PER_CONSUMER * JobGraphUtils.MEGABYTE);
    headConfig.addIterationAggregator(WorksetEmptyConvergenceCriterion.AGGREGATOR_NAME,new LongSumAggregator());
  }
  return head;
}
