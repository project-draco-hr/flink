{
  Set<Long> toRemove=new HashSet<>();
  Set<Context> toTrigger=new HashSet<>();
  for (  Map.Entry<Long,Set<Context>> triggers : watermarkTimers.entrySet()) {
    if (triggers.getKey() <= mark.getTimestamp()) {
      for (      Context context : triggers.getValue()) {
        toTrigger.add(context);
      }
      toRemove.add(triggers.getKey());
    }
  }
  for (  Context context : toTrigger) {
    if (context.watermarkTimer <= mark.getTimestamp()) {
      Trigger.TriggerResult triggerResult=context.onEventTime(context.watermarkTimer);
      processTriggerResult(triggerResult,context.window);
    }
  }
  for (  Long l : toRemove) {
    watermarkTimers.remove(l);
  }
  output.emitWatermark(mark);
  this.currentWatermark=mark.getTimestamp();
}
