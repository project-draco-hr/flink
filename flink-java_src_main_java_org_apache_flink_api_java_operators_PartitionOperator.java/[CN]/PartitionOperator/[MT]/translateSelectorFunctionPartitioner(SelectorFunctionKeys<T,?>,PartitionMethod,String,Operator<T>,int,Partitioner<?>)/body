{
  final SelectorFunctionKeys<T,K> keys=(SelectorFunctionKeys<T,K>)rawKeys;
  TypeInformation<Tuple2<K,T>> typeInfoWithKey=SelectorFunctionKeys.createTypeWithKey(keys);
  Operator<Tuple2<K,T>> keyedInput=SelectorFunctionKeys.appendKeyExtractor(input,keys);
  PartitionOperatorBase<Tuple2<K,T>> keyedPartitionedInput=new PartitionOperatorBase<>(new UnaryOperatorInformation<>(typeInfoWithKey,typeInfoWithKey),pMethod,new int[]{0},name);
  keyedPartitionedInput.setInput(keyedInput);
  keyedPartitionedInput.setCustomPartitioner(customPartitioner);
  keyedPartitionedInput.setParallelism(partitionDop);
  return SelectorFunctionKeys.appendKeyRemover(keyedPartitionedInput,keys);
}
