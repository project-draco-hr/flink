{
  Random rnd=new Random(807346528946L);
  SimpleTypes a=new SimpleTypes();
  SimpleTypes b=new SimpleTypes(rnd.nextInt(),rnd.nextLong(),(byte)rnd.nextInt(),StringUtils.getRandomString(rnd,10,100),(short)rnd.nextInt(),rnd.nextDouble());
  SimpleTypes c=new SimpleTypes(rnd.nextInt(),rnd.nextLong(),(byte)rnd.nextInt(),StringUtils.getRandomString(rnd,10,100),(short)rnd.nextInt(),rnd.nextDouble());
  SimpleTypes d=new SimpleTypes(rnd.nextInt(),rnd.nextLong(),(byte)rnd.nextInt(),StringUtils.getRandomString(rnd,10,100),(short)rnd.nextInt(),rnd.nextDouble());
  SimpleTypes e=new SimpleTypes(rnd.nextInt(),rnd.nextLong(),(byte)rnd.nextInt(),StringUtils.getRandomString(rnd,10,100),(short)rnd.nextInt(),rnd.nextDouble());
  SimpleTypes f=new SimpleTypes(rnd.nextInt(),rnd.nextLong(),(byte)rnd.nextInt(),StringUtils.getRandomString(rnd,10,100),(short)rnd.nextInt(),rnd.nextDouble());
  SimpleTypes g=new SimpleTypes(rnd.nextInt(),rnd.nextLong(),(byte)rnd.nextInt(),StringUtils.getRandomString(rnd,10,100),(short)rnd.nextInt(),rnd.nextDouble());
  ComplexNestedObject1 o1=new ComplexNestedObject1(5626435);
  ComplexNestedObject1 o2=new ComplexNestedObject1(76923);
  ComplexNestedObject1 o3=new ComplexNestedObject1(-1100);
  ComplexNestedObject1 o4=new ComplexNestedObject1(0);
  ComplexNestedObject1 o5=new ComplexNestedObject1(44);
  ComplexNestedObject2 co1=new ComplexNestedObject2(rnd);
  ComplexNestedObject2 co2=new ComplexNestedObject2();
  ComplexNestedObject2 co3=new ComplexNestedObject2(rnd);
  ComplexNestedObject2 co4=new ComplexNestedObject2(rnd);
  Book b1=new Book(976243875L,"The Serialization Odysse",42);
  Book b2=new Book(0L,"Debugging byte streams",1337);
  Book b3=new Book(-1L,"Low level interfaces",0xC0FFEE);
  Book b4=new Book(Long.MAX_VALUE,"The joy of bits and bytes",0xDEADBEEF);
  Book b5=new Book(Long.MIN_VALUE,"Winnign a prize for creative test strings",0xBADF00);
  Book b6=new Book(-2L,"Distributed Systems",0xABCDEF0123456789L);
  ArrayList<String> list=new ArrayList<String>();
  list.add("A");
  list.add("B");
  list.add("C");
  list.add("D");
  list.add("E");
  BookAuthor ba1=new BookAuthor(976243875L,list,"Arno Nym");
  ArrayList<String> list2=new ArrayList<String>();
  BookAuthor ba2=new BookAuthor(987654321L,list2,"The Saurus");
  @SuppressWarnings("unchecked") Tuple5<SimpleTypes,Book,ComplexNestedObject1,BookAuthor,ComplexNestedObject2>[] testTuples=new Tuple5[]{new Tuple5<SimpleTypes,Book,ComplexNestedObject1,BookAuthor,ComplexNestedObject2>(a,b1,o1,ba1,co1),new Tuple5<SimpleTypes,Book,ComplexNestedObject1,BookAuthor,ComplexNestedObject2>(b,b2,o2,ba2,co2),new Tuple5<SimpleTypes,Book,ComplexNestedObject1,BookAuthor,ComplexNestedObject2>(c,b3,o3,ba1,co3),new Tuple5<SimpleTypes,Book,ComplexNestedObject1,BookAuthor,ComplexNestedObject2>(d,b2,o4,ba1,co4),new Tuple5<SimpleTypes,Book,ComplexNestedObject1,BookAuthor,ComplexNestedObject2>(e,b4,o5,ba2,co4),new Tuple5<SimpleTypes,Book,ComplexNestedObject1,BookAuthor,ComplexNestedObject2>(f,b5,o1,ba2,co4),new Tuple5<SimpleTypes,Book,ComplexNestedObject1,BookAuthor,ComplexNestedObject2>(g,b6,o4,ba1,co2)};
  runTests(testTuples);
}
