{
  this.isTaskEvent=isTaskEvent;
  this.shell=new Shell(parent);
  this.shell.setSize(WIDTH,HEIGHT);
  String title=null;
  if (isTaskEvent) {
    if (failureEvent == null) {
      title="Create new task failure event";
    }
 else {
      title="Edit task failure event";
    }
  }
 else {
    if (failureEvent == null) {
      title="Create new instance failure event";
    }
 else {
      title="Edit instance failure event";
    }
  }
  this.shell.setText(title);
  this.shell.setLayout(new GridLayout(2,false));
  final GridData labelGridData=new GridData();
  labelGridData.horizontalAlignment=GridData.BEGINNING;
  labelGridData.grabExcessHorizontalSpace=false;
  labelGridData.grabExcessVerticalSpace=false;
  final Label nameLabel=new Label(this.shell,SWT.NONE);
  if (isTaskEvent) {
    nameLabel.setText("Task name:");
  }
 else {
    nameLabel.setText("Instance name:");
  }
  nameLabel.setLayoutData(labelGridData);
  final GridData fieldGridData=new GridData();
  fieldGridData.horizontalAlignment=GridData.FILL;
  fieldGridData.grabExcessHorizontalSpace=true;
  fieldGridData.grabExcessVerticalSpace=false;
  this.name=new AutoCompletionCombo(this.shell,SWT.NONE,nameSuggestions);
  this.name.setLayoutData(fieldGridData);
  this.name.addKeyListener(new KeyAdapter(){
    @Override public void keyReleased(    final KeyEvent arg0){
      if (arg0.character != SWT.CR) {
        return;
      }
      if (isInputValid()) {
        returnValue=assembleReturnValue();
        shell.dispose();
      }
    }
  }
);
  final Label intervalLabel=new Label(this.shell,SWT.NONE);
  intervalLabel.setText("Interval:");
  intervalLabel.setLayoutData(labelGridData);
  this.interval=new Text(this.shell,SWT.SINGLE | SWT.BORDER);
  this.interval.setLayoutData(fieldGridData);
  this.interval.addKeyListener(new KeyAdapter(){
    @Override public void keyReleased(    final KeyEvent arg0){
      if (arg0.character != SWT.CR) {
        return;
      }
      if (isInputValid()) {
        returnValue=assembleReturnValue();
        shell.dispose();
      }
    }
  }
);
  final GridData buttonGridData=new GridData();
  buttonGridData.horizontalAlignment=SWT.RIGHT;
  buttonGridData.verticalAlignment=SWT.BOTTOM;
  buttonGridData.grabExcessHorizontalSpace=true;
  buttonGridData.grabExcessVerticalSpace=true;
  buttonGridData.horizontalSpan=2;
  final Composite buttonComposite=new Composite(this.shell,SWT.RIGHT_TO_LEFT);
  final RowLayout rowLayout=new RowLayout(SWT.HORIZONTAL);
  rowLayout.marginBottom=0;
  rowLayout.marginHeight=0;
  rowLayout.marginLeft=0;
  rowLayout.marginRight=0;
  rowLayout.marginTop=0;
  rowLayout.marginWidth=0;
  rowLayout.pack=false;
  buttonComposite.setLayoutData(buttonGridData);
  buttonComposite.setLayout(rowLayout);
  final Button ok=new Button(buttonComposite,SWT.PUSH);
  ok.setText("OK");
  ok.addListener(SWT.Selection,new Listener(){
    @Override public void handleEvent(    final Event arg0){
      if (isInputValid()) {
        returnValue=assembleReturnValue();
        shell.dispose();
      }
    }
  }
);
  final Button cancel=new Button(buttonComposite,SWT.PUSH);
  cancel.setText("Cancel");
  cancel.addListener(SWT.Selection,new Listener(){
    @Override public void handleEvent(    final Event arg0){
      returnValue=null;
      shell.dispose();
    }
  }
);
}
