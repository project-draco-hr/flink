{
  super.replace(toReplace,replaceFragment);
  PathExpression pathToFind=this.wrapAsPath(toReplace);
  PathExpression replacePath=this.wrapAsPath(replaceFragment);
  int size=this.fragments.size() - pathToFind.fragments.size() + 1;
  final int findSize=pathToFind.fragments.size();
  findStartIndex:   for (int startIndex=0; startIndex < size; startIndex++) {
    for (int index=0; index < findSize; index++)     if (!this.fragments.get(startIndex + index).equals(pathToFind.fragments.get(index)))     continue findStartIndex;
    this.fragments.subList(startIndex,startIndex + findSize).clear();
    this.fragments.addAll(startIndex,replacePath.fragments);
    size-=findSize - replacePath.fragments.size();
  }
}
