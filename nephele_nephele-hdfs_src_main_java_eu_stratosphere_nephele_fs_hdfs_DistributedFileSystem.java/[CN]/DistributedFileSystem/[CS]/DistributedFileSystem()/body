{
  this.conf=new Configuration();
  final String hdfsDefaultPath=GlobalConfiguration.getString("fs.hdfs.hdfsdefault",null);
  if (hdfsDefaultPath != null) {
    this.conf.addResource(new org.apache.hadoop.fs.Path(hdfsDefaultPath));
  }
 else {
    LOG.debug("Cannot find hdfs-default configuration file");
  }
  final String hdfsSitePath=GlobalConfiguration.getString("fs.hdfs.hdfssite",null);
  if (hdfsSitePath != null) {
    conf.addResource(new org.apache.hadoop.fs.Path(hdfsSitePath));
  }
 else {
    LOG.debug("Cannot find hdfs-site configuration file");
  }
  final Class<?> clazz=conf.getClass(HDFS_IMPLEMENTATION_KEY,null);
  if (clazz == null) {
    throw new IOException("No FileSystem found for " + HDFS_IMPLEMENTATION_KEY);
  }
  try {
    this.fs=(org.apache.hadoop.fs.FileSystem)clazz.newInstance();
  }
 catch (  InstantiationException e) {
    throw new IOException("InstantiationException occured: " + StringUtils.stringifyException(e));
  }
catch (  IllegalAccessException e) {
    throw new IOException("IllegalAccessException occured: " + StringUtils.stringifyException(e));
  }
}
