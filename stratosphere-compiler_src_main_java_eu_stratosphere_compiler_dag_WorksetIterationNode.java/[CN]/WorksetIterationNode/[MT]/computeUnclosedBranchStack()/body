{
  if (this.openBranches != null) {
    return;
  }
  addClosedBranches(getFirstPredecessorNode().closedBranchingNodes);
  addClosedBranches(getSecondPredecessorNode().closedBranchingNodes);
  addClosedBranches(getSingleRootOfStepFunction().closedBranchingNodes);
  List<UnclosedBranchDescriptor> result1=getFirstPredecessorNode().getBranchesForParent(getFirstIncomingConnection());
  List<UnclosedBranchDescriptor> result2=getSecondPredecessorNode().getBranchesForParent(getSecondIncomingConnection());
  List<UnclosedBranchDescriptor> result3=getSingleRootOfStepFunction().openBranches;
  ArrayList<UnclosedBranchDescriptor> inputsMerged1=new ArrayList<UnclosedBranchDescriptor>();
  ArrayList<UnclosedBranchDescriptor> inputsMerged2=new ArrayList<UnclosedBranchDescriptor>();
  mergeLists(result1,result2,inputsMerged1);
  mergeLists(inputsMerged1,result3,inputsMerged2);
  List<UnclosedBranchDescriptor> result=computeUnclosedBranchStackForBroadcastInputs(inputsMerged2);
  this.openBranches=(result == null || result.isEmpty()) ? Collections.<UnclosedBranchDescriptor>emptyList() : result;
}
