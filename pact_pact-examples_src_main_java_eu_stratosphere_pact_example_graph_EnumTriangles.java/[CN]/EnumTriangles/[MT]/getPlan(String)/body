{
  int noSubTasks=(args.length > 0 ? Integer.parseInt(args[0]) : 1);
  String edgeInput=(args.length > 1 ? args[1] : "");
  String output=(args.length > 2 ? args[2] : "");
  FileDataSource edges=new FileDataSource(EdgeListInFormat.class,edgeInput,"RDF Triples");
  edges.setDegreeOfParallelism(noSubTasks);
  MapContract assignKeys=new MapContract(AssignKeys.class,"Assign Keys");
  assignKeys.setDegreeOfParallelism(noSubTasks);
  MatchContract buildTriads=new MatchContract(BuildTriads.class,PactString.class,0,0,"Build Triads");
  buildTriads.setDegreeOfParallelism(noSubTasks);
  MatchContract closeTriads=new MatchContract(CloseTriads.class,Edge.class,0,0,"Close Triads");
  closeTriads.setDegreeOfParallelism(noSubTasks);
  FileDataSink triangles=new FileDataSink(EdgeListOutFormat.class,output,"Triangles");
  triangles.setDegreeOfParallelism(noSubTasks);
  triangles.addInput(closeTriads);
  closeTriads.addSecondInput(edges);
  closeTriads.addFirstInput(buildTriads);
  buildTriads.addFirstInput(assignKeys);
  buildTriads.addSecondInput(assignKeys);
  assignKeys.addInput(edges);
  return new Plan(triangles,"Enumerate Triangles");
}
