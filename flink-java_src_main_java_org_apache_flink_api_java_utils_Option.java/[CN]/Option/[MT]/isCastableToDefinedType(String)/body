{
switch (this.type) {
case INTEGER:
    try {
      Integer.parseInt(value);
    }
 catch (    NumberFormatException nfe) {
      return false;
    }
  return true;
case LONG:
try {
  Long.parseLong(value);
}
 catch (NumberFormatException nfe) {
  return false;
}
return true;
case FLOAT:
try {
Float.parseFloat(value);
}
 catch (NumberFormatException nfe) {
return false;
}
return true;
case DOUBLE:
try {
Double.parseDouble(value);
}
 catch (NumberFormatException nfe) {
return false;
}
return true;
case BOOLEAN:
return Objects.equals(value,"true") || Objects.equals(value,"false");
case STRING:
return true;
}
throw new IllegalStateException("Invalid value for OptionType " + this.type + " for option "+ this.longName);
}
