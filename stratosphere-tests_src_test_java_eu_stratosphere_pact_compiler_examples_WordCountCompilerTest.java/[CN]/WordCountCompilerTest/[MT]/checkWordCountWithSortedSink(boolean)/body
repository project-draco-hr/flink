{
  try {
    FileDataSource sourceNode=new FileDataSource(new TextInputFormat(),IN_FILE,"Input Lines");
    MapOperator mapNode=MapOperator.builder(new TokenizeLine()).input(sourceNode).name("Tokenize Lines").build();
    ReduceOperator reduceNode=ReduceOperator.builder(new CountWords(),PactString.class,0).input(mapNode).name("Count Words").build();
    FileDataSink out=new FileDataSink(new CsvOutputFormat(),OUT_FILE,reduceNode,"Word Counts");
    CsvOutputFormat.configureRecordFormat(out).recordDelimiter('\n').fieldDelimiter(' ').lenient(true).field(PactString.class,0).field(PactInteger.class,1);
    Ordering ordering=new Ordering(0,PactString.class,Order.DESCENDING);
    out.setGlobalOrder(ordering,new SimpleDistribution(new PactString[]{new PactString("N")}));
    Plan p=new Plan(out,"WordCount Example");
    p.setDefaultParallelism(DEFAULT_PARALLELISM);
    OptimizedPlan plan;
    if (estimates) {
      setSourceStatistics(sourceNode,1024 * 1024 * 1024* 1024L,24f);
      plan=compileWithStats(p);
    }
 else {
      plan=compileNoStats(p);
    }
    OptimizerPlanNodeResolver resolver=getOptimizerPlanNodeResolver(plan);
    SinkPlanNode sink=resolver.getNode("Word Counts");
    SingleInputPlanNode reducer=resolver.getNode("Count Words");
    SingleInputPlanNode mapper=resolver.getNode("Tokenize Lines");
    Assert.assertEquals(ShipStrategyType.FORWARD,mapper.getInput().getShipStrategy());
    Assert.assertEquals(ShipStrategyType.PARTITION_RANGE,reducer.getInput().getShipStrategy());
    Assert.assertEquals(ShipStrategyType.FORWARD,sink.getInput().getShipStrategy());
    Channel c=reducer.getInput();
    Assert.assertEquals(LocalStrategy.COMBININGSORT,c.getLocalStrategy());
    FieldList l=new FieldList(0);
    Assert.assertEquals(l,c.getShipStrategyKeys());
    Assert.assertEquals(l,c.getLocalStrategyKeys());
    Assert.assertFalse(c.getShipStrategySortOrder()[0]);
    Assert.assertFalse(c.getLocalStrategySortOrder()[0]);
    SingleInputPlanNode combiner=(SingleInputPlanNode)reducer.getPredecessor();
    Assert.assertEquals(DriverStrategy.PARTIAL_GROUP,combiner.getDriverStrategy());
    Assert.assertEquals(l,combiner.getKeys());
    Assert.assertEquals(ShipStrategyType.FORWARD,combiner.getInput().getShipStrategy());
  }
 catch (  Exception e) {
    e.printStackTrace();
    Assert.fail(e.getMessage());
  }
}
