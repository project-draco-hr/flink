{
  if (host == null) {
synchronized (this.unassigned) {
      Iterator<LocatableInputSplit> iter=this.unassigned.iterator();
      if (iter.hasNext()) {
        LocatableInputSplit next=iter.next();
        iter.remove();
        if (LOG.isDebugEnabled()) {
          LOG.debug("Assigning arbitrary split to null host.");
        }
        remoteAssignments++;
        return next;
      }
 else {
        if (LOG.isDebugEnabled()) {
          LOG.debug("No more input splits remaining.");
        }
        return null;
      }
    }
  }
  host=host.toLowerCase(Locale.US);
  List<LocatableInputSplit> localSplits=this.localPerHost.get(host);
  if (localSplits == null) {
    localSplits=new ArrayList<LocatableInputSplit>(16);
synchronized (localSplits) {
      List<LocatableInputSplit> prior=this.localPerHost.putIfAbsent(host,localSplits);
      if (prior == null) {
        LocatableInputSplit[] remaining;
synchronized (this.unassigned) {
          remaining=(LocatableInputSplit[])this.unassigned.toArray(new LocatableInputSplit[this.unassigned.size()]);
        }
        for (        LocatableInputSplit is : remaining) {
          if (isLocal(host,is.getHostnames())) {
            localSplits.add(is);
          }
        }
      }
 else {
        localSplits=prior;
      }
    }
  }
synchronized (localSplits) {
    int size=localSplits.size();
    if (size > 0) {
synchronized (this.unassigned) {
        do {
          --size;
          LocatableInputSplit split=localSplits.remove(size);
          if (this.unassigned.remove(split)) {
            if (LOG.isDebugEnabled()) {
              LOG.debug("Assigning local split to host " + host);
            }
            localAssignments++;
            return split;
          }
        }
 while (size > 0);
      }
    }
  }
synchronized (this.unassigned) {
    Iterator<LocatableInputSplit> iter=this.unassigned.iterator();
    if (iter.hasNext()) {
      LocatableInputSplit next=iter.next();
      iter.remove();
      if (LOG.isDebugEnabled()) {
        LOG.debug("Assigning remote split to host " + host);
      }
      remoteAssignments++;
      return next;
    }
 else {
      if (LOG.isDebugEnabled()) {
        LOG.debug("No more input splits remaining.");
      }
      return null;
    }
  }
}
