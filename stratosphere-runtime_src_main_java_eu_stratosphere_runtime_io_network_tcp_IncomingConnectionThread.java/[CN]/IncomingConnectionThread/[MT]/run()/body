{
  try {
    while (!this.isInterrupted()) {
synchronized (this.pendingReadEventSubscribeRequests) {
        while (!this.pendingReadEventSubscribeRequests.isEmpty()) {
          final SelectionKey key=this.pendingReadEventSubscribeRequests.poll();
          final IncomingConnection incomingConnection=(IncomingConnection)key.attachment();
          final SocketChannel socketChannel=(SocketChannel)key.channel();
          try {
            final SelectionKey newKey=socketChannel.register(this.selector,SelectionKey.OP_READ);
            newKey.attach(incomingConnection);
          }
 catch (          ClosedChannelException e) {
            incomingConnection.reportTransmissionProblem(key,e);
          }
        }
      }
      try {
        this.selector.select(500);
      }
 catch (      IOException e) {
        LOG.error(e);
      }
      final Iterator<SelectionKey> iter=this.selector.selectedKeys().iterator();
      while (iter.hasNext()) {
        final SelectionKey key=iter.next();
        iter.remove();
        if (key.isValid()) {
          if (key.isReadable()) {
            doRead(key);
          }
 else           if (key.isAcceptable()) {
            doAccept(key);
          }
 else {
            LOG.error("Unknown key: " + key);
          }
        }
 else {
          LOG.error("Received invalid key: " + key);
        }
      }
    }
    if (this.listeningSocket != null) {
      try {
        this.listeningSocket.close();
      }
 catch (      IOException ioe) {
        LOG.debug(ioe);
      }
    }
    try {
      this.selector.close();
    }
 catch (    IOException ioe) {
      LOG.debug(StringUtils.stringifyException(ioe));
    }
  }
 catch (  Throwable t) {
    LOG.fatal("Incoming connection thread died with an exception: " + t.getMessage(),t);
    System.exit(1);
  }
}
