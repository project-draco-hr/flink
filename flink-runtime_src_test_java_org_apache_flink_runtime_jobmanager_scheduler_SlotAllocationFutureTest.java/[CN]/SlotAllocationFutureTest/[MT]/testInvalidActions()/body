{
  try {
    final SlotAllocationFuture future=new SlotAllocationFuture();
    SlotAllocationFutureAction action=new SlotAllocationFutureAction(){
      @Override public void slotAllocated(      SimpleSlot slot){
      }
    }
;
    future.setFutureAction(action);
    try {
      future.setFutureAction(action);
      fail();
    }
 catch (    IllegalStateException e) {
    }
    final SimpleSlot slot1=new SimpleSlot(new JobID(),SchedulerTestUtils.getRandomInstance(1),0,null,null);
    final SimpleSlot slot2=new SimpleSlot(new JobID(),SchedulerTestUtils.getRandomInstance(1),0,null,null);
    future.setSlot(slot1);
    try {
      future.setSlot(slot2);
      fail();
    }
 catch (    IllegalStateException e) {
    }
  }
 catch (  Exception e) {
    e.printStackTrace();
    fail(e.getMessage());
  }
}
