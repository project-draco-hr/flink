{
  FileDataSource source=new FileDataSource(TextInputFormat.class,inputPath,"First Input");
  MapOperator wordsFirstInput=MapOperator.builder(TokenizeLine.class).input(source).name("Words (First Input)").build();
  MapOperator wordsSecondInput=MapOperator.builder(TokenizeLine.class).input(source).name("Words (Second Input)").build();
  ReduceOperator counts=ReduceOperator.builder(CountWords.class,StringValue.class,0).input(wordsFirstInput,wordsSecondInput).name("Word Counts").build();
  FileDataSink sink=new FileDataSink(CsvOutputFormat.class,outputPath,counts);
  CsvOutputFormat.configureRecordFormat(sink).recordDelimiter('\n').fieldDelimiter(' ').field(StringValue.class,0).field(IntValue.class,1);
  Plan plan=new Plan(sink,"WordCount Union Reduce");
  plan.setDefaultParallelism(numSubtasks);
  return plan;
}
