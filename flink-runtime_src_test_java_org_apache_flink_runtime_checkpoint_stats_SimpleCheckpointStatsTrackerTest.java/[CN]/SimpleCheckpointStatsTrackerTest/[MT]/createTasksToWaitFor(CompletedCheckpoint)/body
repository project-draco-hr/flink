{
  Map<JobVertexID,Integer> operators=new HashMap<>();
  for (  StateForTask state : checkpoint.getStates()) {
    Integer parallelism=operators.get(state.getOperatorId());
    if (parallelism == null) {
      operators.put(state.getOperatorId(),state.getSubtask() + 1);
    }
 else     if (parallelism < state.getSubtask() + 1) {
      operators.put(state.getOperatorId(),state.getSubtask() + 1);
    }
  }
  ExecutionVertex[] tasksToWaitFor=new ExecutionVertex[operators.size()];
  int i=0;
  for (  JobVertexID operatorId : operators.keySet()) {
    tasksToWaitFor[i]=mock(ExecutionVertex.class);
    when(tasksToWaitFor[i].getJobvertexId()).thenReturn(operatorId);
    when(tasksToWaitFor[i].getTotalNumberOfParallelSubtasks()).thenReturn(operators.get(operatorId));
    i++;
  }
  return tasksToWaitFor;
}
