{
  List<EvaluationExpression> inputSelections=binaryCondition.findAll(new IsInstancePredicate(InputSelection.class));
  if (inputSelections.size() != 2)   throw new IllegalArgumentException(String.format("Condition must refer to two source: %s",binaryCondition));
  BinaryBooleanExpression adjustedExpression=(BinaryBooleanExpression)binaryCondition.clone();
  final int firstIndex=((InputSelection)inputSelections.get(0)).getIndex();
  final int secondIndex=((InputSelection)inputSelections.get(1)).getIndex();
  adjustedExpression.replace(inputSelections.get(0),new PathExpression(new InputSelection(0),new ArrayAccess(firstIndex)));
  adjustedExpression.replace(inputSelections.get(1),new PathExpression(new InputSelection(1),new ArrayAccess(secondIndex)));
  return new TwoSourceJoin().withInputs(module.getInput(firstIndex),module.getInput(secondIndex)).withCondition(adjustedExpression);
}
