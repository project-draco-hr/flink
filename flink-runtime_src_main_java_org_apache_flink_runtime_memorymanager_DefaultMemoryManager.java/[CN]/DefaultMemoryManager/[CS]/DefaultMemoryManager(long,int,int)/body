{
  if (memorySize <= 0) {
    throw new IllegalArgumentException("Size of total memory must be positive.");
  }
  if (pageSize < MIN_PAGE_SIZE) {
    throw new IllegalArgumentException("The page size must be at least " + MIN_PAGE_SIZE + " bytes.");
  }
  if ((pageSize & (pageSize - 1)) != 0) {
    throw new IllegalArgumentException("The given page size is not a power of two.");
  }
  this.memorySize=memorySize;
  this.numberOfSlots=numberOfSlots;
  this.pageSize=pageSize;
  this.roundingMask=~((long)(pageSize - 1));
  int log=0;
  while ((pageSize=pageSize >>> 1) != 0) {
    log++;
  }
  this.pageSizeBits=log;
  this.totalNumPages=getNumPages(memorySize);
  if (this.totalNumPages < 1) {
    throw new IllegalArgumentException("The given amount of memory amounted to less than one page.");
  }
  this.freeSegments=new ArrayDeque<byte[]>(this.totalNumPages);
  this.allocatedSegments=new HashMap<AbstractInvokable,Set<DefaultMemorySegment>>();
  for (int i=0; i < this.totalNumPages; i++) {
    this.freeSegments.add(new byte[this.pageSize]);
  }
}
