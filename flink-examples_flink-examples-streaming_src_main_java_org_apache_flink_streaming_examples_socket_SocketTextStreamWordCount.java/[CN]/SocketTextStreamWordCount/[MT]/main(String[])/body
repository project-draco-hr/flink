{
  final ParameterTool params=ParameterTool.fromArgs(args);
  if (!params.has("hostname") || !params.has("port")) {
    System.err.println("Usage: SocketTextStreamWordCount --hostname <name> --port <n> [--output <path>]");
    return;
  }
  final StreamExecutionEnvironment env=StreamExecutionEnvironment.getExecutionEnvironment();
  env.getConfig().setGlobalJobParameters(params);
  DataStream<String> text=env.socketTextStream(params.get("hostname"),params.getInt("port"),'\n',0);
  DataStream<Tuple2<String,Integer>> counts=text.flatMap(new Tokenizer()).keyBy(0).sum(1);
  if (params.has("output")) {
    counts.writeAsText(params.get("output"));
  }
 else {
    System.out.println("Printing result to stdout. Use --output to specify output path.");
    counts.print();
  }
  env.execute("WordCount from SocketTextStream Example");
}
