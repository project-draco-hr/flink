{
  final ByteArrayOutputStream baos=new ByteArrayOutputStream();
  final DataOutputStream dos=new DataOutputStream(baos);
  original.write(new OutputViewDataOutputStreamWrapper(dos));
  final String className=original.getClass().getName();
  if (className == null) {
    fail("Class name is null");
  }
  Class<T> clazz=null;
  try {
    clazz=(Class<T>)Class.forName(className);
  }
 catch (  ClassNotFoundException e) {
    fail(e.getMessage());
  }
  if (clazz == null) {
    fail("Cannot find class with name " + className);
  }
  T copy=null;
  try {
    copy=clazz.newInstance();
  }
 catch (  InstantiationException e) {
    fail(e.getMessage());
  }
catch (  IllegalAccessException e) {
    fail(e.getMessage());
  }
  if (copy == null) {
    fail("Copy of object of type " + className + " is null");
  }
  final ByteArrayInputStream bais=new ByteArrayInputStream(baos.toByteArray());
  final DataInputStream dis=new DataInputStream(bais);
  copy.read(new InputViewDataInputStreamWrapper(dis));
  return copy;
}
