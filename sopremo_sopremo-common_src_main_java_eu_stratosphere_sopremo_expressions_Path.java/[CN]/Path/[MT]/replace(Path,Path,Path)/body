{
  List<EvaluableExpression> fragments=null;
  final int size=path.fragments.size() - pathToFind.fragments.size() + 1;
  final int findSize=pathToFind.fragments.size();
  findStartIndex:   for (int startIndex=0; startIndex < size; startIndex++) {
    for (int index=0; index < findSize; index++)     if (!path.fragments.get(startIndex + index).equals(pathToFind.fragments.get(index)))     continue findStartIndex;
    if (fragments == null)     fragments=new ArrayList<EvaluableExpression>(path.fragments);
    fragments.subList(startIndex,startIndex + findSize).clear();
    fragments.addAll(startIndex,replacePath.fragments);
    startIndex+=replacePath.fragments.size();
  }
  if (fragments == null)   return path;
  return new Path(fragments);
}
