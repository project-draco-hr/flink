{
  int keyCnt1=20;
  int valCnt1=20;
  int keyCnt2=20;
  int valCnt2=20;
  addInput(new UniformPactRecordGenerator(keyCnt1,valCnt1,false));
  addInput(new UniformPactRecordGenerator(keyCnt2,valCnt2,false));
  addInputComparator(this.comparator1);
  addInputComparator(this.comparator2);
  getTaskConfig().setDriverPairComparator(PactRecordPairComparatorFactory.get());
  setOutput(new NirvanaOutputList());
  getTaskConfig().setDriverStrategy(DriverStrategy.HYBRIDHASH_BUILD_SECOND);
  getTaskConfig().setMemoryDriver(HASH_MEM);
  MatchDriver<PactRecord,PactRecord,PactRecord> testTask=new MatchDriver<PactRecord,PactRecord,PactRecord>();
  try {
    testDriver(testTask,MockFailingMatchStub.class);
    Assert.fail("Stub exception was not forwarded.");
  }
 catch (  ExpectedTestException etex) {
  }
catch (  Exception e) {
    e.printStackTrace();
    Assert.fail("Test caused an exception.");
  }
}
