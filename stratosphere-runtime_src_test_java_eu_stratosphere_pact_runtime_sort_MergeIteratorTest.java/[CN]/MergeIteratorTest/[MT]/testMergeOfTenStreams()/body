{
  List<MutableObjectIterator<Record>> iterators=new ArrayList<MutableObjectIterator<Record>>();
  iterators.add(newIterator(new int[]{1,2,17,23,23},new String[]{"A","B","C","D","E"}));
  iterators.add(newIterator(new int[]{2,6,7,8,9},new String[]{"A","B","C","D","E"}));
  iterators.add(newIterator(new int[]{4,10,11,11,12},new String[]{"A","B","C","D","E"}));
  iterators.add(newIterator(new int[]{3,6,7,10,12},new String[]{"A","B","C","D","E"}));
  iterators.add(newIterator(new int[]{7,10,15,19,44},new String[]{"A","B","C","D","E"}));
  iterators.add(newIterator(new int[]{6,6,11,17,18},new String[]{"A","B","C","D","E"}));
  iterators.add(newIterator(new int[]{1,2,4,5,10},new String[]{"A","B","C","D","E"}));
  iterators.add(newIterator(new int[]{5,10,19,23,29},new String[]{"A","B","C","D","E"}));
  iterators.add(newIterator(new int[]{9,9,9,9,9},new String[]{"A","B","C","D","E"}));
  iterators.add(newIterator(new int[]{8,8,14,14,15},new String[]{"A","B","C","D","E"}));
  Comparator<TestData.Key> comparator=new TestData.KeyComparator();
  MutableObjectIterator<Record> iterator=new MergeIterator<Record>(iterators,this.serializer,this.comparator);
  int elementsFound=1;
  Record rec1=new Record();
  Record rec2=new Record();
  final Key k1=new Key();
  final Key k2=new Key();
  Assert.assertTrue((rec1=iterator.next(rec1)) != null);
  while ((rec2=iterator.next(rec2)) != null) {
    elementsFound++;
    k1.setKey(rec1.getField(0,TestData.Key.class).getKey());
    k2.setKey(rec2.getField(0,TestData.Key.class).getKey());
    Assert.assertTrue(comparator.compare(k1,k2) <= 0);
    Record tmp=rec1;
    rec1=rec2;
    rec2=tmp;
  }
  Assert.assertEquals("Too few elements returned from stream.",50,elementsFound);
}
