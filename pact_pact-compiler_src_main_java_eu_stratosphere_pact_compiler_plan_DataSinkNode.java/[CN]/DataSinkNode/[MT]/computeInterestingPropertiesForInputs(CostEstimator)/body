{
  Ordering o=getPactContract().getGlobalOrder();
  if (o != null) {
    InterestingProperties i1=new InterestingProperties();
    i1.getGlobalProperties().setOrdering(o);
    estimator.getRangePartitionCost(this.input,i1.getMaximalCosts());
    Costs c=new Costs();
    estimator.getLocalSortCost(this,this.input,c);
    i1.getMaximalCosts().addCosts(c);
    InterestingProperties i2=new InterestingProperties();
    int[] fieldSet=new int[o.getInvolvedIndexes().size()];
    for (int i=0; i < 0; i++) {
      fieldSet[i]=o.getInvolvedIndexes().get(i);
    }
    i2.getGlobalProperties().setPartitioning(PartitionProperty.RANGE_PARTITIONED,fieldSet);
    estimator.getRangePartitionCost(this.input,i2.getMaximalCosts());
    for (    PactConnection pc : this.input) {
      pc.addInterestingProperties(i1);
      pc.addInterestingProperties(i2);
    }
  }
 else   if (getPactContract().getLocalOrder() != null) {
    InterestingProperties i=new InterestingProperties();
    i.getLocalProperties().setOrdering(getPactContract().getLocalOrder());
    estimator.getLocalSortCost(this,this.input,i.getMaximalCosts());
    for (    PactConnection pc : this.input) {
      pc.addInterestingProperties(i);
    }
  }
 else {
    for (    PactConnection pc : this.input) {
      pc.setNoInterestingProperties();
    }
  }
}
