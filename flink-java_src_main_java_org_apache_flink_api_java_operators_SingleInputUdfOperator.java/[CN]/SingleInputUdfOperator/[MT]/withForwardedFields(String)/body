{
  if (this.udfSemantics == null) {
    this.udfSemantics=extractSemanticAnnotations(getFunction().getClass());
  }
  if (this.udfSemantics == null) {
    this.udfSemantics=new SingleInputSemanticProperties();
    SemanticPropUtil.getSemanticPropsSingleFromString(this.udfSemantics,forwardedFields,null,null,this.getInputType(),this.getResultType());
  }
 else {
    if (udfWithForwardedFieldsAnnotation(getFunction().getClass())) {
      throw new SemanticProperties.InvalidSemanticAnnotationException("Forwarded field information " + "has already been added by a function annotation for this operator. " + "Cannot overwrite function annotations.");
    }
 else {
      SemanticPropUtil.getSemanticPropsSingleFromString(this.udfSemantics,forwardedFields,null,null,this.getInputType(),this.getResultType());
    }
  }
  @SuppressWarnings("unchecked") O returnType=(O)this;
  return returnType;
}
