{
  super(system);
  try {
    jobManager=TestingUtils.createForwardingActor(system,getTestActor(),Option.<String>empty());
    retrievalService=LeaderRetrievalUtils.createLeaderRetrievalService(config,jobManager.actor());
    schedulerDriver=mock(SchedulerDriver.class);
    mesosConfig=mock(MesosConfiguration.class);
    when(mesosConfig.frameworkInfo()).thenReturn(Protos.FrameworkInfo.newBuilder());
    when(mesosConfig.withFrameworkInfo(any(Protos.FrameworkInfo.Builder.class))).thenReturn(mesosConfig);
    when(mesosConfig.createDriver(any(Scheduler.class),anyBoolean())).thenReturn(schedulerDriver);
    workerStore=mock(MesosWorkerStore.class);
    when(workerStore.getFrameworkID()).thenReturn(Option.<Protos.FrameworkID>empty());
  }
 catch (  Exception ex) {
    throw new RuntimeException(ex);
  }
}
