def _read_buffer(self, group):
    if group:
        self._socket.send(SIGNAL_REQUEST_BUFFER_G1)
    else:
        self._socket.send(SIGNAL_REQUEST_BUFFER_G0)
    self._file_input_buffer.seek(0, 0)
    self._input_offset[group] = 0
    meta_size = recv_all(self._socket, 5)
    self._input_size[group] = unpack('>I', meta_size[:4])[0]
    self._was_last[group] = (meta_size[4] == SIGNAL_WAS_LAST)
    self._input[group] = self._file_input_buffer.read(self._input_size[group])
