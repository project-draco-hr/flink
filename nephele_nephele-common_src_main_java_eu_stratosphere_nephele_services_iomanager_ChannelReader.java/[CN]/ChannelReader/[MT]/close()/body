{
synchronized (this) {
    if (this.closed) {
      throw new IllegalStateException("Reader is already closing or has been closed.");
    }
    this.closed=true;
  }
  checkErroneous();
  if (this.currentBuffer != null) {
    this.returnBuffers.add(currentBuffer);
    this.currentBuffer=null;
  }
  if (this.inputWrapper.getCurrentInput() != null) {
    Buffer.Input buf=this.inputWrapper.getCurrentInput();
    this.inputWrapper.setCurrentInput(null);
    this.returnBuffers.add(buf);
  }
  List<MemorySegment> segments=super.close();
  if (this.fileChannel.isOpen()) {
    this.fileChannel.close();
  }
  if (this.deleteWhenDone) {
    try {
      deleteChannel();
    }
 catch (    Throwable t) {
    }
  }
  return segments;
}
