{
  this.takenNames=takenNames;
  this.shell=new Shell(parent);
  this.shell.setSize(WIDTH,HEIGHT);
  this.shell.setText("Add New Failure Pattern");
  this.shell.setLayout(new GridLayout(1,false));
  GridData gridData=new GridData();
  gridData.horizontalAlignment=GridData.FILL;
  gridData.grabExcessHorizontalSpace=true;
  gridData.grabExcessVerticalSpace=false;
  final Set<String> nameSugg=new HashSet<String>(nameSuggestions);
  nameSugg.removeAll(takenNames);
  this.input=new AutoCompletionCombo(this.shell,SWT.NONE,nameSugg);
  this.input.setLayoutData(gridData);
  this.input.addKeyListener(new KeyAdapter(){
    @Override public void keyReleased(    final KeyEvent arg0){
      if (arg0.character != SWT.CR) {
        return;
      }
      if (isInputValid()) {
        returnValue=input.getText();
        shell.dispose();
      }
    }
  }
);
  gridData=new GridData();
  gridData.horizontalAlignment=SWT.RIGHT;
  gridData.verticalAlignment=SWT.BOTTOM;
  gridData.grabExcessHorizontalSpace=true;
  gridData.grabExcessVerticalSpace=true;
  final Composite buttonComposite=new Composite(this.shell,SWT.RIGHT_TO_LEFT);
  final RowLayout rowLayout=new RowLayout(SWT.HORIZONTAL);
  rowLayout.marginBottom=0;
  rowLayout.marginHeight=0;
  rowLayout.marginLeft=0;
  rowLayout.marginRight=0;
  rowLayout.marginTop=0;
  rowLayout.marginWidth=0;
  rowLayout.pack=false;
  buttonComposite.setLayoutData(gridData);
  buttonComposite.setLayout(rowLayout);
  final Button ok=new Button(buttonComposite,SWT.PUSH);
  ok.setText("OK");
  ok.addListener(SWT.Selection,new Listener(){
    @Override public void handleEvent(    final Event arg0){
      if (isInputValid()) {
        returnValue=input.getText();
        shell.dispose();
      }
    }
  }
);
  final Button cancel=new Button(buttonComposite,SWT.PUSH);
  cancel.setText("Cancel");
  cancel.addListener(SWT.Selection,new Listener(){
    @Override public void handleEvent(    final Event arg0){
      returnValue=null;
      shell.dispose();
    }
  }
);
}
