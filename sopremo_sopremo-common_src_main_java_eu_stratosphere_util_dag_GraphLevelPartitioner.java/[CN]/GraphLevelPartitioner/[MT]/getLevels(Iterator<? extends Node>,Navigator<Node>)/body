{
  List<Node> remainingNodes=new IdentityList<Node>();
  while (startNodes.hasNext())   gatherNodes(remainingNodes,navigator,startNodes.next());
  List<Node> usedNodes=new IdentityList<Node>();
  List<Level<Node>> levels=new ArrayList<Level<Node>>();
  while (!remainingNodes.isEmpty()) {
    List<Node> independentNodes=new ArrayList<Node>();
    for (    Node node : remainingNodes)     if (isIndependent(node,usedNodes,navigator))     independentNodes.add(node);
    if (independentNodes.isEmpty())     throw new IllegalStateException("graph does not have nodes without input");
    levels.add(new Level<Node>(independentNodes,navigator));
    remainingNodes.removeAll(independentNodes);
    usedNodes.addAll(independentNodes);
  }
  return levels;
}
