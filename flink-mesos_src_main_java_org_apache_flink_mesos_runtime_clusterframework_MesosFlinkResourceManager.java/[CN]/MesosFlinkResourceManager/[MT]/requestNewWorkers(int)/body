{
  try {
    List<TaskMonitor.TaskGoalStateUpdated> toMonitor=new ArrayList<>(numWorkers);
    List<LaunchableTask> toLaunch=new ArrayList<>(numWorkers);
    for (int i=0; i < numWorkers; i++) {
      MesosWorkerStore.Worker worker=MesosWorkerStore.Worker.newTask(workerStore.newTaskID());
      workerStore.putWorker(worker);
      workersInNew.put(extractResourceID(worker.taskID()),worker);
      LaunchableMesosWorker launchable=createLaunchableMesosWorker(worker.taskID());
      LOG.info("Scheduling Mesos task {} with ({} MB, {} cpus).",launchable.taskID().getValue(),launchable.taskRequest().getMemory(),launchable.taskRequest().getCPUs());
      toMonitor.add(new TaskMonitor.TaskGoalStateUpdated(extractGoalState(worker)));
      toLaunch.add(launchable);
    }
    for (    TaskMonitor.TaskGoalStateUpdated update : toMonitor) {
      taskRouter.tell(update,self());
    }
    if (toLaunch.size() >= 1) {
      launchCoordinator.tell(new LaunchCoordinator.Launch(toLaunch),self());
    }
  }
 catch (  Exception ex) {
    fatalError("unable to request new workers",ex);
  }
}
