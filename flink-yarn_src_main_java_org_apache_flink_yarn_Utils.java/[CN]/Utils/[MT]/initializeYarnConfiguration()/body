{
  Configuration conf=new YarnConfiguration();
  String configuredHadoopConfig=GlobalConfiguration.getString(ConfigConstants.PATH_HADOOP_CONFIG,null);
  if (configuredHadoopConfig != null) {
    LOG.info("Using hadoop configuration path from " + ConfigConstants.PATH_HADOOP_CONFIG + " setting.");
    addPathToConfig(conf,new File(configuredHadoopConfig));
    setDefaultConfValues(conf);
    return conf;
  }
  String[] envs={"YARN_CONF_DIR","HADOOP_CONF_DIR","HADOOP_CONF_PATH"};
  for (int i=0; i < envs.length; ++i) {
    String confPath=System.getenv(envs[i]);
    if (confPath != null) {
      LOG.info("Found " + envs[i] + ", adding it to configuration");
      addPathToConfig(conf,new File(confPath));
      setDefaultConfValues(conf);
      return conf;
    }
  }
  LOG.info("Could not find HADOOP_CONF_PATH, using HADOOP_HOME.");
  String hadoopHome=null;
  try {
    hadoopHome=Shell.getHadoopHome();
  }
 catch (  IOException e) {
    throw new RuntimeException("Unable to get hadoop home. Please set HADOOP_HOME variable!",e);
  }
  File tryConf=new File(hadoopHome + "/etc/hadoop");
  if (tryConf.exists()) {
    LOG.info("Found configuration using hadoop home.");
    addPathToConfig(conf,tryConf);
  }
 else {
    tryConf=new File(hadoopHome + "/conf");
    if (tryConf.exists()) {
      addPathToConfig(conf,tryConf);
    }
  }
  setDefaultConfValues(conf);
  return conf;
}
