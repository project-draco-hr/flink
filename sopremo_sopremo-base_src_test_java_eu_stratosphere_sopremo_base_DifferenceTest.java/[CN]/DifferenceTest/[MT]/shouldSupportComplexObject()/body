{
  final SopremoTestPlan sopremoPlan=new SopremoTestPlan(2,1);
  sopremoPlan.getEvaluationContext().getFunctionRegistry().register(BuiltinFunctions.class);
  final Difference difference=new Difference();
  difference.setInputs(sopremoPlan.getInputOperators(0,2));
  difference.setIdentityKey(0,createPath("name"));
  difference.setIdentityKey(1,new FunctionCall("concat",createPath("first name"),new ConstantExpression(" "),createPath("last name")));
  sopremoPlan.getOutputOperator(0).setInputs(difference);
  Object[] fields={"name","Jon Doe","password","asdf1234","id",1};
  Object[] fields1={"name","Jane Doe","password","qwertyui","id",2};
  Object[] fields2={"name","Max Mustermann","password","q1w2e3r4","id",3};
  sopremoPlan.getInput(0).add((JsonNode)createObjectNode(fields)).add((JsonNode)createObjectNode(fields1)).add((JsonNode)createObjectNode(fields2));
  Object[] fields3={"first name","Jon","last name","Doe","password","asdf1234","id",1};
  Object[] fields4={"first name","Jane","last name","Doe","password","qwertyui","id",2};
  Object[] fields5={"first name","Peter","last name","Parker","password","q1w2e3r4","id",4};
  sopremoPlan.getInput(1).add((JsonNode)createObjectNode(fields3)).add((JsonNode)createObjectNode(fields4)).add((JsonNode)createObjectNode(fields5));
  Object[] fields6={"name","Max Mustermann","password","q1w2e3r4","id",3};
  sopremoPlan.getExpectedOutput(0).add((JsonNode)createObjectNode(fields6));
  sopremoPlan.run();
}
