{
  SlidingWindowState<Integer> state=new SlidingWindowState<Integer>(WINDOW_SIZE,WINDOW_SLIDE_SIZE,WINDOW_UNIT);
  state.pushBack(new ArrayList<StreamRecord<Integer>>());
  state.pushBack(Arrays.asList(new StreamRecord<Integer>().setObject(1)));
  state.pushBack(new ArrayList<StreamRecord<Integer>>());
  state.pushBack(Arrays.asList(new StreamRecord<Integer>().setObject(2),new StreamRecord<Integer>().setObject(3)));
  state.pushBack(new ArrayList<StreamRecord<Integer>>());
  SortedSet<Integer> actualSet=new TreeSet<Integer>();
  SlidingWindowStateIterator<Integer> iterator=state.getIterator();
  iterator.hasNext();
  iterator.hasNext();
  while (iterator.hasNext()) {
    iterator.hasNext();
    iterator.hasNext();
    actualSet.add(iterator.next());
    iterator.hasNext();
    iterator.hasNext();
  }
  assertEquals(getExpectedSet(1,3),actualSet);
  actualSet.clear();
  Iterator<StreamRecord<Integer>> streamRecordIterator=state.getStreamRecordIterator();
  streamRecordIterator.hasNext();
  streamRecordIterator.hasNext();
  while (streamRecordIterator.hasNext()) {
    streamRecordIterator.hasNext();
    streamRecordIterator.hasNext();
    actualSet.add(streamRecordIterator.next().getObject());
    streamRecordIterator.hasNext();
    streamRecordIterator.hasNext();
  }
  assertEquals(getExpectedSet(1,3),actualSet);
}
