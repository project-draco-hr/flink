{
  ManagementVertex pathEnd=path.getEnd();
  for (int i=0; i < pathEnd.getNumberOfOutputGates(); i++) {
    ManagementGate outputGate=pathEnd.getOutputGate(i);
    for (int j=0; j < outputGate.getNumberOfForwardEdges(); j++) {
      ManagementEdge edge=outputGate.getForwardEdge(j);
      ManagementVertex extension=edge.getTarget().getVertex();
      path.appendVertex(extension,edge);
      if (extension.getGroupVertex() == subgraphEnd) {
        foundLatencyPaths.add(new LatencyPath(path));
      }
 else {
        depthFirstSearchLatencyPaths(path,foundLatencyPaths);
      }
      path.removeLastVertex();
    }
  }
}
