def outermost(func):
    'get outermost enclosing object (i.e. the outer function in a closure)\n\n    NOTE: this is the object-equivalent of getsource(func, enclosing=True)\n    '
    if PY3:
        if ismethod(func):
            _globals = (func.__func__.__globals__ or {})
        elif isfunction(func):
            _globals = (func.__globals__ or {})
        else:
            return
        _globals = _globals.items()
    else:
        if ismethod(func):
            _globals = (func.im_func.func_globals or {})
        elif isfunction(func):
            _globals = (func.func_globals or {})
        else:
            return
        _globals = _globals.iteritems()
    from .source import getsourcelines
    try:
        (lines, lnum) = getsourcelines(func, enclosing=True)
    except:
        (lines, lnum) = ([], None)
    code = ''.join(lines)
    _locals = ((name, obj) for (name, obj) in _globals if (name in code))
    for (name, obj) in _locals:
        try:
            if (getsourcelines(obj) == (lines, lnum)):
                return obj
        except:
            pass
    return
