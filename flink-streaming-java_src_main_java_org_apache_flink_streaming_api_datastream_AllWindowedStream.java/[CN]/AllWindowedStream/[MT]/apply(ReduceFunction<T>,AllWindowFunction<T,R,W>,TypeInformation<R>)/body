{
  if (preAggregator instanceof RichFunction) {
    throw new UnsupportedOperationException("Pre-aggregator of apply can not be a RichFunction.");
  }
  function=input.getExecutionEnvironment().clean(function);
  preAggregator=input.getExecutionEnvironment().clean(preAggregator);
  String callLocation=Utils.getCallLocationName();
  String udfName="AllWindowedStream." + callLocation;
  String opName="TriggerWindow(" + windowAssigner + ", "+ trigger+ ", "+ udfName+ ")";
  OneInputStreamOperator<T,R> operator;
  if (evictor != null) {
    operator=new EvictingNonKeyedWindowOperator<>(windowAssigner,windowAssigner.getWindowSerializer(getExecutionEnvironment().getConfig()),new HeapWindowBuffer.Factory<T>(),new ReduceApplyAllWindowFunction<>(preAggregator,function),trigger,evictor);
  }
 else {
    operator=new NonKeyedWindowOperator<>(windowAssigner,windowAssigner.getWindowSerializer(getExecutionEnvironment().getConfig()),new PreAggregatingHeapWindowBuffer.Factory<>(preAggregator),new ReduceApplyAllWindowFunction<>(preAggregator,function),trigger);
  }
  return input.transform(opName,resultType,operator).setParallelism(1);
}
