{
  ClassLoader cl=getClass().getClassLoader();
  StringBuilder builder=new StringBuilder();
  builder.append("\n=======================");
  builder.append("Stream Config");
  builder.append("=======================");
  builder.append("\nNumber of non-chained inputs: ").append(getNumberOfInputs());
  builder.append("\nNumber of non-chained outputs: ").append(getNumberOfOutputs());
  builder.append("\nOutput names: ").append(getNonChainedOutputs(cl));
  builder.append("\nPartitioning:");
  for (  StreamEdge output : getNonChainedOutputs(cl)) {
    int outputname=output.getTargetId();
    builder.append("\n\t").append(outputname).append(": ").append(output.getPartitioner());
  }
  builder.append("\nChained subtasks: ").append(getChainedOutputs(cl));
  try {
    builder.append("\nOperator: ").append(getStreamOperator(cl).getClass().getSimpleName());
  }
 catch (  Exception e) {
    builder.append("\nOperator: Missing");
  }
  builder.append("\nBuffer timeout: ").append(getBufferTimeout());
  builder.append("\nState Monitoring: ").append(isCheckpointingEnabled());
  if (isChainStart() && getChainedOutputs(cl).size() > 0) {
    builder.append("\n\n\n---------------------\nChained task configs\n---------------------\n");
    builder.append(getTransitiveChainedTaskConfigs(cl));
  }
  return builder.toString();
}
