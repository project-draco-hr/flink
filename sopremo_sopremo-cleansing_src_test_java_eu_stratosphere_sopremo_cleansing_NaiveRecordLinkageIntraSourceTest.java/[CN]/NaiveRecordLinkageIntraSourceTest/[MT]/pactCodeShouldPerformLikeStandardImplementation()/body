{
  EvaluationExpression similarityFunction=this.getSimilarityFunction();
  RecordLinkage recordLinkage=new RecordLinkage(new Naive(),similarityFunction,this.threshold,(JsonStream)null);
  SopremoTestPlan sopremoTestPlan=this.createTestPlan(recordLinkage,this.useId,this.projection);
  EvaluationExpression duplicateProjection=this.projection;
  if (duplicateProjection == null)   duplicateProjection=new ArrayCreation(new PathExpression(new InputSelection(0),recordLinkage.getIdProjection(0)),new PathExpression(new InputSelection(1),recordLinkage.getIdProjection(1)));
  EvaluationContext context=sopremoTestPlan.getEvaluationContext();
  for (  KeyValuePair<Key,PactJsonObject> left : sopremoTestPlan.getInput(0)) {
    boolean skipPairs=true;
    for (    KeyValuePair<Key,PactJsonObject> right : sopremoTestPlan.getInput(0)) {
      if (left == right) {
        skipPairs=false;
        continue;
      }
 else       if (skipPairs)       continue;
      JsonNode pair=createOrderedPair(left.getValue().getValue(),right.getValue().getValue());
      if (similarityFunction.evaluate(pair,context).getDoubleValue() > this.threshold)       sopremoTestPlan.getExpectedOutput(0).add(new PactJsonObject(duplicateProjection.evaluate(pair,context)));
    }
  }
  sopremoTestPlan.run();
}
