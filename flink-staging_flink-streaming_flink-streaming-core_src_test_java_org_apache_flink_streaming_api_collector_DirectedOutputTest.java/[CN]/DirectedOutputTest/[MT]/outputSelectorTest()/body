{
  StreamExecutionEnvironment env=StreamExecutionEnvironment.getExecutionEnvironment();
  env.setParallelism(3);
  TestListResultSink<Long> evenSink=new TestListResultSink<Long>();
  TestListResultSink<Long> oddAndTenSink=new TestListResultSink<Long>();
  TestListResultSink<Long> evenAndOddSink=new TestListResultSink<Long>();
  TestListResultSink<Long> allSink=new TestListResultSink<Long>();
  SplitDataStream<Long> source=env.generateSequence(1,11).split(new MyOutputSelector());
  source.select(EVEN).addSink(evenSink);
  source.select(ODD,TEN).addSink(oddAndTenSink);
  source.select(EVEN,ODD).addSink(evenAndOddSink);
  source.addSink(allSink);
  env.execute();
  assertEquals(Arrays.asList(2L,4L,6L,8L,10L),evenSink.getSortedResult());
  assertEquals(Arrays.asList(1L,3L,5L,7L,9L,10L,11L),oddAndTenSink.getSortedResult());
  assertEquals(Arrays.asList(1L,2L,3L,4L,5L,6L,7L,8L,9L,10L,11L),evenAndOddSink.getSortedResult());
  assertEquals(Arrays.asList(1L,2L,3L,4L,5L,6L,7L,8L,9L,10L,11L),allSink.getSortedResult());
}
