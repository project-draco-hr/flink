{
  try {
    final int HALF_SIZE=pageSize / 2;
    MemorySegment[] segs1={new HeapMemorySegment(new byte[pageSize]),new HybridMemorySegment(new byte[pageSize]),new HybridMemorySegment(ByteBuffer.allocateDirect(pageSize))};
    MemorySegment[] segs2={new HeapMemorySegment(new byte[HALF_SIZE]),new HybridMemorySegment(new byte[HALF_SIZE]),new HybridMemorySegment(ByteBuffer.allocateDirect(HALF_SIZE))};
    Random rnd=new Random();
    for (    MemorySegment seg1 : segs1) {
      for (      MemorySegment seg2 : segs2) {
        testSwap(seg1,seg2,rnd,HALF_SIZE);
      }
    }
  }
 catch (  Exception e) {
    e.printStackTrace();
    fail(e.getMessage());
  }
}
