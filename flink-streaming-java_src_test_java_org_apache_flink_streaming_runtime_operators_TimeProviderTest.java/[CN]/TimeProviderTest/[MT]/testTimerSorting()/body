{
  final List<Long> result=new ArrayList<>();
  TestTimeServiceProvider provider=new TestTimeServiceProvider();
  provider.registerTimer(45,new Triggerable(){
    @Override public void trigger(    long timestamp){
      result.add(timestamp);
    }
  }
);
  provider.registerTimer(50,new Triggerable(){
    @Override public void trigger(    long timestamp){
      result.add(timestamp);
    }
  }
);
  provider.registerTimer(30,new Triggerable(){
    @Override public void trigger(    long timestamp){
      result.add(timestamp);
    }
  }
);
  provider.registerTimer(50,new Triggerable(){
    @Override public void trigger(    long timestamp){
      result.add(timestamp);
    }
  }
);
  Assert.assertTrue(provider.getNoOfRegisteredTimers() == 4);
  provider.setCurrentTime(100);
  long seen=0;
  for (  Long l : result) {
    Assert.assertTrue(l >= seen);
    seen=l;
  }
}
