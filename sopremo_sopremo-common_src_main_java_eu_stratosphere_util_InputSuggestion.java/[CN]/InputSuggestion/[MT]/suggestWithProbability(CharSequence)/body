{
  List<Object2DoubleMap.Entry<T>> list=new ArrayList<Object2DoubleMap.Entry<T>>();
  for (  Map.Entry<CharSequence,T> possibility : this.possibleValues.entrySet()) {
    double similarity=this.similarityMeasure.getSimilarity(input,possibility.getKey(),this.minSimilarity);
    if (similarity >= this.minSimilarity)     list.add(new AbstractObject2DoubleMap.BasicEntry<T>(possibility.getValue(),similarity));
  }
  Collections.sort(list,new Comparator<Object2DoubleMap.Entry<T>>(){
    @Override public int compare(    Object2DoubleMap.Entry<T> o1,    Object2DoubleMap.Entry<T> o2){
      return Double.compare(o2.getDoubleValue(),o1.getDoubleValue());
    }
  }
);
  return list.size() > this.maxSuggestions ? list.subList(0,this.maxSuggestions) : list;
}
