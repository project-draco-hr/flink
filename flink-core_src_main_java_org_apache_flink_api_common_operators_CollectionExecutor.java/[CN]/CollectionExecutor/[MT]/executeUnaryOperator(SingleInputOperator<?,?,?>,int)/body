{
  Operator<?> inputOp=operator.getInput();
  if (inputOp == null) {
    throw new InvalidProgramException("The unary operation " + operator.getName() + " has no input.");
  }
  @SuppressWarnings("unchecked") List<IN> inputData=(List<IN>)execute(inputOp,superStep);
  @SuppressWarnings("unchecked") SingleInputOperator<IN,OUT,?> typedOp=(SingleInputOperator<IN,OUT,?>)operator;
  RuntimeUDFContext ctx;
  if (RichFunction.class.isAssignableFrom(typedOp.getUserCodeWrapper().getUserCodeClass())) {
    ctx=superStep == 0 ? new RuntimeUDFContext(operator.getName(),1,0,getClass().getClassLoader(),executionConfig,accumulators) : new IterationRuntimeUDFContext(operator.getName(),1,0,classLoader,executionConfig,accumulators);
    for (    Map.Entry<String,Operator<?>> bcInputs : operator.getBroadcastInputs().entrySet()) {
      List<?> bcData=execute(bcInputs.getValue());
      ctx.setBroadcastVariable(bcInputs.getKey(),bcData);
    }
  }
 else {
    ctx=null;
  }
  List<OUT> result=typedOp.executeOnCollections(inputData,ctx,executionConfig);
  return result;
}
