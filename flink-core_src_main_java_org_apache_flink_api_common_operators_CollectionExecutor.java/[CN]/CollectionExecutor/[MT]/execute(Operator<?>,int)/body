{
  List<?> result=this.intermediateResults.get(operator);
  if (result != null) {
    return result;
  }
  if (operator instanceof BulkIterationBase) {
    result=executeBulkIteration((BulkIterationBase<?>)operator);
  }
 else   if (operator instanceof DeltaIterationBase) {
    result=executeDeltaIteration((DeltaIterationBase<?,?>)operator);
  }
 else   if (operator instanceof SingleInputOperator) {
    result=executeUnaryOperator((SingleInputOperator<?,?,?>)operator,superStep);
  }
 else   if (operator instanceof DualInputOperator) {
    result=executeBinaryOperator((DualInputOperator<?,?,?,?>)operator,superStep);
  }
 else   if (operator instanceof GenericDataSourceBase) {
    result=executeDataSource((GenericDataSourceBase<?,?>)operator);
  }
 else   if (operator instanceof GenericDataSinkBase) {
    executeDataSink((GenericDataSinkBase<?>)operator);
    result=Collections.emptyList();
  }
 else {
    throw new RuntimeException("Cannot execute operator " + operator.getClass().getName());
  }
  this.intermediateResults.put(operator,result);
  return result;
}
