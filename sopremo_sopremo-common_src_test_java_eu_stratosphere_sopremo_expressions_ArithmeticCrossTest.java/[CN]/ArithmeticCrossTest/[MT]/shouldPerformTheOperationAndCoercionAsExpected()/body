{
  Arithmetic arithmetic=new Arithmetic(new Input(0),this.operator,new Input(1));
  JsonNode result=arithmetic.evaluate(JsonUtil.asArray(JsonUtil.OBJECT_MAPPER.valueToTree(this.left),JsonUtil.OBJECT_MAPPER.valueToTree(this.right)),new EvaluationContext());
  JsonNode expectedNode=JsonUtil.OBJECT_MAPPER.valueToTree(this.expected);
  Assert.assertEquals(String.format("%s%s%s",this.left.getClass().getSimpleName(),this.operator,this.right.getClass().getSimpleName(),result.getNumberType(),expectedNode.getNumberType()),expectedNode.getNumberType(),result.getNumberType());
  if (expectedNode instanceof BigIntegerNode)   Assert.assertEquals(String.format("%s%s%s",this.left,this.operator,this.right,result,expectedNode),expectedNode.getBigIntegerValue(),result.getBigIntegerValue());
 else   if (expectedNode instanceof DecimalNode)   Assert.assertEquals(String.format("%s%s%s",this.left,this.operator,this.right,result,expectedNode),expectedNode,result);
 else   Assert.assertEquals(String.format("%s%s%s",this.left,this.operator,this.right,result,expectedNode),expected.doubleValue(),result.getDoubleValue(),0.0001);
}
