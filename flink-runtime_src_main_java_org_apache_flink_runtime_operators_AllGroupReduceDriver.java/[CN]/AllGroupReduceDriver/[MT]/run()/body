{
  if (LOG.isDebugEnabled()) {
    LOG.debug(this.taskContext.formatLogString("AllGroupReduceDriver preprocessing done. Running Reducer code."));
  }
  if (objectReuseEnabled) {
    final ReusingMutableToRegularIteratorWrapper<IT> inIter=new ReusingMutableToRegularIteratorWrapper<IT>(this.input,this.serializer);
    if (inIter.hasNext()) {
      if (strategy == DriverStrategy.ALL_GROUP_REDUCE) {
        final GroupReduceFunction<IT,OT> reducer=this.taskContext.getStub();
        final Collector<OT> output=this.taskContext.getOutputCollector();
        reducer.reduce(inIter,output);
      }
 else       if (strategy == DriverStrategy.ALL_GROUP_REDUCE_COMBINE || strategy == DriverStrategy.ALL_GROUP_COMBINE) {
        @SuppressWarnings("unchecked") final FlatCombineFunction<IT,OT> combiner=(FlatCombineFunction<IT,OT>)this.taskContext.getStub();
        final Collector<OT> output=this.taskContext.getOutputCollector();
        combiner.combine(inIter,output);
      }
 else {
        throw new Exception("The strategy " + strategy + " is unknown to this driver.");
      }
    }
  }
 else {
    final NonReusingMutableToRegularIteratorWrapper<IT> inIter=new NonReusingMutableToRegularIteratorWrapper<IT>(this.input,this.serializer);
    if (inIter.hasNext()) {
      if (strategy == DriverStrategy.ALL_GROUP_REDUCE) {
        final GroupReduceFunction<IT,OT> reducer=this.taskContext.getStub();
        final Collector<OT> output=this.taskContext.getOutputCollector();
        reducer.reduce(inIter,output);
      }
 else       if (strategy == DriverStrategy.ALL_GROUP_REDUCE_COMBINE || strategy == DriverStrategy.ALL_GROUP_COMBINE) {
        @SuppressWarnings("unchecked") final FlatCombineFunction<IT,OT> combiner=(FlatCombineFunction<IT,OT>)this.taskContext.getStub();
        final Collector<OT> output=this.taskContext.getOutputCollector();
        combiner.combine(inIter,output);
      }
 else {
        throw new Exception("The strategy " + strategy + " is unknown to this driver.");
      }
    }
  }
}
