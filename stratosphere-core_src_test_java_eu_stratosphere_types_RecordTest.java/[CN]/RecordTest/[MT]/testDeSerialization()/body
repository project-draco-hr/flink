{
  try {
    StringValue origValue1=new StringValue("Hello World!");
    IntValue origValue2=new IntValue(1337);
    Record record1=new Record(origValue1,origValue2);
    Record record2=new Record();
    try {
      record1.write(this.out);
      record2.read(this.in);
      assertTrue(record1.getNumFields() == record2.getNumFields());
      StringValue rec1Val1=record1.getField(0,StringValue.class);
      IntValue rec1Val2=record1.getField(1,IntValue.class);
      StringValue rec2Val1=record2.getField(0,StringValue.class);
      IntValue rec2Val2=record2.getField(1,IntValue.class);
      assertTrue(origValue1.equals(rec1Val1));
      assertTrue(origValue2.equals(rec1Val2));
      assertTrue(origValue1.equals(rec2Val1));
      assertTrue(origValue2.equals(rec2Val2));
    }
 catch (    IOException e) {
      fail("Error writing Record");
      e.printStackTrace();
    }
  }
 catch (  Throwable t) {
    Assert.fail("Test failed due to an exception: " + t.getMessage());
  }
}
