{
  StreamExecutionEnvironment env=StreamExecutionEnvironment.getExecutionEnvironment();
  DataStream<Tuple2<String,Integer>> source=env.fromElements(Tuple2.of("hello",1),Tuple2.of("hello",2));
  env.setStreamTimeCharacteristic(TimeCharacteristic.IngestionTime);
  DummyFolder folder=new DummyFolder();
  DataStream<Integer> window1=source.windowAll(SlidingEventTimeWindows.of(Time.of(1,TimeUnit.SECONDS),Time.of(100,TimeUnit.MILLISECONDS))).fold(0,folder);
  OneInputTransformation<Tuple2<String,Integer>,Integer> transform1=(OneInputTransformation<Tuple2<String,Integer>,Integer>)window1.getTransformation();
  OneInputStreamOperator<Tuple2<String,Integer>,Integer> operator1=transform1.getOperator();
  Assert.assertTrue(operator1 instanceof WindowOperator);
  WindowOperator winOperator1=(WindowOperator)operator1;
  Assert.assertTrue(winOperator1.getTrigger() instanceof EventTimeTrigger);
  Assert.assertTrue(winOperator1.getWindowAssigner() instanceof SlidingEventTimeWindows);
  Assert.assertTrue(winOperator1.getStateDescriptor() instanceof FoldingStateDescriptor);
  DataStream<Integer> window2=source.windowAll(TumblingEventTimeWindows.of(Time.of(1,TimeUnit.SECONDS))).evictor(CountEvictor.of(13)).fold(0,folder);
  OneInputTransformation<Tuple2<String,Integer>,Integer> transform2=(OneInputTransformation<Tuple2<String,Integer>,Integer>)window2.getTransformation();
  OneInputStreamOperator<Tuple2<String,Integer>,Integer> operator2=transform2.getOperator();
  Assert.assertTrue(operator2 instanceof WindowOperator);
  WindowOperator winOperator2=(WindowOperator)operator2;
  Assert.assertTrue(winOperator2.getTrigger() instanceof EventTimeTrigger);
  Assert.assertTrue(winOperator2.getWindowAssigner() instanceof TumblingEventTimeWindows);
  Assert.assertTrue(winOperator2.getStateDescriptor() instanceof ListStateDescriptor);
}
