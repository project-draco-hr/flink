{
  final PlanNode inputPlanNode=input.getSource();
  final Iterator<Channel> allInChannels;
  allInChannels=Collections.singletonList(input).iterator();
  TypeSerializerFactory<?> typeSerFact=null;
  while (allInChannels.hasNext()) {
    final Channel inConn=allInChannels.next();
    if (typeSerFact == null) {
      typeSerFact=inConn.getSerializer();
    }
 else     if (!typeSerFact.equals(inConn.getSerializer())) {
      throw new CompilerException("Conflicting types in union operator.");
    }
    final PlanNode sourceNode=inConn.getSource();
    FlinkVertex sourceVertex=this.vertices.get(sourceNode);
    TezTaskConfig sourceVertexConfig=sourceVertex.getConfig();
    connectJobVertices(inConn,inputIndex,sourceVertex,sourceVertexConfig,targetVertex,targetVertexConfig,isBroadcast);
  }
  addLocalInfoFromChannelToConfig(input,targetVertexConfig,inputIndex,isBroadcast);
  return 1;
}
