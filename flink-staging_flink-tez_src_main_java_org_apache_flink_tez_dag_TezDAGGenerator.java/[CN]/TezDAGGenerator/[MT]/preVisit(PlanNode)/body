{
  if (this.vertices.containsKey(node)) {
    return false;
  }
  if ((node instanceof BulkIterationPlanNode) || (node instanceof WorksetIterationPlanNode)) {
    throw new CompilerException("Iterations are not yet supported by the Tez execution environment");
  }
  if ((node.getBroadcastInputs() != null) && (!node.getBroadcastInputs().isEmpty())) {
    throw new CompilerException("Broadcast inputs are not yet supported by the Tez execution environment");
  }
  FlinkVertex vertex=null;
  try {
    if (node instanceof SourcePlanNode) {
      vertex=createDataSourceVertex((SourcePlanNode)node);
    }
 else     if (node instanceof SinkPlanNode) {
      vertex=createDataSinkVertex((SinkPlanNode)node);
    }
 else     if ((node instanceof SingleInputPlanNode)) {
      vertex=createSingleInputVertex((SingleInputPlanNode)node);
    }
 else     if (node instanceof DualInputPlanNode) {
      vertex=createDualInputVertex((DualInputPlanNode)node);
    }
 else     if (node instanceof NAryUnionPlanNode) {
      vertex=createUnionVertex((NAryUnionPlanNode)node);
    }
 else {
      throw new CompilerException("Unrecognized node type: " + node.getClass().getName());
    }
  }
 catch (  Exception e) {
    throw new CompilerException("Error translating node '" + node + "': "+ e.getMessage(),e);
  }
  if (vertex != null) {
    this.vertices.put(node,vertex);
  }
  return true;
}
