{
  final String taskName=node.getNodeName();
  final DriverStrategy ds=node.getDriverStrategy();
  final int dop=node.getParallelism();
  final TezTaskConfig config=new TezTaskConfig(new Configuration());
  config.setDriver(ds.getDriverClass());
  config.setDriverStrategy(ds);
  config.setStubWrapper(node.getProgramOperator().getUserCodeWrapper());
  config.setStubParameters(node.getProgramOperator().getParameters());
  if (node.getComparator1() != null) {
    config.setDriverComparator(node.getComparator1(),0);
  }
  if (node.getComparator2() != null) {
    config.setDriverComparator(node.getComparator2(),1);
  }
  if (node.getPairComparator() != null) {
    config.setDriverPairComparator(node.getPairComparator());
  }
  assignDriverResources(node,config);
  LOG.info("Creating processor vertex " + taskName + " with parallelism "+ dop);
  return new FlinkProcessorVertex(taskName,dop,config);
}
