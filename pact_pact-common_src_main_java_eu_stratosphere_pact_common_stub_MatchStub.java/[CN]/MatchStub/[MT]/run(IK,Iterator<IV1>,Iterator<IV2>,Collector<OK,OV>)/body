{
  IV1 v1=values1.next();
  IV2 v2=values2.next();
  if (v1 == null || v2 == null) {
    return;
  }
  boolean v1HasNext=values1.hasNext();
  boolean v2HasNext=values2.hasNext();
  if (!v1HasNext && !v2HasNext) {
    match(key,v1,v2,out);
  }
 else   if (!v1HasNext) {
    match(key,v1,v2,out);
    while (v2HasNext) {
      v2=values2.next();
      v2HasNext=values2.hasNext();
      match(key,v1,v2,out);
    }
  }
 else   if (!v2HasNext) {
    match(key,v1,v2,out);
    while (v1HasNext) {
      v1=values1.next();
      v1HasNext=values1.hasNext();
      match(key,v1,v2,out);
    }
  }
 else {
    ArrayList<IV1> values1List=new ArrayList<IV1>();
    match(key,v1,v2,out);
    values1List.add(v1);
    while (values1.hasNext()) {
      v1=values1.next();
      match(key,v1,v2,out);
      values1List.add(v1);
    }
    while (values2.hasNext()) {
      v2=values2.next();
      for (      IV1 v1List : values1List) {
        match(key,v1List,v2,out);
      }
    }
  }
}
