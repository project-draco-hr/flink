{
  DataSet<Vertex<Long,Double>> sourceVertex=graph.getVertices().filter(new SelectVertex(srcVertexId));
  DataSet<Vertex<Long,Double>> verticesWithInitialDistance=sourceVertex.cross(graph.getVertices()).map(new InitSrcVertex());
  DeltaIteration<Vertex<Long,Double>,Vertex<Long,Double>> iteration=verticesWithInitialDistance.iterateDelta(verticesWithInitialDistance,maxIterations,0);
  DataSet<Vertex<Long,Double>> changes=iteration.getWorkset().join(graph.getEdges()).where(0).equalTo(0).with(new NeighborWithDistanceJoin()).groupBy(0).aggregate(Aggregations.MIN,1).join(iteration.getSolutionSet()).where(0).equalTo(0).flatMap(new DistanceFilter());
  DataSet<Vertex<Long,Double>> result=iteration.closeWith(changes,changes);
  return Graph.create(result,graph.getEdges(),ExecutionEnvironment.getExecutionEnvironment());
}
