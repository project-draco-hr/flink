{
  final Configuration stubConfig=this.config.getStubParameters();
  RegularPactTask.openUserCode(this.combiner,stubConfig);
  this.memManager=this.parent.getEnvironment().getMemoryManager();
  final int numMemoryPages=memManager.computeNumberOfPages(this.config.getRelativeMemoryDriver());
  final TypeSerializerFactory<T> serializerFactory=this.config.getInputSerializer(0,this.userCodeClassLoader);
  final TypeComparatorFactory<T> sortingComparatorFactory=this.config.getDriverComparator(0,this.userCodeClassLoader);
  final TypeComparatorFactory<T> groupingComparatorFactory=this.config.getDriverComparator(1,this.userCodeClassLoader);
  this.serializer=serializerFactory.getSerializer();
  this.sortingComparator=sortingComparatorFactory.createComparator();
  this.groupingComparator=groupingComparatorFactory.createComparator();
  final List<MemorySegment> memory=this.memManager.allocatePages(this.parent,numMemoryPages);
  if (this.sortingComparator.supportsSerializationWithKeyNormalization() && this.serializer.getLength() > 0 && this.serializer.getLength() <= THRESHOLD_FOR_IN_PLACE_SORTING) {
    this.sorter=new FixedLengthRecordSorter<T>(this.serializer,this.sortingComparator,memory);
  }
 else {
    this.sorter=new NormalizedKeySorter<T>(this.serializer,this.sortingComparator.duplicate(),memory);
  }
}
