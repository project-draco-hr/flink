def dumpIO_source(object, **kwds):
    "write object source to a buffer (instead of dill.dump)\nLoads by with dill.temp.loadIO_source.  Returns the buffer object.\n\n    >>> f = lambda x:x**2\n    >>> pyfile = dill.temp.dumpIO_source(f, alias='_f')\n    >>> _f = dill.temp.loadIO_source(pyfile)\n    >>> _f(4)\n    16\n\nOptional kwds:\n    If 'alias' is specified, the object will be renamed to the given string.\n    "
    from .source import importable, getname
    if PY3:
        from io import BytesIO as StringIO
    else:
        from StringIO import StringIO
    alias = kwds.pop('alias', '')
    name = (str(alias) or getname(object))
    name = ('\n#NAME: %s\n' % name)
    file = StringIO()
    file.write(b(''.join([importable(object, alias=alias), name])))
    file.flush()
    return file
