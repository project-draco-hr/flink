def loadIO_source(buffer, **kwds):
    "load an object that was stored with dill.temp.dumpIO_source\n\n    buffer: buffer object\n    alias: string name of stored object\n\n    >>> f = lambda x:x**2\n    >>> pyfile = dill.temp.dumpIO_source(f, alias='_f')\n    >>> _f = dill.temp.loadIO_source(pyfile)\n    >>> _f(4)\n    16\n    "
    alias = kwds.pop('alias', None)
    source = getattr(buffer, 'getvalue', buffer)
    if (source != buffer):
        source = source()
    if PY3:
        source = source.decode()
    if (not alias):
        tag = source.strip().splitlines()[(-1)].split()
        if (tag[0] != '#NAME:'):
            stub = source.splitlines()[0]
            raise IOError(('unknown name for code: %s' % stub))
        alias = tag[(-1)]
    local = {}
    exec source in local
    _ = eval(('%s' % alias), local)
    return _
