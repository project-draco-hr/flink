{
  orders1Path=getFilesystemProvider().getTempDirPath() + "/orders1";
  orders2Path=getFilesystemProvider().getTempDirPath() + "/orders2";
  partJoin1Path=getFilesystemProvider().getTempDirPath() + "/partJoin1";
  partJoin2Path=getFilesystemProvider().getTempDirPath() + "/partJoin2";
  lineitemsPath=getFilesystemProvider().getTempDirPath() + "/lineitems";
  resultPath=getFilesystemProvider().getTempDirPath() + "/result";
  String[] splits=splitInputString(ORDERS1,'\n',4);
  getFilesystemProvider().createDir(orders1Path);
  for (int i=0; i < splits.length; i++) {
    getFilesystemProvider().createFile(orders1Path + "/part_" + i+ ".txt",splits[i]);
    LOG.debug("Orders Part " + (i + 1) + ":\n>"+ splits[i]+ "<");
  }
  splits=splitInputString(ORDERS2,'\n',4);
  getFilesystemProvider().createDir(orders2Path);
  for (int i=0; i < splits.length; i++) {
    getFilesystemProvider().createFile(orders2Path + "/part_" + i+ ".txt",splits[i]);
    LOG.debug("Orders Part " + (i + 1) + ":\n>"+ splits[i]+ "<");
  }
  splits=splitInputString(PART_JOIN_1,'\n',4);
  getFilesystemProvider().createDir(partJoin1Path);
  for (int i=0; i < splits.length; i++) {
    getFilesystemProvider().createFile(partJoin1Path + "/part_" + i+ ".txt",splits[i]);
    LOG.debug("Part Join 1 Part " + (i + 1) + ":\n>"+ splits[i]+ "<");
  }
  splits=splitInputString(PART_JOIN_2,'\n',4);
  getFilesystemProvider().createDir(partJoin2Path);
  for (int i=0; i < splits.length; i++) {
    getFilesystemProvider().createFile(partJoin2Path + "/part_" + i+ ".txt",splits[i]);
    LOG.debug("Part Join 2 Part " + (i + 1) + ":\n>"+ splits[i]+ "<");
  }
  splits=splitInputString(LINEITEMS,'\n',4);
  getFilesystemProvider().createDir(lineitemsPath);
  for (int i=0; i < splits.length; i++) {
    getFilesystemProvider().createFile(lineitemsPath + "/part_" + i+ ".txt",splits[i]);
    LOG.debug("Lineitems Part " + (i + 1) + ":\n>"+ splits[i]+ "<");
  }
}
