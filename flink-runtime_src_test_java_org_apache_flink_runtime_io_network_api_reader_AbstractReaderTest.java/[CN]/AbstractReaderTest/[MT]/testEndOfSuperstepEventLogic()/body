{
  final int numberOfInputChannels=4;
  final AbstractReader reader=new MockReader(createInputGate(numberOfInputChannels));
  reader.setIterativeReader();
  try {
    reader.startNextSuperstep();
    fail("Did not throw expected exception when starting next superstep before receiving all end of superstep events.");
  }
 catch (  Throwable t) {
  }
  EndOfSuperstepEvent eos=new EndOfSuperstepEvent();
  for (int i=0; i < numberOfInputChannels - 1; i++) {
    assertFalse(reader.handleEvent(eos));
    assertFalse(reader.hasReachedEndOfSuperstep());
  }
  assertTrue(reader.handleEvent(eos));
  assertTrue(reader.hasReachedEndOfSuperstep());
  try {
    reader.handleEvent(eos);
    fail("Did not throw expected exception when receiving too many end of superstep events.");
  }
 catch (  Throwable t) {
  }
  reader.startNextSuperstep();
  assertFalse(reader.hasReachedEndOfSuperstep());
}
