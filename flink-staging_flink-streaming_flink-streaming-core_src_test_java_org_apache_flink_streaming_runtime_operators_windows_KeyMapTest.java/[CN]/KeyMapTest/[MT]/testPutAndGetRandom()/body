{
  try {
    final KeyMap<Integer,Integer> map=new KeyMap<>();
    final Random rnd=new Random();
    final long seed=rnd.nextLong();
    final int numElements=10000;
    final HashMap<Integer,Integer> groundTruth=new HashMap<>();
    rnd.setSeed(seed);
    for (int i=0; i < numElements; i++) {
      Integer key=rnd.nextInt();
      Integer value=rnd.nextInt();
      if (rnd.nextBoolean()) {
        groundTruth.put(key,value);
        map.put(key,value);
      }
    }
    rnd.setSeed(seed);
    for (int i=0; i < numElements; i++) {
      Integer key=rnd.nextInt();
      rnd.nextInt();
      rnd.nextBoolean();
      Integer expected=groundTruth.get(key);
      if (expected == null) {
        assertNull(map.get(key));
      }
 else {
        Integer contained=map.get(key);
        assertNotNull(contained);
        assertEquals(expected,contained);
      }
    }
  }
 catch (  Exception e) {
    e.printStackTrace();
    fail(e.getMessage());
  }
}
