{
  try {
    KeyMap<String,String> map;
    map=new KeyMap<>();
    assertEquals(64,map.getCurrentTableCapacity());
    assertEquals(6,map.getLog2TableCapacity());
    assertEquals(24,map.getShift());
    assertEquals(48,map.getRehashThreshold());
    map=new KeyMap<>(0);
    assertEquals(64,map.getCurrentTableCapacity());
    assertEquals(6,map.getLog2TableCapacity());
    assertEquals(24,map.getShift());
    assertEquals(48,map.getRehashThreshold());
    map=new KeyMap<>(1);
    assertEquals(64,map.getCurrentTableCapacity());
    assertEquals(6,map.getLog2TableCapacity());
    assertEquals(24,map.getShift());
    assertEquals(48,map.getRehashThreshold());
    map=new KeyMap<>(9);
    assertEquals(64,map.getCurrentTableCapacity());
    assertEquals(6,map.getLog2TableCapacity());
    assertEquals(24,map.getShift());
    assertEquals(48,map.getRehashThreshold());
    map=new KeyMap<>(63);
    assertEquals(64,map.getCurrentTableCapacity());
    assertEquals(6,map.getLog2TableCapacity());
    assertEquals(24,map.getShift());
    assertEquals(48,map.getRehashThreshold());
    map=new KeyMap<>(64);
    assertEquals(128,map.getCurrentTableCapacity());
    assertEquals(7,map.getLog2TableCapacity());
    assertEquals(23,map.getShift());
    assertEquals(96,map.getRehashThreshold());
    map=new KeyMap<>(500);
    assertEquals(512,map.getCurrentTableCapacity());
    assertEquals(9,map.getLog2TableCapacity());
    assertEquals(21,map.getShift());
    assertEquals(384,map.getRehashThreshold());
    map=new KeyMap<>(127);
    assertEquals(128,map.getCurrentTableCapacity());
    assertEquals(7,map.getLog2TableCapacity());
    assertEquals(23,map.getShift());
    assertEquals(96,map.getRehashThreshold());
    try {
      new KeyMap<>(-1);
      fail("should fail with an exception");
    }
 catch (    IllegalArgumentException e) {
    }
    try {
      map=new KeyMap<>(0x65715522);
      final int maxCap=Integer.highestOneBit(Integer.MAX_VALUE);
      assertEquals(Integer.highestOneBit(Integer.MAX_VALUE),map.getCurrentTableCapacity());
      assertEquals(30,map.getLog2TableCapacity());
      assertEquals(0,map.getShift());
      assertEquals(maxCap / 4 * 3,map.getRehashThreshold());
    }
 catch (    OutOfMemoryError e) {
    }
  }
 catch (  Exception e) {
    e.printStackTrace();
    fail(e.getMessage());
  }
}
