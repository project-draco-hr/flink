{
  assertEquals(expected.size(),actual.size());
  Iterator<Object> exIt=expected.iterator();
  Iterator<Object> actIt=actual.iterator();
  while (exIt.hasNext()) {
    Object nextEx=exIt.next();
    Object nextAct=actIt.next();
    if (nextEx instanceof Watermark) {
      assertEquals(nextEx,nextAct);
    }
  }
  List<Object> expectedRecords=new ArrayList<>();
  List<Object> actualRecords=new ArrayList<>();
  for (  Object ex : expected) {
    if (ex instanceof StreamRecord) {
      expectedRecords.add(ex);
    }
  }
  for (  Object act : actual) {
    if (act instanceof StreamRecord) {
      actualRecords.add(act);
    }
  }
  Object[] sortedExpected=expectedRecords.toArray();
  Object[] sortedActual=actualRecords.toArray();
  Arrays.sort(sortedExpected,comparator);
  Arrays.sort(sortedActual,comparator);
  Assert.assertArrayEquals(message,sortedExpected,sortedActual);
}
