{
  final ManagementGraph orig=constructTestManagementGraph();
  final ManagementGraph copy=(ManagementGraph)ManagementTestUtils.createCopy(orig);
  assertEquals(orig.getJobID(),copy.getJobID());
  assertEquals(orig.getNumberOfStages(),copy.getNumberOfStages());
  for (int i=0; i < orig.getNumberOfStages(); i++) {
    final ManagementStage origStage=orig.getStage(i);
    final ManagementStage copyStage=copy.getStage(i);
    assertEquals(origStage.getNumberOfGroupVertices(),copyStage.getNumberOfGroupVertices());
    assertEquals(origStage.getNumberOfInputGroupVertices(),copyStage.getNumberOfInputGroupVertices());
    assertEquals(origStage.getNumberOfOutputGroupVertices(),copyStage.getNumberOfOutputGroupVertices());
    for (int j=0; j < origStage.getNumberOfInputGroupVertices(); j++) {
      final ManagementGroupVertex origGroupVertex=origStage.getInputGroupVertex(j);
      final ManagementGroupVertex copyGroupVertex=copyStage.getInputGroupVertex(j);
      assertEquals(origGroupVertex.getID(),copyGroupVertex.getID());
    }
    for (int j=0; j < origStage.getNumberOfOutputGroupVertices(); j++) {
      final ManagementGroupVertex origGroupVertex=origStage.getOutputGroupVertex(j);
      final ManagementGroupVertex copyGroupVertex=copyStage.getOutputGroupVertex(j);
      assertEquals(origGroupVertex.getID(),copyGroupVertex.getID());
    }
    for (int j=0; j < origStage.getNumberOfGroupVertices(); j++) {
      final ManagementGroupVertex origGroupVertex=origStage.getGroupVertex(j);
      final ManagementGroupVertex copyGroupVertex=copyStage.getGroupVertex(j);
      testGroupVertex(origGroupVertex,copyGroupVertex);
    }
  }
}
