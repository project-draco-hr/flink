{
  JobClient jobClient=null;
  try {
    final String forwardClassName=ForwardTask.class.getSimpleName();
    final File inputFile=ServerTestUtils.createInputFile(limit);
    final File outputFile=new File(ServerTestUtils.getTempDir() + File.separator + ServerTestUtils.getRandomFilename());
    final File jarFile=ServerTestUtils.createJarFile(forwardClassName);
    final JobGraph jg=new JobGraph("Job Graph 1");
    final JobFileInputVertex i1=new JobFileInputVertex("Input 1",jg);
    i1.setInvokableClass(FileLineReader.class);
    i1.setFilePath(new Path(inputFile.toURI()));
    i1.setNumberOfSubtasks(1);
    final JobTaskVertex t1=new JobTaskVertex("Task 1",jg);
    t1.setInvokableClass(ForwardTask.class);
    t1.setNumberOfSubtasks(1);
    final JobTaskVertex t2=new JobTaskVertex("Task 2",jg);
    t2.setInvokableClass(ForwardTask.class);
    t2.setNumberOfSubtasks(1);
    JobFileOutputVertex o1=new JobFileOutputVertex("Output 1",jg);
    o1.setInvokableClass(FileLineWriter.class);
    o1.setFilePath(new Path(outputFile.toURI()));
    o1.setNumberOfSubtasks(1);
    t1.setVertexToShareInstancesWith(i1);
    t2.setVertexToShareInstancesWith(i1);
    o1.setVertexToShareInstancesWith(i1);
    try {
      i1.connectTo(t1,ChannelType.NETWORK);
      t1.connectTo(t2,ChannelType.IN_MEMORY);
      t2.connectTo(o1,ChannelType.IN_MEMORY);
    }
 catch (    Exception e) {
      e.printStackTrace();
      fail(e.getMessage());
    }
    jg.addJar(new Path(new File(ServerTestUtils.getTempDir() + File.separator + forwardClassName+ ".jar").toURI()));
    jobClient=new JobClient(jg,configuration);
    try {
      jobClient.submitJobAndWait();
    }
 catch (    JobExecutionException e) {
      fail(e.getMessage());
    }
    final BufferedReader bufferedReader=new BufferedReader(new FileReader(outputFile));
    for (int i=0; i < limit; i++) {
      final String number=bufferedReader.readLine();
      try {
        assertEquals(i,Integer.parseInt(number));
      }
 catch (      NumberFormatException e) {
        fail(e.getMessage());
      }
    }
    bufferedReader.close();
    inputFile.delete();
    outputFile.delete();
    jarFile.delete();
  }
 catch (  IOException ioe) {
    ioe.printStackTrace();
    fail(ioe.getMessage());
  }
 finally {
    if (jobClient != null) {
      jobClient.close();
    }
  }
}
