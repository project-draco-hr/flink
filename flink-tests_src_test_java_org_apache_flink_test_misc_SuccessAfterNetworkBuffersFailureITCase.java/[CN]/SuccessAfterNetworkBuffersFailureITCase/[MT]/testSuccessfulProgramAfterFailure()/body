{
  ForkableFlinkMiniCluster cluster=null;
  try {
    Configuration config=new Configuration();
    config.setInteger(ConfigConstants.LOCAL_INSTANCE_MANAGER_NUMBER_TASK_MANAGER,2);
    config.setInteger(ConfigConstants.TASK_MANAGER_MEMORY_SIZE_KEY,80);
    config.setInteger(ConfigConstants.TASK_MANAGER_NUM_TASK_SLOTS,8);
    config.setInteger(ConfigConstants.TASK_MANAGER_NETWORK_NUM_BUFFERS_KEY,840);
    cluster=new ForkableFlinkMiniCluster(config,false);
    try {
      runConnectedComponents(cluster.getJobManagerRPCPort());
    }
 catch (    Exception e) {
      e.printStackTrace();
      fail("Program Execution should have succeeded.");
    }
    try {
      runKMeans(cluster.getJobManagerRPCPort());
      fail("This program execution should have failed.");
    }
 catch (    ProgramInvocationException e) {
      assertTrue(e.getCause().getCause().getMessage().contains("Insufficient number of network buffers"));
    }
    try {
      runConnectedComponents(cluster.getJobManagerRPCPort());
    }
 catch (    Exception e) {
      e.printStackTrace();
      fail("Program Execution should have succeeded.");
    }
  }
 catch (  Exception e) {
    e.printStackTrace();
    fail(e.getMessage());
  }
 finally {
    if (cluster != null) {
      cluster.shutdown();
    }
  }
}
