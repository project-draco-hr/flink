{
  this.outerJoinType=outerJoinType;
  pairComparator=new GenericPairComparator<>(leftComparator,rightComparator);
  leftGroupedIterator=new ListKeyGroupedIterator<>(leftInput,leftSerializer,leftComparator);
  rightGroupedIterator=new ListKeyGroupedIterator<>(rightInput,rightSerializer,rightComparator);
  Collections.sort(leftInput,new Comparator<IN1>(){
    @Override public int compare(    IN1 o1,    IN1 o2){
      return leftComparator.compare(o1,o2);
    }
  }
);
  Collections.sort(rightInput,new Comparator<IN2>(){
    @Override public int compare(    IN2 o1,    IN2 o2){
      return rightComparator.compare(o1,o2);
    }
  }
);
}
