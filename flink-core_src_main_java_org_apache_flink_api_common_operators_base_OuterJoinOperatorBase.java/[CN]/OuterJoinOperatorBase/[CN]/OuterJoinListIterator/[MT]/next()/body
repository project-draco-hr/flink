{
  boolean hasMoreElements;
  if ((currLeftIterator == null || !currLeftIterator.hasNext()) && (currRightIterator == null || !currRightIterator.hasNext())) {
    hasMoreElements=nextGroups(outerJoinType);
    if (hasMoreElements) {
      if (outerJoinType != OuterJoinType.LEFT) {
        currLeftIterator=new ListIteratorWrapper(currLeftSubset.iterator());
      }
      leftReturn=(IN1)currLeftIterator.next();
      if (outerJoinType != OuterJoinType.RIGHT) {
        currRightIterator=new ListIteratorWrapper(currRightSubset.iterator());
      }
      rightReturn=(IN2)currRightIterator.next();
      return true;
    }
 else {
      return false;
    }
  }
 else   if (currLeftIterator.hasNext() && !currRightIterator.hasNext()) {
    leftReturn=(IN1)currLeftIterator.next();
    currRightIterator.reset();
    rightReturn=(IN2)currRightIterator.next();
    return true;
  }
 else {
    rightReturn=(IN2)currRightIterator.next();
    return true;
  }
}
