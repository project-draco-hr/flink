{
  boolean firstEmpty=true;
  boolean secondEmpty=true;
  if (this.matchStatus != MatchStatus.FIRST_EMPTY) {
    if (this.matchStatus == MatchStatus.FIRST_REMAINED) {
      firstEmpty=false;
    }
 else {
      if (this.leftGroupedIterator.nextKey()) {
        this.pairComparator.setReference(leftGroupedIterator.getValues().getCurrent());
        firstEmpty=false;
      }
    }
  }
  if (this.matchStatus != MatchStatus.SECOND_EMPTY) {
    if (this.matchStatus == MatchStatus.SECOND_REMAINED) {
      secondEmpty=false;
    }
 else {
      if (rightGroupedIterator.nextKey()) {
        secondEmpty=false;
      }
    }
  }
  if (firstEmpty && secondEmpty) {
    return false;
  }
 else   if (firstEmpty && !secondEmpty) {
    this.currLeftSubset=Collections.singleton(null);
    this.currRightSubset=this.rightGroupedIterator.getValues();
    this.matchStatus=MatchStatus.FIRST_EMPTY;
    return true;
  }
 else   if (!firstEmpty && secondEmpty) {
    this.currLeftSubset=this.leftGroupedIterator.getValues();
    this.currRightSubset=Collections.singleton(null);
    this.matchStatus=MatchStatus.SECOND_EMPTY;
    return true;
  }
 else {
    final int comp=this.pairComparator.compareToReference(rightGroupedIterator.getValues().getCurrent());
    if (0 == comp) {
      this.currLeftSubset=this.leftGroupedIterator.getValues();
      this.currRightSubset=this.rightGroupedIterator.getValues();
      this.matchStatus=MatchStatus.NONE_REMAINED;
    }
 else     if (0 < comp) {
      this.currLeftSubset=this.leftGroupedIterator.getValues();
      this.currRightSubset=Collections.singleton(null);
      this.matchStatus=MatchStatus.SECOND_REMAINED;
    }
 else {
      this.currLeftSubset=Collections.singleton(null);
      this.currRightSubset=this.rightGroupedIterator.getValues();
      this.matchStatus=MatchStatus.FIRST_REMAINED;
    }
    return true;
  }
}
