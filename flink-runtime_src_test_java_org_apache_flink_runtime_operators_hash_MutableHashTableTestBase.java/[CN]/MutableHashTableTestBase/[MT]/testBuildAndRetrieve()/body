{
  final int NUM_MEM_PAGES=32 * NUM_PAIRS / PAGE_SIZE;
  AbstractMutableHashTable<IntPair> table=getHashTable(intPairSerializer,intPairComparator,getMemory(NUM_MEM_PAGES));
  final Random rnd=new Random(RANDOM_SEED);
  final IntPair[] pairs=getRandomizedIntPairs(NUM_PAIRS,rnd);
  table.open();
  for (int i=0; i < NUM_PAIRS; i++) {
    table.insert(pairs[i]);
  }
  AbstractHashTableProber<IntPair,IntPair> prober=table.getProber(intPairComparator,pairComparator);
  IntPair target=new IntPair();
  for (int i=0; i < NUM_PAIRS; i++) {
    assertNotNull(prober.getMatchFor(pairs[i],target));
    assertEquals(pairs[i].getValue(),target.getValue());
  }
  table.close();
  assertEquals("Memory lost",NUM_MEM_PAGES,table.getFreeMemory().size());
}
