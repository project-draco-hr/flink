{
  int noKeys=100;
  int noKeyCnt=10000;
  MockRecordReader reader=new MockRecordReader();
  LOG.debug("initializing sortmerger");
  TestCountCombiner comb=new TestCountCombiner();
  Sorter<Record> merger=new CombiningUnilateralSortMerger<Record>(comb,this.memoryManager,this.ioManager,reader,this.parentTask,this.serializerFactory,this.comparator,0.01,64,0.005f,true);
  final Record rec=new Record();
  rec.setField(1,new IntValue(1));
  final TestData.Key key=new TestData.Key();
  for (int i=0; i < noKeyCnt; i++) {
    for (int j=0; j < noKeys; j++) {
      key.setKey(j);
      rec.setField(0,key);
      reader.emit(rec);
    }
  }
  reader.close();
  MutableObjectIterator<Record> iterator=merger.getIterator();
  Iterator<Integer> result=getReducingIterator(iterator,serializerFactory.getSerializer(),comparator.duplicate());
  while (result.hasNext()) {
    Assert.assertEquals(noKeyCnt,result.next().intValue());
  }
  merger.close();
  Assert.assertTrue(comb.opened == comb.closed);
}
