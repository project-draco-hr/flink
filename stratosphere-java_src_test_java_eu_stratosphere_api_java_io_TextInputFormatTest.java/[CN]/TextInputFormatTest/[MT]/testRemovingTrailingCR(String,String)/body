{
  File tempFile=null;
  String FIRST="First line";
  String SECOND="Second line";
  String CONTENT=FIRST + lineBreaker + SECOND+ lineBreaker;
  try {
    tempFile=File.createTempFile("TextInputFormatTest","tmp");
    tempFile.deleteOnExit();
    tempFile.setWritable(true);
    OutputStreamWriter wrt=new OutputStreamWriter(new FileOutputStream(tempFile));
    wrt.write(CONTENT);
    wrt.close();
    TextInputFormat inputFormat=new TextInputFormat(new Path(tempFile.toURI().toString()));
    inputFormat.setFilePath(tempFile.toURI().toString());
    Configuration parameters=new Configuration();
    inputFormat.configure(parameters);
    inputFormat.setDelimiter(delimiter);
    FileInputSplit[] splits=inputFormat.createInputSplits(1);
    inputFormat.open(splits[0]);
    String result="";
    if ((delimiter.equals("\n") && (lineBreaker.equals("\n") || lineBreaker.equals("\r\n"))) || (lineBreaker.equals(delimiter))) {
      result=inputFormat.nextRecord("");
      assertNotNull("Expecting first record here",result);
      assertEquals(FIRST,result);
      result=inputFormat.nextRecord(result);
      assertNotNull("Expecting second record here",result);
      assertEquals(SECOND,result);
      result=inputFormat.nextRecord(result);
      assertNull("The input file is over",result);
    }
 else {
      result=inputFormat.nextRecord("");
      assertNotNull("Expecting first record here",result);
      assertEquals(CONTENT,result);
    }
  }
 catch (  Throwable t) {
    System.err.println("test failed with exception: " + t.getMessage());
    t.printStackTrace(System.err);
    fail("Test erroneous");
  }
}
