{
  final Object checkpointLock=ctx.getCheckpointLock();
  RuntimeContext context=getRuntimeContext();
  final long stepSize=context.getNumberOfParallelSubtasks();
  final long congruence=start + context.getIndexOfThisSubtask();
  final long toCollect=((end - start + 1) % stepSize > (congruence - start)) ? ((end - start + 1) / stepSize + 1) : ((end - start + 1) / stepSize);
  while (isRunning && collected < toCollect) {
synchronized (checkpointLock) {
      ctx.collect(collected * stepSize + congruence);
      collected++;
    }
  }
}
