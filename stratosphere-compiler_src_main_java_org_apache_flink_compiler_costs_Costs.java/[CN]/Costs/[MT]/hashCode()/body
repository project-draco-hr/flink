{
  final int prime=31;
  int result=1;
  long cpuCostBits=Double.doubleToLongBits(cpuCost);
  long heuristicCpuCostBits=Double.doubleToLongBits(heuristicCpuCost);
  long heuristicNetworkCostBits=Double.doubleToLongBits(heuristicNetworkCost);
  long heuristicDiskCostBits=Double.doubleToLongBits(heuristicDiskCost);
  long networkCostBits=Double.doubleToLongBits(networkCost);
  long diskCostBits=Double.doubleToLongBits(diskCost);
  result=prime * result + (int)(cpuCostBits ^ (cpuCostBits >>> 32));
  result=prime * result + (int)(heuristicCpuCostBits ^ (heuristicCpuCostBits >>> 32));
  result=prime * result + (int)(heuristicNetworkCostBits ^ (heuristicNetworkCostBits >>> 32));
  result=prime * result + (int)(heuristicDiskCostBits ^ (heuristicDiskCostBits >>> 32));
  result=prime * result + (int)(networkCostBits ^ (networkCostBits >>> 32));
  result=prime * result + (int)(diskCostBits ^ (diskCostBits >>> 32));
  return result;
}
