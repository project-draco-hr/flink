{
  Type[] actualTypeArguments=superclass.getActualTypeArguments();
  BoundType[] arguments=new BoundType[actualTypeArguments.length];
  for (int index=0; index < actualTypeArguments.length; index++)   if (actualTypeArguments[index] instanceof TypeVariable<?>)   arguments[index]=resolveType(type,(TypeVariable<?>)actualTypeArguments[index]);
 else   if (actualTypeArguments[index] instanceof ParameterizedType)   arguments[index]=getBindingsOfDirectSuperclass(type,(ParameterizedType)actualTypeArguments[index]);
 else   arguments[index]=BoundType.of((Class<?>)actualTypeArguments[index]);
  return BoundType.of((Class<?>)superclass.getRawType(),arguments);
}
