{
  try {
{
      String[] parameters={"-v","-l","-a","some","program","arguments"};
      CliFrontend testFrontend=new CliFrontend(CliFrontendTestUtils.getConfigDir());
      int retCode=testFrontend.run(parameters);
      assertNotEquals(0,retCode);
    }
{
      String[] parameters={"-v",getTestJarPath()};
      RunTestingCliFrontend testFrontend=new RunTestingCliFrontend(-1,true,false);
      assertEquals(0,testFrontend.run(parameters));
    }
{
      String[] parameters={"-v","-p","42",getTestJarPath()};
      RunTestingCliFrontend testFrontend=new RunTestingCliFrontend(42,true,false);
      assertEquals(0,testFrontend.run(parameters));
    }
{
      String[] parameters={"-p","2","-q",getTestJarPath()};
      RunTestingCliFrontend testFrontend=new RunTestingCliFrontend(2,false,false);
      assertEquals(0,testFrontend.run(parameters));
    }
{
      String[] parameters={"-p","2","-d",getTestJarPath()};
      RunTestingCliFrontend testFrontend=new RunTestingCliFrontend(2,true,true);
      assertEquals(0,testFrontend.run(parameters));
    }
{
      String[] parameters={"-v","-p","text",getTestJarPath()};
      CliFrontend testFrontend=new CliFrontend(CliFrontendTestUtils.getConfigDir());
      assertNotEquals(0,testFrontend.run(parameters));
    }
{
      String[] parameters={"-v","-p","475871387138",getTestJarPath()};
      CliFrontend testFrontend=new CliFrontend(CliFrontendTestUtils.getConfigDir());
      assertNotEquals(0,testFrontend.run(parameters));
    }
{
      String[] parameters={"-s","expectedSavepointPath",getTestJarPath()};
      RunOptions options=CliFrontendParser.parseRunCommand(parameters);
      assertEquals("expectedSavepointPath",options.getSavepointPath());
    }
{
      String[] parameters={"-m","localhost:6123",getTestJarPath(),"-arg1","value1","justavalue","--arg2","value2"};
      RunOptions options=CliFrontendParser.parseRunCommand(parameters);
      assertEquals("-arg1",options.getProgramArgs()[0]);
      assertEquals("value1",options.getProgramArgs()[1]);
      assertEquals("justavalue",options.getProgramArgs()[2]);
      assertEquals("--arg2",options.getProgramArgs()[3]);
      assertEquals("value2",options.getProgramArgs()[4]);
    }
  }
 catch (  Exception e) {
    e.printStackTrace();
    fail(e.getMessage());
  }
}
