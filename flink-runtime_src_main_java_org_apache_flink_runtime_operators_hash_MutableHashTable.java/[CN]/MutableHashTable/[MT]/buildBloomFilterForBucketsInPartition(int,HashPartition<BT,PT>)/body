{
  final int bucketsPerSegment=this.bucketsPerSegmentMask + 1;
  int numSegs=this.buckets.length;
  for (int i=0, bucket=0; i < numSegs && bucket < numBuckets; i++) {
    final MemorySegment segment=this.buckets[i];
    for (int k=0; k < bucketsPerSegment && bucket < numBuckets; k++, bucket++) {
      final int bucketInSegmentOffset=k * HASH_BUCKET_SIZE;
      byte partitionNumber=segment.get(bucketInSegmentOffset + HEADER_PARTITION_OFFSET);
      if (partitionNumber == partNum) {
        byte status=segment.get(bucketInSegmentOffset + HEADER_STATUS_OFFSET);
        if (status == BUCKET_STATUS_IN_MEMORY) {
          buildBloomFilterForBucket(bucketInSegmentOffset,segment,partition);
        }
      }
    }
  }
}
