{
  Random rand=new Random(RANDOM_SEED);
  MemorySegment segment=memoryManager.allocate(mockInvoke,MEMORY_SIZE);
  String str=generateRandomString(rand,32);
  str=str.replaceAll("\n","_").replaceAll("\r","-") + "\n";
  int lengthSum=str.length() * 2;
  int writeCnt=0;
  while (lengthSum < MEMORY_SIZE) {
    segment.outputView.writeChars(str);
    writeCnt++;
    str=generateRandomString(rand,32);
    str=str.replaceAll("\n","_").replaceAll("\r","-") + "\n";
    lengthSum+=str.length() * 2;
  }
  rand.setSeed(RANDOM_SEED);
  for (int i=0; i < writeCnt; i++) {
    str=generateRandomString(rand,32);
    str=str.replaceAll("\n","_").replaceAll("\r","-");
    if (!segment.inputView.readLine().equals(str)) {
      Assert.fail();
    }
  }
  memoryManager.release(segment);
}
