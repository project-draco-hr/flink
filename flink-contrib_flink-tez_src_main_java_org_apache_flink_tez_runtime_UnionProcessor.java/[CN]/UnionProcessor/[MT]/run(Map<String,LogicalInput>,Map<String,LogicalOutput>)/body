{
  this.inputs=inputs;
  this.outputs=outputs;
  this.numInputs=inputs.size();
  this.numOutputs=outputs.size();
  this.readers=new ArrayList<KeyValueReader>(numInputs);
  if (this.inputs != null) {
    for (    LogicalInput input : this.inputs.values()) {
      input.start();
      readers.add((KeyValueReader)input.getReader());
    }
  }
  this.writers=new ArrayList<KeyValueWriter>(numOutputs);
  if (this.outputs != null) {
    for (    LogicalOutput output : this.outputs.values()) {
      output.start();
      writers.add((KeyValueWriter)output.getWriter());
    }
  }
  Preconditions.checkArgument(writers.size() == 1);
  KeyValueWriter writer=writers.get(0);
  for (  KeyValueReader reader : this.readers) {
    while (reader.next()) {
      Object key=reader.getCurrentKey();
      Object value=reader.getCurrentValue();
      writer.write(key,value);
    }
  }
}
