{
  Configuration configuration=new Configuration();
  String taskName="test\"Ta\"..sk";
  String jobName="testJ\"ob:-!ax..?";
  String hostname="loc<>al\"::host\".:";
  String taskManagerId="tas:kMana::ger";
  String counterName="testCounter";
  configuration.setString(ConfigConstants.METRICS_REPORTER_CLASS,"org.apache.flink.dropwizard.ScheduledDropwizardReporterTest$TestingScheduledDropwizardReporter");
  configuration.setString(ConfigConstants.METRICS_SCOPE_NAMING_TASK,"<host>.<tm_id>.<job_name>");
  configuration.setString(ConfigConstants.METRICS_SCOPE_DELIMITER,"_");
  MetricRegistry metricRegistry=new MetricRegistry(configuration);
  char delimiter=metricRegistry.getDelimiter();
  TaskManagerMetricGroup tmMetricGroup=new TaskManagerMetricGroup(metricRegistry,hostname,taskManagerId);
  TaskManagerJobMetricGroup tmJobMetricGroup=new TaskManagerJobMetricGroup(metricRegistry,tmMetricGroup,new JobID(),jobName);
  TaskMetricGroup taskMetricGroup=new TaskMetricGroup(metricRegistry,tmJobMetricGroup,new AbstractID(),new AbstractID(),taskName,0,0);
  SimpleCounter myCounter=new SimpleCounter();
  taskMetricGroup.counter(counterName,myCounter);
  Field reporterField=MetricRegistry.class.getDeclaredField("reporter");
  reporterField.setAccessible(true);
  MetricReporter metricReporter=(MetricReporter)reporterField.get(metricRegistry);
  assertTrue("Reporter should be of type ScheduledDropwizardReporter",metricReporter instanceof ScheduledDropwizardReporter);
  TestingScheduledDropwizardReporter reporter=(TestingScheduledDropwizardReporter)metricReporter;
  Map<Counter,String> counters=reporter.getCounters();
  assertTrue(counters.containsKey(myCounter));
  String expectedCounterName=reporter.filterCharacters(hostname) + delimiter + reporter.filterCharacters(taskManagerId)+ delimiter+ reporter.filterCharacters(jobName)+ delimiter+ reporter.filterCharacters(counterName);
  assertEquals(expectedCounterName,counters.get(myCounter));
  metricRegistry.shutdown();
}
