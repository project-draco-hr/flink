{
  final int numThreads=Integer.parseInt(args[0]);
  final String[] filePaths=args[1].split(";");
  for (  String path : filePaths) {
    System.out.println("Using file '" + path + "'");
  }
  final long totalStart=System.nanoTime();
  final AccessibleConcurrentHashMap<Integer,ParallelTriangleEntry> map=new AccessibleConcurrentHashMap<Integer,ParallelTriangleEntry>(900000,0.85f,numThreads * 4);
  final Task[] tasks=new Task[numThreads];
  long readingStart=System.nanoTime();
  if (filePaths.length == numThreads) {
    for (int i=0; i < tasks.length; i++) {
      tasks[i]=new ReadAndBuildTask(map,filePaths[i],i);
    }
    runTasks(tasks);
  }
 else {
    Task[] t=new Task[filePaths.length];
    for (int i=0; i < t.length; i++) {
      t[i]=new ReadAndBuildTask(map,filePaths[i],i);
    }
    runTasks(t);
  }
  long readingElapsed=System.nanoTime() - readingStart;
  System.out.println("Reading took: " + (readingElapsed / 1000000) + "msecs");
}
