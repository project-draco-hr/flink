{
  while (!this.queues.empty.isEmpty()) {
    try {
      final NormalizedKeySorter<?> sorter=this.queues.empty.take().buffer;
      final List<MemorySegment> sorterMem=sorter.dispose();
      if (releaseMemory) {
        this.memManager.release(sorterMem);
      }
    }
 catch (    InterruptedException iex) {
      if (isRunning()) {
        LOG.error("Spilling thread was interrupted (without being shut down) while collecting empty buffers to release them. " + "Retrying to collect buffers...");
      }
 else {
        return;
      }
    }
  }
}
