{
  if (LOG.isDebugEnabled())   LOG.debug("Performing merge of " + channelIDs.size() + " sorted streams.");
  final List<ChannelReaderInputView> inViews=new ArrayList<ChannelReaderInputView>(channelIDs.size());
  for (int i=0; i < channelIDs.size(); i++) {
    final Channel.ID id=channelIDs.get(i);
    final List<MemorySegment> segsForChannel=inputSegments.get(i);
    final BlockChannelReader reader=this.ioManager.createBlockChannelReader(id);
    readerList.add(reader);
    registerOpenChannelToBeRemovedAtShudown(reader);
    unregisterChannelToBeRemovedAtShudown(id);
    final ChannelReaderInputView inView=new ChannelReaderInputView(reader,segsForChannel,false);
    inViews.add(inView);
  }
  final List<MutableObjectIterator<E>> iterators=new ArrayList<MutableObjectIterator<E>>(channelIDs.size());
  for (int i=0; i < inViews.size(); i++) {
    final ChannelReaderInputView inView=inViews.get(i);
    iterators.add(new ChannelReaderInputViewIterator<E>(inView,null,this.typeAccessors));
  }
  return new MergeIterator<E>(iterators,this.typeAccessors);
}
