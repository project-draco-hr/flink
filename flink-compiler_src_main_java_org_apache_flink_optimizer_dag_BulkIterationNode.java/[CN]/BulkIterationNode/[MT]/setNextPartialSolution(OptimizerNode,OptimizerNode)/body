{
  if (nextPartialSolution.getDegreeOfParallelism() != getDegreeOfParallelism() || nextPartialSolution == partialSolution || nextPartialSolution instanceof BinaryUnionNode) {
    NoOpNode noop=new NoOpNode();
    noop.setDegreeOfParallelism(getDegreeOfParallelism());
    PactConnection noOpConn=new PactConnection(nextPartialSolution,noop,ExecutionMode.PIPELINED);
    noop.setIncomingConnection(noOpConn);
    nextPartialSolution.addOutgoingConnection(noOpConn);
    nextPartialSolution=noop;
  }
  this.nextPartialSolution=nextPartialSolution;
  this.terminationCriterion=terminationCriterion;
  if (terminationCriterion == null) {
    this.singleRoot=nextPartialSolution;
    this.rootConnection=new PactConnection(nextPartialSolution,ExecutionMode.PIPELINED);
  }
 else {
    SingleRootJoiner singleRootJoiner=new SingleRootJoiner();
    this.rootConnection=new PactConnection(nextPartialSolution,singleRootJoiner,ExecutionMode.PIPELINED);
    this.terminationCriterionRootConnection=new PactConnection(terminationCriterion,singleRootJoiner,ExecutionMode.PIPELINED);
    singleRootJoiner.setInputs(this.rootConnection,this.terminationCriterionRootConnection);
    this.singleRoot=singleRootJoiner;
    terminationCriterion.addOutgoingConnection(terminationCriterionRootConnection);
  }
  nextPartialSolution.addOutgoingConnection(rootConnection);
}
