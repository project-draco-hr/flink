{
  if (this.pendingEvents != null) {
    BufferOrEvent next=new BufferOrEvent(this.pendingEvents.next());
    if (!this.pendingEvents.hasNext()) {
      this.pendingEvents=null;
    }
    return next;
  }
  Envelope nextEnvelope;
synchronized (this.queuedEnvelopes) {
    if (this.queuedEnvelopes.isEmpty()) {
      return null;
    }
    nextEnvelope=this.queuedEnvelopes.poll();
  }
  @SuppressWarnings("unchecked") List<AbstractEvent> events=(List<AbstractEvent>)nextEnvelope.deserializeEvents();
  Iterator<AbstractEvent> eventsIt=events.iterator();
  if (eventsIt.hasNext()) {
    this.pendingEvents=eventsIt;
  }
  if (nextEnvelope.getBuffer() != null) {
    return new BufferOrEvent(nextEnvelope.getBuffer());
  }
 else   if (this.pendingEvents != null) {
    BufferOrEvent next=new BufferOrEvent(this.pendingEvents.next());
    if (!this.pendingEvents.hasNext()) {
      this.pendingEvents=null;
    }
    return next;
  }
 else {
    throw new IOException("Received an envelope with neither data nor events.");
  }
}
