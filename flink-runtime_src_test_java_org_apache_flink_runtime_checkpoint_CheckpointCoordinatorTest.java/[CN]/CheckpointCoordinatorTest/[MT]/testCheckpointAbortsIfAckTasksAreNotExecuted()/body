{
  try {
    final JobID jid=new JobID();
    final long timestamp=System.currentTimeMillis();
    final ExecutionAttemptID triggerAttemptID1=new ExecutionAttemptID();
    final ExecutionAttemptID triggerAttemptID2=new ExecutionAttemptID();
    ExecutionVertex triggerVertex1=mockExecutionVertex(triggerAttemptID1);
    ExecutionVertex triggerVertex2=mockExecutionVertex(triggerAttemptID2);
    ExecutionVertex ackVertex1=mock(ExecutionVertex.class);
    ExecutionVertex ackVertex2=mock(ExecutionVertex.class);
    CheckpointCoordinator coord=new CheckpointCoordinator(jid,1,600000,new ExecutionVertex[]{triggerVertex1,triggerVertex2},new ExecutionVertex[]{ackVertex1,ackVertex2},new ExecutionVertex[]{},cl);
    assertEquals(0,coord.getNumberOfPendingCheckpoints());
    assertEquals(0,coord.getNumberOfRetainedSuccessfulCheckpoints());
    assertFalse(coord.triggerCheckpoint(timestamp));
    assertEquals(0,coord.getNumberOfPendingCheckpoints());
    assertEquals(0,coord.getNumberOfRetainedSuccessfulCheckpoints());
    coord.shutdown();
  }
 catch (  Exception e) {
    e.printStackTrace();
    fail(e.getMessage());
  }
}
