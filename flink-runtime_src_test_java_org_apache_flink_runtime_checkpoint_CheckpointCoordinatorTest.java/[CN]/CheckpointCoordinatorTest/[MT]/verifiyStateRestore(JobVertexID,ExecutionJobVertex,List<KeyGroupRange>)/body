{
  for (int i=0; i < executionJobVertex.getParallelism(); i++) {
    ChainedStateHandle<StreamStateHandle> expectNonPartitionedState=generateStateForVertex(jobVertexID,i);
    ChainedStateHandle<StreamStateHandle> actualNonPartitionedState=executionJobVertex.getTaskVertices()[i].getCurrentExecutionAttempt().getChainedStateHandle();
    assertTrue(CommonTestUtils.isSteamContentEqual(expectNonPartitionedState.get(0).openInputStream(),actualNonPartitionedState.get(0).openInputStream()));
    ChainedStateHandle<OperatorStateHandle> expectedPartitionableState=generateChainedPartitionableStateHandle(jobVertexID,i,2,8);
    List<Collection<OperatorStateHandle>> actualPartitionableState=executionJobVertex.getTaskVertices()[i].getCurrentExecutionAttempt().getChainedPartitionableStateHandle();
    assertTrue(CommonTestUtils.isSteamContentEqual(expectedPartitionableState.get(0).openInputStream(),actualPartitionableState.get(0).iterator().next().openInputStream()));
    List<KeyGroupsStateHandle> expectPartitionedKeyGroupState=generateKeyGroupState(jobVertexID,keyGroupPartitions.get(i));
    List<KeyGroupsStateHandle> actualPartitionedKeyGroupState=executionJobVertex.getTaskVertices()[i].getCurrentExecutionAttempt().getKeyGroupsStateHandles();
    compareKeyPartitionedState(expectPartitionedKeyGroupState,actualPartitionedKeyGroupState);
  }
}
