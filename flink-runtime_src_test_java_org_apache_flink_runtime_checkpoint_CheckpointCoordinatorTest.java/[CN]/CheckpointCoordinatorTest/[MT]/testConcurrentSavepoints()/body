{
  JobID jobId=new JobID();
  final ExecutionAttemptID attemptID1=new ExecutionAttemptID();
  ExecutionVertex vertex1=mockExecutionVertex(attemptID1);
  StandaloneCheckpointIDCounter checkpointIDCounter=new StandaloneCheckpointIDCounter();
  CheckpointCoordinator coord=new CheckpointCoordinator(jobId,100000,200000,0L,1,new ExecutionVertex[]{vertex1},new ExecutionVertex[]{vertex1},new ExecutionVertex[]{vertex1},checkpointIDCounter,new StandaloneCompletedCheckpointStore(2,cl),new HeapSavepointStore(),new DisabledCheckpointStatsTracker());
  List<Future<String>> savepointFutures=new ArrayList<>();
  int numSavepoints=5;
  for (int i=0; i < numSavepoints; i++) {
    savepointFutures.add(coord.triggerSavepoint(i));
  }
  for (  Future<String> savepointFuture : savepointFutures) {
    assertFalse(savepointFuture.isCompleted());
  }
  long checkpointId=checkpointIDCounter.getLast();
  for (int i=0; i < numSavepoints; i++, checkpointId--) {
    coord.receiveAcknowledgeMessage(new AcknowledgeCheckpoint(jobId,attemptID1,new CheckpointMetaData(checkpointId,0L)));
  }
  for (  Future<String> savepointFuture : savepointFutures) {
    assertTrue(savepointFuture.isCompleted());
  }
}
