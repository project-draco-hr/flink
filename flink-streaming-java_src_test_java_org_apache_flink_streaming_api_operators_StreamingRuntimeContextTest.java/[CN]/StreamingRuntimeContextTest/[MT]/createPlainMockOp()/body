{
  AbstractStreamOperator<?> operatorMock=mock(AbstractStreamOperator.class);
  when(operatorMock.getExecutionConfig()).thenReturn(new ExecutionConfig());
  when(operatorMock.getPartitionedState(any(ListStateDescriptor.class))).thenAnswer(new Answer<ListState<String>>(){
    @Override public ListState<String> answer(    InvocationOnMock invocationOnMock) throws Throwable {
      ListStateDescriptor<String> descr=(ListStateDescriptor<String>)invocationOnMock.getArguments()[0];
      KeyedStateBackend<Integer> backend=new MemoryStateBackend().createKeyedStateBackend(new DummyEnvironment("test_task",1,0),new JobID(),"test_op",IntSerializer.INSTANCE,new HashKeyGroupAssigner<Integer>(1),new KeyGroupRange(0,0),new KvStateRegistry().createTaskRegistry(new JobID(),new JobVertexID()));
      backend.setCurrentKey(0);
      return backend.getPartitionedState(VoidNamespace.INSTANCE,VoidNamespaceSerializer.INSTANCE,descr);
    }
  }
);
  return operatorMock;
}
