{
  AbstractStreamOperator<?> operatorMock=mock(AbstractStreamOperator.class);
  when(operatorMock.getExecutionConfig()).thenReturn(new ExecutionConfig());
  when(operatorMock.getPartitionedState(any(ListStateDescriptor.class))).thenAnswer(new Answer<ListState<String>>(){
    @Override public ListState<String> answer(    InvocationOnMock invocationOnMock) throws Throwable {
      ListStateDescriptor<String> descr=(ListStateDescriptor<String>)invocationOnMock.getArguments()[0];
      MemListState<String,VoidNamespace,String> listState=new MemListState<>(StringSerializer.INSTANCE,VoidNamespaceSerializer.INSTANCE,descr);
      listState.setCurrentNamespace(VoidNamespace.INSTANCE);
      return listState;
    }
  }
);
  return operatorMock;
}
