{
  LazyTransitiveClosureEntry state=new LazyTransitiveClosureEntry();
  ComponentUpdate probe=new ComponentUpdate();
  int countUpdated=0;
  int countUnchanged=0;
  while (iter.next(probe)) {
    LazyHashBucketIterator<Value,ComponentUpdate> tableIter=table.getLazyMatchesFor(probe);
    if (tableIter.next(state)) {
      long oldCid=state.getCid();
      long updateCid=probe.getCid();
      if (updateCid < oldCid) {
        state.setCid(updateCid);
        output.collect(state);
        countUpdated++;
      }
 else {
        countUnchanged++;
      }
    }
    if (tableIter.next(state)) {
      throw new RuntimeException("there should only be one");
    }
  }
  LOG.info("Processing stats - Updated: " + countUpdated + " - Unchanged:"+ countUnchanged);
}
