{
  int noSubtasks=(args.length > 0 ? Integer.parseInt(args[0]) : 1);
  String ordersPath=(args.length > 1 ? args[1] : "");
  String customerPath=(args.length > 2 ? args[2] : "");
  String output=(args.length > 3 ? args[3] : "");
  FileDataSource orders=new FileDataSource(RecordInputFormat.class,ordersPath,"Orders");
  orders.setDegreeOfParallelism(noSubtasks);
  orders.setParameter(RecordInputFormat.RECORD_DELIMITER,"\n");
  orders.setParameter(RecordInputFormat.FIELD_DELIMITER_PARAMETER,"|");
  orders.setParameter(RecordInputFormat.NUM_FIELDS_PARAMETER,1);
  orders.getParameters().setClass(RecordInputFormat.FIELD_PARSER_PARAMETER_PREFIX + 0,DecimalTextIntParser.class);
  orders.setParameter(RecordInputFormat.TEXT_POSITION_PARAMETER_PREFIX + 0,1);
  orders.getCompilerHints().setAvgBytesPerRecord(5);
  orders.getCompilerHints().setAvgNumValuesPerDistinctValue(new FieldSet(new int[]{0}),10);
  FileDataSource customers=new FileDataSource(RecordInputFormat.class,customerPath,"Customers");
  customers.setDegreeOfParallelism(noSubtasks);
  customers.setParameter(RecordInputFormat.RECORD_DELIMITER,"\n");
  customers.setParameter(RecordInputFormat.FIELD_DELIMITER_PARAMETER,"|");
  customers.setParameter(RecordInputFormat.NUM_FIELDS_PARAMETER,2);
  customers.getParameters().setClass(RecordInputFormat.FIELD_PARSER_PARAMETER_PREFIX + 0,DecimalTextIntParser.class);
  customers.setParameter(RecordInputFormat.TEXT_POSITION_PARAMETER_PREFIX + 0,0);
  customers.getParameters().setClass(RecordInputFormat.FIELD_PARSER_PARAMETER_PREFIX + 1,VarLengthStringParser.class);
  customers.setParameter(RecordInputFormat.TEXT_POSITION_PARAMETER_PREFIX + 1,6);
  customers.getCompilerHints().setAvgNumValuesPerDistinctValue(new FieldSet(new int[]{0}),1);
  customers.getCompilerHints().setAvgBytesPerRecord(20);
  MatchContract joinCO=new MatchContract(JoinCO.class,PactInteger.class,0,0,"JoinCO");
  joinCO.setDegreeOfParallelism(noSubtasks);
  joinCO.getCompilerHints().setAvgBytesPerRecord(17);
  ReduceContract aggCO=new ReduceContract(AggCO.class,PactString.class,1,"AggCo");
  aggCO.setDegreeOfParallelism(noSubtasks);
  aggCO.getCompilerHints().setAvgBytesPerRecord(17);
  aggCO.getCompilerHints().setAvgNumValuesPerDistinctValue(new FieldSet(new int[]{0}),1);
  FileDataSink result=new FileDataSink(RecordOutputFormat.class,output,"Output");
  result.setDegreeOfParallelism(noSubtasks);
  result.getParameters().setString(RecordOutputFormat.RECORD_DELIMITER_PARAMETER,"\n");
  result.getParameters().setString(RecordOutputFormat.FIELD_DELIMITER_PARAMETER,"|");
  result.getParameters().setInteger(RecordOutputFormat.NUM_FIELDS_PARAMETER,2);
  result.getParameters().setClass(RecordOutputFormat.FIELD_TYPE_PARAMETER_PREFIX + 0,PactInteger.class);
  result.getParameters().setClass(RecordOutputFormat.FIELD_TYPE_PARAMETER_PREFIX + 1,PactString.class);
  result.addInput(aggCO);
  aggCO.addInput(joinCO);
  joinCO.addFirstInput(orders);
  joinCO.addSecondInput(customers);
  return new Plan(result,"TPCH Asterix");
}
