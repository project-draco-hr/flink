def using(self, operator, types):
    '\n        Finalizes a CoGroup transformation.\n\n        Applies a CoGroupFunction to groups of elements with identical keys.\n        Each CoGroupFunction call returns an arbitrary number of keys.\n\n        :param operator: The CoGroupFunction that is called for all groups of elements with identical keys.\n        :param types: The type of the resulting DataSet.\n        :return:An CoGroupOperator that represents the co-grouped result DataSet.\n        '
    if isinstance(operator, TYPES.FunctionType):
        f = operator
        operator = CoGroupFunction()
        operator.co_group = f
    new_set = OperatorSet(self._env, self._info)
    operator._keys1 = self._info.key1
    operator._keys2 = self._info.key2
    self._info.operator = operator
    self._info.meta = ((str(inspect.getmodule(operator)) + '|') + str(operator.__class__.__name__))
    self._info.types = types
    self._info.name = 'PythonCoGroup'
    self._env._sets.append(self._info)
    return new_set
