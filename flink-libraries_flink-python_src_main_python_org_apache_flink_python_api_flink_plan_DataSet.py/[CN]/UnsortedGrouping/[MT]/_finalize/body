def _finalize(self):
    grouping = self._child_chain[0]
    keys = grouping.keys
    f = None
    if isinstance(keys[0], TYPES.FunctionType):
        f = (lambda x: (keys[0](x),))
    if isinstance(keys[0], KeySelectorFunction):
        f = (lambda x: (keys[0].get_key(x),))
    if (f is None):
        f = (lambda x: tuple([x[key] for key in keys]))
    grouping.parent.operator.map = (lambda x: (f(x), x))
    grouping.parent.types = _createKeyValueTypeInfo(len(keys))
    grouping.keys = tuple([i for i in range(len(grouping.keys))])
