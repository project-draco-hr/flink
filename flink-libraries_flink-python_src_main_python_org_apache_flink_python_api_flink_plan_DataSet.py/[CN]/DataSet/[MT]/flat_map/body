def flat_map(self, operator, types):
    '\n        Applies a FlatMap transformation on a DataSet.\n\n        The transformation calls a FlatMapFunction for each element of the DataSet.\n        Each FlatMapFunction call can return any number of elements including none.\n\n        :param operator: The FlatMapFunction that is called for each element of the DataSet.\n        :param types: The type of the resulting DataSet.\n        :return:A FlatMapOperator that represents the transformed DataSe\n        '
    if isinstance(operator, TYPES.FunctionType):
        f = operator
        operator = FlatMapFunction()
        operator.flat_map = f
    child = OperationInfo()
    child_set = OperatorSet(self._env, child)
    child.identifier = _Identifier.FLATMAP
    child.parent = self._info
    child.operator = operator
    child.meta = ((str(inspect.getmodule(operator)) + '|') + str(operator.__class__.__name__))
    child.types = types
    child.name = 'PythonFlatMap'
    self._info.children.append(child)
    self._env._sets.append(child)
    return child_set
