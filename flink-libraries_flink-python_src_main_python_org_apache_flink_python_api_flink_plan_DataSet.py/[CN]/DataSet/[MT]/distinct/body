def distinct(self, *fields):
    '\n        Returns a distinct set of a tuple DataSet using field position keys.\n\n        :param fields: One or more field positions on which the distinction of the DataSet is decided.\n        :return: The distinct DataSet.\n        '
    f = None
    if (len(fields) == 0):
        f = (lambda x: (x,))
        fields = (0,)
    if isinstance(fields[0], TYPES.FunctionType):
        f = (lambda x: (fields[0](x),))
    if isinstance(fields[0], KeySelectorFunction):
        f = (lambda x: (fields[0].get_key(x),))
    if (f is None):
        f = (lambda x: tuple([x[key] for key in fields]))
    return self.map((lambda x: (f(x), x))).name('DistinctPreStep')._distinct(tuple([x for x in range(len(fields))]))
