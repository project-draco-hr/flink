{
  AbstractInvokable memOwner=new DummyInvokable();
  MemorySegment memory=memoryManager.allocate(memOwner,MEMORY_SIZE);
  int writtenPairs=0, readPairs=0;
{
    TestData.Generator generator=new TestData.Generator(SEED,KEY_MAX,VALUE_LENGTH,KeyMode.SORTED,ValueMode.FIX_LENGTH);
    BufferSortableGuaranteed buffer=newSortBuffer(memory);
    int writtenBytes=0;
    PactRecord rec=new PactRecord();
    Assert.assertTrue(generator.next(rec));
    while (buffer.write(rec)) {
      writtenBytes+=generator.sizeOf(rec) + Integer.SIZE / 8;
      writtenPairs++;
      Assert.assertTrue(generator.next(rec));
    }
    LOG.debug("Written " + writtenPairs + " pairs to buffer which occupied "+ writtenBytes+ " of "+ MEMORY_SIZE+ " bytes.");
    final MutableObjectIterator<PactRecord> iter=buffer.getIterator();
    while (iter.next(rec)) {
      readPairs++;
    }
    memory=buffer.unbind();
    Assert.assertEquals(writtenPairs,readPairs);
  }
  memoryManager.release(memory);
}
