{
  double hashjoinMemorySize=config.getRelativeSolutionSetMemory();
  TypeSerializerFactory<BT> solutionTypeSerializerFactory=config.getSolutionSetSerializer(userCodeClassLoader);
  TypeComparatorFactory<BT> solutionTypeComparatorFactory=config.getSolutionSetComparator(userCodeClassLoader);
  TypeSerializer<BT> solutionTypeSerializer=solutionTypeSerializerFactory.getSerializer();
  TypeComparator<BT> solutionTypeComparator=solutionTypeComparatorFactory.createComparator();
  CompactingHashTable<BT> hashTable=null;
  List<MemorySegment> memSegments=null;
  boolean success=false;
  try {
    int numPages=getMemoryManager().computeNumberOfPages(hashjoinMemorySize);
    memSegments=getMemoryManager().allocatePages(getOwningNepheleTask(),numPages);
    hashTable=new CompactingHashTable<BT>(solutionTypeSerializer,solutionTypeComparator,memSegments);
    success=true;
    return hashTable;
  }
  finally {
    if (!success) {
      if (hashTable != null) {
        try {
          hashTable.close();
        }
 catch (        Throwable t) {
          log.error("Error closing the solution set hash table after unsuccessful creation.",t);
        }
      }
      if (memSegments != null) {
        try {
          getMemoryManager().release(memSegments);
        }
 catch (        Throwable t) {
          log.error("Error freeing memory after error during solution set hash table creation.",t);
        }
      }
    }
  }
}
