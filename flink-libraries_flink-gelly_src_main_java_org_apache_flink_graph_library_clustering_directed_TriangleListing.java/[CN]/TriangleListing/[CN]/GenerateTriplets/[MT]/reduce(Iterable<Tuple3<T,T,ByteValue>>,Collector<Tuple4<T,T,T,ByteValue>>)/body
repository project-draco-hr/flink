{
  int visitedCount=0;
  Iterator<Tuple3<T,T,ByteValue>> iter=values.iterator();
  while (true) {
    Tuple3<T,T,ByteValue> edge=iter.next();
    byte bitmask=edge.f2.getValue();
    output.f0=edge.f0;
    output.f2=edge.f1;
    for (int i=0; i < visitedCount; i++) {
      Tuple2<T,ByteValue> previous=visited.get(i);
      output.f1=previous.f0;
      output.f3.setValue((byte)(previous.f1.getValue() | bitmask));
      out.collect(output);
    }
    if (!iter.hasNext()) {
      break;
    }
    byte shiftedBitmask=(byte)(bitmask << 2);
    if (visitedCount == visited.size()) {
      visited.add(new Tuple2<>(edge.f1.copy(),new ByteValue(shiftedBitmask)));
    }
 else {
      Tuple2<T,ByteValue> update=visited.get(visitedCount);
      edge.f1.copyTo(update.f0);
      update.f1.setValue(shiftedBitmask);
    }
    visitedCount+=1;
  }
}
