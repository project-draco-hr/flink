{
  boolean groupingFulfilled=false;
  if (this.grouped) {
    if (other.isGrouped()) {
      groupingFulfilled=this.groupedFields.equals(other.groupedFields);
    }
    if (!groupingFulfilled && other.getOrdering() != null) {
      ArrayList<Integer> otherIndexes=other.getOrdering().getInvolvedIndexes();
      if (groupedFields.size() > otherIndexes.size()) {
        return false;
      }
      for (int i=0; i < groupedFields.size(); i++) {
        if (groupedFields.contains(otherIndexes.get(i)) == false) {
          return false;
        }
      }
      groupingFulfilled=true;
    }
    if (groupingFulfilled == false) {
      return false;
    }
  }
  if (this.ordering != null && this.ordering.isMetBy(other.getOrdering()) == false) {
    return false;
  }
  if (this.uniqueFields != null) {
    if (other.uniqueFields == null) {
      return false;
    }
    for (    FieldSet requiredUniqueField : this.uniqueFields) {
      boolean found=false;
      for (      FieldSet actualUniqueField : other.uniqueFields) {
        if (actualUniqueField.containsAll(requiredUniqueField)) {
          found=true;
          break;
        }
      }
      if (found == false) {
        return false;
      }
    }
  }
  return true;
}
