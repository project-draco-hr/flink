{
  if (ordering != null) {
    ArrayList<Integer> involvedIndexes=ordering.getInvolvedIndexes();
    for (int i=0; i < involvedIndexes.size(); i++) {
      if (node.isFieldKept(input,i) == false) {
        ordering=ordering.createNewOrderingUpToIndex(i);
        break;
      }
    }
  }
  if (this.groupedFields != null) {
    for (    Integer index : this.groupedFields) {
      if (node.isFieldKept(input,index) == false) {
        this.groupedFields=null;
        this.grouped=false;
        break;
      }
    }
  }
 else {
    this.grouped=false;
  }
  if (this.uniqueFields != null) {
    if (node.getStubOutCardUpperBound() > 1) {
      this.uniqueFields=null;
    }
 else {
      Iterator<FieldSet> uniqueFieldIterator=this.uniqueFields.iterator();
      while (uniqueFieldIterator.hasNext()) {
        FieldSet uniqueField=uniqueFieldIterator.next();
        boolean isKept=true;
        for (        Integer field : uniqueField) {
          if (node.isFieldKept(input,field) == false) {
            isKept=false;
            break;
          }
        }
        if (isKept == false) {
          uniqueFieldIterator.remove();
        }
      }
      if (this.uniqueFields.size() == 0) {
        this.uniqueFields=null;
      }
    }
  }
  return !isTrivial();
}
