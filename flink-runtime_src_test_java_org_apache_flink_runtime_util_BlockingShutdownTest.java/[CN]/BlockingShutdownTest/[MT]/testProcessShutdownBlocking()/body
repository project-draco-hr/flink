{
  assumeTrue(OperatingSystem.isLinux());
  CommonTestUtils.assumeJava8();
  final File markerFile=new File(EnvironmentInformation.getTemporaryFileDirectory(),UUID.randomUUID() + ".marker");
  final BlockingShutdownProcess blockingProcess=new BlockingShutdownProcess(markerFile.getAbsolutePath(),0,false);
  try {
    blockingProcess.startProcess();
    long pid=blockingProcess.getProcessId();
    assertTrue("Cannot determine process ID",pid != -1);
    TestJvmProcess.waitForMarkerFile(markerFile,30000);
    Process kill=Runtime.getRuntime().exec("kill " + pid);
    kill.waitFor();
    assertEquals("failed to send SIG_TERM to process",0,kill.exitValue());
    Thread.sleep(50);
    assertTrue("Test broken, process shutdown blocking does not work",blockingProcess.isAlive());
  }
  finally {
    blockingProcess.destroy();
    markerFile.delete();
  }
}
