{
  List<Object> id=tuple.select(idFields);
  GlobalStreamId streamId=new GlobalStreamId(tuple.getSourceComponent(),tuple.getSourceStreamId());
  if (!pending.containsKey(id)) {
    pending.put(id,new HashMap<GlobalStreamId,Tuple>());
  }
  Map<GlobalStreamId,Tuple> parts=pending.get(id);
  if (parts.containsKey(streamId)) {
    throw new RuntimeException("Received same side of single join twice");
  }
  parts.put(streamId,tuple);
  if (parts.size() == numSources) {
    pending.remove(id);
    List<Object> joinResult=new ArrayList<Object>();
    for (    String outField : outFields) {
      GlobalStreamId loc=fieldLocations.get(outField);
      joinResult.add(parts.get(loc).getValueByField(outField));
    }
    collector.emit(new ArrayList<Tuple>(parts.values()),joinResult);
    for (    Tuple part : parts.values()) {
      collector.ack(part);
    }
  }
}
