{
  for (  PlanNode s : sinks) {
    s.accept(this);
  }
  if (g.hasCycle()) {
    for (    DeadlockVertex v : g.vertices) {
      if (v.getOriginal().getDriverStrategy().equals(DriverStrategy.HYBRIDHASH_BUILD_FIRST)) {
        v.getOriginal().setDriverStrategy(DriverStrategy.HYBRIDHASH_BUILD_SECOND);
        if (hasDeadlock(sinks)) {
          v.getOriginal().setDriverStrategy(DriverStrategy.HYBRIDHASH_BUILD_FIRST);
        }
 else {
          break;
        }
      }
      if (v.getOriginal().getDriverStrategy().equals(DriverStrategy.HYBRIDHASH_BUILD_SECOND)) {
        v.getOriginal().setDriverStrategy(DriverStrategy.HYBRIDHASH_BUILD_FIRST);
        if (hasDeadlock(sinks)) {
          v.getOriginal().setDriverStrategy(DriverStrategy.HYBRIDHASH_BUILD_SECOND);
        }
 else {
          break;
        }
      }
    }
    for (    DeadlockVertex v : g.vertices) {
      if (v.getOriginal() instanceof DualInputPlanNode) {
        DualInputPlanNode n=(DualInputPlanNode)v.getOriginal();
        if (!(n.getDriverStrategy().firstDam().equals(DamBehavior.FULL_DAM) || n.getInput1().getLocalStrategy().dams() || n.getInput1().getTempMode().breaksPipeline()) && (n.getDriverStrategy().secondDam().equals(DamBehavior.FULL_DAM) || n.getInput2().getLocalStrategy().dams() || n.getInput2().getTempMode().breaksPipeline())) {
          n.getInput1().setTempMode(n.getInput1().getTempMode().makePipelineBreaker());
        }
 else         if (!(n.getDriverStrategy().secondDam().equals(DamBehavior.FULL_DAM) || n.getInput2().getLocalStrategy().dams() || n.getInput2().getTempMode().breaksPipeline()) && (n.getDriverStrategy().firstDam().equals(DamBehavior.FULL_DAM) || n.getInput1().getLocalStrategy().dams() || n.getInput1().getTempMode().breaksPipeline())) {
          n.getInput2().setTempMode(n.getInput2().getTempMode().makePipelineBreaker());
        }
        if (!hasDeadlock(sinks)) {
          break;
        }
      }
    }
  }
}
