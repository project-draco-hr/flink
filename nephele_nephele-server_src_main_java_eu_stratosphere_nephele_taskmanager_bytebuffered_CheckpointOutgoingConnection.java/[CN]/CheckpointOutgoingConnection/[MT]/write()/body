{
  if (!this.isConnected) {
    this.retriesLeft=this.numberOfConnectionRetries;
    this.timstampOfLastRetry=System.currentTimeMillis();
    this.connectionThread.triggerConnect(this);
    this.isConnected=true;
    this.isSubscribedToWriteEvent=true;
  }
 else {
    if (!this.isSubscribedToWriteEvent) {
      this.connectionThread.subscribeToWriteEvent(this.selectionKey);
      this.isSubscribedToWriteEvent=true;
    }
  }
  final WritableByteChannel writableByteChannel=(WritableByteChannel)this.selectionKey.channel();
  LOG.info("position" + this.readableByteChannel.position() + " transfered "+ this.eof);
  LOG.info(this.readableByteChannel.size());
  this.eof=this.readableByteChannel.transferTo(this.bytesread,this.readableByteChannel.size(),writableByteChannel);
  if (this.eof == 0) {
    if (this.finished && this.readableByteChannel.size() == this.bytesread) {
      throw new EOFException();
    }
    try {
      Thread.sleep(2000);
    }
 catch (    InterruptedException e) {
      e.printStackTrace();
    }
  }
  LOG.info(" transfered " + this.eof + " ALL "+ this.bytesread);
  this.bytesread+=this.eof;
  return true;
}
