{
  if (allocatedResource == null) {
    LOG.error("Resource to lock is null!");
    return;
  }
  if (allocatedResource.getInstance() instanceof DummyInstance) {
    LOG.debug("Available instance is of type DummyInstance!");
    return;
  }
  final List<ExecutionVertex> assignedVertices=executionGraph.getVerticesAssignedToResource(allocatedResource);
  if (assignedVertices.isEmpty()) {
    return;
  }
synchronized (this.jobQueue) {
    boolean instanceCanBeReleased=true;
    final Iterator<ExecutionVertex> it=assignedVertices.iterator();
    while (it.hasNext()) {
      final ExecutionVertex vertex=it.next();
      final ExecutionState state=vertex.getExecutionState();
      if (state == ExecutionState.ASSIGNED || state == ExecutionState.READY || state == ExecutionState.RUNNING || state == ExecutionState.FINISHING || state == ExecutionState.CANCELING) {
        instanceCanBeReleased=false;
        break;
      }
    }
    if (instanceCanBeReleased) {
      LOG.info("Releasing instance " + allocatedResource.getInstance());
      try {
        getInstanceManager().releaseAllocatedResource(executionGraph.getJobID(),executionGraph.getJobConfiguration(),allocatedResource);
      }
 catch (      InstanceException e) {
        LOG.error(StringUtils.stringifyException(e));
      }
    }
  }
}
