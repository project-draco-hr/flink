{
  try {
    Object[] params=paramNodes;
    final Class<?>[] parameterTypes=this.getParameterTypes(method);
    if (this.isVarargs(method)) {
      final int varArgIndex=parameterTypes.length - 1;
      final int varArgCount=paramNodes.length - varArgIndex;
      final Object vararg=Array.newInstance(parameterTypes[varArgIndex].getComponentType(),varArgCount);
      for (int index=0; index < varArgCount; index++)       Array.set(vararg,index,paramNodes[varArgIndex + index]);
      params=new Object[parameterTypes.length];
      System.arraycopy(paramNodes,0,params,0,varArgIndex);
      params[varArgIndex]=vararg;
    }
 else     if (parameterTypes.length == 1 && params.length != 1)     params=new Object[]{params};
    return this.invokeDirectly(method,context,params);
  }
 catch (  final Exception e) {
    throw new EvaluationException("Cannot invoke " + this.getName() + " with "+ Arrays.toString(paramNodes),e);
  }
}
