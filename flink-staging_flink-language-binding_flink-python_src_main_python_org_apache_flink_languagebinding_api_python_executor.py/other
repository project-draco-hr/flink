import sys
import socket
import struct
s = None
try:
    import dill
    port = int(sys.argv[1])
    s = socket.socket(family=socket.AF_INET, type=socket.SOCK_STREAM)
    s.connect((socket.gethostbyname('localhost'), port))
    size = struct.unpack('>i', s.recv(4, socket.MSG_WAITALL))[0]
    serialized_operator = s.recv(size, socket.MSG_WAITALL)
    size = struct.unpack('>i', s.recv(4, socket.MSG_WAITALL))[0]
    import_string = s.recv(size, socket.MSG_WAITALL).decode('utf-8')
    size = struct.unpack('>i', s.recv(4, socket.MSG_WAITALL))[0]
    input_file = s.recv(size, socket.MSG_WAITALL).decode('utf-8')
    size = struct.unpack('>i', s.recv(4, socket.MSG_WAITALL))[0]
    output_file = s.recv(size, socket.MSG_WAITALL).decode('utf-8')
    exec import_string
    operator = dill.loads(serialized_operator)
    operator._configure(input_file, output_file, s)
    operator._go()
    sys.stdout.flush()
    sys.stderr.flush()
except:
    sys.stdout.flush()
    sys.stderr.flush()
    s.send(struct.pack('>i', (-2)))
    raise
