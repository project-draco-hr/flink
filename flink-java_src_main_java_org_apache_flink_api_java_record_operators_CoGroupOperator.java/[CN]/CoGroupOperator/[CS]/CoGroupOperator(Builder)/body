{
  super(builder.udf,OperatorInfoHelper.binary(),builder.getKeyColumnsArray1(),builder.getKeyColumnsArray2(),builder.name);
  this.keyTypes=builder.getKeyClassesArray();
  if (builder.inputs1 != null && !builder.inputs1.isEmpty()) {
    setFirstInput(Operator.createUnionCascade(builder.inputs1));
  }
  if (builder.inputs2 != null && !builder.inputs2.isEmpty()) {
    setSecondInput(Operator.createUnionCascade(builder.inputs2));
  }
  if (input1 instanceof DeltaIteration.SolutionSetPlaceHolder) {
    int[] positions=getKeyColumns(0);
    ((DeltaIteration.SolutionSetPlaceHolder)input1).checkJoinKeyFields(positions);
  }
  if (input2 instanceof DeltaIteration.SolutionSetPlaceHolder) {
    int[] positions=getKeyColumns(1);
    ((DeltaIteration.SolutionSetPlaceHolder)input2).checkJoinKeyFields(positions);
  }
  setBroadcastVariables(builder.broadcastInputs);
  setGroupOrderForInputOne(builder.secondaryOrder1);
  setGroupOrderForInputTwo(builder.secondaryOrder2);
  CoGroupFunction function=((WrappingCoGroupFunction)builder.udf.getUserCodeObject()).getWrappedFunction();
  setSemanticProperties(FunctionAnnotation.readDualConstantAnnotations(new UserCodeObjectWrapper<CoGroupFunction>(function)));
}
