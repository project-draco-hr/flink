{
  Contract in1=this.addKeyExtraction(module,(Path)comparison.getElementExpr());
  Contract in2=this.addKeyExtraction(module,(Path)comparison.getSetExpr());
  DualInputContract<PactJsonObject.Key,PactJsonObject,PactJsonObject.Key,PactJsonObject,PactNull,PactJsonObject> join=null;
  if (comparison.isNotIn())   join=new CoGroupContract<PactJsonObject.Key,PactJsonObject,PactJsonObject,PactNull,PactJsonObject>(AntiJoinStub.class);
 else   join=new CoGroupContract<PactJsonObject.Key,PactJsonObject,PactJsonObject,PactNull,PactJsonObject>(SemiJoinStub.class);
  module.getOutput(0).setInput(join);
  join.setFirstInput(in1);
  join.setSecondInput(in2);
  return join;
}
