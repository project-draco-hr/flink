{
  try {
    Class<?> clazz=Class.forName("com.sun.management.OperatingSystemMXBean");
    Method method=clazz.getMethod("getTotalPhysicalMemorySize");
    OperatingSystemMXBean operatingSystemMXBean=ManagementFactory.getOperatingSystemMXBean();
    if (clazz.isInstance(operatingSystemMXBean)) {
      return (Long)method.invoke(operatingSystemMXBean);
    }
  }
 catch (  ClassNotFoundException e) {
  }
catch (  NoSuchMethodException|IllegalAccessException|InvocationTargetException e) {
    LOG.warn("Access to physical memory size: " + "com.sun.management.OperatingSystemMXBean incompatibly changed.",e);
  }
switch (OperatingSystem.getCurrentOperatingSystem()) {
case LINUX:
    return getSizeOfPhysicalMemoryForLinux();
case WINDOWS:
  return getSizeOfPhysicalMemoryForWindows();
case MAC_OS:
return getSizeOfPhysicalMemoryForMac();
case FREE_BSD:
return getSizeOfPhysicalMemoryForFreeBSD();
case UNKNOWN:
LOG.error("Cannot determine size of physical memory for unknown operating system");
return -1;
default :
LOG.error("Unrecognized OS: " + OperatingSystem.getCurrentOperatingSystem());
return -1;
}
}
