{
  Throwable ex=null;
synchronized (this) {
    if (closed) {
      return;
    }
    closed=true;
    if (recordsOutFile != null) {
      try {
        recordsOutFile.close();
        recordsOutFile=null;
      }
 catch (      Throwable t) {
        LOG.error("Cannot close the large records spill file.",t);
        ex=ex == null ? t : ex;
      }
    }
    if (keysOutFile != null) {
      try {
        keysOutFile.close();
        keysOutFile=null;
      }
 catch (      Throwable t) {
        LOG.error("Cannot close the large records key spill file.",t);
        ex=ex == null ? t : ex;
      }
    }
    if (recordsReader != null) {
      try {
        recordsReader.close();
        recordsReader=null;
      }
 catch (      Throwable t) {
        LOG.error("Cannot close the large records reader.",t);
        ex=ex == null ? t : ex;
      }
    }
    if (keysReader != null) {
      try {
        keysReader.close();
        keysReader=null;
      }
 catch (      Throwable t) {
        LOG.error("Cannot close the large records key reader.",t);
        ex=ex == null ? t : ex;
      }
    }
    if (recordsChannel != null) {
      try {
        ioManager.deleteChannel(recordsChannel);
        recordsChannel=null;
      }
 catch (      Throwable t) {
        LOG.error("Cannot delete the large records spill file.",t);
        ex=ex == null ? t : ex;
      }
    }
    if (keysChannel != null) {
      try {
        ioManager.deleteChannel(keysChannel);
        keysChannel=null;
      }
 catch (      Throwable t) {
        LOG.error("Cannot delete the large records key spill file.",t);
        ex=ex == null ? t : ex;
      }
    }
    if (keySorter != null) {
      try {
        keySorter.close();
        keySorter=null;
      }
 catch (      Throwable t) {
        LOG.error("Cannot properly dispose the key sorter and clean up its temporary files.",t);
        ex=ex == null ? t : ex;
      }
    }
    memManager.release(memory);
    recordCounter=0;
  }
  if (ex != null) {
    throw new IOException("An error occurred cleaning up spill files in the large record handler.",ex);
  }
}
