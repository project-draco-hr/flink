{
  try {
    Field unsafeField=sun.misc.Unsafe.class.getDeclaredField("theUnsafe");
    unsafeField.setAccessible(true);
    return (sun.misc.Unsafe)unsafeField.get(null);
  }
 catch (  SecurityException e) {
    throw new RuntimeException("Could not access the unsafe handle.",e);
  }
catch (  NoSuchFieldException e) {
    throw new RuntimeException("The static unsafe handle field was not be found.");
  }
catch (  IllegalArgumentException e) {
    throw new RuntimeException("Bug: Illegal argument reflection access for static field.");
  }
catch (  IllegalAccessException e) {
    throw new RuntimeException("Access to the unsafe handle is forbidden by the runtime.",e);
  }
}
