{
  if (!this.checkpointFinished) {
    LOG.error("Checkpoint is not finished!");
  }
  if (this.fileChannel.isOpen()) {
    LOG.error("File channel is still open!");
  }
  final String filename=getFilename();
  FileInputStream fis=null;
  try {
    fis=new FileInputStream(filename);
  }
 catch (  IOException ioe) {
    LOG.error(ioe);
    return;
  }
  try {
    fileBufferManager.registerExternalDataSourceForChannel(this.sourceChannelID,filename);
  }
 catch (  IOException ioe) {
    LOG.error(ioe);
  }
  this.fileChannel=fis.getChannel();
  final IncomingConnectionID connectionID=new IncomingConnectionID(filename);
  final IncomingConnection incomingConnection=networkConnectionManager.registerIncomingConnection(connectionID,this.fileChannel);
  try {
    while (true) {
      incomingConnection.read();
    }
  }
 catch (  EOFException e) {
  }
catch (  IOException e) {
    incomingConnection.reportTransmissionProblem(null,e);
    return;
  }
  incomingConnection.closeConnection(null);
}
