{
  if (!this.checkpointFinished) {
    LOG.error("Checkpoint is not finished!");
  }
  if (this.fileChannel.isOpen()) {
    LOG.error("File channel is still open!");
  }
  final String filename=getFilename();
  FileInputStream fis=null;
  try {
    fis=new FileInputStream(filename);
  }
 catch (  IOException ioe) {
    LOG.info("IO in new FileInputstream");
    LOG.error(ioe);
    return;
  }
  try {
    byteBufferedChannelManager.getFileBufferManager().registerExternalDataSourceForChannel(this.sourceChannelID,filename);
  }
 catch (  IOException ioe) {
    LOG.error(ioe);
  }
  this.fileInputChannel=fis.getChannel();
  if (this.fileInputChannel == null) {
    LOG.error("FileChannel is null");
  }
  System.out.println("Recovering from " + filename);
  final CheckpointOutgoingConnection outgoingConnection=byteBufferedChannelManager.createOutgoingCheckpointConnection(byteBufferedChannelManager,this.fileInputChannel,this.sourceChannelID);
  try {
    while (true) {
      outgoingConnection.write();
    }
  }
 catch (  EOFException e) {
  }
catch (  IOException e) {
    e.printStackTrace();
    outgoingConnection.reportTransmissionProblem(e);
    return;
  }
  try {
    outgoingConnection.closeConnection();
  }
 catch (  IOException e) {
    e.printStackTrace();
  }
}
