{
  String action=req.getParameter(ACTION_PARAM_NAME);
  if (action.equals(ACTION_LIST_VALUE)) {
    GregorianCalendar cal=new GregorianCalendar();
    File[] files=destinationDir.listFiles();
    Arrays.<File>sort(files,FILE_SORTER);
    resp.setStatus(HttpServletResponse.SC_OK);
    resp.setContentType(CONTENT_TYPE_PLAIN);
    PrintWriter writer=resp.getWriter();
    for (int i=0; i < files.length; i++) {
      if (!files[i].getName().endsWith(".jar")) {
        continue;
      }
      cal.setTimeInMillis(files[i].lastModified());
      writer.println(files[i].getName() + '\t' + (cal.get(GregorianCalendar.MONTH) + 1)+ '/'+ cal.get(GregorianCalendar.DAY_OF_MONTH)+ '/'+ cal.get(GregorianCalendar.YEAR)+ ' '+ cal.get(GregorianCalendar.HOUR_OF_DAY)+ ':'+ cal.get(GregorianCalendar.MINUTE)+ ':'+ cal.get(GregorianCalendar.SECOND));
    }
  }
 else   if (action.equals(ACTION_DELETE_VALUE)) {
    String filename=req.getParameter(FILENAME_PARAM_NAME);
    if (filename == null || filename.length() == 0) {
      resp.setStatus(HttpServletResponse.SC_BAD_REQUEST);
    }
 else {
      File f=new File(destinationDir,filename);
      if (!f.exists() || f.isDirectory()) {
        resp.setStatus(HttpServletResponse.SC_NOT_FOUND);
      }
      f.delete();
      resp.setStatus(HttpServletResponse.SC_OK);
    }
  }
 else {
    resp.setStatus(HttpServletResponse.SC_BAD_REQUEST);
  }
}
