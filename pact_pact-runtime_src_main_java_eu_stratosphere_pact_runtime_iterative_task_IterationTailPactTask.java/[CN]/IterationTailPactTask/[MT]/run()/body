{
  final BlockingBackChannel backChannel=retrieveBackChannel();
  final TypeSerializerFactory<OT> outSerializerFact=this.config.getOutputSerializer(this.userCodeClassLoader);
  if (outSerializerFact == null) {
    throw new Exception("Error: Missing serializer for tail result!");
  }
  final TypeSerializer<OT> serializer=outSerializerFact.getSerializer();
  final DataOutputCollector<OT> outputCollector=new DataOutputCollector<OT>(backChannel.getWriteEnd(),serializer);
  this.output=outputCollector;
  while (this.running && !terminationRequested()) {
    if (log.isInfoEnabled()) {
      log.info(formatLogString("starting iteration [" + currentIteration() + "]"));
    }
    super.run();
    @SuppressWarnings("unused") long elementsCollected=outputCollector.getElementsCollectedAndReset();
    if (log.isInfoEnabled()) {
      log.info(formatLogString("finishing iteration [" + currentIteration() + "]"));
    }
    if (!terminationRequested()) {
      backChannel.notifyOfEndOfSuperstep();
      incrementIterationCounter();
    }
  }
}
