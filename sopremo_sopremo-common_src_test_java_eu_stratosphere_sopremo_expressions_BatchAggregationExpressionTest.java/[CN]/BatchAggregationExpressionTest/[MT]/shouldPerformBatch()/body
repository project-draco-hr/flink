{
  final BatchAggregationExpression batch=new BatchAggregationExpression(DefaultFunctions.SUM);
  batch.add(DefaultFunctions.AVERAGE);
  batch.add(DefaultFunctions.AVERAGE,new ArithmeticExpression(EvaluationExpression.VALUE,ArithmeticOperator.MULTIPLICATION,EvaluationExpression.VALUE));
  final IJsonNode result=batch.evaluate(createArrayNode(2,3,4,5,1),null,this.context);
  Assert.assertTrue(result instanceof IArrayNode);
  final IArrayNode resultArray=(IArrayNode)result;
  final double[] doubleResult=new double[resultArray.size()];
  for (int index=0; index < doubleResult.length; index++) {
    Assert.assertTrue(resultArray.get(index) instanceof INumericNode);
    doubleResult[index]=((INumericNode)resultArray.get(index)).getDoubleValue();
  }
  final double[] expected={1 + 2 + 3+ 4+ 5,(double)(1 + 2 + 3+ 4+ 5) / 5,(double)(1 * 1 + 2 * 2 + 3 * 3 + 4 * 4 + 5 * 5) / 5};
  Assert.assertTrue(Arrays.equals(expected,doubleResult));
}
