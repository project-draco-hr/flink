{
  final String[] ranges=rangeDefinition.trim().split(",");
  UnionIterator<Integer> iterators=new UnionIterator<>();
  for (  String rawRange : ranges) {
    Iterator<Integer> rangeIterator;
    String range=rawRange.trim();
    int dashIdx=range.indexOf('-');
    if (dashIdx == -1) {
      rangeIterator=Collections.singleton(Integer.valueOf(range)).iterator();
    }
 else {
      final int start=Integer.valueOf(range.substring(0,dashIdx));
      final int end=Integer.valueOf(range.substring(dashIdx + 1,range.length()));
      rangeIterator=new Iterator<Integer>(){
        int i=start;
        @Override public boolean hasNext(){
          return i <= end;
        }
        @Override public Integer next(){
          return i++;
        }
        @Override public void remove(){
          throw new UnsupportedOperationException("Remove not supported");
        }
      }
;
    }
    iterators.add(rangeIterator);
  }
  return iterators;
}
