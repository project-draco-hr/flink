{
  DataSourceContract<PactInteger,PactInteger> source=new DataSourceContract<PactInteger,PactInteger>(IntegerInputFormat.class,"hdfs://localhost:50090/smallZipf");
  MapContract<PactInteger,PactInteger,PactInteger,PactInteger> sample=new MapContract<PactInteger,PactInteger,PactInteger,PactInteger>(AdaptiveSampleStub.class);
  sample.setDegreeOfParallelism(1);
  MapContract<PactInteger,PactInteger,PactInteger,PactInteger> sort=new MapContract<PactInteger,PactInteger,PactInteger,PactInteger>(SortStub.class);
  sort.setDegreeOfParallelism(1);
  ReduceContract<PactInteger,PactInteger,PactInteger,PactInteger> histogram=new ReduceContract<PactInteger,PactInteger,PactInteger,PactInteger>(HistogramStub.class);
  histogram.setDegreeOfParallelism(1);
  DataSinkContract<PactInteger,PactInteger> sink=new DataSinkContract<PactInteger,PactInteger>(IntegerOutputFormat.class,"hdfs://localhost:50090/histo");
  sink.setDegreeOfParallelism(1);
  sink.setInput(histogram);
  histogram.setInput(sort);
  sort.setInput(sample);
  sample.setInput(source);
  Plan p=new Plan(sink,"Histogram Test");
  return p;
}
