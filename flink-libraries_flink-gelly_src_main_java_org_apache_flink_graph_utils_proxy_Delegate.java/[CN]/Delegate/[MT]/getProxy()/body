{
  if (proxy != null) {
    return proxy;
  }
  ProxyFactory factory=new ProxyFactory();
  factory.setSuperclass(obj.getClass());
  Class<? extends X> proxyClass=factory.createClass(new MethodFilter(){
    @Override public boolean isHandled(    Method method){
      return true;
    }
  }
);
  proxy=new ObjenesisStd().newInstance(proxyClass);
  ((ProxyObject)proxy).setHandler(new MethodHandler(){
    @Override public Object invoke(    Object self,    Method thisMethod,    Method proceed,    Object[] args) throws Throwable {
      thisMethod.setAccessible(true);
      return thisMethod.invoke(obj,args);
    }
  }
);
  return proxy;
}
