{
  StringRecord.writeString(out,this.instanceType);
  out.writeInt(this.numberOfSubtasks);
  out.writeInt(this.numberOfSubtasksPerInstance);
  if (this.vertexToShareInstancesWith != null) {
    out.writeBoolean(true);
    this.vertexToShareInstancesWith.getID().write(out);
  }
 else {
    out.writeBoolean(false);
  }
  this.configuration.write(out);
  out.writeInt(this.forwardEdges.size());
  for (int i=0; i < this.forwardEdges.size(); i++) {
    final JobEdge edge=this.forwardEdges.get(i);
    if (edge == null) {
      out.writeBoolean(false);
    }
 else {
      out.writeBoolean(true);
      edge.getConnectedVertex().getID().write(out);
      EnumUtils.writeEnum(out,edge.getChannelType());
      EnumUtils.writeEnum(out,edge.getCompressionLevel());
      out.writeInt(edge.getIndexOfInputGate());
    }
  }
  if (this.invokableClass == null) {
    out.writeBoolean(false);
    return;
  }
  out.writeBoolean(true);
  StringRecord.writeString(out,this.invokableClass.getName());
}
