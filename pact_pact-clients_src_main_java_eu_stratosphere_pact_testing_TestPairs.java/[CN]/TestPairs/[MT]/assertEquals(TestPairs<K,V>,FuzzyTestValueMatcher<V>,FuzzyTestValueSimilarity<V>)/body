{
  final Iterator<KeyValuePair<K,V>> actualIterator=this.iterator();
  final Iterator<KeyValuePair<K,V>> expectedIterator=expectedValues.iterator();
  K currentKey=null;
  int itemIndex=0;
  List<V> expectedValuesWithCurrentKey=new ArrayList<V>();
  List<V> actualValuesWithCurrentKey=new ArrayList<V>();
  while (actualIterator.hasNext() && expectedIterator.hasNext()) {
    final KeyValuePair<K,V> expected=expectedIterator.next();
    if (currentKey == null)     currentKey=expected.getKey();
 else     if (expected.getKey().compareTo(currentKey) != 0)     matchValues(actualIterator,currentKey,itemIndex,expectedValuesWithCurrentKey,actualValuesWithCurrentKey,fuzzyMatcher,fuzzySimilarity);
    expectedValuesWithCurrentKey.add(expected.getValue());
    itemIndex++;
  }
  if (!expectedValuesWithCurrentKey.isEmpty())   matchValues(actualIterator,currentKey,itemIndex,expectedValuesWithCurrentKey,actualValuesWithCurrentKey,fuzzyMatcher,fuzzySimilarity);
  if (!expectedValuesWithCurrentKey.isEmpty() || expectedIterator.hasNext())   Assert.fail("More elements expected: " + expectedValuesWithCurrentKey + toString(expectedIterator));
  if (!actualValuesWithCurrentKey.isEmpty() || actualIterator.hasNext())   Assert.fail("Less elements expected: " + actualValuesWithCurrentKey + toString(actualIterator));
  close();
  expectedValues.close();
}
