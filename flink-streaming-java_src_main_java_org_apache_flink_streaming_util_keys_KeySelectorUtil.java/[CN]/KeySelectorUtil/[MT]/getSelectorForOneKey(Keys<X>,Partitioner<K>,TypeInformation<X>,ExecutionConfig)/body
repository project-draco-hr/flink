{
  if (!(typeInfo instanceof CompositeType)) {
    throw new InvalidTypesException("This key operation requires a composite type such as Tuples, POJOs, case classes, etc");
  }
  if (partitioner != null) {
    keys.validateCustomPartitioner(partitioner,null);
  }
  CompositeType<X> compositeType=(CompositeType<X>)typeInfo;
  int[] logicalKeyPositions=keys.computeLogicalKeyPositions();
  if (logicalKeyPositions.length != 1) {
    throw new IllegalArgumentException("There must be exactly 1 key specified");
  }
  TypeComparator<X> comparator=compositeType.createComparator(logicalKeyPositions,new boolean[]{true},0,executionConfig);
  return new OneKeySelector<>(comparator);
}
