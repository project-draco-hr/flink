{
  SimpleDistribution dd=new SimpleDistribution(new Key[][]{{new IntValue(1),new StringValue("A"),new IntValue(1)},{new IntValue(2),new StringValue("A"),new IntValue(1)},{new IntValue(3),new StringValue("A"),new IntValue(1)}});
  Assert.assertEquals(3,dd.getNumberOfFields());
  try {
    new SimpleDistribution(new Key[][]{{new IntValue(1),new StringValue("A"),new DoubleValue(1.3d)},{new IntValue(2),new StringValue("B"),new IntValue(1)}});
    Assert.fail("Data distribution accepts incorrect key types");
  }
 catch (  IllegalArgumentException iae) {
  }
  try {
    dd=new SimpleDistribution(new Key[][]{{new IntValue(1),new IntValue(2)},{new IntValue(2),new IntValue(2)},{new IntValue(3)}});
    Assert.fail("Data distribution accepts bucket boundaries with inconsistent many keys");
  }
 catch (  IllegalArgumentException iae) {
  }
}
