{
  FileDataSource sc1=new FileDataSource(new CsvInputFormat(),sc1Path);
  CsvInputFormat.configureRecordFormat(sc1).fieldDelimiter(' ').field(StringValue.class,0).field(IntValue.class,1).field(IntValue.class,2).field(IntValue.class,3);
  FileDataSource sc2=new FileDataSource(new CsvInputFormat(),sc2Path);
  CsvInputFormat.configureRecordFormat(sc2).fieldDelimiter(' ').field(StringValue.class,0).field(IntValue.class,1);
  FileDataSource sc3=new FileDataSource(new CsvInputFormat(),sc3Path);
  CsvInputFormat.configureRecordFormat(sc3).fieldDelimiter(' ').field(StringValue.class,0).field(IntValue.class,1);
  JoinOperator jn1=JoinOperator.builder(Jn1.class,StringValue.class,0,0).input1(sc2).input2(sc3).build();
  JoinOperator jn2=JoinOperator.builder(Jn2.class,StringValue.class,0,0).input1(jn1).input2(sc1).build();
  MapOperator mp1=MapOperator.builder(Mp1.class).input(jn1).build();
  MapOperator mp2=MapOperator.builder(Mp2.class).setBroadcastVariable("z",mp1).input(jn2).build();
  FileDataSink output=new FileDataSink(new ContractITCaseOutputFormat(),resultPath);
  output.setDegreeOfParallelism(1);
  output.setInput(mp2);
  return new Plan(output);
}
