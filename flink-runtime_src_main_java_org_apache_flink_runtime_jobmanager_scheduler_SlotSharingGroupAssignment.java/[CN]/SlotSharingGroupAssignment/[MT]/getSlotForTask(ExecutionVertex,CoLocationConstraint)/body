{
synchronized (lock) {
    SharedSlot shared=constraint.getSharedSlot();
    if (shared != null && !shared.isDead()) {
      SimpleSlot subslot=shared.allocateSubSlot(null);
      subslot.setLocality(Locality.LOCAL);
      return subslot;
    }
 else     if (shared == null) {
      Pair<SharedSlot,Locality> p=getSlotForTaskInternal(constraint.getGroupId(),vertex,vertex.getPreferredLocations(),false);
      if (p == null) {
        return null;
      }
 else {
        shared=p.getLeft();
        Locality l=p.getRight();
        SharedSlot constraintGroupSlot=shared.allocateSharedSlot(constraint.getGroupId());
        SimpleSlot sub=constraintGroupSlot.allocateSubSlot(null);
        sub.setLocality(l);
        if (l != Locality.NON_LOCAL) {
          constraint.setSharedSlot(constraintGroupSlot);
        }
        return sub;
      }
    }
 else {
      Instance location=shared.getInstance();
      Pair<SharedSlot,Locality> p=getSlotForTaskInternal(constraint.getGroupId(),vertex,Collections.singleton(location),true);
      if (p == null) {
        return null;
      }
 else {
        shared=p.getLeft();
        SharedSlot constraintGroupSlot=shared.allocateSharedSlot(constraint.getGroupId());
        constraint.setSharedSlot(constraintGroupSlot);
        SimpleSlot subSlot=constraintGroupSlot.allocateSubSlot(null);
        subSlot.setLocality(Locality.LOCAL);
        return subSlot;
      }
    }
  }
}
