{
  if (allSlots.isEmpty()) {
    return null;
  }
  Map<Instance,List<SharedSlot>> slotsForJid=availableSlotsPerJid.get(jid);
  if (slotsForJid == null) {
    slotsForJid=new LinkedHashMap<Instance,List<SharedSlot>>();
    availableSlotsPerJid.put(jid,slotsForJid);
    for (    SharedSlot availableSlot : allSlots) {
      putIntoMultiMap(slotsForJid,availableSlot.getAllocatedSlot().getInstance(),availableSlot);
    }
  }
 else   if (slotsForJid.isEmpty()) {
    return null;
  }
  if (preferredLocations != null) {
    for (    Instance location : preferredLocations) {
      SharedSlot slot=removeFromMultiMap(slotsForJid,location);
      if (slot != null) {
        return slot.allocateSubSlot(jid);
      }
    }
  }
  SharedSlot slot=pollFromMultiMap(slotsForJid);
  if (slot != null) {
    return slot.allocateSubSlot(jid);
  }
 else {
    return null;
  }
}
