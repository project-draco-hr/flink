{
  byte[] typeNums=new byte[numOfFields];
  for (int i=0; i < typeNums.length; i++) {
    Class<? extends Object> type=tuple.getField(i).getClass();
    if (type.equals(Boolean.class)) {
      typeNums[i]=0;
    }
 else     if (type.equals(Byte.class)) {
      typeNums[i]=1;
    }
 else     if (type.equals(Character.class)) {
      typeNums[i]=2;
    }
 else     if (type.equals(Double.class)) {
      typeNums[i]=3;
    }
 else     if (type.equals(Float.class)) {
      typeNums[i]=4;
    }
 else     if (type.equals(Integer.class)) {
      typeNums[i]=5;
    }
 else     if (type.equals(Long.class)) {
      typeNums[i]=6;
    }
 else     if (type.equals(Short.class)) {
      typeNums[i]=7;
    }
 else     if (type.equals(String.class)) {
      typeNums[i]=8;
    }
  }
  return typeNums;
}
