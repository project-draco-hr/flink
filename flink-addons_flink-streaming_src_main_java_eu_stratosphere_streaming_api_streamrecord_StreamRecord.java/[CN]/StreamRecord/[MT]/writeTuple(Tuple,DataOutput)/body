{
  @SuppressWarnings("rawtypes") Class[] basicTypes=new Class[tuple.getArity()];
  StringBuilder basicTypeNames=new StringBuilder();
  for (int i=0; i < basicTypes.length; i++) {
    basicTypes[i]=tuple.getField(i).getClass();
    basicTypeNames.append(basicTypes[i].getName() + ",");
  }
  TypeInformation<? extends Tuple> typeInfo=TupleTypeInfo.getBasicTupleTypeInfo(basicTypes);
  StringValue typeVal=new StringValue(basicTypeNames.toString());
  @SuppressWarnings("unchecked") TupleSerializer<Tuple> tupleSerializer=(TupleSerializer<Tuple>)typeInfo.createSerializer();
  SerializationDelegate<Tuple> serializationDelegate=new SerializationDelegate<Tuple>(tupleSerializer);
  serializationDelegate.setInstance(tuple);
  try {
    typeVal.write(out);
    serializationDelegate.write(out);
  }
 catch (  IOException e) {
    e.printStackTrace();
  }
}
