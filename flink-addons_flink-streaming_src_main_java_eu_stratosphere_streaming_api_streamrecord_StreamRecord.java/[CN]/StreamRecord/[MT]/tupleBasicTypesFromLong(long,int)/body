{
  int[] typeNums=new int[numberOfFields];
  long multiplyBy=1;
  for (int i=0; i < typeNums.length; i++) {
    typeNums[i]=(int)(representation % 9);
    representation=representation / 9;
  }
  @SuppressWarnings("rawtypes") Class[] basicTypes=new Class[typeNums.length];
  for (int i=0; i < basicTypes.length; i++) {
switch (typeNums[i]) {
case 0:
      basicTypes[i]=java.lang.Boolean.class;
    break;
case 1:
  basicTypes[i]=java.lang.Byte.class;
break;
case 2:
basicTypes[i]=java.lang.Character.class;
break;
case 3:
basicTypes[i]=java.lang.Double.class;
break;
case 4:
basicTypes[i]=java.lang.Float.class;
break;
case 5:
basicTypes[i]=java.lang.Integer.class;
break;
case 6:
basicTypes[i]=java.lang.Long.class;
break;
case 7:
basicTypes[i]=java.lang.Short.class;
break;
case 8:
basicTypes[i]=java.lang.String.class;
break;
default :
basicTypes[i]=java.lang.String.class;
break;
}
}
return basicTypes;
}
