{
  StringValue typeVal=new StringValue();
  typeVal.read(in);
  String[] types=typeVal.getValue().split(",");
  Class[] basicTypes=new Class[types.length];
  for (int i=0; i < types.length; i++) {
    try {
      basicTypes[i]=Class.forName(types[i]);
    }
 catch (    ClassNotFoundException e) {
      e.printStackTrace();
    }
  }
  TypeInformation<? extends Tuple> typeInfo=TupleTypeInfo.getBasicTupleTypeInfo(basicTypes);
  TupleSerializer<Tuple> tupleSerializer=(TupleSerializer<Tuple>)typeInfo.createSerializer();
  DeserializationDelegate<Tuple> dd=new DeserializationDelegate<Tuple>(tupleSerializer);
  dd.setInstance(tupleSerializer.createInstance());
  dd.read(in);
  return dd.getInstance();
}
