{
  final int partitionFanOut=getPartitioningFanOutNoEstimates(this.availableMemory.size());
  if (partitionFanOut > MAX_NUM_PARTITIONS) {
    throw new RuntimeException("Hash join created ");
  }
  createPartitions(partitionFanOut,0);
  final int numBuckets=getInitialTableSize(this.availableMemory.size(),this.segmentSize,partitionFanOut,this.avgRecordLen);
  initTable(numBuckets,(byte)partitionFanOut);
  final TypeAccessors<BT> buildTypeAccessors=this.buildSideAccessors;
  final BT record=buildTypeAccessors.createInstance();
  while (input.next(record)) {
    final int hashCode=hash(buildTypeAccessors.hash(record),0);
    insertIntoTable(record,hashCode);
  }
  for (int i=0; i < this.partitionsBeingBuilt.size(); i++) {
    HashPartition<BT,PT> p=this.partitionsBeingBuilt.get(i);
    p.finalizeBuildPhase(this.ioManager,this.currentEnumerator,this.writeBehindBuffers);
  }
}
