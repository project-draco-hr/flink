{
  while (true) {
    while (this.numInSegment < this.countInSegment) {
      final int thisCode=this.bucket.getInt(this.posInSegment);
      this.posInSegment+=HASH_CODE_LEN;
      if (thisCode == this.searchHashCode) {
        final long pointer=this.bucket.getLong(this.bucketInSegmentOffset + BUCKET_POINTER_START_OFFSET + (this.numInSegment * POINTER_LEN));
        this.numInSegment++;
        LazyDeSerializable lds=(LazyDeSerializable)target;
        lds.setDeSerializer(this.partition,this.partition.getWriteView(),pointer);
        if (this.comparator.equalToReference(target)) {
          return true;
        }
      }
 else {
        this.numInSegment++;
      }
    }
    final long forwardPointer=this.bucket.getLong(this.bucketInSegmentOffset + HEADER_FORWARD_OFFSET);
    if (forwardPointer == BUCKET_FORWARD_POINTER_NOT_SET) {
      return false;
    }
    final int overflowSegNum=(int)(forwardPointer >>> 32);
    this.bucket=this.overflowSegments[overflowSegNum];
    this.bucketInSegmentOffset=(int)(forwardPointer & 0xffffffff);
    this.countInSegment=this.bucket.getShort(this.bucketInSegmentOffset + HEADER_COUNT_OFFSET);
    this.posInSegment=this.bucketInSegmentOffset + BUCKET_HEADER_LENGTH;
    this.numInSegment=0;
  }
}
