{
  FiniteDuration jobClientActorTimeout=new FiniteDuration(5,TimeUnit.SECONDS);
  FiniteDuration timeout=jobClientActorTimeout.$times(2);
  UUID leaderSessionID=UUID.randomUUID();
  ActorRef jobManager=system.actorOf(Props.create(PlainActor.class,leaderSessionID));
  TestingLeaderRetrievalService testingLeaderRetrievalService=new TestingLeaderRetrievalService(jobManager.path().toString(),leaderSessionID);
  Props jobClientActorProps=JobAttachmentClientActor.createActorProps(testingLeaderRetrievalService,jobClientActorTimeout,false);
  ActorRef jobClientActor=system.actorOf(jobClientActorProps);
  Future<Object> jobExecutionResult=Patterns.ask(jobClientActor,new JobClientMessages.AttachToJobAndWait(testJobGraph.getJobID()),new Timeout(timeout));
  Await.result(jobExecutionResult,timeout);
}
