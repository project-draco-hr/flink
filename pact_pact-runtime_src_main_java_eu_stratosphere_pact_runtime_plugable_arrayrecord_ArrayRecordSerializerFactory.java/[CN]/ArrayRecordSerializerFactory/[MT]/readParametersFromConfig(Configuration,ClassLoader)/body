{
  final int numFields=config.getInteger(NUM_FIELDS,-1);
  if (numFields < 0) {
    throw new CorruptConfigurationException("The number of field for the serializer is invalid: " + numFields);
  }
  @SuppressWarnings("unchecked") final Class<? extends Value>[] types=new Class[numFields];
  for (int i=0; i < numFields; i++) {
    final String name=config.getString(FIELD_CLASS_PREFIX + i,null);
    if (name != null) {
      types[i]=Class.forName(name,true,cl).asSubclass(Key.class);
    }
 else {
      throw new CorruptConfigurationException("The key type (" + i + ") for the comparator is null");
    }
  }
  this.types=types;
}
