{
  int tenMil=10000000;
  Generator g=new Generator(561349061987311L,1,tenMil);
  final TestData.GeneratorIterator gi=new TestData.GeneratorIterator(g,10);
  List<MutableObjectIterator<Record>> inputs=new ArrayList<MutableObjectIterator<Record>>();
  inputs.add(gi);
  addInput(new UnionIterator<Record>(inputs));
  addDriverComparator(this.comparator);
  addDriverComparator(this.comparator);
  setOutput(this.outList);
  getTaskConfig().setDriverStrategy(DriverStrategy.SORTED_GROUP_COMBINE);
  getTaskConfig().setRelativeMemoryDriver(combine_frac);
  getTaskConfig().setFilehandlesDriver(2);
  final GroupReduceCombineDriver<Record,Record> testTask=new GroupReduceCombineDriver<Record,Record>();
  try {
    testDriver(testTask,MockCombiningReduceStub.class);
  }
 catch (  Exception e) {
    e.printStackTrace();
    Assert.fail("Invoke method caused exception.");
  }
  Assert.assertTrue("Resultset size was " + this.outList.size() + ". Expected was "+ 10,this.outList.size() == 10);
  this.outList.clear();
}
