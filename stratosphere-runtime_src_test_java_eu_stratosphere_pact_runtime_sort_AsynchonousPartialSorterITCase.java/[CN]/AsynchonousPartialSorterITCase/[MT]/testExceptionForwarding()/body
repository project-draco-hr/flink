{
  try {
    Sorter<Record> sorter=null;
    try {
      final int NUM_RECORDS=100;
      final TestData.Generator generator=new TestData.Generator(SEED,KEY_MAX,VALUE_LENGTH,KeyMode.RANDOM,ValueMode.CONSTANT,VAL);
      final MutableObjectIterator<Record> source=new TestData.GeneratorIterator(generator,NUM_RECORDS);
      LOG.debug("Initializing sortmerger...");
      sorter=new ExceptionThrowingAsynchronousPartialSorter<Record>(this.memoryManager,source,this.parentTask,this.serializer,this.comparator,32 * 1024 * 1024);
      runPartialSorter(sorter,NUM_RECORDS,0);
      Assert.fail("Expected Test Exception not thrown.");
    }
 catch (    Exception e) {
      if (!containsTriggerException(e)) {
        throw e;
      }
    }
 finally {
      if (sorter != null) {
        sorter.close();
      }
    }
  }
 catch (  Exception t) {
    t.printStackTrace();
    Assert.fail("Test failed due to an uncaught exception: " + t.getMessage());
  }
}
