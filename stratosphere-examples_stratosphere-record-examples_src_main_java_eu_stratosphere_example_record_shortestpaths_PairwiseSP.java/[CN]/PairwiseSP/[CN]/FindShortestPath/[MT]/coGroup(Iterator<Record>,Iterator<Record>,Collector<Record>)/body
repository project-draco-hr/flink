{
  Record pathRec=null;
  StringValue path=null;
  if (inputRecords.hasNext()) {
    pathRec=inputRecords.next();
  }
 else {
    pathRec=concatRecords.next();
  }
  StringValue fromNode=pathRec.getField(0,StringValue.class);
  StringValue toNode=pathRec.getField(1,StringValue.class);
  minLength.setValue(pathRec.getField(2,IntValue.class).getValue());
  path=new StringValue(pathRec.getField(4,StringValue.class));
  shortestPaths.add(path);
  hopCnts.put(path,new IntValue(pathRec.getField(3,IntValue.class).getValue()));
  while (inputRecords.hasNext()) {
    pathRec=inputRecords.next();
    IntValue length=pathRec.getField(2,IntValue.class);
    if (length.getValue() == minLength.getValue()) {
      path=new StringValue(pathRec.getField(4,StringValue.class));
      if (shortestPaths.add(path)) {
        hopCnts.put(path,new IntValue(pathRec.getField(3,IntValue.class).getValue()));
      }
    }
 else     if (length.getValue() < minLength.getValue()) {
      minLength.setValue(length.getValue());
      hopCnts.clear();
      shortestPaths.clear();
      path=new StringValue(pathRec.getField(4,StringValue.class));
      shortestPaths.add(path);
      hopCnts.put(path,new IntValue(pathRec.getField(3,IntValue.class).getValue()));
    }
  }
  while (concatRecords.hasNext()) {
    pathRec=concatRecords.next();
    IntValue length=pathRec.getField(2,IntValue.class);
    if (length.getValue() == minLength.getValue()) {
      path=new StringValue(pathRec.getField(4,StringValue.class));
      if (shortestPaths.add(path)) {
        hopCnts.put(path,new IntValue(pathRec.getField(3,IntValue.class).getValue()));
      }
    }
 else     if (length.getValue() < minLength.getValue()) {
      minLength.setValue(length.getValue());
      hopCnts.clear();
      shortestPaths.clear();
      path=new StringValue(pathRec.getField(4,StringValue.class));
      shortestPaths.add(path);
      hopCnts.put(path,new IntValue(pathRec.getField(3,IntValue.class).getValue()));
    }
  }
  outputRecord.setField(0,fromNode);
  outputRecord.setField(1,toNode);
  outputRecord.setField(2,minLength);
  for (  StringValue shortestPath : shortestPaths) {
    outputRecord.setField(3,hopCnts.get(shortestPath));
    outputRecord.setField(4,shortestPath);
    out.collect(outputRecord);
  }
  hopCnts.clear();
  shortestPaths.clear();
}
