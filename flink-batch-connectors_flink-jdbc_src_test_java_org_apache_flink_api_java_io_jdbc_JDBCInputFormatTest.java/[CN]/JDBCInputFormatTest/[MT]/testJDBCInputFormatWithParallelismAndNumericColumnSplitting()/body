{
  final int fetchSize=1;
  final Long min=new Long(JDBCTestBase.testData[0][0] + "");
  final Long max=new Long(JDBCTestBase.testData[JDBCTestBase.testData.length - fetchSize][0] + "");
  ParameterValuesProvider pramProvider=new NumericBetweenParametersProvider(fetchSize,min,max);
  jdbcInputFormat=JDBCInputFormat.buildJDBCInputFormat().setDrivername(DRIVER_CLASS).setDBUrl(DB_URL).setQuery(JDBCTestBase.SELECT_ALL_BOOKS_SPLIT_BY_ID).setRowTypeInfo(rowTypeInfo).setParametersProvider(pramProvider).setResultSetType(ResultSet.TYPE_SCROLL_INSENSITIVE).finish();
  jdbcInputFormat.openInputFormat();
  InputSplit[] splits=jdbcInputFormat.createInputSplits(1);
  Assert.assertEquals(testData.length,splits.length);
  int recordCount=0;
  Row row=new Row(5);
  for (int i=0; i < splits.length; i++) {
    jdbcInputFormat.open(splits[i]);
    while (!jdbcInputFormat.reachedEnd()) {
      Row next=jdbcInputFormat.nextRecord(row);
      if (next == null) {
        break;
      }
      if (next.productElement(0) != null) {
        Assert.assertEquals("Field 0 should be int",Integer.class,next.productElement(0).getClass());
      }
      if (next.productElement(1) != null) {
        Assert.assertEquals("Field 1 should be String",String.class,next.productElement(1).getClass());
      }
      if (next.productElement(2) != null) {
        Assert.assertEquals("Field 2 should be String",String.class,next.productElement(2).getClass());
      }
      if (next.productElement(3) != null) {
        Assert.assertEquals("Field 3 should be float",Double.class,next.productElement(3).getClass());
      }
      if (next.productElement(4) != null) {
        Assert.assertEquals("Field 4 should be int",Integer.class,next.productElement(4).getClass());
      }
      for (int x=0; x < 5; x++) {
        if (testData[recordCount][x] != null) {
          Assert.assertEquals(testData[recordCount][x],next.productElement(x));
        }
      }
      recordCount++;
    }
    jdbcInputFormat.close();
  }
  jdbcInputFormat.closeInputFormat();
  Assert.assertEquals(testData.length,recordCount);
}
