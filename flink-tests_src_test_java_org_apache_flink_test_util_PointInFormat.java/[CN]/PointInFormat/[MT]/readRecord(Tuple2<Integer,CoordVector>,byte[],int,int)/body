{
  final int limit=offset + numBytes;
  int id=-1;
  int value=0;
  int fractionValue=0;
  int fractionChars=0;
  boolean negative=false;
  this.dimensionValues.clear();
  for (int pos=offset; pos < limit; pos++) {
    if (bytes[pos] == '|') {
      if (id == -1) {
        id=value;
      }
 else {
        double v=value + ((double)fractionValue) * Math.pow(10,(-1 * (fractionChars - 1)));
        this.dimensionValues.add(negative ? -v : v);
      }
      value=0;
      fractionValue=0;
      fractionChars=0;
      negative=false;
    }
 else     if (bytes[pos] == '.') {
      fractionChars=1;
    }
 else     if (bytes[pos] == '-') {
      negative=true;
    }
 else {
      if (fractionChars == 0) {
        value*=10;
        value+=bytes[pos] - '0';
      }
 else {
        fractionValue*=10;
        fractionValue+=bytes[pos] - '0';
        fractionChars++;
      }
    }
  }
  reuse.f0=id;
  if (this.pointValues.length != this.dimensionValues.size()) {
    this.pointValues=new double[this.dimensionValues.size()];
  }
  for (int i=0; i < this.pointValues.length; i++) {
    this.pointValues[i]=this.dimensionValues.get(i);
  }
  reuse.f1=new CoordVector(this.pointValues);
  return reuse;
}
