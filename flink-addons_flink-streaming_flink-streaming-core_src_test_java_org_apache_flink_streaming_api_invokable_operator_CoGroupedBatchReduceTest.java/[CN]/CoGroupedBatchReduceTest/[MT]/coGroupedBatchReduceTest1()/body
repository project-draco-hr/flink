{
  List<Tuple2<String,Integer>> inputs1=new ArrayList<Tuple2<String,Integer>>();
  inputs1.add(new Tuple2<String,Integer>("a",1));
  inputs1.add(new Tuple2<String,Integer>("a",2));
  inputs1.add(new Tuple2<String,Integer>("a",3));
  inputs1.add(new Tuple2<String,Integer>("a",4));
  inputs1.add(new Tuple2<String,Integer>("a",5));
  inputs1.add(new Tuple2<String,Integer>("b",6));
  inputs1.add(new Tuple2<String,Integer>("a",7));
  inputs1.add(new Tuple2<String,Integer>("b",8));
  inputs1.add(new Tuple2<String,Integer>("b",9));
  inputs1.add(new Tuple2<String,Integer>("b",10));
  List<Tuple2<String,String>> inputs2=new ArrayList<Tuple2<String,String>>();
  inputs2.add(new Tuple2<String,String>("1","a"));
  inputs2.add(new Tuple2<String,String>("2","b"));
  inputs2.add(new Tuple2<String,String>("1","c"));
  inputs2.add(new Tuple2<String,String>("2","d"));
  inputs2.add(new Tuple2<String,String>("1","e"));
  inputs2.add(new Tuple2<String,String>("2","f"));
  inputs2.add(new Tuple2<String,String>("1","g"));
  inputs2.add(new Tuple2<String,String>("2","h"));
  inputs2.add(new Tuple2<String,String>("1","i"));
  List<String> expected=new ArrayList<String>();
  expected.add("10");
  expected.add("12");
  expected.add("33");
  expected.add("ace");
  expected.add("gi");
  expected.add("bdf");
  expected.add("h");
  CoGroupedBatchReduceInvokable<Tuple2<String,Integer>,Tuple2<String,String>,String> invokable=new CoGroupedBatchReduceInvokable<Tuple2<String,Integer>,Tuple2<String,String>,String>(new MyCoReduceFunction(),4L,3L,4L,3L,0,0);
  List<String> result=MockCoInvokable.createAndExecute(invokable,inputs1,inputs2);
  Collections.sort(result);
  Collections.sort(expected);
  assertEquals(expected,result);
}
