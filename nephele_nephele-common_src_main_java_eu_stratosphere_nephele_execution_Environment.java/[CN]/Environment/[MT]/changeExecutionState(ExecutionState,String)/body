{
  if (this.executionState == ExecutionState.CANCELED || this.executionState == ExecutionState.FINISHED) {
    return;
  }
  LOG.info("ExecutionState set from " + executionState + " to "+ newExecutionState+ " for task "+ this.getTaskName()+ " ("+ (this.getIndexInSubtaskGroup() + 1)+ "/"+ this.getCurrentNumberOfSubtasks()+ ")");
  boolean unexpectedStateChange=true;
  if (this.executionState == ExecutionState.CREATED && newExecutionState == ExecutionState.SCHEDULED) {
    unexpectedStateChange=false;
  }
  if (this.executionState == ExecutionState.SCHEDULED && newExecutionState == ExecutionState.ASSIGNING) {
    unexpectedStateChange=false;
  }
  if (this.executionState == ExecutionState.ASSIGNING && newExecutionState == ExecutionState.ASSIGNED) {
    unexpectedStateChange=false;
  }
  if (this.executionState == ExecutionState.ASSIGNED && newExecutionState == ExecutionState.READY) {
    unexpectedStateChange=false;
  }
  if (this.executionState == ExecutionState.READY && newExecutionState == ExecutionState.RUNNING) {
    unexpectedStateChange=false;
  }
  if (this.executionState == ExecutionState.RUNNING && newExecutionState == ExecutionState.FINISHING) {
    unexpectedStateChange=false;
  }
  if (this.executionState == ExecutionState.FINISHING && newExecutionState == ExecutionState.FINISHED) {
    unexpectedStateChange=false;
  }
  if (this.executionState == ExecutionState.SCHEDULED && newExecutionState == ExecutionState.ASSIGNED) {
    unexpectedStateChange=false;
  }
  if (this.executionState == ExecutionState.SCHEDULED && newExecutionState == ExecutionState.CANCELED) {
    unexpectedStateChange=false;
  }
  if (this.executionState == ExecutionState.ASSIGNING && newExecutionState == ExecutionState.CANCELED) {
    unexpectedStateChange=false;
  }
  if (this.executionState == ExecutionState.ASSIGNED && newExecutionState == ExecutionState.CANCELED) {
    unexpectedStateChange=false;
  }
  if (this.executionState == ExecutionState.READY && newExecutionState == ExecutionState.CANCELED) {
    unexpectedStateChange=false;
  }
  if (this.executionState == ExecutionState.RUNNING && newExecutionState == ExecutionState.FAILED) {
    unexpectedStateChange=false;
  }
  if (this.executionState == ExecutionState.FINISHING && newExecutionState == ExecutionState.FAILED) {
    unexpectedStateChange=false;
  }
  if (this.executionState == ExecutionState.RUNNING && newExecutionState == ExecutionState.CANCELING) {
    unexpectedStateChange=false;
  }
  if (this.executionState == ExecutionState.FINISHING && newExecutionState == ExecutionState.CANCELING) {
    unexpectedStateChange=false;
  }
  if (this.executionState == ExecutionState.CANCELING && newExecutionState == ExecutionState.CANCELED) {
    unexpectedStateChange=false;
  }
  if (unexpectedStateChange) {
    LOG.error("Unexpected state change: " + this.executionState + " -> "+ newExecutionState);
  }
  if (this.restarting && this.executionState == ExecutionState.RUNNING) {
    this.executionState=ExecutionState.RERUNNING;
    this.restarting=false;
  }
 else {
    this.executionState=newExecutionState;
  }
synchronized (this.executionListeners) {
    final Iterator<ExecutionListener> it=this.executionListeners.iterator();
    while (it.hasNext()) {
      it.next().executionStateChanged(this,newExecutionState,optionalMessage);
    }
  }
}
