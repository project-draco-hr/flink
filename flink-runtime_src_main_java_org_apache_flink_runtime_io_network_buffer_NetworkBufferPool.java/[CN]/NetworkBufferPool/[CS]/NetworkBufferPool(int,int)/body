{
  this.totalNumberOfMemorySegments=numberOfSegmentsToAllocate;
  this.memorySegmentSize=segmentSize;
  final long sizeInLong=(long)segmentSize;
  try {
    this.availableMemorySegments=new ArrayBlockingQueue<MemorySegment>(numberOfSegmentsToAllocate);
  }
 catch (  OutOfMemoryError err) {
    throw new OutOfMemoryError("Could not allocate buffer queue of length " + numberOfSegmentsToAllocate);
  }
  try {
    for (int i=0; i < numberOfSegmentsToAllocate; i++) {
      availableMemorySegments.add(new MemorySegment(new byte[segmentSize]));
    }
  }
 catch (  OutOfMemoryError err) {
    int allocated=availableMemorySegments.size();
    availableMemorySegments.clear();
    long requiredMb=(sizeInLong * numberOfSegmentsToAllocate) >> 20;
    long allocatedMb=(sizeInLong * allocated) >> 20;
    long missingMb=requiredMb - allocatedMb;
    throw new OutOfMemoryError("Could not allocate enough memory segments for NetworkBufferPool " + "(required (Mb): " + requiredMb + ", allocated (Mb): "+ allocatedMb+ ", missing (Mb): "+ missingMb+ ").");
  }
  long allocatedMb=(sizeInLong * availableMemorySegments.size()) >> 20;
  LOG.info("Allocated {} MB for network buffer pool (number of memory segments: {}, bytes per segment: {}).",allocatedMb,availableMemorySegments.size(),segmentSize);
}
