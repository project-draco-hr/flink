{
  Class<?> clazz;
  try {
    clazz=Class.forName(className);
    if (Operator.class.isAssignableFrom(clazz) && (clazz.getModifiers() & Modifier.ABSTRACT) == 0) {
      QueryUtil.LOG.trace("adding operator " + clazz);
      info.getOperatorRegistry().addOperator((Class<? extends Operator<?>>)clazz);
    }
 else     if (BuiltinProvider.class.isAssignableFrom(clazz))     this.addFunctionsAndConstants(info,clazz);
  }
 catch (  ClassNotFoundException e) {
    QueryUtil.LOG.warn("could not load operator " + className);
  }
}
