{
  closeCurrentPartFile();
  org.apache.hadoop.conf.Configuration conf=new org.apache.hadoop.conf.Configuration();
  FileSystem fs=new Path(basePath).getFileSystem(conf);
  Path newBucketDirectory=bucketer.getNextBucketPath(new Path(basePath));
  if (!newBucketDirectory.equals(currentBucketDirectory)) {
    currentBucketDirectory=newBucketDirectory;
    try {
      if (fs.mkdirs(currentBucketDirectory)) {
        LOG.debug("Created new bucket directory: {}",currentBucketDirectory);
      }
    }
 catch (    IOException e) {
      throw new RuntimeException("Could not create base path for new rolling file.",e);
    }
  }
  currentPartPath=new Path(currentBucketDirectory,partPrefix + "-" + subtaskIndex+ "-"+ partCounter);
  while (fs.exists(currentPartPath) || fs.exists(new Path(currentPartPath.getParent(),pendingPrefix + currentPartPath.getName()).suffix(pendingSuffix))) {
    partCounter++;
    currentPartPath=new Path(currentBucketDirectory,partPrefix + "-" + subtaskIndex+ "-"+ partCounter);
  }
  partCounter++;
  LOG.debug("Next part path is {}",currentPartPath.toString());
  Path inProgressPath=new Path(currentPartPath.getParent(),inProgressPrefix + currentPartPath.getName()).suffix(inProgressSuffix);
  outStream=fs.create(inProgressPath,false);
  if (refHflushOrSync == null) {
    refHflushOrSync=reflectHflushOrSync(outStream);
  }
  writer.open(outStream);
}
