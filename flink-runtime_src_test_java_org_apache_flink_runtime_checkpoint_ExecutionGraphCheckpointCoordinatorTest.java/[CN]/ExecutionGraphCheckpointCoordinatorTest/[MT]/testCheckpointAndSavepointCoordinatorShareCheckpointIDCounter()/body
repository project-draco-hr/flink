{
  ExecutionGraph executionGraph=new ExecutionGraph(TestingUtils.defaultExecutionContext(),new JobID(),"test",new Configuration(),new ExecutionConfig(),new FiniteDuration(1,TimeUnit.DAYS),new NoRestartStrategy(),Collections.<BlobKey>emptyList(),Collections.<URL>emptyList(),ClassLoader.getSystemClassLoader());
  ActorSystem actorSystem=AkkaUtils.createDefaultActorSystem();
  try {
    executionGraph.enableSnapshotCheckpointing(100,100,100,1,42,Collections.<ExecutionJobVertex>emptyList(),Collections.<ExecutionJobVertex>emptyList(),Collections.<ExecutionJobVertex>emptyList(),actorSystem,UUID.randomUUID(),new StandaloneCheckpointIDCounter(),new StandaloneCompletedCheckpointStore(1,ClassLoader.getSystemClassLoader()),RecoveryMode.STANDALONE,new HeapStateStore<CompletedCheckpoint>(),new DisabledCheckpointStatsTracker());
    CheckpointCoordinator checkpointCoordinator=executionGraph.getCheckpointCoordinator();
    SavepointCoordinator savepointCoordinator=executionGraph.getSavepointCoordinator();
    Field counterField=CheckpointCoordinator.class.getDeclaredField("checkpointIdCounter");
    CheckpointIDCounter counterCheckpointCoordinator=(CheckpointIDCounter)counterField.get(checkpointCoordinator);
    CheckpointIDCounter counterSavepointCoordinator=(CheckpointIDCounter)counterField.get(savepointCoordinator);
    assertEquals(counterCheckpointCoordinator,counterSavepointCoordinator);
  }
  finally {
    if (actorSystem != null) {
      actorSystem.shutdown();
    }
  }
}
