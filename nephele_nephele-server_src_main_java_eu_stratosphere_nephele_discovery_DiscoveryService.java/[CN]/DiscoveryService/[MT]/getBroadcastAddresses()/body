{
  final Set<InetAddress> broadcastAddresses=new HashSet<InetAddress>();
  Enumeration<NetworkInterface> ie=null;
  try {
    ie=NetworkInterface.getNetworkInterfaces();
  }
 catch (  SocketException e) {
    LOG.error("Could not collect network interfaces of host",e);
    return broadcastAddresses;
  }
  while (ie.hasMoreElements()) {
    NetworkInterface nic=ie.nextElement();
    try {
      if (!nic.isUp()) {
        continue;
      }
      if (nic.isLoopback()) {
        for (        InterfaceAddress adr : nic.getInterfaceAddresses()) {
          broadcastAddresses.add(adr.getAddress());
        }
      }
 else {
        for (        InterfaceAddress adr : nic.getInterfaceAddresses()) {
          if (adr == null) {
            continue;
          }
          if (USE_IPV6) {
            try {
              final InetAddress interfaceAddress=adr.getAddress();
              if (interfaceAddress instanceof Inet6Address) {
                final Inet6Address ipv6Address=(Inet6Address)interfaceAddress;
                final InetAddress multicastAddress=InetAddress.getByName(IPV6MULTICASTADDRESS + "%" + Integer.toString(ipv6Address.getScopeId()));
                broadcastAddresses.add(multicastAddress);
              }
            }
 catch (            UnknownHostException e) {
              LOG.error(e);
            }
          }
 else {
            final InetAddress broadcast=adr.getBroadcast();
            if (broadcast != null) {
              broadcastAddresses.add(broadcast);
            }
          }
        }
      }
    }
 catch (    SocketException e) {
      LOG.error("Socket exception when checking " + nic.getName() + ". "+ "Ignoring this device.",e);
    }
  }
  return broadcastAddresses;
}
