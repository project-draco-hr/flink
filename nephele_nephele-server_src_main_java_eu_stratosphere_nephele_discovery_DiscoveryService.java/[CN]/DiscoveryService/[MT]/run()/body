{
  final DatagramPacket ping=new DatagramPacket(new byte[100],100);
  final byte[] PONG=("PONG " + Integer.toString(this.ipcPort)).getBytes();
  final DatagramPacket pong=new DatagramPacket(PONG,PONG.length);
  while (!Thread.interrupted()) {
    try {
      this.serverSocket.receive(ping);
      if (isPingForUs(ping)) {
        LOG.debug("Received ping from " + ping.getSocketAddress());
        pong.setAddress(ping.getAddress());
        pong.setPort(ping.getPort());
        this.serverSocket.send(pong);
      }
 else {
        LOG.debug("Received ping for somebody else from " + ping.getSocketAddress());
      }
    }
 catch (    SocketTimeoutException ste) {
      LOG.debug("Discovery service: socket timeout");
    }
catch (    IOException ioe) {
      LOG.error("Discovery service stopped working with IOException:\n" + ioe.toString());
      break;
    }
  }
  this.serverSocket.close();
}
