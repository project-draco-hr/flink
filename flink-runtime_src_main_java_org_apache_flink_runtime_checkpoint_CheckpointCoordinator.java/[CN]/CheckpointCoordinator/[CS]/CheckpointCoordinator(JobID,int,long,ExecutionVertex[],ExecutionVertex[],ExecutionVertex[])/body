{
  if (job == null || tasksToTrigger == null || tasksToWaitFor == null || tasksToCommitTo == null) {
    throw new NullPointerException();
  }
  if (numSuccessfulCheckpointsToRetain < 1) {
    throw new IllegalArgumentException("Must retain at least one successful checkpoint");
  }
  if (checkpointTimeout < 1) {
    throw new IllegalArgumentException("Checkpoint timeout must be larger than zero");
  }
  this.job=job;
  this.numSuccessfulCheckpointsToRetain=numSuccessfulCheckpointsToRetain;
  this.checkpointTimeout=checkpointTimeout;
  this.tasksToTrigger=tasksToTrigger;
  this.tasksToWaitFor=tasksToWaitFor;
  this.tasksToCommitTo=tasksToCommitTo;
  this.pendingCheckpoints=new LinkedHashMap<Long,PendingCheckpoint>();
  this.completedCheckpoints=new ArrayDeque<SuccessfulCheckpoint>(numSuccessfulCheckpointsToRetain + 1);
  this.recentPendingCheckpoints=new ArrayDeque<Long>(NUM_GHOST_CHECKPOINT_IDS);
  timer=new Timer("Checkpoint Timer",true);
}
