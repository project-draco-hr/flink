{
synchronized (lock) {
    triggerRequestQueued=false;
    periodicScheduling=false;
    if (currentPeriodicTrigger != null) {
      currentPeriodicTrigger.cancel();
      currentPeriodicTrigger=null;
    }
    for (    PendingCheckpoint p : pendingCheckpoints.values()) {
      try {
        p.abortError(new Exception("Checkpoint Coordinator is suspending."));
      }
 catch (      Throwable t) {
        LOG.error("Error while disposing pending checkpoint",t);
      }
    }
    pendingCheckpoints.clear();
    numUnsuccessfulCheckpointsTriggers.set(0);
  }
}
