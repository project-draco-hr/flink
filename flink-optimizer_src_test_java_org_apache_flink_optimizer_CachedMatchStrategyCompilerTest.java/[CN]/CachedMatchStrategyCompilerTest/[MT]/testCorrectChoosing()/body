{
  try {
    Plan plan=getTestPlanRightStatic("");
    SourceCollectorVisitor sourceCollector=new SourceCollectorVisitor();
    plan.accept(sourceCollector);
    for (    GenericDataSourceBase<?,?> s : sourceCollector.getSources()) {
      if (s.getName().equals("bigFile")) {
        this.setSourceStatistics(s,10000000,1000);
      }
 else       if (s.getName().equals("smallFile")) {
        this.setSourceStatistics(s,100,100);
      }
    }
    OptimizedPlan oPlan=compileNoStats(plan);
    OptimizerPlanNodeResolver resolver=getOptimizerPlanNodeResolver(oPlan);
    DualInputPlanNode innerJoin=resolver.getNode("DummyJoiner");
    assertEquals(DriverStrategy.HYBRIDHASH_BUILD_SECOND_CACHED,innerJoin.getDriverStrategy());
    assertEquals(TempMode.NONE,innerJoin.getInput1().getTempMode());
    assertEquals(TempMode.NONE,innerJoin.getInput2().getTempMode());
    new JobGraphGenerator().compileJobGraph(oPlan);
  }
 catch (  Exception e) {
    System.err.println(e.getMessage());
    e.printStackTrace();
    fail("Test errored: " + e.getMessage());
  }
}
