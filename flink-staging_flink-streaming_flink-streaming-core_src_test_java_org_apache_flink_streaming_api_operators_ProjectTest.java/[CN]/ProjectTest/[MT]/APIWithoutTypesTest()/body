{
  for (Long i=1L; i < 11L; i++) {
    expected.add(new Tuple2<Long,Double>(i,i.doubleValue()));
  }
  StreamExecutionEnvironment env=new TestStreamEnvironment(1,MEMORY_SIZE);
  env.generateSequence(1,10).map(new MapFunction<Long,Tuple3<Long,Character,Double>>(){
    @Override public Tuple3<Long,Character,Double> map(    Long value) throws Exception {
      return new Tuple3<Long,Character,Double>(value,'c',value.doubleValue());
    }
  }
).project(0,2).addSink(new SinkFunction<Tuple>(){
    @Override @SuppressWarnings("unchecked") public void invoke(    Tuple value) throws Exception {
      actual.add((Tuple2<Long,Double>)value);
    }
  }
);
  try {
    env.execute();
  }
 catch (  Exception e) {
    fail(e.getMessage());
  }
  assertEquals(expected,actual);
}
