{
  List[][] checkList=new List[][]{GeneratingSourceFunction.completedCheckpoints,IdentityMapFunction.completedCheckpoints,LongRichFilterFunction.completedCheckpoints,LeftIdentityCoRichFlatMapFunction.completedCheckpoints};
  long failureCheckpointID=OnceFailingReducer.failureCheckpointID;
  for (  List[] parallelNotifications : checkList) {
    for (int i=0; i < PARALLELISM; i++) {
      List<Long> notifications=parallelNotifications[i];
      assertTrue("No checkpoint notification was received.",notifications.size() > 0);
      assertFalse("Failure checkpoint was marked as completed.",notifications.contains(failureCheckpointID));
      assertFalse("No checkpoint received before failure.",notifications.get(0) == failureCheckpointID);
      assertFalse("No checkpoint received after failure.",notifications.get(notifications.size() - 1) == failureCheckpointID);
      assertTrue("Checkpoint notification was received multiple times",notifications.size() == new HashSet<Long>(notifications).size());
    }
  }
}
