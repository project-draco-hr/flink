{
  if (LOG.isDebugEnabled()) {
    LOG.debug(this.taskContext.formatLogString("AllReduce preprocessing done. Running Reducer code."));
  }
  final ReduceFunction<T> stub=this.taskContext.getStub();
  final MutableObjectIterator<T> input=this.input;
  final TypeSerializer<T> serializer=this.serializer;
  T val1;
  if ((val1=input.next()) == null) {
    return;
  }
  if (objectReuseEnabled) {
    T val2=serializer.createInstance();
    T value=val1;
    while (running && (val2=input.next(val2)) != null) {
      value=stub.reduce(value,val2);
      if (value == val2) {
        T tmp=val1;
        val1=val2;
        val2=tmp;
      }
    }
    this.taskContext.getOutputCollector().collect(value);
  }
 else {
    T val2;
    while (running && (val2=input.next()) != null) {
      val1=stub.reduce(val1,val2);
    }
    this.taskContext.getOutputCollector().collect(val1);
  }
}
