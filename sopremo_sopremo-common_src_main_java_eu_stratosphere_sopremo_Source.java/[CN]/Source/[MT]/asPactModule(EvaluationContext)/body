{
  String inputName=this.inputName, name=this.inputName;
  if (this.type == PersistenceType.ADHOC) {
    try {
      final File tempFile=File.createTempFile("Adhoc","source");
      writeValues(tempFile);
      inputName="file://localhost" + tempFile.getAbsolutePath();
      SopremoUtil.LOG.info("temp file " + inputName);
      name="Adhoc";
    }
 catch (    IOException e) {
      throw new IllegalStateException("Cannot create adhoc source",e);
    }
  }
  final PactModule pactModule=new PactModule(this.toString(),0,1);
  final FileDataSourceContract<PactJsonObject.Key,PactJsonObject> contract=new FileDataSourceContract<PactJsonObject.Key,PactJsonObject>(inputFormat,inputName,name);
  if (inputFormat == JsonInputFormat.class)   contract.setDegreeOfParallelism(1);
  for (  Entry<String,Object> parameter : parameters.entrySet()) {
    if (parameter.getValue() instanceof Serializable)     SopremoUtil.serialize(contract.getParameters(),parameter.getKey(),(Serializable)parameter.getValue());
  }
  pactModule.getOutput(0).setInput(contract);
  return pactModule;
}
