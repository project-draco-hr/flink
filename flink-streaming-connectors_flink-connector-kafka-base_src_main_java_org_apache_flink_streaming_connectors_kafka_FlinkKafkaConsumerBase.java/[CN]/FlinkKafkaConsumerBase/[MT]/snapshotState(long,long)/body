{
  if (!running) {
    LOG.debug("snapshotState() called on closed source");
    return null;
  }
  final AbstractFetcher<?,?> fetcher=this.kafkaFetcher;
  if (fetcher == null) {
    return restoreToOffset;
  }
  HashMap<KafkaTopicPartition,Long> currentOffsets=fetcher.snapshotCurrentState();
  if (LOG.isDebugEnabled()) {
    LOG.debug("Snapshotting state. Offsets: {}, checkpoint id: {}, timestamp: {}",KafkaTopicPartition.toString(currentOffsets),checkpointId,checkpointTimestamp);
  }
  pendingCheckpoints.put(checkpointId,currentOffsets);
  while (pendingCheckpoints.size() > MAX_NUM_PENDING_CHECKPOINTS) {
    pendingCheckpoints.remove(0);
  }
  return currentOffsets;
}
