{
  final int dop=args.length > 0 ? Integer.parseInt(args[0]) : 1;
  final String verticesPath=args.length > 1 ? args[1] : "";
  final String edgesPath=args.length > 2 ? args[2] : "";
  final String resultPath=args.length > 3 ? args[3] : "";
  final int maxIterations=args.length > 4 ? Integer.parseInt(args[4]) : 1;
  FileDataSource initialVertices=new FileDataSource(DuplicateLongInputFormat.class,verticesPath,"Vertices");
  FileDataSource edges=new FileDataSource(LongLongInputFormat.class,edgesPath,"Edges");
  FileDataSink result=new FileDataSink(CsvOutputFormat.class,resultPath,"Result");
  CsvOutputFormat.configureRecordFormat(result).recordDelimiter('\n').fieldDelimiter(' ').field(LongValue.class,0).field(LongValue.class,1);
  SpargelIteration iteration=new SpargelIteration(new CCMessager(),new CCUpdater(),"Connected Components (Spargel API)");
  iteration.setVertexInput(initialVertices);
  iteration.setEdgesInput(edges);
  iteration.setNumberOfIterations(maxIterations);
  result.setInput(iteration.getOutput());
  Plan p=new Plan(result);
  p.setDefaultParallelism(dop);
  return p;
}
