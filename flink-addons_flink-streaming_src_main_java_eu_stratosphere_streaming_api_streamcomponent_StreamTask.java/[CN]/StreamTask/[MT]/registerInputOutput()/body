{
  taskConfiguration=getTaskConfiguration();
  name=taskConfiguration.getString("componentName","MISSING_COMPONENT_NAME");
  try {
    inputs=streamTaskHelper.getConfigInputs(this,taskConfiguration,inputs);
    streamTaskHelper.setConfigOutputs(this,taskConfiguration,outputs,partitioners);
  }
 catch (  StreamComponentException e) {
    log.error("Cannot register inputs/outputs for " + getClass().getSimpleName(),e);
  }
  int[] numberOfOutputChannels=new int[outputs.size()];
  for (int i=0; i < numberOfOutputChannels.length; i++) {
    numberOfOutputChannels[i]=taskConfiguration.getInteger("channels_" + i,0);
  }
  invoker=streamTaskHelper.setFaultTolerance(recordBuffer,faultToleranceType,taskConfiguration,outputs,taskInstanceID,name,numberOfOutputChannels);
  userFunction=(UserTaskInvokable)streamTaskHelper.getUserFunction(taskConfiguration,outputs,taskInstanceID,name,recordBuffer);
  streamTaskHelper.setAckListener(recordBuffer,taskInstanceID,outputs);
  streamTaskHelper.setFailListener(recordBuffer,taskInstanceID,outputs);
}
