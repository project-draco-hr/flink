{
  if (actorSystem == null || jobManager == null || jobGraph == null || timeout == null) {
    throw new NullPointerException();
  }
  Props jobClientActorProps=Props.create(JobClientActor.class,jobManager,LOG,sysoutLogUpdates);
  ActorRef jobClientActor=actorSystem.actorOf(jobClientActorProps);
  try {
    Future<Object> future=Patterns.ask(jobClientActor,new JobClientMessages.SubmitJobAndWait(jobGraph),new Timeout(AkkaUtils.INF_TIMEOUT()));
    Object answer=Await.result(future,timeout);
    if (answer instanceof JobManagerMessages.JobResultSuccess) {
      LOG.info("Job execution complete");
      SerializedJobExecutionResult result=((JobManagerMessages.JobResultSuccess)answer).result();
      if (result != null) {
        return result;
      }
 else {
        throw new Exception("Job was successfully executed but result contained a null JobExecutionResult.");
      }
    }
 else     if (answer instanceof Status.Failure) {
      throw ((Status.Failure)answer).cause();
    }
 else {
      throw new Exception("Unknown answer after submitting the job: " + answer);
    }
  }
 catch (  JobExecutionException e) {
    throw e;
  }
catch (  TimeoutException e) {
    throw new JobTimeoutException(jobGraph.getJobID(),"Lost connection to JobManager",e);
  }
catch (  Throwable t) {
    throw new JobExecutionException(jobGraph.getJobID(),"Communication with JobManager failed: " + t.getMessage(),t);
  }
 finally {
    jobClientActor.tell(PoisonPill.getInstance(),ActorRef.noSender());
  }
}
