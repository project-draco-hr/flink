{
  try {
    for (int i=0; i < parameterClasses.length; i++) {
      if (!IOReadableWritable.class.isAssignableFrom(parameterClasses[i])) {
        try {
          parameters[i]=JavaToValueConverter.convertBoxedJavaType(parameters[i]);
        }
 catch (        IllegalArgumentException e) {
          throw new IOException("Argument " + i + " of method "+ methodName+ " is not a primitive type (or boxed primitive) and not of type IOReadableWriteable");
        }
      }
    }
  }
 catch (  IOException e) {
    LOG.error(e.getMessage(),e);
    throw e;
  }
catch (  Exception e) {
    LOG.error(e.getMessage(),e);
    throw new IOException(e);
  }
}
