{
  boolean finished=false;
  while (!finished && !abortFlag) {
    MemorySegment request=null;
    try {
      request=requestQueue.take();
    }
 catch (    InterruptedException e1) {
      throw new RuntimeException("BlockResettableIterator: Unable to take next request",e1);
    }
    Buffer.Output out=new Buffer.Output(request);
    if (next != null)     out.write(next);
    finished=true;
    while (reader.hasNext() && !abortFlag) {
      try {
        next=reader.next();
      }
 catch (      Exception e) {
        throw new RuntimeException(e);
      }
      if (!out.write(next)) {
        finished=false;
        break;
      }
    }
    int pos=out.getPosition();
    MemorySegment seg=out.dispose();
    Buffer.Input in=new Buffer.Input(seg);
    in.reset(pos);
    finishedTasks.add(in);
  }
  if (abortFlag)   return;
  MemorySegment request=null;
  try {
    request=requestQueue.take();
  }
 catch (  InterruptedException e1) {
    throw new RuntimeException("BlockResettableIterator: Unable to take next request",e1);
  }
  finishedTasks.add(new Buffer.Input(request));
}
