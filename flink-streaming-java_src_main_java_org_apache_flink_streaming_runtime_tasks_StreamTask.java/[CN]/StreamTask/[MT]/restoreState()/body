{
  final StreamOperator<?>[] allOperators=operatorChain.getAllOperators();
  if (lazyRestoreChainedOperatorState != null) {
    Preconditions.checkState(lazyRestoreChainedOperatorState.getLength() == allOperators.length,"Invalid Invalid number of operator states. Found :" + lazyRestoreChainedOperatorState.getLength() + ". Expected: "+ allOperators.length);
  }
  if (lazyRestoreOperatorState != null) {
    Preconditions.checkArgument(lazyRestoreOperatorState.isEmpty() || lazyRestoreOperatorState.size() == allOperators.length,"Invalid number of operator states. Found :" + lazyRestoreOperatorState.size() + ". Expected: "+ allOperators.length);
  }
  for (int i=0; i < allOperators.length; i++) {
    StreamOperator<?> operator=allOperators[i];
    if (null != lazyRestoreOperatorState && !lazyRestoreOperatorState.isEmpty()) {
      operator.restoreState(lazyRestoreOperatorState.get(i));
    }
    if (operator instanceof StreamCheckpointedOperator) {
      if (lazyRestoreChainedOperatorState != null) {
        StreamStateHandle state=lazyRestoreChainedOperatorState.get(i);
        if (state != null) {
          LOG.debug("Restore state of task {} in chain ({}).",i,getName());
          FSDataInputStream is=state.openInputStream();
          try {
            cancelables.registerClosable(is);
            ((StreamCheckpointedOperator)operator).restoreState(is);
          }
  finally {
            cancelables.unregisterClosable(is);
            is.close();
          }
        }
      }
    }
  }
}
