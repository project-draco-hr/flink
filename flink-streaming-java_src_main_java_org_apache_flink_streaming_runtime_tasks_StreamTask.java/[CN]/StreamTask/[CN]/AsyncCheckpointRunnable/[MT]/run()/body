{
  try {
    List<KeyGroupsStateHandle> keyedStates=Collections.emptyList();
    if (keyGroupsStateHandleFuture != null) {
      if (!keyGroupsStateHandleFuture.isDone()) {
        keyGroupsStateHandleFuture.run();
      }
      KeyGroupsStateHandle keyGroupsStateHandle=this.keyGroupsStateHandleFuture.get();
      if (keyGroupsStateHandle != null) {
        keyedStates=Arrays.asList(keyGroupsStateHandle);
      }
    }
    if (chainedStateHandles.isEmpty() && keyedStates.isEmpty()) {
      owner.getEnvironment().acknowledgeCheckpoint(checkpointId);
    }
 else {
      owner.getEnvironment().acknowledgeCheckpoint(checkpointId,chainedStateHandles,keyedStates);
    }
    LOG.debug("Finished asynchronous checkpoints for checkpoint {} on task {}",checkpointId,name);
  }
 catch (  Exception e) {
    if (owner.isRunning()) {
      LOG.error("Caught exception while materializing asynchronous checkpoints.",e);
    }
    if (owner.asyncException == null) {
      owner.asyncException=new AsynchronousException(e);
    }
  }
 finally {
synchronized (cancelables) {
      cancelables.remove(this);
    }
  }
}
