def _get_deserializer(read, custom_types):
    type = read(1)
    if (0 < ord(type) < 26):
        return TupleDeserializer([_get_deserializer(read, custom_types) for _ in range(ord(type))])
    elif (type == Types.TYPE_BYTE):
        return ByteDeserializer()
    elif (type == Types.TYPE_BYTES):
        return ByteArrayDeserializer()
    elif (type == Types.TYPE_BOOLEAN):
        return BooleanDeserializer()
    elif (type == Types.TYPE_FLOAT):
        return FloatDeserializer()
    elif (type == Types.TYPE_DOUBLE):
        return DoubleDeserializer()
    elif (type == Types.TYPE_INTEGER):
        return IntegerDeserializer()
    elif (type == Types.TYPE_LONG):
        return LongDeserializer()
    elif (type == Types.TYPE_STRING):
        return StringDeserializer()
    elif (type == Types.TYPE_NULL):
        return NullDeserializer()
    else:
        for entry in custom_types:
            if (type == entry[0]):
                return CustomTypeDeserializer(entry[3])
        raise Exception(('Unable to find deserializer for type ID ' + str(ord(type))))
