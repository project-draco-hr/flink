{
  try {
    Record r=new Record();
    IntValue i1=new IntValue(1);
    IntValue i2=new IntValue(2);
    try {
      r.setField(1,i1);
      r.setField(3,i2);
      r.setNumFields(5);
      r.updateBinaryRepresenation();
      i1=new IntValue(3);
      i2=new IntValue(4);
      r.setField(7,i1);
      r.setField(8,i2);
      r.updateBinaryRepresenation();
      assertTrue(r.getField(1,IntValue.class).getValue() == 1);
      assertTrue(r.getField(3,IntValue.class).getValue() == 2);
      assertTrue(r.getField(7,IntValue.class).getValue() == 3);
      assertTrue(r.getField(8,IntValue.class).getValue() == 4);
    }
 catch (    RuntimeException re) {
      fail("Error updating binary representation: " + re.getMessage());
    }
    r=new Record();
    for (int i=0; i < 8; i++) {
      r.setField(i,new IntValue(i));
    }
    try {
      r.write(new OutputViewDataOutputStreamWrapper(out));
      r=new Record();
      r.read(new InputViewDataInputStreamWrapper(in));
      r.setField(1,new IntValue(10));
      r.setField(4,new StringValue("Some long value"));
      r.setField(5,new StringValue("An even longer value"));
      r.setField(10,new IntValue(10));
      r.write(new OutputViewDataOutputStreamWrapper(out));
      r=new Record();
      r.read(new InputViewDataInputStreamWrapper(in));
      assertTrue(r.getField(0,IntValue.class).getValue() == 0);
      assertTrue(r.getField(1,IntValue.class).getValue() == 10);
      assertTrue(r.getField(2,IntValue.class).getValue() == 2);
      assertTrue(r.getField(3,IntValue.class).getValue() == 3);
      assertTrue(r.getField(4,StringValue.class).getValue().equals("Some long value"));
      assertTrue(r.getField(5,StringValue.class).getValue().equals("An even longer value"));
      assertTrue(r.getField(6,IntValue.class).getValue() == 6);
      assertTrue(r.getField(7,IntValue.class).getValue() == 7);
      assertTrue(r.getField(8,IntValue.class) == null);
      assertTrue(r.getField(9,IntValue.class) == null);
      assertTrue(r.getField(10,IntValue.class).getValue() == 10);
    }
 catch (    RuntimeException re) {
      fail("Error updating binary representation: " + re.getMessage());
    }
catch (    IOException e) {
      fail("Error updating binary representation: " + e.getMessage());
    }
  }
 catch (  Throwable t) {
    Assert.fail("Test failed due to an exception: " + t.getMessage());
  }
}
