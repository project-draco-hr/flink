{
  Either<Tuple2<Long,Long>,Double>[] testData=new Either[]{Either.Left(new Tuple2<>(2l,9l)),new Left<>(new Tuple2<>(Long.MIN_VALUE,Long.MAX_VALUE)),new Right<>(32.0),Right(Double.MIN_VALUE),Right(Double.MAX_VALUE)};
  EitherTypeInfo<Tuple2<Long,Long>,Double> eitherTypeInfo=(EitherTypeInfo<Tuple2<Long,Long>,Double>)new EitherTypeInfo<Tuple2<Long,Long>,Double>(new TupleTypeInfo<Tuple2<Long,Long>>(BasicTypeInfo.LONG_TYPE_INFO,BasicTypeInfo.LONG_TYPE_INFO),BasicTypeInfo.DOUBLE_TYPE_INFO);
  EitherSerializer<Tuple2<Long,Long>,Double> eitherSerializer=(EitherSerializer<Tuple2<Long,Long>,Double>)eitherTypeInfo.createSerializer(new ExecutionConfig());
  SerializerTestInstance<Either<Tuple2<Long,Long>,Double>> testInstance=new EitherSerializerTestInstance<Either<Tuple2<Long,Long>,Double>>(eitherSerializer,eitherTypeInfo.getTypeClass(),-1,testData);
  testInstance.testAll();
}
