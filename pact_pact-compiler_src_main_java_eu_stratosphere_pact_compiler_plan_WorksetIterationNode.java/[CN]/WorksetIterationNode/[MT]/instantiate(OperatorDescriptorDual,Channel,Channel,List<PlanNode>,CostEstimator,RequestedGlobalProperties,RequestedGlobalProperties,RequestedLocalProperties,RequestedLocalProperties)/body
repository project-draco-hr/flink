{
  placePipelineBreakersIfNecessary(DriverStrategy.HYBRIDHASH_BUILD_FIRST,solutionSetIn,worksetIn);
  this.nextWorkset.accept(PlanCacheCleaner.INSTANCE);
  this.solutionSetDelta.accept(PlanCacheCleaner.INSTANCE);
  this.worksetNode.setCandidateProperties(worksetIn.getGlobalProperties(),worksetIn.getLocalProperties());
  this.solutionSetNode.setCandidateProperties(this.partitionedProperties,new LocalProperties());
  final SolutionSetPlanNode sspn=this.solutionSetNode.getCurrentSolutionSetPlanNode();
  final WorksetPlanNode wspn=this.worksetNode.getCurrentWorksetPlanNode();
  List<PlanNode> solutionSetDeltaCandidates=this.solutionSetDelta.getAlternativePlans(estimator);
  List<PlanNode> worksetCandidates=this.nextWorkset.getAlternativePlans(estimator);
  for (Iterator<PlanNode> planDeleter=solutionSetDeltaCandidates.iterator(); planDeleter.hasNext(); ) {
    PlanNode candidate=planDeleter.next();
    GlobalProperties gp=candidate.getGlobalProperties();
    if (gp.getPartitioning() != PartitioningProperty.HASH_PARTITIONED || gp.getPartitioningFields() == null || !gp.getPartitioningFields().equals(this.solutionSetKeyFields)) {
      planDeleter.remove();
    }
  }
  if (solutionSetDeltaCandidates.isEmpty()) {
    throw new CompilerException("No viable strategies for solution set delta found during plan enumeration. " + "Possible reason: Partitioning is not preserved when matching with the solution set. Missing annotation?");
  }
  for (Iterator<PlanNode> planDeleter=worksetCandidates.iterator(); planDeleter.hasNext(); ) {
    PlanNode candidate=planDeleter.next();
    if (!(globPropsReqWorkset.isMetBy(candidate.getGlobalProperties()) && locPropsReqWorkset.isMetBy(candidate.getLocalProperties()))) {
      planDeleter.remove();
    }
  }
  if (worksetCandidates.isEmpty()) {
    return;
  }
  final GlobalProperties gp=new GlobalProperties();
  gp.setHashPartitioned(this.solutionSetKeyFields);
  gp.addUniqueFieldCombination(this.solutionSetKeyFields);
  final LocalProperties lp=new LocalProperties();
  lp.addUniqueFields(this.solutionSetKeyFields);
  for (  PlanNode solutionSetCandidate : solutionSetDeltaCandidates) {
    for (    PlanNode worksetCandidate : worksetCandidates) {
      if (this.singleRoot.areBranchCompatible(solutionSetCandidate,worksetCandidate)) {
        WorksetIterationPlanNode wsNode=new WorksetIterationPlanNode(this,"WkSetIt(" + this.getPactContract().getName() + ")",solutionSetIn,worksetIn,sspn,wspn,worksetCandidate,solutionSetCandidate);
        wsNode.initProperties(gp,lp);
        target.add(wsNode);
      }
    }
  }
}
