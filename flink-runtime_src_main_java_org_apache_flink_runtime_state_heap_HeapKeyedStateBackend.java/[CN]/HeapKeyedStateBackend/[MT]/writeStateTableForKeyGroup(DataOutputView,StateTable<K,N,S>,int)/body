{
  TypeSerializer<N> namespaceSerializer=stateTable.getNamespaceSerializer();
  TypeSerializer<S> stateSerializer=stateTable.getStateSerializer();
  Map<N,Map<K,S>> namespaceMap=stateTable.get(keyGroupIndex);
  if (namespaceMap == null) {
    outView.writeByte(0);
  }
 else {
    outView.writeByte(1);
    outView.writeInt(namespaceMap.size());
    for (    Map.Entry<N,Map<K,S>> namespace : namespaceMap.entrySet()) {
      namespaceSerializer.serialize(namespace.getKey(),outView);
      Map<K,S> entryMap=namespace.getValue();
      outView.writeInt(entryMap.size());
      for (      Map.Entry<K,S> entry : entryMap.entrySet()) {
        keySerializer.serialize(entry.getKey(),outView);
        stateSerializer.serialize(entry.getValue(),outView);
      }
    }
  }
}
