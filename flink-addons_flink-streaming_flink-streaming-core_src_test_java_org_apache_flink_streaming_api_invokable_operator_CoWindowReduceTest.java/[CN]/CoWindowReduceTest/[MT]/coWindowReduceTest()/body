{
  List<Integer> inputs=new ArrayList<Integer>();
  for (Integer i=1; i <= 10; i++) {
    inputs.add(i);
  }
  List<Integer> inputs2=new ArrayList<Integer>();
  inputs2.add(1);
  inputs2.add(2);
  inputs2.add(-1);
  inputs2.add(-3);
  inputs2.add(-4);
  CoWindowReduceInvokable<Integer,Integer,String> invokable=new CoWindowReduceInvokable<Integer,Integer,String>(new MyCoReduceFunction(),3L,3L,2L,2L,new MyTimeStamp<Integer>(timestamps1),new MyTimeStamp<Integer>(timestamps2));
  List<String> expected=new ArrayList<String>();
  expected.add("28");
  expected.add("26");
  expected.add("9");
  expected.add("19");
  expected.add("1");
  expected.add("-6");
  List<String> result=MockCoInvokable.createAndExecute(invokable,inputs,inputs2);
  Collections.sort(result);
  Collections.sort(expected);
  assertEquals(expected,result);
}
