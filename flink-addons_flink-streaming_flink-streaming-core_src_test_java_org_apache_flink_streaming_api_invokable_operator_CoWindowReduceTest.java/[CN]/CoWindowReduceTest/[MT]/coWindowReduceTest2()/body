{
  List<Integer> inputs=new ArrayList<Integer>();
  for (Integer i=1; i <= 10; i++) {
    inputs.add(i);
  }
  List<String> inputs2=new ArrayList<String>();
  inputs2.add("a");
  inputs2.add("b");
  inputs2.add("c");
  inputs2.add("d");
  inputs2.add("e");
  inputs2.add("f");
  inputs2.add("g");
  inputs2.add("h");
  inputs2.add("i");
  List<Long> timestamps1=Arrays.asList(0L,1L,1L,1L,2L,2L,3L,8L,10L,11L);
  List<Long> timestamps2=Arrays.asList(1L,2L,4L,5L,6L,9L,10L,11L,13L);
  CoWindowReduceInvokable<Integer,String,String> invokable=new CoWindowReduceInvokable<Integer,String,String>(new MyCoReduceFunction(),4L,3L,2L,2L,new MyTimeStamp<Integer>(timestamps1),new MyTimeStamp<String>(timestamps2));
  List<String> expected=new ArrayList<String>();
  expected.add("28");
  expected.add("18");
  expected.add("8");
  expected.add("27");
  expected.add("ab");
  expected.add("cd");
  expected.add("de");
  expected.add("f");
  expected.add("fgh");
  expected.add("hi");
  List<String> result=MockCoContext.createAndExecute(invokable,inputs,inputs2);
  Collections.sort(result);
  Collections.sort(expected);
  assertEquals(expected,result);
}
