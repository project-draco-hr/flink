{
  List<Integer> inputs=new ArrayList<Integer>();
  for (Integer i=1; i <= 10; i++) {
    inputs.add(i);
  }
  List<String> inputs2=new ArrayList<String>();
  inputs2.add("a");
  inputs2.add("b");
  inputs2.add("c");
  inputs2.add("d");
  inputs2.add("e");
  inputs2.add("f");
  inputs2.add("g");
  inputs2.add("h");
  inputs2.add("i");
  List<Long> timestamps1=Arrays.asList(0L,2L,3L,5L,7L,9L,10L,11L,11L,13L);
  List<Long> timestamps2=Arrays.asList(0L,1L,1L,2L,2L,3L,3L,4L,4L);
  CoWindowReduceInvokable<Integer,String,String> invokable=new CoWindowReduceInvokable<Integer,String,String>(new MyCoReduceFunction(),4L,3L,4L,3L,new MyTimeStamp<Integer>(timestamps1),new MyTimeStamp<String>(timestamps2));
  List<String> expected=new ArrayList<String>();
  expected.add("6");
  expected.add("9");
  expected.add("30");
  expected.add("10");
  expected.add("abcde");
  expected.add("fghi");
  List<String> result=MockCoContext.createAndExecute(invokable,inputs,inputs2);
  Collections.sort(result);
  Collections.sort(expected);
  assertEquals(expected,result);
}
