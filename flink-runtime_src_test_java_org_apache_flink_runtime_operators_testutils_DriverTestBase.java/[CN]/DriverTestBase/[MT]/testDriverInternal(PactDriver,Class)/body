{
  this.driver=driver;
  driver.setup(this);
  this.stub=(S)stubClass.newInstance();
  boolean stubOpen=false;
  try {
    try {
      driver.prepare();
    }
 catch (    Throwable t) {
      throw new Exception("The data preparation caused an error: " + t.getMessage(),t);
    }
    try {
      FunctionUtils.openFunction(this.stub,getTaskConfig().getStubParameters());
      stubOpen=true;
    }
 catch (    Throwable t) {
      throw new Exception("The user defined 'open()' method caused an exception: " + t.getMessage(),t);
    }
    if (!running) {
      return;
    }
    driver.run();
    if (this.running) {
      FunctionUtils.closeFunction(this.stub);
      stubOpen=false;
    }
    this.output.close();
  }
 catch (  Exception ex) {
    if (stubOpen) {
      try {
        FunctionUtils.closeFunction(this.stub);
      }
 catch (      Throwable ignored) {
      }
    }
    if (this.driver instanceof ResettablePactDriver) {
      final ResettablePactDriver<?,?> resDriver=(ResettablePactDriver<?,?>)this.driver;
      try {
        resDriver.teardown();
      }
 catch (      Throwable t) {
        throw new Exception("Error while shutting down an iterative operator: " + t.getMessage(),t);
      }
    }
    if (this.running) {
      throw ex;
    }
  }
 finally {
    driver.cleanup();
  }
}
