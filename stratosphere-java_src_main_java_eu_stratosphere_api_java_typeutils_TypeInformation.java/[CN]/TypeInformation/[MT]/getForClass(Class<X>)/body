{
  Validate.notNull(clazz);
{
    TypeInformation<X> basicTypeInfo=BasicTypeInfo.getInfoFor(clazz);
    if (basicTypeInfo != null) {
      return basicTypeInfo;
    }
  }
  if (Value.class.isAssignableFrom(clazz)) {
    Class<? extends Value> valueClass=clazz.asSubclass(Value.class);
    return (TypeInformation<X>)ValueTypeInfo.getValueTypeInfo(valueClass);
  }
  if (Tuple.class.isAssignableFrom(clazz)) {
    throw new IllegalArgumentException("Type information extraction for tuples cannot be done based on the class.");
  }
  return new GenericTypeInfo<X>(clazz);
}
