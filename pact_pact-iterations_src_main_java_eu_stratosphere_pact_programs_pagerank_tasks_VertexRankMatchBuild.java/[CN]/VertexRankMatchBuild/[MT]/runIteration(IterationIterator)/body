{
  if (firstRun) {
    int chunckSize=MATCH_CHUNCK_SIZE;
    joinMem=memoryManager.allocateStrict(this,(int)(memorySize / chunckSize),chunckSize);
    firstRun=false;
  }
  TypeAccessorsV2 buildAccess=new VertexPageRankAccessor();
  TypeAccessorsV2 probeAccess=new VertexNeighbourPartialAccessor();
  TypeComparator comp=new MatchComparator();
  if (iteration > 0) {
    tables.get(iteration - 1).close();
  }
  MutableHashTable<Value,VertexNeighbourPartial> table=new MutableHashTable<Value,VertexNeighbourPartial>(buildAccess,probeAccess,comp,joinMem,ioManager,128);
  table.open(iterationIter,EmptyMutableObjectIterator.<VertexNeighbourPartial>get());
  tables.put(iteration,table);
  iteration++;
}
