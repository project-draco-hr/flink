{
  final int recordsUntilCheckpoint=132;
  Configuration parameters=new Configuration();
  AvroInputFormat<User> format=new AvroInputFormat<User>(new Path(testFile.getAbsolutePath()),User.class);
  format.configure(parameters);
  FileInputSplit[] splits=format.createInputSplits(4);
  assertEquals(splits.length,4);
  int elements=0;
  int elementsPerSplit[]=new int[4];
  for (int i=0; i < splits.length; i++) {
    format.open(splits[i]);
    while (!format.reachedEnd()) {
      User u=format.nextRecord(null);
      Assert.assertTrue(u.getName().toString().startsWith(TEST_NAME));
      elements++;
      if (format.getRecordsReadFromBlock() == recordsUntilCheckpoint) {
        Tuple2<Long,Long> state=format.getCurrentState();
        format=new AvroInputFormat<>(new Path(testFile.getAbsolutePath()),User.class);
        format.reopen(splits[i],state);
        assertEquals(format.getRecordsReadFromBlock(),recordsUntilCheckpoint);
      }
      elementsPerSplit[i]++;
    }
    format.close();
  }
  Assert.assertEquals(1539,elementsPerSplit[0]);
  Assert.assertEquals(1026,elementsPerSplit[1]);
  Assert.assertEquals(1539,elementsPerSplit[2]);
  Assert.assertEquals(896,elementsPerSplit[3]);
  Assert.assertEquals(NUM_RECORDS,elements);
  format.close();
}
