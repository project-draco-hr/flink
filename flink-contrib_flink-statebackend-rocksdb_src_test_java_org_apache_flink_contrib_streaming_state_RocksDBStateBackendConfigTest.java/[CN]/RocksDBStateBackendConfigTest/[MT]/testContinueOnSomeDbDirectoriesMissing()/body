{
  File targetDir1=new File(System.getProperty("java.io.tmpdir"),UUID.randomUUID().toString());
  File targetDir2=new File(System.getProperty("java.io.tmpdir"),UUID.randomUUID().toString());
  try {
    assertTrue(targetDir1.mkdirs());
    assertTrue(targetDir2.mkdirs());
    if (!targetDir1.setWritable(false,false)) {
      System.err.println("Cannot execute 'testContinueOnSomeDbDirectoriesMissing' because cannot mark directory non-writable");
      return;
    }
    RocksDBStateBackend rocksDbBackend=new RocksDBStateBackend(TEMP_URI);
    rocksDbBackend.setDbStoragePaths(targetDir1.getAbsolutePath(),targetDir2.getAbsolutePath());
    try {
      rocksDbBackend.initializeForJob(getMockEnvironment(),"foobar",IntSerializer.INSTANCE);
      rocksDbBackend.getPartitionedState(VoidNamespace.INSTANCE,VoidNamespaceSerializer.INSTANCE,new ValueStateDescriptor<>("test",String.class,""));
    }
 catch (    Exception e) {
      e.printStackTrace();
      fail("Backend initialization failed even though some paths were available");
    }
  }
  finally {
    targetDir1.setWritable(true,false);
    FileUtils.deleteDirectory(targetDir1);
    FileUtils.deleteDirectory(targetDir2);
  }
}
