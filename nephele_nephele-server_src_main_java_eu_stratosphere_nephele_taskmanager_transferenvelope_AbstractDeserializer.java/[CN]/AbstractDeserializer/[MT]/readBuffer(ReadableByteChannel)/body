{
  if (!this.bufferExistanceDeserialized) {
    final int bytesRead=readableByteChannel.read(this.existanceBuffer);
    if (bytesRead == -1) {
      if (this.existanceBuffer.get(0) == 0 && this.existanceBuffer.position() == 1) {
        throw new EOFException();
      }
 else {
        throw new IOException("Deserialization error: Expected at least " + this.existanceBuffer.remaining() + " more bytes to follow");
      }
    }
 else     if (bytesRead == 0) {
      try {
        Thread.sleep(50);
      }
 catch (      InterruptedException e) {
      }
    }
    if (!this.existanceBuffer.hasRemaining()) {
      this.bufferExistanceDeserialized=true;
      if (this.existanceBuffer.get(0) == 0) {
        this.transferEnvelope.setBuffer(null);
        this.deserializationState=DeserializationState.FULLYDESERIALIZED;
        return false;
      }
    }
 else {
      return true;
    }
  }
  if (this.sizeOfBuffer < 0) {
    final int bytesRead=readableByteChannel.read(this.lengthBuffer);
    if (bytesRead == -1) {
      throw new IOException("Deserialization error: Expected at least " + this.existanceBuffer.remaining() + " more bytes to follow");
    }
    if (!this.lengthBuffer.hasRemaining()) {
      this.sizeOfBuffer=byteBufferToInteger(this.lengthBuffer,0);
      if (this.sizeOfBuffer <= 0) {
        throw new IOException("Invalid buffer size: " + this.sizeOfBuffer);
      }
    }
 else {
      return true;
    }
  }
  if (!reconstructBufferFromStream(readableByteChannel)) {
    return true;
  }
  this.transferEnvelope.setBuffer(this.buffer);
  this.deserializationState=DeserializationState.FULLYDESERIALIZED;
  return false;
}
