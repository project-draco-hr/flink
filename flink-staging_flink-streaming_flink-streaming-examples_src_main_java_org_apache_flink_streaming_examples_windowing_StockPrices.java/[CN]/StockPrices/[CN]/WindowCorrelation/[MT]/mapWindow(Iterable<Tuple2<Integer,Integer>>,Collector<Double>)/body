{
  leftSum=0;
  rightSum=0;
  count=0;
  cov=0.;
  leftSd=0.;
  rightSd=0.;
  for (  Tuple2<Integer,Integer> pair : values) {
    leftSum+=pair.f0;
    rightSum+=pair.f1;
    count++;
  }
  leftMean=leftSum.doubleValue() / count;
  rightMean=rightSum.doubleValue() / count;
  for (  Tuple2<Integer,Integer> pair : values) {
    cov+=(pair.f0 - leftMean) * (pair.f1 - rightMean) / count;
  }
  for (  Tuple2<Integer,Integer> pair : values) {
    leftSd+=Math.pow(pair.f0 - leftMean,2) / count;
    rightSd+=Math.pow(pair.f1 - rightMean,2) / count;
  }
  leftSd=Math.sqrt(leftSd);
  rightSd=Math.sqrt(rightSd);
  out.collect(cov / (leftSd * rightSd));
}
