{
  if (heapMemory != null) {
    source.get(heapMemory,offset,numBytes);
  }
 else {
    if ((offset | numBytes | (offset + numBytes)| (size - (offset + numBytes))) < 0) {
      throw new IndexOutOfBoundsException();
    }
    final int sourceOffset=source.position();
    final int remaining=source.remaining();
    if (remaining < numBytes) {
      throw new BufferUnderflowException();
    }
    if (source.isDirect()) {
      final long sourcePointer=getAddress(source) + sourceOffset;
      final long targetPointer=address + offset;
      if (sourcePointer <= addressLimit - numBytes) {
        UNSAFE.copyMemory(sourcePointer,targetPointer,numBytes);
      }
 else       if (address > addressLimit) {
        throw new IllegalStateException("This segment has been freed.");
      }
 else {
        throw new IndexOutOfBoundsException();
      }
    }
 else     if (source.hasArray()) {
      put(offset,source.array(),sourceOffset + source.arrayOffset(),numBytes);
      source.position(sourceOffset + numBytes);
    }
 else {
      while (source.hasRemaining()) {
        put(offset++,source.get());
      }
    }
  }
}
