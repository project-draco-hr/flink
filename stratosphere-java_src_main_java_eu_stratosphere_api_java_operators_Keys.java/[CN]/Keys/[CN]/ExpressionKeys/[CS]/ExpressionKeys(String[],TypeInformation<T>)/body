{
  if (!(type instanceof PojoTypeInfo<?>)) {
    throw new UnsupportedOperationException("Key expressions can only be used on POJOs." + " " + "A POCO must have a default constructor without arguments and not have readObject"+ " and/or writeObject methods. Also, it can only have nested POJOs or primitive (also boxed)"+ " fields.");
  }
  PojoTypeInfo<?> pojoType=(PojoTypeInfo<?>)type;
  this.type=pojoType;
  logicalPositions=pojoType.getLogicalPositions(expressions);
  types=pojoType.getTypes(expressions);
  for (int i=0; i < logicalPositions.length; i++) {
    if (logicalPositions[i] < 0) {
      throw new IllegalArgumentException("Expression '" + expressions[i] + "' is not a valid key for POJO"+ " type "+ type.toString()+ ".");
    }
  }
}
