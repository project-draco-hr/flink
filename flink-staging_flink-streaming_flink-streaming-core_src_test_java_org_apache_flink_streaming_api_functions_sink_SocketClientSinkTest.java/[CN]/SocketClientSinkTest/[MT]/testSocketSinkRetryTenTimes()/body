{
  retry=-1L;
  error.set(null);
  server=new ServerSocket(0);
  port=server.getLocalPort();
  t1=new Thread(new Runnable(){
    @Override public void run(){
      try {
        t1=Thread.currentThread();
        Socket sk=server.accept();
        sk.close();
        server.close();
      }
 catch (      Exception e) {
        error.set(e);
      }
    }
  }
);
  t1.start();
  simpleSink=new SocketClientSink<String>(host,port,simpleSchema,10);
  try {
    simpleSink.open(new Configuration());
    t1.join();
    if (error.get() == null) {
      simpleSink.invoke("testSocketSinkInvoke");
      simpleSink.invoke("testSocketSinkInvoke");
      simpleSink.close();
    }
  }
 catch (  Exception e) {
    retry=simpleSink.retries;
    if (!(e instanceof RuntimeException) || e.toString().indexOf(except) == -1) {
      error.set(e);
    }
  }
  if (error.get() != null) {
    Throwable t=error.get();
    t.printStackTrace();
    fail("Error in spawned thread: " + t.getMessage());
  }
  assertEquals(10,retry);
}
