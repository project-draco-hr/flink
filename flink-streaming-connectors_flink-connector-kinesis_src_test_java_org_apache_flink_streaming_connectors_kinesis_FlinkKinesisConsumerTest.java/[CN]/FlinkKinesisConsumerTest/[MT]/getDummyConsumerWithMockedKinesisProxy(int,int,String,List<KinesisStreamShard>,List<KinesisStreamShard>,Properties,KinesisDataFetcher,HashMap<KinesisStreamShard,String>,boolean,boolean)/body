{
  final String dummyKinesisStreamName="flink-test";
  final List<String> dummyKinesisStreamList=Collections.singletonList(dummyKinesisStreamName);
  final KinesisProxy kinesisProxyMock=mock(KinesisProxy.class);
  try {
    whenNew(KinesisProxy.class).withArguments(consumerTestConfig).thenReturn(kinesisProxyMock);
  }
 catch (  Exception e) {
    throw new RuntimeException("Error when power mocking KinesisProxy in tests",e);
  }
  when(kinesisProxyMock.getShardList(dummyKinesisStreamList)).thenReturn(fakeCompleteShardList);
  TestableFlinkKinesisConsumer dummyConsumer=new TestableFlinkKinesisConsumer(dummyKinesisStreamName,fakeNumFlinkConsumerTasks,fakeThisConsumerTaskIndex,fakeThisConsumerTaskName,consumerTestConfig);
  try {
    Field fetcherField=FlinkKinesisConsumer.class.getDeclaredField("fetcher");
    fetcherField.setAccessible(true);
    fetcherField.set(dummyConsumer,fetcher);
    Field lastSequenceNumsField=FlinkKinesisConsumer.class.getDeclaredField("lastSequenceNums");
    lastSequenceNumsField.setAccessible(true);
    lastSequenceNumsField.set(dummyConsumer,lastSequenceNumsToRestore);
    Field hasAssignedShardsField=FlinkKinesisConsumer.class.getDeclaredField("hasAssignedShards");
    hasAssignedShardsField.setAccessible(true);
    hasAssignedShardsField.set(dummyConsumer,hasAssignedShards);
    Field runningField=FlinkKinesisConsumer.class.getDeclaredField("running");
    runningField.setAccessible(true);
    runningField.set(dummyConsumer,running);
  }
 catch (  IllegalAccessException|NoSuchFieldException e) {
    throw new RuntimeException(e);
  }
  mockStatic(FlinkKinesisConsumer.class);
  mockStatic(KinesisConfigUtil.class);
  try {
    PowerMockito.when(FlinkKinesisConsumer.assignShards(fakeCompleteShardList,fakeNumFlinkConsumerTasks,fakeThisConsumerTaskIndex)).thenReturn(fakeAssignedShardListToThisConsumerTask);
    PowerMockito.doNothing().when(KinesisConfigUtil.class,"validateConfiguration",Mockito.any(Properties.class));
  }
 catch (  Exception e) {
    e.printStackTrace();
    throw new RuntimeException("Error when power mocking static methods of FlinkKinesisConsumer",e);
  }
  return dummyConsumer;
}
