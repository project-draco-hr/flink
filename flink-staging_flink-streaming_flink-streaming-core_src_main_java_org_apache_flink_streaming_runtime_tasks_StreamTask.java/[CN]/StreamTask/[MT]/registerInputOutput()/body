{
  LOG.debug("Begin initialization for {}",getName());
  AccumulatorRegistry accumulatorRegistry=getEnvironment().getAccumulatorRegistry();
  userClassLoader=getUserCodeClassLoader();
  configuration=new StreamConfig(getTaskConfiguration());
  accumulatorMap=accumulatorRegistry.getUserMap();
  stateBackend=createStateBackend();
  stateBackend.initializeForJob(getEnvironment().getJobID());
  headOperator=configuration.getStreamOperator(userClassLoader);
  operatorChain=new OperatorChain<>(this,headOperator,accumulatorRegistry.getReadWriteReporter());
  if (headOperator != null) {
    headOperator.setup(this,configuration,operatorChain.getChainEntryPoint());
  }
  timerService=Executors.newSingleThreadScheduledExecutor(new DispatcherThreadFactory(TRIGGER_THREAD_GROUP,"Time Trigger for " + getName()));
  init();
  LOG.debug("Finish initialization for {}",getName());
}
