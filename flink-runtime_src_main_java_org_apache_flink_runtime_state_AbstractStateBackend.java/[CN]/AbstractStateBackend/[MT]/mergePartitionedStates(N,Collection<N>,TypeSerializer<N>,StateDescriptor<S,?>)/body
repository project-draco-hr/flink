{
  if (stateDescriptor instanceof ReducingStateDescriptor) {
    ReducingStateDescriptor reducingStateDescriptor=(ReducingStateDescriptor)stateDescriptor;
    ReduceFunction reduceFn=reducingStateDescriptor.getReduceFunction();
    ReducingState state=(ReducingState)getPartitionedState(target,namespaceSerializer,stateDescriptor);
    KvState kvState=(KvState)state;
    Object result=null;
    for (    N source : sources) {
      kvState.setCurrentNamespace(source);
      Object sourceValue=state.get();
      if (result == null) {
        result=state.get();
      }
 else       if (sourceValue != null) {
        result=reduceFn.reduce(result,sourceValue);
      }
      state.clear();
    }
    kvState.setCurrentNamespace(target);
    if (result != null) {
      state.add(result);
    }
  }
 else   if (stateDescriptor instanceof ListStateDescriptor) {
    ListState<Object> state=(ListState)getPartitionedState(target,namespaceSerializer,stateDescriptor);
    KvState kvState=(KvState)state;
    List<Object> result=new ArrayList<>();
    for (    N source : sources) {
      kvState.setCurrentNamespace(source);
      Iterable<Object> sourceValue=state.get();
      if (sourceValue != null) {
        for (        Object o : sourceValue) {
          result.add(o);
        }
      }
      state.clear();
    }
    kvState.setCurrentNamespace(target);
    for (    Object o : result) {
      state.add(o);
    }
  }
 else {
    throw new RuntimeException("Cannot merge states for " + stateDescriptor);
  }
}
