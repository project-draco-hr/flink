{
  final ExecutionGroupVertex source=groupEdge.getSourceVertex();
  final int indexOfOutputGate=groupEdge.getIndexOfOutputGate();
  final ExecutionGroupVertex target=groupEdge.getTargetVertex();
  final int indexOfInputGate=groupEdge.getIndexOfInputGate();
  for (int i=0; i < source.getCurrentNumberOfGroupMembers(); i++) {
    final ExecutionVertex sourceVertex=source.getGroupMember(i);
    final ExecutionGate outputGate=sourceVertex.getOutputGate(indexOfOutputGate);
    if (outputGate == null) {
      throw new GraphConversionException("unwire: " + sourceVertex.getName() + " has no output gate with index "+ indexOfOutputGate);
    }
    for (int j=0; j < outputGate.getNumberOfEdges(); j++) {
      final ExecutionEdge outputChannel=outputGate.getEdge(j);
      this.edgeMap.remove(outputChannel.getOutputChannelID());
    }
    outputGate.removeAllEdges();
  }
  for (int i=0; i < target.getCurrentNumberOfGroupMembers(); i++) {
    final ExecutionVertex targetVertex=target.getGroupMember(i);
    final ExecutionGate inputGate=targetVertex.getInputGate(indexOfInputGate);
    if (inputGate == null) {
      throw new GraphConversionException("unwire: " + targetVertex.getName() + " has no input gate with index "+ indexOfInputGate);
    }
    for (int j=0; j < inputGate.getNumberOfEdges(); j++) {
      final ExecutionEdge inputChannel=inputGate.getEdge(j);
      this.edgeMap.remove(inputChannel.getInputChannelID());
    }
    inputGate.removeAllEdges();
  }
}
