{
  for (int i=0; i < source.getCurrentNumberOfGroupMembers(); i++) {
    final ExecutionVertex sourceVertex=source.getGroupMember(i);
    final RuntimeOutputGate<? extends Record> outputGate=sourceVertex.getEnvironment().getOutputGate(indexOfOutputGate);
    if (outputGate == null) {
      throw new GraphConversionException("wire: " + sourceVertex.getName() + " has no output gate with index "+ indexOfOutputGate);
    }
    if (outputGate.getNumberOfOutputChannels() > 0) {
      throw new GraphConversionException("wire: wire called on source " + sourceVertex.getName() + " ("+ i+ "), but number of output channels is "+ outputGate.getNumberOfOutputChannels()+ "!");
    }
    for (int j=0; j < target.getCurrentNumberOfGroupMembers(); j++) {
      final ExecutionVertex targetVertex=target.getGroupMember(j);
      final RuntimeInputGate<? extends Record> inputGate=targetVertex.getEnvironment().getInputGate(indexOfInputGate);
      if (inputGate == null) {
        throw new GraphConversionException("wire: " + targetVertex.getName() + " has no input gate with index "+ indexOfInputGate);
      }
      if (inputGate.getNumberOfInputChannels() > 0 && i == 0) {
        throw new GraphConversionException("wire: wire called on target " + targetVertex.getName() + " ("+ j+ "), but number of input channels is "+ inputGate.getNumberOfInputChannels()+ "!");
      }
      if (inputGate.getDistributionPattern().createWire(i,j,source.getCurrentNumberOfGroupMembers(),target.getCurrentNumberOfGroupMembers())) {
        createChannel(sourceVertex,outputGate,targetVertex,inputGate,channelType,compressionLevel);
      }
      inputGate.setChannelType(channelType);
    }
    outputGate.setChannelType(channelType);
  }
}
