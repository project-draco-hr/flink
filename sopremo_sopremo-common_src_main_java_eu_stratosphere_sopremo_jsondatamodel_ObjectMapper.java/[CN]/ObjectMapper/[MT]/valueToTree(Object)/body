{
  if (value == null) {
    return NullNode.getInstance();
  }
  Class<? extends Object> valueClass=value.getClass();
  if (value instanceof JsonNode) {
    return (JsonNode)value;
  }
  if (value instanceof StringBuilder) {
    return TextNode.valueOf(((StringBuilder)value).toString());
  }
  if (valueClass.isArray()) {
    Object[] array=(Object[])value;
    ArrayNode arrayNode=new ArrayNode();
    for (int i=0; i < array.length; i++) {
      arrayNode.add(valueToTree(array[i]));
    }
    return arrayNode;
  }
  try {
    return typeDict.get(valueClass).newInstance(value);
  }
 catch (  IllegalArgumentException e) {
    e.printStackTrace();
  }
catch (  SecurityException e) {
    e.printStackTrace();
  }
catch (  InstantiationException e) {
    e.printStackTrace();
  }
catch (  IllegalAccessException e) {
    e.printStackTrace();
  }
catch (  InvocationTargetException e) {
    e.printStackTrace();
  }
  return NullNode.getInstance();
}
