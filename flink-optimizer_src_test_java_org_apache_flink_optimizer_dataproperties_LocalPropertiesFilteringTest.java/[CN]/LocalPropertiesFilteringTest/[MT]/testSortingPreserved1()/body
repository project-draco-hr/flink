{
  SingleInputSemanticProperties sp=new SingleInputSemanticProperties();
  SemanticPropUtil.getSemanticPropsSingleFromString(sp,new String[]{"0;2;5"},null,null,tupleInfo,tupleInfo);
  Ordering o=new Ordering();
  o.appendOrdering(2,IntValue.class,Order.ASCENDING);
  o.appendOrdering(0,StringValue.class,Order.DESCENDING);
  o.appendOrdering(5,LongValue.class,Order.DESCENDING);
  LocalProperties lProps=LocalProperties.forOrdering(o);
  LocalProperties filtered=lProps.filterBySemanticProperties(sp,0);
  FieldList gFields=filtered.getGroupedFields();
  Ordering order=filtered.getOrdering();
  assertNotNull(gFields);
  assertEquals(3,gFields.size());
  assertTrue(gFields.contains(0));
  assertTrue(gFields.contains(2));
  assertTrue(gFields.contains(5));
  assertNotNull(order);
  assertEquals(3,order.getNumberOfFields());
  assertEquals(2,order.getFieldNumber(0).intValue());
  assertEquals(0,order.getFieldNumber(1).intValue());
  assertEquals(5,order.getFieldNumber(2).intValue());
  assertEquals(Order.ASCENDING,order.getOrder(0));
  assertEquals(Order.DESCENDING,order.getOrder(1));
  assertEquals(Order.DESCENDING,order.getOrder(2));
  assertEquals(IntValue.class,order.getType(0));
  assertEquals(StringValue.class,order.getType(1));
  assertEquals(LongValue.class,order.getType(2));
  assertNull(filtered.getUniqueFields());
}
