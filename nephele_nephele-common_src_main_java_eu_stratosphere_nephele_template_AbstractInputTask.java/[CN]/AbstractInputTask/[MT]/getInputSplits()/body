{
  final InputSplitProvider provider=getEnvironment().getInputSplitProvider();
  return new Iterator<T>(){
    private T nextSplit;
    @Override public boolean hasNext(){
      if (this.nextSplit == null) {
        InputSplit split=provider.getNextInputSplit();
        if (split != null) {
          @SuppressWarnings("unchecked") T tSplit=(T)split;
          this.nextSplit=tSplit;
          return true;
        }
 else         return false;
      }
 else       return true;
    }
    @Override public T next(){
      if (this.nextSplit == null && !hasNext()) {
        throw new NoSuchElementException();
      }
      T tmp=this.nextSplit;
      this.nextSplit=null;
      return tmp;
    }
    @Override public void remove(){
      throw new UnsupportedOperationException();
    }
  }
;
}
