{
  FlatMapFunction<IN,OUT> function=userFunction.getUserCodeObject();
  FunctionUtils.setFunctionRuntimeContext(function,ctx);
  FunctionUtils.openFunction(function,parameters);
  ArrayList<OUT> result=new ArrayList<OUT>(input.size());
  if (mutableObjectSafeMode) {
    TypeSerializer<IN> inSerializer=getOperatorInfo().getInputType().createSerializer();
    TypeSerializer<OUT> outSerializer=getOperatorInfo().getOutputType().createSerializer();
    CopyingListCollector<OUT> resultCollector=new CopyingListCollector<OUT>(result,outSerializer);
    for (    IN element : input) {
      IN inCopy=inSerializer.copy(element);
      function.flatMap(inCopy,resultCollector);
    }
  }
 else {
    ListCollector<OUT> resultCollector=new ListCollector<OUT>(result);
    for (    IN element : input) {
      function.flatMap(element,resultCollector);
    }
  }
  FunctionUtils.closeFunction(function);
  return result;
}
