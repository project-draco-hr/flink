{
  if (!parseParameters(args)) {
    return;
  }
  StreamExecutionEnvironment env=StreamExecutionEnvironment.getExecutionEnvironment();
  @SuppressWarnings({"rawtypes","serial"}) DataStream topSpeeds=env.addSource(CarSource.create(numOfCars)).groupBy(0).window(Time.of(evictionSec,TimeUnit.SECONDS)).every(Delta.of(triggerMeters,new DeltaFunction<Tuple4<Integer,Integer,Double,Long>>(){
    @Override public double getDelta(    Tuple4<Integer,Integer,Double,Long> oldDataPoint,    Tuple4<Integer,Integer,Double,Long> newDataPoint){
      return newDataPoint.f2 - oldDataPoint.f2;
    }
  }
,new Tuple4<Integer,Integer,Double,Long>(0,0,0d,0l))).maxBy(1);
  topSpeeds.print();
  env.execute("CarTopSpeedWindowingExample");
}
