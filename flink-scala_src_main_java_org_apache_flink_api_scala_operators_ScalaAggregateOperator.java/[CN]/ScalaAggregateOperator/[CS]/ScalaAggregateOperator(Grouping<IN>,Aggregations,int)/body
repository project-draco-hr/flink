{
  super(Preconditions.checkNotNull(input).getInputDataSet(),input.getInputDataSet().getType());
  Preconditions.checkNotNull(function);
  if (!input.getInputDataSet().getType().isTupleType()) {
    throw new InvalidProgramException("Aggregating on field positions is only possible on tuple data types.");
  }
  TupleTypeInfoBase<?> inType=(TupleTypeInfoBase<?>)input.getInputDataSet().getType();
  if (field < 0 || field >= inType.getArity()) {
    throw new IllegalArgumentException("Aggregation field position is out of range.");
  }
  AggregationFunctionFactory factory=function.getFactory();
  AggregationFunction<?> aggFunct=factory.createAggregationFunction(inType.getTypeAt(field).getTypeClass());
  this.aggregationFunctions.add(aggFunct);
  this.fields.add(field);
  this.grouping=input;
}
