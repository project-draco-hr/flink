{
  DualInputContract<?> contract=node.getTwoInputNode().getPactContract();
  Stub stub=contract.getUserCodeWrapper().getUserCodeObject();
  if (AbstractArrayModelStub.class.isAssignableFrom(stub.getClass())) {
    AbstractArrayModelStub ams=(AbstractArrayModelStub)stub;
    Class<? extends Value>[] types1=ams.getDataTypes(0);
    Class<? extends Value>[] types2=ams.getDataTypes(1);
    if (types1 == null) {
      throw new CompilerPostPassException("Missing type annotation for first parameter type in UDF for '" + contract.getName() + "'.");
    }
    if (types2 == null) {
      throw new CompilerPostPassException("Missing type annotation for second parameter type in UDF for '" + contract.getName() + "'.");
    }
    addToSchema(types1,input1Schema);
    addToSchema(types2,input2Schema);
    input1Schema.setNumFields(types1.length);
    input2Schema.setNumFields(types2.length);
  }
 else {
    throw new CompilerException("Incompatibe stub type. Array data model programs require array data model stubs.");
  }
}
