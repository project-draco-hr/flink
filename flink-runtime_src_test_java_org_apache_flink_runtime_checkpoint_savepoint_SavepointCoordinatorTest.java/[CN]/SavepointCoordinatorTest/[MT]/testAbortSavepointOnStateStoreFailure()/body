{
  JobID jobId=new JobID();
  ExecutionJobVertex jobVertex=mockExecutionJobVertex(jobId,new JobVertexID(),4);
  HeapSavepointStore savepointStore=spy(new HeapSavepointStore());
  SavepointCoordinator coordinator=createSavepointCoordinator(jobId,60 * 1000,jobVertex.getTaskVertices(),jobVertex.getTaskVertices(),new ExecutionVertex[]{},new MockCheckpointIdCounter(),savepointStore);
  doThrow(new RuntimeException("TestException")).when(savepointStore).storeSavepoint(any(Savepoint.class));
  Future<String> savepointPathFuture=coordinator.triggerSavepoint(1231273123);
  for (  ExecutionVertex vertex : jobVertex.getTaskVertices()) {
    ExecutionAttemptID attemptId=vertex.getCurrentExecutionAttempt().getAttemptId();
    coordinator.receiveAcknowledgeMessage(new AcknowledgeCheckpoint(jobId,attemptId,0,createSerializedStateHandle(vertex),0));
  }
  try {
    Await.result(savepointPathFuture,FiniteDuration.Zero());
    fail("Did not throw expected Exception after rollback with savepoint store failure.");
  }
 catch (  Exception ignored) {
  }
  assertEquals(0,getSavepointPromises(coordinator).size());
  coordinator.shutdown();
}
