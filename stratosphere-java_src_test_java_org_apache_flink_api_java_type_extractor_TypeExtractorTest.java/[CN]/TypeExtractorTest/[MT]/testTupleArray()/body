{
  MapFunction<?,?> function=new MapFunction<Tuple2<String,String>[],Tuple2<String,String>[]>(){
    private static final long serialVersionUID=1L;
    @Override public Tuple2<String,String>[] map(    Tuple2<String,String>[] value) throws Exception {
      return null;
    }
  }
;
  TypeInformation<?> ti=TypeExtractor.getMapReturnTypes(function,(TypeInformation)TypeInfoParser.parse("Tuple2<String, String>[]"));
  Assert.assertTrue(ti instanceof ObjectArrayTypeInfo<?,?>);
  ObjectArrayTypeInfo<?,?> oati=(ObjectArrayTypeInfo<?,?>)ti;
  Assert.assertTrue(oati.getComponentInfo().isTupleType());
  TupleTypeInfo<?> tti=(TupleTypeInfo<?>)oati.getComponentInfo();
  Assert.assertEquals(BasicTypeInfo.STRING_TYPE_INFO,tti.getTypeAt(0));
  Assert.assertEquals(BasicTypeInfo.STRING_TYPE_INFO,tti.getTypeAt(1));
}
