{
  List<OutputBase> convertedTypes=new ArrayList<OutputBase>();
  for (  InputType child : navigator.getConnectedNodes(in)) {
    OutputBase handledResult=handleRecursively(navigator,child,params);
    if (flattenCollection && handledResult instanceof Collection<?>)     convertedTypes.addAll((Collection<? extends OutputBase>)handledResult);
 else     if (handledResult != null)     convertedTypes.add(handledResult);
  }
  Object[] parameters=new Object[params.length + 1];
  parameters[0]=convertedTypes;
  System.arraycopy(params,0,parameters,1,params.length);
  OutputBase convertedType=handle(in,parameters);
  if (convertedType == null && passthroughChildren) {
    if (Collection.class.isAssignableFrom(outputBase))     return (OutputBase)convertedTypes;
    return convertedTypes.isEmpty() ? null : convertedTypes.get(0);
  }
  return convertedType;
}
