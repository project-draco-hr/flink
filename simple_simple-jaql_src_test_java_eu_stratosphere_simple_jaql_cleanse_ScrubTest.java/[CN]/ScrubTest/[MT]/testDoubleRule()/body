{
  SopremoPlan actualPlan=parseScript("using cleansing;\n" + "$dirty_earmarks = read hdfs('UsEarmark.json');\n" + "$scrubbed_earmarks = scrub $dirty_earmark in $dirty_earmarks with {\n"+ "	// normalization with built-in expressions\n"+ "	amount: [$ as decimal, $ * 1000],\n"+ "};\n"+ "write $scrubbed_earmarks to hdfs('scrubbed_earmarks.json');");
  SopremoPlan expectedPlan=new SopremoPlan();
  Source dirty_earmarks=new Source("UsEarmark.json");
  Scrubbing scrubbing=new Scrubbing().withInputs(dirty_earmarks);
  scrubbing.addRule(new CoerceExpression(DecimalNode.class),new ObjectAccess("amount"));
  scrubbing.addRule(new ArithmeticExpression(EvaluationExpression.VALUE,ArithmeticOperator.MULTIPLICATION,new ConstantExpression(1000)),new ObjectAccess("amount"));
  Sink output=new Sink("scrubbed_earmarks.json").withInputs(scrubbing);
  expectedPlan.setSinks(output);
  assertEquals(expectedPlan,actualPlan);
}
