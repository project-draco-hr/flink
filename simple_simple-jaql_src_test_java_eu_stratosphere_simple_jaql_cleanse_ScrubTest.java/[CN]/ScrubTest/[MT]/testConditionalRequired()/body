{
  final SopremoPlan actualPlan=this.parseScript("using cleansing;\n" + "$dirty_earmarks = read hdfs('UsEarmark.json');\n" + "$scrubbed_earmarks = scrub $dirty_earmark in $dirty_earmarks with {\n"+ "	sponsorLastName: required if $dirty_earmark.type == 's',\n"+ "};\n"+ "write $scrubbed_earmarks to hdfs('scrubbed_earmarks.json');");
  final SopremoPlan expectedPlan=new SopremoPlan();
  final Source dirty_earmarks=new Source("UsEarmark.json");
  final Scrubbing scrubbing=new Scrubbing().withInputs(dirty_earmarks);
  scrubbing.addRule(new TernaryExpression(new ComparativeExpression(new PathExpression(Scrubbing.CONTEXT_NODE,new ObjectAccess("type")),BinaryOperator.EQUAL,new ConstantExpression("s")),new NonNullRule(),EvaluationExpression.VALUE),new ObjectAccess("sponsorLastName"));
  final Sink output=new Sink("scrubbed_earmarks.json").withInputs(scrubbing);
  expectedPlan.setSinks(output);
  assertEquals(expectedPlan,actualPlan);
}
