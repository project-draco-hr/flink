{
  initTest(numProducers,numEnvelopesPerProducer,numInThreads,numOutThreads,minSleepTimeMs / 4);
  Runnable[] producers=new Runnable[numProducers];
  for (int i=0; i < numProducers; i++) {
    producers[i]=new Runnable(){
      @Override public void run(){
        final JobID jid=new JobID();
        final ChannelID cid=new ChannelID();
        final RemoteReceiver receiver=receivers[rand.nextInt(numChannels)];
        for (int sequenceNum=0; sequenceNum < numEnvelopesPerProducer; sequenceNum++) {
          try {
            senderManager.enqueue(new Envelope(sequenceNum,jid,cid),receiver);
            int sleepTime=rand.nextInt((maxSleepTimeMs - minSleepTimeMs) + 1) + minSleepTimeMs;
            Thread.sleep(sleepTime);
          }
 catch (          Exception e) {
            throw new RuntimeException(e);
          }
        }
      }
    }
;
  }
  for (int i=0; i < numProducers; i++) {
    new Thread(producers[i],"Producer " + i).start();
  }
  while (receivedAllEnvelopesLatch.getCount() != 0) {
    receivedAllEnvelopesLatch.await();
  }
  finishTest();
}
