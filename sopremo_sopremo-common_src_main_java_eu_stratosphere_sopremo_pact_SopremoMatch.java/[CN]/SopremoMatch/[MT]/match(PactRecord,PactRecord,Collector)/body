{
  this.context.increaseInputCounter();
  this.collector.configure(out,this.context);
  final IJsonNode input1=this.inputSchema1.recordToJson(record1,this.cachedInput1);
  final IJsonNode input2=this.inputSchema2.recordToJson(record2,this.cachedInput2);
  if (SopremoUtil.LOG.isTraceEnabled())   SopremoUtil.LOG.trace(String.format("%s %s/%s",this.getContext().operatorTrace(),input1,input2));
  try {
    this.match(input1,input2,this.collector);
  }
 catch (  final RuntimeException e) {
    SopremoUtil.LOG.error(String.format("Error occurred @ %s with %s/%s: %s",this.getContext().operatorTrace(),input1,input2,e));
    throw e;
  }
}
