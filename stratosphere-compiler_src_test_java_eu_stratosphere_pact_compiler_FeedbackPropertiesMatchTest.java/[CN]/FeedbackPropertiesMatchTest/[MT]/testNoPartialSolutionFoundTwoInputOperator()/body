{
  try {
    SourcePlanNode target=new SourcePlanNode(getSourceNode(),"Partial Solution");
    SourcePlanNode source1=new SourcePlanNode(getSourceNode(),"Source 1");
    SourcePlanNode source2=new SourcePlanNode(getSourceNode(),"Source 2");
    Channel toMap1=new Channel(source1);
    toMap1.setShipStrategy(ShipStrategyType.FORWARD);
    toMap1.setLocalStrategy(LocalStrategy.NONE);
    SingleInputPlanNode map1=new SingleInputPlanNode(getMapNode(),"Mapper 1",toMap1,DriverStrategy.MAP);
    Channel toMap2=new Channel(source2);
    toMap2.setShipStrategy(ShipStrategyType.FORWARD);
    toMap2.setLocalStrategy(LocalStrategy.NONE);
    SingleInputPlanNode map2=new SingleInputPlanNode(getMapNode(),"Mapper 2",toMap2,DriverStrategy.MAP);
    Channel toJoin1=new Channel(map1);
    Channel toJoin2=new Channel(map2);
    toJoin1.setShipStrategy(ShipStrategyType.FORWARD);
    toJoin1.setLocalStrategy(LocalStrategy.NONE);
    toJoin2.setShipStrategy(ShipStrategyType.FORWARD);
    toJoin2.setLocalStrategy(LocalStrategy.NONE);
    DualInputPlanNode join=new DualInputPlanNode(getJoinNode(),"Join",toJoin1,toJoin2,DriverStrategy.HYBRIDHASH_BUILD_FIRST);
    FeedbackPropertiesMeetRequirementsReport report=join.checkPartialSolutionPropertiesMet(target,new GlobalProperties(),new LocalProperties());
    assertEquals(NO_PARTIAL_SOLUTION,report);
  }
 catch (  Exception e) {
    e.printStackTrace();
    fail(e.getMessage());
  }
}
