{
  StreamRecord record1=new ArrayStreamRecord(1).setTuple(0,new Tuple1<String>("R1")).setId(1);
  UID id1=record1.getId();
  buffer.add(record1);
  record1.setTuple(0,new Tuple1<String>("R2"));
  record1.setId(1);
  UID id2=record1.getId();
  buffer.add(record1);
  assertTrue(buffer.ackCounter.containsKey(id1));
  assertTrue(buffer.recordBuffer.containsKey(id1));
  assertTrue(buffer.recordTimestamps.containsKey(id1));
  assertTrue(buffer.ackCounter.containsKey(id2));
  assertTrue(buffer.recordBuffer.containsKey(id2));
  assertTrue(buffer.recordTimestamps.containsKey(id2));
  assertEquals(2,buffer.recordBuffer.size());
  assertEquals(2,buffer.recordTimestamps.size());
  assertEquals(2,buffer.ackCounter.size());
  StreamRecord removed=buffer.remove(id1);
  assertEquals("R1",removed.getTuple(0).getField(0));
  assertEquals(id1,removed.getId());
  assertFalse(buffer.ackCounter.containsKey(id1));
  assertFalse(buffer.recordBuffer.containsKey(id1));
  assertFalse(buffer.recordTimestamps.containsKey(id1));
  assertTrue(buffer.ackCounter.containsKey(id2));
  assertTrue(buffer.recordBuffer.containsKey(id2));
  assertTrue(buffer.recordTimestamps.containsKey(id2));
  assertEquals(1,buffer.recordBuffer.size());
  assertEquals(1,buffer.recordTimestamps.size());
  assertEquals(1,buffer.ackCounter.size());
}
