{
  Collection<Integer> inputIds1=transform(transform.getInput1());
  Collection<Integer> inputIds2=transform(transform.getInput2());
  if (alreadyTransformed.containsKey(transform)) {
    return alreadyTransformed.get(transform);
  }
  streamGraph.addCoOperator(transform.getId(),transform.getOperator(),transform.getInputType1(),transform.getInputType2(),transform.getOutputType(),transform.getName());
  streamGraph.setParallelism(transform.getId(),transform.getParallelism());
  for (  Integer inputId : inputIds1) {
    streamGraph.addEdge(inputId,transform.getId(),1);
  }
  for (  Integer inputId : inputIds2) {
    streamGraph.addEdge(inputId,transform.getId(),2);
  }
  return Collections.singleton(transform.getId());
}
