{
  try {
    this.stateField=Execution.class.getDeclaredField("state");
    this.stateField.setAccessible(true);
    this.resourceField=Execution.class.getDeclaredField("assignedResource");
    this.resourceField.setAccessible(true);
    this.execGraphStateField=ExecutionGraph.class.getDeclaredField("state");
    this.execGraphStateField.setAccessible(true);
    this.execGraphSchedulerField=ExecutionGraph.class.getDeclaredField("scheduler");
    this.execGraphSchedulerField.setAccessible(true);
    InetAddress address=InetAddress.getByName("127.0.0.1");
    InstanceConnectionInfo ci=new InstanceConnectionInfo(address,12345);
    HardwareDescription resources=new HardwareDescription(4,4000000,3000000,2000000);
    Instance instance=new Instance(ActorRef.noSender(),ci,new InstanceID(),resources,4);
    this.resource=instance.allocateSimpleSlot(new JobID());
  }
 catch (  Exception e) {
    e.printStackTrace();
    fail(e.getMessage());
    throw new RuntimeException();
  }
}
