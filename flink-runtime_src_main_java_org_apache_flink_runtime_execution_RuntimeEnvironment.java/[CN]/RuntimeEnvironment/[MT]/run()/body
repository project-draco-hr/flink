{
  if (owner.isCanceled()) {
    owner.cancelingDone();
    return;
  }
  try {
    Thread.currentThread().setContextClassLoader(userCodeClassLoader);
    this.invokable.invoke();
    if (this.owner.isCanceled()) {
      throw new CancelTaskException();
    }
    closeInputGates();
    requestAllOutputGatesToClose();
    waitForInputChannelsToBeClosed();
    waitForOutputChannelsToBeClosed();
    if (this.owner.isCanceled()) {
      throw new CancelTaskException();
    }
    if (!owner.markAsFinished()) {
      throw new Exception("Could notify job manager that the task is finished.");
    }
  }
 catch (  Throwable t) {
    if (!this.owner.isCanceled()) {
      try {
        this.invokable.cancel();
      }
 catch (      Throwable t2) {
        LOG.error("Error while canceling the task",t2);
      }
    }
    releaseAllChannelResources();
    if (this.owner.isCanceled() || t instanceof CancelTaskException) {
      this.owner.cancelingDone();
    }
 else {
      this.owner.markFailed(t);
    }
  }
 finally {
    releaseAllChannelResources();
  }
}
