{
  if (owner.isCanceledOrFailed()) {
    owner.cancelingDone();
    return;
  }
  try {
    Thread.currentThread().setContextClassLoader(userCodeClassLoader);
    invokable.invoke();
    if (owner.isCanceledOrFailed()) {
      throw new CancelTaskException("Task has been canceled or failed");
    }
    if (producedPartitions != null) {
      for (      ResultPartition partition : producedPartitions) {
        if (partition != null) {
          partition.finish();
        }
      }
    }
    if (owner.isCanceledOrFailed()) {
      throw new CancelTaskException();
    }
    if (!owner.markAsFinished()) {
      throw new Exception("Could *not* notify job manager that the task is finished.");
    }
  }
 catch (  Throwable t) {
    if (!owner.isCanceledOrFailed()) {
      try {
        invokable.cancel();
      }
 catch (      Throwable t2) {
        LOG.error("Error while canceling the task",t2);
      }
    }
    if (owner.isCanceledOrFailed() || t instanceof CancelTaskException) {
      owner.cancelingDone();
    }
 else {
      owner.markFailed(t);
    }
  }
}
