{
  ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
  DataSet<Long> vertices=env.fromElements(ConnectedComponentsData.getEnumeratingVertices(NUM_VERTICES).split("\n")).map(new VertexParser());
  DataSet<Tuple2<Long,Long>> edges=env.fromElements(ConnectedComponentsData.getRandomOddEvenEdges(NUM_EDGES,NUM_VERTICES,SEED).split("\n")).flatMap(new EdgeParser());
  DataSet<Tuple2<Long,Long>> verticesWithInitialId=vertices.map(new DuplicateValue<Long>());
  DeltaIteration<Tuple2<Long,Long>,Tuple2<Long,Long>> iteration=verticesWithInitialId.iterateDelta(verticesWithInitialId,100,0);
  DataSet<Tuple2<Long,Long>> changes=iteration.getWorkset().join(edges).where(0).equalTo(0).with(new NeighborWithComponentIDJoin()).coGroup(iteration.getSolutionSet()).where(0).equalTo(0).with(new MinIdAndUpdate());
  DataSet<Tuple2<Long,Long>> result=iteration.closeWith(changes,changes);
  List<Tuple2<Long,Long>> resutTuples=new ArrayList<Tuple2<Long,Long>>();
  result.output(new LocalCollectionOutputFormat<Tuple2<Long,Long>>(resutTuples));
  env.execute();
}
