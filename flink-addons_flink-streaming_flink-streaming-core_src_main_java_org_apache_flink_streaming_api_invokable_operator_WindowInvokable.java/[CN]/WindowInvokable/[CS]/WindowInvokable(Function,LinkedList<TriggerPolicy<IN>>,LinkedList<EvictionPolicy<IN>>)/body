{
  super(userFunction);
  setChainingStrategy(ChainingStrategy.NEVER);
  this.triggerPolicies=triggerPolicies;
  this.evictionPolicies=evictionPolicies;
  activeTriggerPolicies=new LinkedList<ActiveTriggerPolicy<IN>>();
  for (  TriggerPolicy<IN> tp : triggerPolicies) {
    if (tp instanceof ActiveTriggerPolicy) {
      activeTriggerPolicies.add((ActiveTriggerPolicy<IN>)tp);
    }
  }
  activeEvictionPolicies=new LinkedList<ActiveEvictionPolicy<IN>>();
  for (  EvictionPolicy<IN> ep : evictionPolicies) {
    if (ep instanceof ActiveEvictionPolicy) {
      activeEvictionPolicies.add((ActiveEvictionPolicy<IN>)ep);
    }
  }
  this.activePolicyTreads=new LinkedList<Thread>();
  this.buffer=new LinkedList<IN>();
  this.currentTriggerPolicies=new LinkedList<TriggerPolicy<IN>>();
}
