{
  final String className="Tuple" + numFields;
  w.print(HEADER);
  w.println("package " + PACKAGE + ';');
  w.println();
  w.println("import eu.stratosphere.util.StringUtils;");
  w.println();
  w.println("@SuppressWarnings({\"restriction\"})");
  ;
  w.print("public class " + className + "<");
  for (int i=0; i < numFields; i++) {
    if (i > 0) {
      w.print(", ");
    }
    w.print(GEN_TYPE_PREFIX + i);
  }
  w.println("> extends Tuple {");
  w.println();
  w.println("\tprivate static final long serialVersionUID = 1L;");
  w.println();
  for (int i=0; i < numFields; i++) {
    w.println("\tpublic " + GEN_TYPE_PREFIX + i+ " f"+ i+ ';');
  }
  w.println();
  w.println("\tpublic " + className + "() {}");
  w.println();
  w.print("\tpublic " + className + "(");
  for (int i=0; i < numFields; i++) {
    if (i > 0) {
      w.print(", ");
    }
    w.print(GEN_TYPE_PREFIX + i + " value"+ i);
  }
  w.println(") {");
  for (int i=0; i < numFields; i++) {
    w.println("\t\tthis.f" + i + " = value"+ i+ ';');
  }
  w.println("\t}");
  w.println();
  w.println("\t@Override");
  w.println("\tpublic int getArity() { return " + numFields + "; }");
  w.println();
  w.println("\t@Override");
  w.println("\t@SuppressWarnings(\"unchecked\")");
  w.println("\tpublic <T> T getField(int pos) {");
  w.println("\t\tswitch(pos) {");
  for (int i=0; i < numFields; i++) {
    w.println("\t\t\tcase " + i + ": return (T) this.f"+ i+ ';');
  }
  w.println("\t\t\tdefault: throw new IndexOutOfBoundsException(String.valueOf(pos));");
  w.println("\t\t}");
  w.println("\t}");
  w.println("\t@Override");
  w.println("\t@SuppressWarnings(\"unchecked\")");
  w.println("\tpublic <T> void setField(T value, int pos) {");
  w.println("\t\tswitch(pos) {");
  for (int i=0; i < numFields; i++) {
    w.println("\t\t\tcase " + i + ':');
    w.println("\t\t\t\tthis.f" + i + " = ("+ GEN_TYPE_PREFIX+ i+ ") value;");
    w.println("\t\t\t\tbreak;");
  }
  w.println("\t\t\tdefault: throw new IndexOutOfBoundsException(String.valueOf(pos));");
  w.println("\t\t}");
  w.println("\t}");
  w.print("\tpublic void setFields(");
  for (int i=0; i < numFields; i++) {
    if (i > 0) {
      w.print(", ");
    }
    w.print(GEN_TYPE_PREFIX + i + " value"+ i);
  }
  w.println(") {");
  for (int i=0; i < numFields; i++) {
    w.println("\t\tthis.f" + i + " = value"+ i+ ';');
  }
  w.println("\t}");
  w.println();
  w.println();
  w.println("\t// -------------------------------------------------------------------------------------------------");
  w.println("\t// standard utilities");
  w.println("\t// -------------------------------------------------------------------------------------------------");
  w.println();
  w.println("\t@Override");
  w.println("\tpublic String toString() {");
  w.println("\t\treturn \"(\" + StringUtils.arrayAwareToString(this.f0)");
  for (int i=1; i < numFields; i++) {
    w.println("\t\t\t+ \", \" + StringUtils.arrayAwareToString(this.f" + i + ")");
  }
  w.println("\t\t\t+ \")\";");
  w.println("\t}");
  w.println();
  w.println("\t// -------------------------------------------------------------------------------------------------");
  w.println("\t// unsafe fast field access");
  w.println("\t// -------------------------------------------------------------------------------------------------");
  w.println();
  w.println("\t@SuppressWarnings({ \"unchecked\"})");
  w.println("\tpublic <T> T getFieldFast(int pos) {");
  w.println("\t\treturn (T) UNSAFE.getObject(this, offsets[pos]);");
  w.println("\t}");
  w.println();
  w.println("\tprivate static final sun.misc.Unsafe UNSAFE = eu.stratosphere.core.memory.MemoryUtils.UNSAFE;");
  w.println();
  w.println("\tprivate static final long[] offsets = new long[" + numFields + "];");
  w.println();
  w.println("\tstatic {");
  w.println("\t\ttry {");
  for (int i=0; i < numFields; i++) {
    w.println("\t\t\toffsets[" + i + "] = UNSAFE.objectFieldOffset(Tuple"+ numFields+ ".class.getDeclaredField(\"f"+ i+ "\"));");
  }
  w.println("\t\t} catch (Throwable t) {");
  w.println("\t\t\tthrow new RuntimeException(\"Could not initialize fast field accesses for tuple data type.\");");
  w.println("\t\t}");
  w.println("\t}");
  w.println("}");
}
