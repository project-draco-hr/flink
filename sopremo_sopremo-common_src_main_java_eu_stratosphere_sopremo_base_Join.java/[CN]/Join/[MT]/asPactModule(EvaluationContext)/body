{
  PactModule module=new PactModule(this.getInputOperators().size(),1);
  ConditionalExpression condition=this.getCondition();
  if (condition.getCombination() != Combination.AND)   throw new UnsupportedOperationException();
  List<TwoSourceJoin> joinOrder=this.getInitialJoinOrder(condition);
  ArrayList<Contract> inputs=this.wrapInputsWithArray(context,module);
  DualInputContract<PactJsonObject.Key,PactJsonObject,PactJsonObject.Key,PactJsonObject,Key,PactJsonObject> join=null;
  for (  TwoSourceJoin twoSourceJoin : joinOrder) {
    join=twoSourceJoin.createJoinContract(module,context,inputs.get(twoSourceJoin.leftIndex),inputs.get(twoSourceJoin.rightIndex));
    inputs.set(twoSourceJoin.leftIndex,join);
    inputs.set(twoSourceJoin.rightIndex,join);
    SopremoUtil.setTransformationAndContext(join.getStubParameters(),new ArrayMerger(),context);
  }
  MapContract<PactNull,PactJsonObject,Key,PactJsonObject> projectionMap=new MapContract<PactNull,PactJsonObject,Key,PactJsonObject>(Projection.ProjectionStub.class);
  module.getOutput(0).setInput(projectionMap);
  projectionMap.setInput(join);
  SopremoUtil.setTransformationAndContext(projectionMap.getStubParameters(),this.getTransformation(),context);
  return module;
}
