{
  int keyCnt1=100;
  int valCnt1=2;
  int keyCnt2=200;
  int valCnt2=1;
  final int expCnt=valCnt1 * valCnt2 * Math.min(keyCnt1,keyCnt2) + (keyCnt1 > keyCnt2 ? (keyCnt1 - keyCnt2) * valCnt1 : (keyCnt2 - keyCnt1) * valCnt2);
  setOutput(this.output);
  addInputComparator(this.comparator1);
  addInputComparator(this.comparator2);
  getTaskConfig().setDriverPairComparator(PactRecordPairComparatorFactory.get());
  getTaskConfig().setDriverStrategy(DriverStrategy.CO_GROUP);
  final CoGroupDriver<PactRecord,PactRecord,PactRecord> testTask=new CoGroupDriver<PactRecord,PactRecord,PactRecord>();
  try {
    addInputSorted(new UniformPactRecordGenerator(keyCnt1,valCnt1,false),this.comparator1.duplicate());
    addInputSorted(new UniformPactRecordGenerator(keyCnt2,valCnt2,false),this.comparator2.duplicate());
    testDriver(testTask,MockCoGroupStub.class);
  }
 catch (  Exception e) {
    e.printStackTrace();
    Assert.fail("The test caused an exception.");
  }
  Assert.assertEquals("Wrong result set size.",expCnt,this.output.getNumberOfRecords());
}
