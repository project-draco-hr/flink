{
  Pattern<Event,Event> pattern=Pattern.<Event>begin("start").next("subevent").subtype(SubEvent.class).where(new FilterFunction<SubEvent>(){
    private static final long serialVersionUID=-4118591291880230304L;
    @Override public boolean filter(    SubEvent value) throws Exception {
      return false;
    }
  }
).followedBy("end");
  Pattern<Event,?> previous;
  Pattern<Event,?> previous2;
  assertNotNull(previous=pattern.getPrevious());
  assertNotNull(previous2=previous.getPrevious());
  assertNull(previous2.getPrevious());
  assertTrue(pattern instanceof FollowedByPattern);
  assertNotNull(previous.getFilterFunction());
  assertEquals(pattern.getName(),"end");
  assertEquals(previous.getName(),"subevent");
  assertEquals(previous2.getName(),"start");
}
