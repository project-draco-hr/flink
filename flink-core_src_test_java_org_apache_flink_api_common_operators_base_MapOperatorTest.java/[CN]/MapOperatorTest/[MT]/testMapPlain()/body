{
  try {
    final MapFunction<String,Integer> parser=new MapFunction<String,Integer>(){
      @Override public Integer map(      String value){
        return Integer.parseInt(value);
      }
    }
;
    MapOperatorBase<String,Integer,MapFunction<String,Integer>> op=new MapOperatorBase<String,Integer,MapFunction<String,Integer>>(parser,new UnaryOperatorInformation<String,Integer>(BasicTypeInfo.STRING_TYPE_INFO,BasicTypeInfo.INT_TYPE_INFO),"TestMapper");
    List<String> input=new ArrayList<String>(asList("1","2","3","4","5","6"));
    List<Integer> result=op.executeOnCollections(input,null);
    assertEquals(asList(1,2,3,4,5,6),result);
  }
 catch (  Exception e) {
    e.printStackTrace();
    fail(e.getMessage());
  }
}
