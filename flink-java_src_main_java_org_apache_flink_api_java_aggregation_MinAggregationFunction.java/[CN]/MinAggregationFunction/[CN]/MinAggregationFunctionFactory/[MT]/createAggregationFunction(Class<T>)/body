{
  if (Comparable.class.isAssignableFrom(type)) {
    if (ResettableValue.class.isAssignableFrom(type) && CopyableValue.class.isAssignableFrom(type)) {
      return (AggregationFunction<T>)new MutableMinAgg();
    }
 else {
      return (AggregationFunction<T>)new ImmutableMinAgg();
    }
  }
 else {
    throw new UnsupportedAggregationTypeException("The type " + type.getName() + " is not supported for minimum aggregation. "+ "Minimum aggregatable types must implement the Comparable interface.");
  }
}
