{
  Iterator<Double> sampled;
  if (sampleOnPartitions) {
    DistributedRandomSampler<Double> reservoirRandomSampler=(DistributedRandomSampler<Double>)sampler;
    List<IntermediateSampleData<Double>> intermediateResult=Lists.newLinkedList();
    for (int i=0; i < DEFAULT_PARTITION_NUMBER; i++) {
      Iterator<IntermediateSampleData<Double>> partialIntermediateResult=reservoirRandomSampler.sampleInPartition(sourcePartitions[i].iterator());
      while (partialIntermediateResult.hasNext()) {
        intermediateResult.add(partialIntermediateResult.next());
      }
    }
    sampled=reservoirRandomSampler.sampleInCoordinator(intermediateResult.iterator());
  }
 else {
    sampled=sampler.sample(source.iterator());
  }
  List<Double> list=Lists.newArrayList();
  while (sampled.hasNext()) {
    list.add(sampled.next());
  }
  return transferFromListToArrayWithOrder(list);
}
