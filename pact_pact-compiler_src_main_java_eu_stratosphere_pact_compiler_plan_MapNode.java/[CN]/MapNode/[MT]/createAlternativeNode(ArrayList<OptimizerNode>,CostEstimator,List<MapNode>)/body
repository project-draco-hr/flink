{
  ShipStrategy ss=ShipStrategy.NONE;
  for (  PactConnection c : this.input) {
    ShipStrategy newSS=c.getShipStrategy();
    if (newSS == ShipStrategy.BROADCAST || newSS == ShipStrategy.SFR)     return;
    if (ss == ShipStrategy.NONE) {
      ss=newSS;
      continue;
    }
    if (ss == newSS)     continue;
    return;
  }
  if (ss == ShipStrategy.NONE)   ss=ShipStrategy.FORWARD;
  GlobalProperties gp=PactConnection.getGlobalPropertiesAfterConnection(predList.get(0),this,ss);
  LocalProperties lp=PactConnection.getLocalPropertiesAfterConnection(predList.get(0),this,ss);
  MapNode nMap=new MapNode(this,predList,this.input,gp,lp);
  for (  PactConnection cc : nMap.getInputConnections()) {
    cc.setShipStrategy(ss);
  }
  nMap.getGlobalProperties().filterByOutputContract(getOutputContract());
  nMap.getLocalProperties().filterByOutputContract(getOutputContract());
  estimator.costOperator(nMap);
  outputPlans.add(nMap);
}
