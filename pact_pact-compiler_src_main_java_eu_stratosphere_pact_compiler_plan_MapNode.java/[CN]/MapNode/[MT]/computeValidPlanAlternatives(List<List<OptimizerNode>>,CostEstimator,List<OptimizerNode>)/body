{
  for (  List<OptimizerNode> predList : alternativeSubPlanCominations) {
    ShipStrategy ss=ShipStrategy.NONE;
    for (    PactConnection c : this.input) {
      ShipStrategy newSS=c.getShipStrategy();
      if (newSS == ShipStrategy.BROADCAST || newSS == ShipStrategy.SFR)       continue;
      if (ss == ShipStrategy.NONE) {
        ss=newSS;
        continue;
      }
      if (ss == newSS)       continue;
      continue;
    }
    if (ss == ShipStrategy.NONE)     ss=ShipStrategy.FORWARD;
    GlobalProperties gp;
    LocalProperties lp;
    if (predList.size() == 1) {
      gp=PactConnection.getGlobalPropertiesAfterConnection(predList.get(0),this,ss);
      lp=PactConnection.getLocalPropertiesAfterConnection(predList.get(0),this,ss);
    }
 else {
      gp=new GlobalProperties();
      lp=new LocalProperties();
    }
    MapNode nMap=new MapNode(this,predList,this.input,gp,lp);
    for (    PactConnection cc : nMap.getInputConnections()) {
      cc.setShipStrategy(ss);
    }
    nMap.getGlobalProperties().filterByNodesConstantSet(this,0);
    nMap.getLocalProperties().filterByNodesConstantSet(this,0);
    estimator.costOperator(nMap);
    outputPlans.add(nMap);
  }
}
