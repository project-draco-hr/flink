{
  OptimizerNode pred=input == null ? null : input.getSourcePact();
  CompilerHints hints=getPactContract().getCompilerHints();
  if (pred == null) {
    this.estimatedKeyCardinality=hints.getKeyCardinality();
    if (hints.getKeyCardinality() != -1 && hints.getAvgNumValuesPerKey() != -1) {
      this.estimatedNumRecords=(hints.getKeyCardinality() * hints.getAvgNumValuesPerKey()) >= 1 ? (long)(hints.getKeyCardinality() * hints.getAvgNumValuesPerKey()) : 1;
    }
    if (this.estimatedNumRecords != -1 && hints.getAvgBytesPerRecord() != -1) {
      this.estimatedOutputSize=(this.estimatedNumRecords * hints.getAvgBytesPerRecord() >= 1) ? (long)(this.estimatedNumRecords * hints.getAvgBytesPerRecord()) : 1;
    }
  }
 else {
    this.estimatedNumRecords=this.computeNumberOfStubCalls();
    this.estimatedKeyCardinality=-1;
    this.estimatedOutputSize=pred.estimatedOutputSize;
    boolean outputCardEstimated=true;
    if (hints.getKeyCardinality() != -1 && hints.getAvgNumValuesPerKey() != -1) {
      this.estimatedNumRecords=(hints.getKeyCardinality() * hints.getAvgNumValuesPerKey() >= 1) ? (long)(hints.getKeyCardinality() * hints.getAvgNumValuesPerKey()) : 1;
    }
 else     if (hints.getAvgRecordsEmittedPerStubCall() != 1.0) {
      this.estimatedNumRecords=(this.computeNumberOfStubCalls() * hints.getAvgRecordsEmittedPerStubCall() >= 1) ? (long)(this.computeNumberOfStubCalls() * hints.getAvgRecordsEmittedPerStubCall()) : 1;
    }
 else {
      outputCardEstimated=false;
    }
    if (hints.getKeyCardinality() != -1) {
      this.estimatedKeyCardinality=hints.getKeyCardinality();
    }
 else     if (!this.getOutputContract().equals(OutputContract.None)) {
      if (this.getOutputContract().equals(OutputContract.UniqueKey)) {
        this.estimatedKeyCardinality=this.estimatedNumRecords;
      }
 else       if (this.getOutputContract().equals(OutputContract.SameKey) || this.getOutputContract().equals(OutputContract.SameKeyFirst) || this.getOutputContract().equals(OutputContract.SameKeySecond)) {
        if (hints.getAvgRecordsEmittedPerStubCall() < 1.0) {
          double probToKeepKey=1.0 - Math.pow((1.0 - hints.getAvgRecordsEmittedPerStubCall()),this.computeStubCallsPerProcessedKey());
          this.estimatedKeyCardinality=(this.computeNumberOfProcessedKeys() * probToKeepKey >= 1) ? (long)(this.computeNumberOfProcessedKeys() * probToKeepKey) : 1;
        }
 else {
          this.estimatedKeyCardinality=this.computeNumberOfProcessedKeys();
        }
      }
    }
 else     if (hints.getAvgNumValuesPerKey() != -1 && this.estimatedNumRecords != -1) {
      this.estimatedKeyCardinality=(this.estimatedNumRecords / hints.getAvgNumValuesPerKey() >= 1) ? (long)(this.estimatedNumRecords / hints.getAvgNumValuesPerKey()) : 1;
    }
    if (this.estimatedKeyCardinality != -1 && !outputCardEstimated) {
      if (hints.getAvgNumValuesPerKey() != -1) {
        this.estimatedNumRecords=(this.estimatedKeyCardinality * hints.getAvgNumValuesPerKey() >= 1) ? (long)(this.estimatedKeyCardinality * hints.getAvgNumValuesPerKey()) : 1;
      }
    }
    double estAvgRecordWidth=this.computeAverageRecordWidth();
    if (this.estimatedNumRecords != -1 && estAvgRecordWidth != -1) {
      this.estimatedOutputSize=(this.estimatedNumRecords * estAvgRecordWidth) >= 1 ? (long)(this.estimatedNumRecords * estAvgRecordWidth) : 1;
    }
    if (this.estimatedKeyCardinality > this.estimatedNumRecords) {
      this.estimatedKeyCardinality=this.estimatedNumRecords;
    }
  }
}
