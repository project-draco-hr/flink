{
  final ParameterTool params=ParameterTool.fromArgs(args);
  System.out.println("Usage: IncrementalLearningSkeleton --output <path>");
  StreamExecutionEnvironment env=StreamExecutionEnvironment.getExecutionEnvironment();
  env.setStreamTimeCharacteristic(TimeCharacteristic.EventTime);
  DataStream<Integer> trainingData=env.addSource(new FiniteTrainingDataSource());
  DataStream<Integer> newData=env.addSource(new FiniteNewDataSource());
  DataStream<Double[]> model=trainingData.assignTimestampsAndWatermarks(new LinearTimestamp()).timeWindowAll(Time.of(5000,TimeUnit.MILLISECONDS)).apply(new PartialModelBuilder());
  DataStream<Integer> prediction=newData.connect(model).map(new Predictor());
  if (params.has("output")) {
    prediction.writeAsText(params.get("output"));
  }
 else {
    System.out.println("Printing result to stdout. Use --output to specify output path.");
    prediction.print();
  }
  env.execute("Streaming Incremental Learning");
}
