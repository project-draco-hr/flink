{
  List<OptimizerNode> alternatives=new LinkedList<OptimizerNode>();
  Stack<OptimizerNode> newInputs=new Stack<OptimizerNode>();
  Map<OptimizerNode,OptimizerNode> branchPlan=new HashMap<OptimizerNode,OptimizerNode>();
  List<List<? extends OptimizerNode>> inputs=new LinkedList<List<? extends OptimizerNode>>();
  for (  PactConnection inConn : inConns) {
    inputs.add(inConn.getSourcePact().getAlternativePlans(estimator));
  }
  calcAlternatives(alternatives,newInputs,0,inputs,null,branchPlan);
  prunePlanAlternatives(alternatives);
  return alternatives;
}
