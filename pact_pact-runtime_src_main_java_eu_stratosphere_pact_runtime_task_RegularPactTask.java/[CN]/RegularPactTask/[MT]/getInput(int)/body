{
  if (index < 0 || index > this.driver.getNumberOfInputs()) {
    throw new IndexOutOfBoundsException();
  }
  if (this.inputs[index] != null) {
    @SuppressWarnings("unchecked") MutableObjectIterator<X> in=(MutableObjectIterator<X>)this.inputs[index];
    return in;
  }
 else {
    final MutableObjectIterator<X> in;
    try {
      if (this.tempBarriers[index] != null) {
        @SuppressWarnings("unchecked") MutableObjectIterator<X> iter=(MutableObjectIterator<X>)tempBarriers[index].getIterator();
        in=iter;
      }
 else       if (this.localStrategies[index] != null) {
        @SuppressWarnings("unchecked") MutableObjectIterator<X> iter=(MutableObjectIterator<X>)this.localStrategies[index].getIterator();
        in=iter;
      }
 else {
        throw new RuntimeException("Bug: null input iterator, null temp barrier, and null local strategy.");
      }
      this.inputs[index]=in;
      return in;
    }
 catch (    InterruptedException iex) {
      throw new RuntimeException("Interrupted while waiting for input " + index + " to become available.");
    }
catch (    IOException ioex) {
      throw new RuntimeException("An I/O Exception occurred whily obaining input " + index + ".");
    }
  }
}
