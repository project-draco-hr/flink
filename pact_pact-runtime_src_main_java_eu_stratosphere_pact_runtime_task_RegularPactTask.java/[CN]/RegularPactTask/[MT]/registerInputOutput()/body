{
  if (LOG.isDebugEnabled()) {
    LOG.debug(formatLogString("Start registering input and output."));
  }
  if (this.userCodeClassLoader == null) {
    try {
      this.userCodeClassLoader=LibraryCacheManager.getClassLoader(getEnvironment().getJobID());
    }
 catch (    IOException ioe) {
      throw new RuntimeException("The ClassLoader for the user code could not be instantiated from the library cache.",ioe);
    }
  }
  this.config=new TaskConfig(getTaskConfiguration());
  final Class<? extends PactDriver<S,OT>> driverClass=this.config.getDriver();
  this.driver=InstantiationUtil.instantiate(driverClass,PactDriver.class);
  try {
    initStub(this.driver.getStubType());
  }
 catch (  Exception e) {
    throw new RuntimeException("Initializing the user code and the configuration failed" + e.getMessage() == null ? "." : ": " + e.getMessage(),e);
  }
  try {
    initInputs();
  }
 catch (  Exception e) {
    throw new RuntimeException("Initializing the input streams failed" + e.getMessage() == null ? "." : ": " + e.getMessage(),e);
  }
  try {
    initOutputs();
  }
 catch (  Exception e) {
    throw new RuntimeException("Initializing the output handlers failed" + e.getMessage() == null ? "." : ": " + e.getMessage(),e);
  }
  if (LOG.isDebugEnabled()) {
    LOG.debug(formatLogString("Finished registering input and output."));
  }
}
