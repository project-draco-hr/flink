{
  final Iterator<Map.Entry<InstanceType,Integer>> it=instanceRequestMap.getMinimumIterator();
  final List<AllocatedResource> assignedResources=new ArrayList<AllocatedResource>();
  boolean assignmentSuccessful=true;
  while (it.hasNext()) {
    final Map.Entry<InstanceType,Integer> entry=it.next();
    for (int i=0; i < entry.getValue().intValue(); i++) {
synchronized (this.synchronizationObject) {
        boolean instanceFound=false;
        for (        LocalInstance instance : localInstances.values()) {
          if (!allocatedResources.containsKey(instance)) {
            AllocatedResource assignedResource=new AllocatedResource(instance,entry.getKey(),new AllocationID());
            allocatedResources.put(instance,assignedResource);
            assignedResources.add(assignedResource);
            instanceFound=true;
            break;
          }
        }
        assignmentSuccessful&=instanceFound;
      }
    }
  }
  if (assignmentSuccessful) {
    new LocalInstanceNotifier(this.instanceListener,jobID,assignedResources).start();
  }
 else {
    throw new InstanceException("Could not satisfy instance request.");
  }
}
