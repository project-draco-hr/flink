{
  int scale=Long.SIZE - Long.numberOfLeadingZeros(vertexCount - 1);
  int cyclesPerEdge=noiseEnabled ? 5 * scale : scale;
  List<BlockInfo<T>> generatorBlocks=randomGenerableFactory.getRandomGenerables(edgeCount,cyclesPerEdge);
  DataSet<Edge<LongValue,NullValue>> edges=env.fromCollection(generatorBlocks).name("Random generators").rebalance().setParallelism(parallelism).name("Rebalance").flatMap(new GenerateEdges<T>(vertexCount,scale,A,B,C,noiseEnabled,noise)).setParallelism(parallelism).name("RMat graph edges");
  DataSet<Vertex<LongValue,NullValue>> vertices=GraphGeneratorUtils.vertexSet(edges,parallelism);
  return Graph.fromDataSet(vertices,edges,env);
}
