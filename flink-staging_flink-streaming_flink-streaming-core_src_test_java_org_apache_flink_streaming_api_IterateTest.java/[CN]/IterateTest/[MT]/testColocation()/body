{
  StreamExecutionEnvironment env=new TestStreamEnvironment(4,MEMORYSIZE);
  IterativeDataStream<Boolean> it=env.fromElements(true).distribute().map(new NoOpMap()).iterate();
  DataStream<Boolean> head=it.map(new NoOpMap()).setParallelism(2).name("HeadOperator");
  it.closeWith(head.map(new NoOpMap()).setParallelism(3).name("TailOperator")).print();
  JobGraph graph=env.getStreamGraph().getJobGraph();
  AbstractJobVertex itSource=null;
  AbstractJobVertex itSink=null;
  AbstractJobVertex headOp=null;
  AbstractJobVertex tailOp=null;
  for (  AbstractJobVertex vertex : graph.getVertices()) {
    if (vertex.getName().contains("IterationHead")) {
      itSource=vertex;
    }
 else     if (vertex.getName().contains("IterationTail")) {
      itSink=vertex;
    }
 else     if (vertex.getName().contains("HeadOperator")) {
      headOp=vertex;
    }
 else     if (vertex.getName().contains("TailOp")) {
      tailOp=vertex;
    }
  }
  assertTrue(itSource.getCoLocationGroup() != null);
  assertEquals(itSource.getCoLocationGroup(),itSink.getCoLocationGroup());
  assertEquals(headOp.getParallelism(),2);
  assertEquals(tailOp.getParallelism(),3);
  assertEquals(itSource.getParallelism(),itSink.getParallelism());
}
