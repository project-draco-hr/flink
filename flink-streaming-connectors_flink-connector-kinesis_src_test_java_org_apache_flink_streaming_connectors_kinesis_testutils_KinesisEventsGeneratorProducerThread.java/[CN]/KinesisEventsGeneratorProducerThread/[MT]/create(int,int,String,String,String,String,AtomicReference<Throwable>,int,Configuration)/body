{
  Runnable kinesisEventsGeneratorProducer=new Runnable(){
    @Override public void run(){
      try {
        StreamExecutionEnvironment see=StreamExecutionEnvironment.createRemoteEnvironment("localhost",flinkPort,flinkConfig);
        see.setParallelism(parallelism);
        DataStream<String> simpleStringStream=see.addSource(new KinesisEventsGeneratorProducerThread.EventsGenerator(totalEventCount)).setParallelism(1);
        Properties producerProps=new Properties();
        producerProps.setProperty(KinesisConfigConstants.CONFIG_AWS_CREDENTIALS_PROVIDER_BASIC_ACCESSKEYID,awsAccessKey);
        producerProps.setProperty(KinesisConfigConstants.CONFIG_AWS_CREDENTIALS_PROVIDER_BASIC_SECRETKEY,awsSecretKey);
        producerProps.setProperty(KinesisConfigConstants.CONFIG_AWS_REGION,awsRegion);
        FlinkKinesisProducer<String> kinesis=new FlinkKinesisProducer<>(new SimpleStringSchema(),producerProps);
        kinesis.setFailOnError(true);
        kinesis.setDefaultStream(kinesisStreamName);
        kinesis.setDefaultPartition("0");
        simpleStringStream.addSink(kinesis);
        LOG.info("Starting producing topology");
        see.execute("Producing topology");
        LOG.info("Producing topo finished");
      }
 catch (      Exception e) {
        LOG.warn("Error while running producing topology",e);
        errorHandler.set(e);
      }
    }
  }
;
  return new Thread(kinesisEventsGeneratorProducer);
}
