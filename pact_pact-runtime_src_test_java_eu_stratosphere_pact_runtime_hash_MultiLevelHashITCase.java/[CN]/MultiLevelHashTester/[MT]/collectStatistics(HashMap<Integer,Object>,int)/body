{
  SortedMap<Integer,Integer> bucketSizesForLevel=bucketSizesPerLevel.get(level);
  Iterator<Object> bucketIterator=map.values().iterator();
  int bucketCount=0;
  int totalValueCount=0;
  while (bucketIterator.hasNext()) {
    bucketCount++;
    Integer hashValuesInBucket;
    if (level == maxLevel - 1) {
      hashValuesInBucket=(Integer)bucketIterator.next();
    }
 else {
      @SuppressWarnings("unchecked") HashMap<Integer,Object> nextMap=(HashMap<Integer,Object>)bucketIterator.next();
      hashValuesInBucket=collectStatistics(nextMap,level + 1);
    }
    totalValueCount+=hashValuesInBucket;
    Integer countOfBucketSizes=bucketSizesForLevel.get(hashValuesInBucket);
    if (countOfBucketSizes == null) {
      countOfBucketSizes=1;
    }
 else {
      countOfBucketSizes+=1;
    }
    bucketSizesForLevel.put(hashValuesInBucket,countOfBucketSizes);
  }
  Integer countOfEmptyBuckets=bucketSizesForLevel.get(0);
  if (countOfEmptyBuckets == null) {
    countOfEmptyBuckets=rangeCalculators[level].getBucketCount() - bucketCount;
  }
 else {
    countOfEmptyBuckets+=rangeCalculators[level].getBucketCount() - bucketCount;
  }
  bucketSizesForLevel.put(0,countOfEmptyBuckets);
  return totalValueCount;
}
