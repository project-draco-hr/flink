{
  int keyCnt1=20;
  int valCnt1=1;
  int keyCnt2=10;
  int valCnt2=2;
  super.initEnvironment(6 * 1024 * 1024);
  super.addInput(new RegularlyGeneratedInputGenerator(keyCnt1,valCnt1,false));
  super.addInput(new RegularlyGeneratedInputGenerator(keyCnt2,valCnt2,false));
  super.addOutput(outList);
  MatchTask testTask=new MatchTask();
  super.getTaskConfig().setLocalStrategy(LocalStrategy.SORT_BOTH_MERGE);
  super.getTaskConfig().setMemorySize(6 * 1024 * 1024);
  super.getTaskConfig().setNumFilehandles(4);
  super.registerTask(testTask,MockMatchStub.class);
  try {
    testTask.invoke();
  }
 catch (  Exception e) {
    LOG.debug(e);
    Assert.fail("Invoke method caused exception.");
  }
  int expCnt=valCnt1 * valCnt2 * Math.min(keyCnt1,keyCnt2);
  Assert.assertTrue("Resultset size was " + outList.size() + ". Expected was "+ expCnt,outList.size() == expCnt);
  outList.clear();
}
