{
  File tmpOutFile=null;
  try {
    tmpOutFile=File.createTempFile("fileOutputFormatTest","Test1");
  }
 catch (  IOException e) {
    throw new RuntimeException("Test in error",e);
  }
  String tmpFilePath="file://" + tmpOutFile.getAbsolutePath();
  Configuration config=new Configuration();
  config.setString(FileOutputFormat.FILE_PARAMETER_KEY,tmpFilePath);
  config.setString(FileOutputFormat.WRITEMODE_PARAMETER_KEY,FileOutputFormat.WRITEMODE_CREATE);
  DummyFileOutputFormat dfof=new DummyFileOutputFormat();
  dfof.configure(config);
  boolean exception=false;
  try {
    dfof.open(0,2);
    dfof.close();
  }
 catch (  Exception e) {
    exception=true;
  }
  Assert.assertTrue(exception);
  tmpOutFile.delete();
  Assert.assertTrue("Directory could not be created.",tmpOutFile.mkdir());
  dfof=new DummyFileOutputFormat();
  dfof.configure(config);
  exception=false;
  try {
    dfof.open(0,2);
    dfof.close();
  }
 catch (  Exception e) {
    exception=true;
  }
  Assert.assertTrue(!exception);
  dfof=new DummyFileOutputFormat();
  dfof.configure(config);
  exception=false;
  try {
    dfof.open(0,2);
    dfof.close();
  }
 catch (  Exception e) {
    exception=true;
  }
  Assert.assertTrue(exception);
  (new File(tmpOutFile.getAbsoluteFile() + "/1")).delete();
  tmpOutFile.delete();
  dfof=new DummyFileOutputFormat();
  dfof.configure(config);
  exception=false;
  try {
    dfof.open(0,2);
    dfof.close();
  }
 catch (  Exception e) {
    exception=true;
  }
  Assert.assertTrue(!exception);
  (new File(tmpOutFile.getAbsoluteFile() + "/1")).delete();
  tmpOutFile.delete();
}
