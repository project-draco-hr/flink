{
  this.byteBufferedChannelManager.unregister(id,task);
  if (this.profiler != null) {
    this.profiler.unregisterOutputGateListeners(id);
    this.profiler.unregisterInputGateListeners(id);
    this.profiler.unregisterExecutionListener(id);
  }
  if (this.memoryManager != null) {
    this.memoryManager.releaseAll(task.getEnvironment().getInvokable());
  }
  int numberOfVerticesBelongingToThisJob=0;
synchronized (this.runningTasks) {
    final Iterator<Task> iterator=this.runningTasks.values().iterator();
    while (iterator.hasNext()) {
      final Task candidateTask=iterator.next();
      if (task.getJobID().equals(candidateTask.getJobID())) {
        numberOfVerticesBelongingToThisJob++;
      }
    }
  }
  if (numberOfVerticesBelongingToThisJob == 0) {
    try {
      LibraryCacheManager.unregister(task.getJobID());
    }
 catch (    IOException e) {
      LOG.debug("Unregistering the job vertex ID " + id + " caused an IOException");
    }
  }
}
