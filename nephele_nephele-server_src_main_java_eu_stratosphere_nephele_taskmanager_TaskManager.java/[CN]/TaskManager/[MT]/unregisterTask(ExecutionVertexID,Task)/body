{
synchronized (this) {
    this.byteBufferedChannelManager.unregister(id,task);
    task.unregisterProfiler(this.profiler);
    task.unregisterMemoryManager(this.memoryManager);
    if (!this.taskManagerPlugins.isEmpty()) {
      final Iterator<TaskManagerPlugin> it=this.taskManagerPlugins.values().iterator();
      while (it.hasNext()) {
        it.next().unregisterTask(id,task.getEnvironment());
      }
    }
    int numberOfVerticesBelongingToThisJob=0;
    final Iterator<Task> iterator=this.runningTasks.values().iterator();
    while (iterator.hasNext()) {
      final Task candidateTask=iterator.next();
      if (task.getJobID().equals(candidateTask.getJobID())) {
        numberOfVerticesBelongingToThisJob++;
      }
    }
    if (numberOfVerticesBelongingToThisJob == 0) {
      try {
        LibraryCacheManager.unregister(task.getJobID());
      }
 catch (      IOException e) {
        LOG.debug("Unregistering the job vertex ID " + id + " caused an IOException");
      }
    }
  }
}
