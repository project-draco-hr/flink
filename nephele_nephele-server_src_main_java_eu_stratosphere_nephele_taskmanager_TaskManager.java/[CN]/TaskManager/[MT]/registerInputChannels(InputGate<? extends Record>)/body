{
  final FileBufferManager fileBufferManager=this.byteBufferedChannelManager.getFileBufferManager();
  for (int i=0; i < eig.getNumberOfInputChannels(); i++) {
    AbstractInputChannel<? extends Record> eic=eig.getInputChannel(i);
    if (eic instanceof NetworkInputChannel<?>) {
      this.byteBufferedChannelManager.registerByteBufferedInputChannel((AbstractByteBufferedInputChannel<? extends Record>)eic);
      fileBufferManager.registerChannelToGateMapping(eic.getConnectedChannelID(),eig);
    }
 else     if (eic instanceof FileInputChannel<?>) {
      this.byteBufferedChannelManager.registerByteBufferedInputChannel((AbstractByteBufferedInputChannel<? extends Record>)eic);
      fileBufferManager.registerChannelToGateMapping(eic.getConnectedChannelID(),eig);
      this.checkpointManager.readChannelCheckpoint(eic.getConnectedChannelID());
    }
 else     if (eic instanceof InMemoryInputChannel<?>) {
      this.directChannelManager.registerDirectInputChannel((AbstractDirectInputChannel<? extends Record>)eic);
    }
 else {
      throw new ChannelSetupException("Type of input channel " + eic.getID() + " is not supported");
    }
  }
}
