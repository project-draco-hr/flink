{
  for (int i=0; i < environment.getNumberOfOutputGates(); i++) {
    unregisterOutputChannels(environment.getOutputGate(i));
  }
  if (this.profiler != null) {
    this.profiler.unregisterOutputGateListeners(id);
  }
  for (int i=0; i < environment.getNumberOfInputGates(); i++) {
    unregisterInputChannels(environment.getInputGate(i));
  }
  if (this.profiler != null) {
    this.profiler.unregisterInputGateListeners(id);
  }
  if (this.profiler != null) {
    this.profiler.unregisterExecutionListener(id);
  }
  int numberOfVerticesBelongingToThisJob=0;
synchronized (this.runningTasks) {
    final Iterator<Environment> iterator=this.runningTasks.values().iterator();
    while (iterator.hasNext()) {
      final Environment candidateEnvironment=iterator.next();
      if (environment.getJobID().equals(candidateEnvironment.getJobID())) {
        numberOfVerticesBelongingToThisJob++;
      }
    }
  }
  if (numberOfVerticesBelongingToThisJob == 0) {
    try {
      LibraryCacheManager.unregister(environment.getJobID());
    }
 catch (    IOException e) {
      LOG.debug("Unregistering the job vertex ID " + id + " caused an IOException");
    }
  }
}
