{
  final String scheme=checkpointDataUri.getScheme();
  final String path=checkpointDataUri.getPath();
  if (scheme == null) {
    throw new IllegalArgumentException("The scheme (hdfs://, file://, etc) is null. " + "Please specify the file system scheme explicitly in the URI.");
  }
  if (path == null) {
    throw new IllegalArgumentException("The path to store the checkpoint data in is null. " + "Please specify a directory path for the checkpoint data.");
  }
  if (path.length() == 0 || path.equals("/")) {
    throw new IllegalArgumentException("Cannot use the root directory for checkpoints.");
  }
  this.filesystem=FileSystem.get(checkpointDataUri);
  if (this.filesystem == null) {
    throw new IOException("Could not find a file system for the given scheme in the available configurations.");
  }
  URI fsURI=this.filesystem.getUri();
  try {
    URI baseURI=new URI(fsURI.getScheme(),fsURI.getAuthority(),path,null,null);
    this.basePath=new Path(baseURI);
  }
 catch (  URISyntaxException e) {
    throw new IOException(String.format("Cannot create file system URI for checkpointDataUri %s and filesystem URI %s",checkpointDataUri,fsURI),e);
  }
}
