{
  if (visitable instanceof BinaryUnionPlanNode) {
    final BinaryUnionPlanNode unionNode=(BinaryUnionPlanNode)visitable;
    final Channel in1=unionNode.getInput1();
    final Channel in2=unionNode.getInput2();
    if (!unionNode.unionsStaticAndDynamicPath()) {
      NAryUnionPlanNode newUnionNode;
      List<Channel> inputs=new ArrayList<Channel>();
      collect(in1,inputs);
      collect(in2,inputs);
      newUnionNode=new NAryUnionPlanNode(unionNode.getOptimizerNode(),inputs,unionNode.getGlobalProperties(),unionNode.getCumulativeCosts());
      newUnionNode.setDegreeOfParallelism(unionNode.getDegreeOfParallelism());
      for (      Channel c : inputs) {
        c.setTarget(newUnionNode);
      }
      for (      Channel channel : unionNode.getOutgoingChannels()) {
        channel.swapUnionNodes(newUnionNode);
        newUnionNode.addOutgoingChannel(channel);
      }
    }
 else {
      if (in1.isOnDynamicPath()) {
        BinaryUnionPlanNode newUnionNode=new BinaryUnionPlanNode(unionNode);
        in1.setTarget(newUnionNode);
        in2.setTarget(newUnionNode);
        for (        Channel channel : unionNode.getOutgoingChannels()) {
          channel.swapUnionNodes(newUnionNode);
          newUnionNode.addOutgoingChannel(channel);
        }
      }
    }
  }
}
