{
  MapFunction<?,?> function=new MapFunction<String,Testable>(){
    private static final long serialVersionUID=1L;
    @Override public Testable map(    String value) throws Exception {
      return null;
    }
  }
;
  boolean exception=false;
  try {
    TypeExtractor.getMapReturnTypes(function,null);
  }
 catch (  InvalidTypesException e) {
    exception=true;
  }
  Assert.assertTrue(exception);
  MapFunction<?,?> function2=new MapFunction<String,AbstractClass>(){
    private static final long serialVersionUID=1L;
    @Override public AbstractClass map(    String value) throws Exception {
      return null;
    }
  }
;
  boolean exception2=false;
  try {
    TypeExtractor.getMapReturnTypes(function2,null);
  }
 catch (  InvalidTypesException e) {
    exception2=true;
  }
  Assert.assertTrue(exception2);
}
