{
  for (int i=0; i < groupVertex.getCurrentNumberOfGroupMembers(); i++) {
    final AllocatedResource ar=groupVertex.getGroupMember(i).getAllocatedResource();
    if (ar.getInstance() instanceof DummyInstance) {
      return false;
    }
  }
  final InputSplit[] is=groupVertex.getInputSplits();
  if (is == null) {
    throw new Exception("Group vertex" + groupVertex.getName() + " has no input splits assigned");
  }
  if (!(is instanceof FileInputSplit[])) {
    throw new Exception("Input splits to assign are not of type FileInputSplit. Wrong input split assigner registered.");
  }
  final FileInputSplit[] inputSplits=(FileInputSplit[])is;
  if (LOG.isInfoEnabled())   LOG.info("Number of input splits: " + inputSplits.length + " for "+ groupVertex.getName());
  initializePriorityQueue(groupVertex,inputSplits);
  for (int i=0; i < inputSplits.length; i++) {
    addFileSplit(inputSplits[i]);
  }
  verifyAssignments();
  this.vertexPrioQueue.clear();
  return true;
}
