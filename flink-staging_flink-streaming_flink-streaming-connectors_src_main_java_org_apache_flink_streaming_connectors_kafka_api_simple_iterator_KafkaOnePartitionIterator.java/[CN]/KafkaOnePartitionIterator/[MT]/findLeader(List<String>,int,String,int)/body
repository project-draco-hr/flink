{
  PartitionMetadata returnMetaData=null;
  loop:   for (  String seed : a_hosts) {
    SimpleConsumer consumer=null;
    try {
      consumer=new SimpleConsumer(seed,a_port,100000,64 * 1024,"leaderLookup");
      List<String> topics=Collections.singletonList(a_topic);
      TopicMetadataRequest req=new TopicMetadataRequest(topics);
      kafka.javaapi.TopicMetadataResponse resp=consumer.send(req);
      List<TopicMetadata> metaData=resp.topicsMetadata();
      for (      TopicMetadata item : metaData) {
        for (        PartitionMetadata part : item.partitionsMetadata()) {
          if (part.partitionId() == a_partition) {
            returnMetaData=part;
            break loop;
          }
        }
      }
    }
 catch (    Exception e) {
      throw new RuntimeException("Error communicating with Broker [" + seed + "] to find Leader for ["+ a_topic+ ", "+ a_partition+ "]",e);
    }
 finally {
      if (consumer != null) {
        consumer.close();
      }
    }
  }
  if (returnMetaData != null) {
    replicaBrokers.clear();
    for (    kafka.cluster.Broker replica : returnMetaData.replicas()) {
      replicaBrokers.add(replica.host());
    }
  }
  return returnMetaData;
}
