{
  try {
    final Random rnd=new Random();
    final long seed=rnd.nextLong();
    final int numBuffers=325;
    final int numChannels=671;
    rnd.setSeed(seed);
    for (int i=0; i < numBuffers; i++) {
      writeBuffer(fileChannel,rnd.nextInt(pageSize) + 1,rnd.nextInt(numChannels));
    }
    fileChannel.position(0L);
    rnd.setSeed(seed);
    SpilledBufferOrEventSequence seq=new SpilledBufferOrEventSequence(tempFile,fileChannel,buffer,pageSize);
    seq.open();
    for (int i=0; i < numBuffers; i++) {
      validateBuffer(seq.getNext(),rnd.nextInt(pageSize) + 1,rnd.nextInt(numChannels));
    }
    assertNull(seq.getNext());
  }
 catch (  Exception e) {
    e.printStackTrace();
    fail(e.getMessage());
  }
}
