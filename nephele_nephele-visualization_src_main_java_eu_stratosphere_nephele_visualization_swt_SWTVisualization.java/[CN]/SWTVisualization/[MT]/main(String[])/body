{
  String configDir=null;
  for (int i=0; i < (args.length - 1); i++) {
    if (CONFIG_DIR_PARAMETER.equals(args[i])) {
      configDir=args[i + 1];
      break;
    }
  }
  if (configDir == null) {
    LOG.error("Please specify Nephele configuration directory with " + CONFIG_DIR_PARAMETER);
    System.exit(1);
    return;
  }
  GlobalConfiguration.loadConfiguration(configDir);
  final String address=GlobalConfiguration.getString(ConfigConstants.JOB_MANAGER_IPC_ADDRESS_KEY,null);
  if (address == null) {
    LOG.error("Cannot find address to job manager's RPC service in configuration");
    System.exit(1);
    return;
  }
  final int port=GlobalConfiguration.getInteger(ConfigConstants.JOB_MANAGER_IPC_PORT_KEY,-1);
  if (port < 0) {
    LOG.error("Cannot find port to job manager's RPC service in configuration");
    System.exit(1);
    return;
  }
  RPCService rpcService=null;
  try {
    rpcService=new RPCService(ManagementTypeUtils.getRPCTypesToRegister());
  }
 catch (  IOException ioe) {
    LOG.error("Error initializing the RPC service: " + StringUtils.stringifyException(ioe));
    System.exit(1);
    return;
  }
  final InetSocketAddress inetaddr=new InetSocketAddress(address,port);
  ExtendedManagementProtocol jobManager=null;
  int queryInterval=-1;
  try {
    jobManager=rpcService.getProxy(inetaddr,ExtendedManagementProtocol.class);
    queryInterval=jobManager.getRecommendedPollingInterval();
  }
 catch (  Exception e) {
    e.printStackTrace();
    rpcService.shutDown();
    System.exit(1);
    return;
  }
  final SWTVisualizationGUI swtVisualizationGUI=new SWTVisualizationGUI(jobManager,queryInterval);
  final Shell shell=swtVisualizationGUI.getShell();
  final Display display=swtVisualizationGUI.getDisplay();
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch()) {
      display.sleep();
    }
  }
  display.dispose();
  rpcService.shutDown();
}
