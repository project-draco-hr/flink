{
  while (true) {
    ExecutionState2 current=this.state;
    if (current == CANCELING || current == CANCELED) {
      return;
    }
 else     if (current == RUNNING || current == DEPLOYING) {
      if (STATE_UPDATER.compareAndSet(this,current,CANCELING)) {
        getExecutionGraph().notifyExecutionChange(getJobvertexId(),subTaskIndex,CANCELING,null);
        sendCancelRpcCall();
        return;
      }
    }
 else     if (current == FINISHED || current == FAILED) {
      return;
    }
 else     if (current == CREATED || current == SCHEDULED) {
      if (STATE_UPDATER.compareAndSet(this,current,CANCELED)) {
        getExecutionGraph().notifyExecutionChange(getJobvertexId(),subTaskIndex,CANCELED,null);
        return;
      }
    }
 else {
      throw new IllegalStateException(current.name());
    }
  }
}
