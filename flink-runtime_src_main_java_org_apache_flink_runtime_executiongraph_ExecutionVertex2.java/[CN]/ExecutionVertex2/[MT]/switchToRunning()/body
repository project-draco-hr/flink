{
  if (STATE_UPDATER.compareAndSet(ExecutionVertex2.this,DEPLOYING,RUNNING)) {
    getExecutionGraph().notifyExecutionChange(getJobvertexId(),subTaskIndex,RUNNING,null);
    this.jobVertex.vertexSwitchedToRunning(subTaskIndex);
  }
 else {
    ExecutionState2 currentState=ExecutionVertex2.this.state;
    if (currentState == CANCELING) {
      if (LOG.isDebugEnabled()) {
        LOG.debug(String.format("Concurrent canceling of task %s while deployment was in progress.",ExecutionVertex2.this.toString()));
      }
      sendCancelRpcCall();
    }
 else {
      if (LOG.isDebugEnabled()) {
        LOG.debug(String.format("Concurrent unexpected state transition of task %s while deployment was in progress.",ExecutionVertex2.this.toString()));
      }
      sendCancelRpcCall();
      fail(new Exception("Asynchronous state error. Execution Vertex switched to " + currentState + " while deployment was in progress."));
    }
  }
}
