{
  if ((offset | numBytes | (offset + numBytes)) < 0) {
    throw new IndexOutOfBoundsException();
  }
  final int targetOffset=target.position();
  final int remaining=target.remaining();
  if (remaining < numBytes) {
    throw new BufferOverflowException();
  }
  if (target.isDirect()) {
    final long targetPointer=getAddress(target) + targetOffset;
    final long sourcePointer=address + offset;
    if (sourcePointer <= addressLimit - numBytes) {
      UNSAFE.copyMemory(heapMemory,sourcePointer,null,targetPointer,numBytes);
      target.position(targetOffset + numBytes);
    }
 else     if (address > addressLimit) {
      throw new IllegalStateException("segment has been freed");
    }
 else {
      throw new IndexOutOfBoundsException();
    }
  }
 else   if (target.hasArray()) {
    get(offset,target.array(),targetOffset + target.arrayOffset(),numBytes);
    target.position(targetOffset + numBytes);
  }
 else {
    while (target.hasRemaining()) {
      target.put(get(offset++));
    }
  }
}
