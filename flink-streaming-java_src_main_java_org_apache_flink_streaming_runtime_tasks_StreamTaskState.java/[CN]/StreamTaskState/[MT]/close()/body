{
  StateHandle<?> operatorState=this.operatorState;
  StateHandle<?> functionState=this.functionState;
  HashMap<String,KvStateSnapshot<?,?,?,?,?>> kvStates=this.kvStates;
  this.operatorState=null;
  this.functionState=null;
  this.kvStates=null;
  Throwable firstException=null;
  if (operatorState != null) {
    try {
      operatorState.close();
    }
 catch (    Throwable t) {
      firstException=t;
    }
  }
  if (functionState != null) {
    try {
      functionState.close();
    }
 catch (    Throwable t) {
      if (firstException == null) {
        firstException=t;
      }
    }
  }
  if (kvStates != null) {
    while (kvStates.size() > 0) {
      try {
        Iterator<KvStateSnapshot<?,?,?,?,?>> values=kvStates.values().iterator();
        while (values.hasNext()) {
          KvStateSnapshot<?,?,?,?,?> s=values.next();
          try {
            s.close();
          }
 catch (          Throwable t) {
            if (firstException == null) {
              firstException=t;
            }
          }
          values.remove();
        }
      }
 catch (      ConcurrentModificationException e) {
      }
    }
  }
  if (firstException != null) {
    ExceptionUtils.rethrowIOException(firstException);
  }
}
