{
  final ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
  DataSet<Long> ds=env.generateSequence(0,1000);
  ds.map(new MapFunction<Long,Long>(){
    Random rand=new Random(1234l);
    @Override public Long map(    Long value) throws Exception {
      return rand.nextLong();
    }
  }
).writeAsText(resultPath).sortLocalOutput("*",Order.ASCENDING).setParallelism(4);
  env.execute();
  BufferedReader[] resReaders=getResultReader(resultPath);
  for (  BufferedReader br : resReaders) {
    long cmp=Long.MIN_VALUE;
    while (br.ready()) {
      long cur=Long.parseLong(br.readLine());
      assertTrue("Invalid order of sorted output",cmp <= cur);
      cmp=cur;
    }
    br.close();
  }
}
