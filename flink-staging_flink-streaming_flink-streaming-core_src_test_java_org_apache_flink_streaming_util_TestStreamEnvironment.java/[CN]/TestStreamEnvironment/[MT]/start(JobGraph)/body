{
  if (cluster != null) {
    throw new IllegalStateException("The cluster is already running");
  }
  if (internalExecutor) {
    Configuration configuration=jobGraph.getJobConfiguration();
    configuration.setInteger(ConfigConstants.TASK_MANAGER_NUM_TASK_SLOTS,getParallelism());
    configuration.setLong(ConfigConstants.TASK_MANAGER_MEMORY_SIZE_KEY,memorySize);
    cluster=new ForkableFlinkMiniCluster(configuration);
  }
 else {
    cluster=executor;
  }
  try {
    sync=false;
    jobRunner=new Thread(){
      public void run(){
        try {
          latestResult=cluster.submitJobAndWait(jobGraph,false);
        }
 catch (        JobExecutionException e) {
          latestResult=new JobExecutionResult(null,0,null);
          e.printStackTrace();
        }
catch (        Exception e) {
          new RuntimeException(e);
        }
      }
    }
;
    jobRunner.start();
  }
 catch (  RuntimeException e) {
    if (e.getCause().getMessage().contains("GraphConversionException")) {
      throw new Exception(CANNOT_EXECUTE_EMPTY_JOB,e);
    }
 else {
      throw e;
    }
  }
}
