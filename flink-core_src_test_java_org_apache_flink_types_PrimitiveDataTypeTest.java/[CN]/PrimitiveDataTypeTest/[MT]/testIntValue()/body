{
  IntValue int0=new IntValue(10);
  Assert.assertEquals(10,int0.getValue());
  IntValue int1=new IntValue(10);
  IntValue int2=new IntValue(-10);
  IntValue int3=new IntValue(20);
  Assert.assertEquals(int0.compareTo(int0),0);
  Assert.assertEquals(int0.compareTo(int1),0);
  Assert.assertEquals(int0.compareTo(int2),1);
  Assert.assertEquals(int0.compareTo(int3),-1);
  try {
    int0.write(mOut);
    int2.write(mOut);
    int3.write(mOut);
    IntValue int1n=new IntValue();
    IntValue int2n=new IntValue();
    IntValue int3n=new IntValue();
    int1n.read(mIn);
    int2n.read(mIn);
    int3n.read(mIn);
    Assert.assertEquals(int0.compareTo(int1n),0);
    Assert.assertEquals(int0.getValue(),int1n.getValue());
    Assert.assertEquals(int2.compareTo(int2n),0);
    Assert.assertEquals(int2.getValue(),int2n.getValue());
    Assert.assertEquals(int3.compareTo(int3n),0);
    Assert.assertEquals(int3.getValue(),int3n.getValue());
  }
 catch (  Exception e) {
    Assert.fail(e.getMessage());
  }
}
