{
  String className=value.getClass().getSimpleName().toUpperCase();
  if (className.startsWith("TUPLE")) {
    className="TUPLE";
  }
  if (className.startsWith("BYTE[]")) {
    className="BYTES";
  }
  SupportedTypes type=SupportedTypes.valueOf(className);
switch (type) {
case TUPLE:
    return new TupleSerializer((Tuple)value);
case BOOLEAN:
  return new BooleanSerializer();
case BYTE:
return new ByteSerializer();
case BYTES:
return new BytesSerializer();
case INTEGER:
return new IntSerializer();
case LONG:
return new LongSerializer();
case STRING:
return new StringSerializer();
case FLOAT:
return new FloatSerializer();
case DOUBLE:
return new DoubleSerializer();
case NULL:
return new NullSerializer();
case CUSTOMTYPEWRAPPER:
return new CustomTypeWrapperSerializer((CustomTypeWrapper)value);
default :
throw new IllegalArgumentException("Unsupported Type encountered: " + type);
}
}
