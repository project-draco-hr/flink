{
  OneInputStreamOperator<StreamWindow<Integer>,StreamWindow<Integer>> windowReducer=new WindowReducer<Integer>(new ReduceFunction<Integer>(){
    private static final long serialVersionUID=1L;
    @Override public Integer reduce(    Integer value1,    Integer value2) throws Exception {
      return value1 + value2;
    }
  }
);
  List<StreamWindow<Integer>> input=new ArrayList<StreamWindow<Integer>>();
  input.add(StreamWindow.fromElements(1,2,3));
  input.add(new StreamWindow<Integer>());
  input.add(StreamWindow.fromElements(-1));
  List<StreamWindow<Integer>> expected=new ArrayList<StreamWindow<Integer>>();
  expected.add(StreamWindow.fromElements(6));
  expected.add(new StreamWindow<Integer>());
  expected.add(StreamWindow.fromElements(-1));
  List<StreamWindow<Integer>> output=MockContext.createAndExecute(windowReducer,input);
  assertEquals(expected,output);
}
