{
  ActorGateway jobManagerGateway=getJobManagerGateway();
  Future<Object> response;
  try {
    response=jobManagerGateway.ask(new RequestAccumulatorResults(jobID),timeout);
  }
 catch (  Exception e) {
    throw new Exception("Failed to query the job manager gateway for accumulators.",e);
  }
  Object result=Await.result(response,timeout);
  if (result instanceof AccumulatorResultsFound) {
    Map<String,SerializedValue<Object>> serializedAccumulators=((AccumulatorResultsFound)result).result();
    return AccumulatorHelper.deserializeAccumulators(serializedAccumulators,loader);
  }
 else   if (result instanceof AccumulatorResultsErroneous) {
    throw ((AccumulatorResultsErroneous)result).cause();
  }
 else {
    throw new Exception("Failed to fetch accumulators for the job " + jobID + ".");
  }
}
