{
  final AtomicInteger endOfSuperstepEventCounter=new AtomicInteger(0);
  final AtomicInteger terminationEventCounter=new AtomicInteger(0);
  final int numberOfEventsUntilInterrupt=getTaskConfig().getNumberOfEventsUntilInterruptInIterativeGate(0);
  listenToEndOfSuperstep(0,new Callback<EndOfSuperstepEvent>(){
    @Override public void execute(    EndOfSuperstepEvent event) throws Exception {
      int numEndOfSuperstepEvents=endOfSuperstepEventCounter.incrementAndGet();
      if (numEndOfSuperstepEvents % numberOfEventsUntilInterrupt == 0) {
        propagateEvent(event);
      }
    }
  }
);
  listenToTermination(0,new Callback<TerminationEvent>(){
    @Override public void execute(    TerminationEvent event) throws Exception {
      int numTerminationEvents=terminationEventCounter.incrementAndGet();
      if (numTerminationEvents % numberOfEventsUntilInterrupt == 0) {
        propagateEvent(event);
        terminated=true;
      }
    }
  }
);
  while (!terminated) {
    if (log.isInfoEnabled()) {
      log.info(formatLogString("starting iteration [" + numIterations + "]"));
    }
    if (numIterations > 0) {
      reinstantiateDriver();
    }
    super.invoke();
    if (log.isInfoEnabled()) {
      log.info(formatLogString("finishing iteration [" + numIterations + "]"));
    }
    numIterations++;
  }
}
