{
switch (progId) {
case 1:
{
      final ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
      DataSet<Tuple5<Integer,Long,Integer,String,Long>> ds=CollectionDataSets.get5TupleDataSet(env);
      DataSet<Tuple3<String,Long,Integer>> projDs=ds.project(3,4,2).types(String.class,Long.class,Integer.class);
      projDs.writeAsCsv(resultPath);
      env.execute();
      return "Hallo,1,0\n" + "Hallo Welt,2,1\n" + "Hallo Welt wie,1,2\n"+ "Hallo Welt wie gehts?,2,3\n"+ "ABC,2,4\n"+ "BCD,3,5\n"+ "CDE,2,6\n"+ "DEF,1,7\n"+ "EFG,1,8\n"+ "FGH,2,9\n"+ "GHI,1,10\n"+ "HIJ,3,11\n"+ "IJK,3,12\n"+ "JKL,2,13\n"+ "KLM,2,14\n";
    }
case 2:
{
    final ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
    DataSet<Tuple5<Integer,Long,Integer,String,Long>> ds=CollectionDataSets.get5TupleDataSet(env);
    DataSet<Tuple3<Integer,String,Long>> projDs=ds.project("TFFTT").types(Integer.class,String.class,Long.class);
    projDs.writeAsCsv(resultPath);
    env.execute();
    return "1,Hallo,1\n" + "2,Hallo Welt,2\n" + "2,Hallo Welt wie,1\n"+ "3,Hallo Welt wie gehts?,2\n"+ "3,ABC,2\n"+ "3,BCD,3\n"+ "4,CDE,2\n"+ "4,DEF,1\n"+ "4,EFG,1\n"+ "4,FGH,2\n"+ "5,GHI,1\n"+ "5,HIJ,3\n"+ "5,IJK,3\n"+ "5,JKL,2\n"+ "5,KLM,2\n";
  }
case 3:
{
  final ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
  DataSet<Tuple5<Integer,Long,Integer,String,Long>> ds=CollectionDataSets.get5TupleDataSet(env);
  DataSet<Tuple3<Integer,String,Long>> projDs=ds.project(false,false,true,true,true).types(Integer.class,String.class,Long.class);
  projDs.writeAsCsv(resultPath);
  env.execute();
  return "0,Hallo,1\n" + "1,Hallo Welt,2\n" + "2,Hallo Welt wie,1\n"+ "3,Hallo Welt wie gehts?,2\n"+ "4,ABC,2\n"+ "5,BCD,3\n"+ "6,CDE,2\n"+ "7,DEF,1\n"+ "8,EFG,1\n"+ "9,FGH,2\n"+ "10,GHI,1\n"+ "11,HIJ,3\n"+ "12,IJK,3\n"+ "13,JKL,2\n"+ "14,KLM,2\n";
}
default :
throw new IllegalArgumentException("Invalid program id");
}
}
