{
  this.jobID.write(kryo,output);
  this.vertexID.write(kryo,output);
  output.writeString(this.taskName);
  output.writeInt(this.indexInSubtaskGroup);
  output.writeInt(this.currentNumberOfSubtasks);
  EnumUtils.writeEnum(output,this.initialCheckpointState);
  String[] requiredJarFiles=null;
  try {
    requiredJarFiles=LibraryCacheManager.getRequiredJarFiles(this.jobID);
  }
 catch (  IOException ioe) {
    throw new RuntimeException(ioe);
  }
  output.writeInt(requiredJarFiles.length);
  for (int i=0; i < requiredJarFiles.length; i++) {
    output.writeString(requiredJarFiles[i]);
  }
  if (this.invokableClass == null) {
    throw new RuntimeException("this.invokableClass is null");
  }
  output.writeString(this.invokableClass.getName());
  this.jobConfiguration.write(kryo,output);
  this.taskConfiguration.write(kryo,output);
  kryo.writeObject(output,this.outputGates);
  kryo.writeObject(output,this.inputGates);
}
