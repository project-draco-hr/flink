{
  if (cachedPlans != null) {
    return cachedPlans;
  }
  GlobalProperties gp=new GlobalProperties();
  LocalProperties lp=new LocalProperties();
  DataSourceNode candidate=new DataSourceNode(this,gp,lp);
  candidate.setCosts(new Costs(0,this.estimatedOutputSize));
  List<DataSourceNode> plans=Collections.singletonList(candidate);
  if (isBranching()) {
    this.cachedPlans=plans;
  }
  return plans;
}
