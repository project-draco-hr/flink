{
  DataStreamSource<OUT> returnStream=new DataStreamSource<OUT>(this,"elements");
  if (data == null) {
    throw new NullPointerException("Collection must not be null");
  }
  if (data.isEmpty()) {
    throw new IllegalArgumentException("Collection must not be empty");
  }
  try {
    SourceFunction<OUT> function=new FromElementsFunction<OUT>(data);
    jobGraphBuilder.addSource(returnStream.getId(),new SourceInvokable<OUT>(new FromElementsFunction<OUT>(data)),new ObjectTypeWrapper<OUT>(data.iterator().next()),"source",SerializationUtils.serialize(function),1);
  }
 catch (  SerializationException e) {
    throw new RuntimeException("Cannot serialize collection");
  }
  return returnStream;
}
