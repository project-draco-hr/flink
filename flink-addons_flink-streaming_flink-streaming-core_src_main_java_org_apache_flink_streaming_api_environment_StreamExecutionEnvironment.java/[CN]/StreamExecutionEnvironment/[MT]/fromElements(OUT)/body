{
  if (data.length == 0) {
    throw new IllegalArgumentException("fromElements needs at least one element as argument");
  }
  TypeInformation<OUT> outTypeInfo=TypeExtractor.getForObject(data[0]);
  DataStreamSource<OUT> returnStream=new DataStreamSource<OUT>(this,"elements",outTypeInfo);
  try {
    SourceFunction<OUT> function=new FromElementsFunction<OUT>(data);
    jobGraphBuilder.addStreamVertex(returnStream.getId(),new SourceInvokable<OUT>(function),null,outTypeInfo,"source",SerializationUtils.serialize(function),1);
  }
 catch (  SerializationException e) {
    throw new RuntimeException("Cannot serialize elements");
  }
  return returnStream;
}
