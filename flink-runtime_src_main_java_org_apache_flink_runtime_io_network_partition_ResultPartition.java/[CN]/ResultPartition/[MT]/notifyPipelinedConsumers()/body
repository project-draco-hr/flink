{
  if (partitionType.isPipelined() && !hasNotifiedPipelinedConsumers) {
    ScheduleOrUpdateConsumers msg=new ScheduleOrUpdateConsumers(jobId,partitionId);
    Future<Object> futureResponse=Patterns.ask(networkEnvironment.getJobManager(),msg,networkEnvironment.getJobManagerTimeout());
    futureResponse.onFailure(new OnFailure(){
      @Override public void onFailure(      Throwable failure) throws Throwable {
        LOG.error("Could not schedule or update consumers at the JobManager.",failure);
        FailTask failMsg=new FailTask(partitionId.getProducerId(),new RuntimeException("Could not schedule or update consumers at " + "the JobManager.",failure));
        networkEnvironment.getTaskManager().tell(failMsg,ActorRef.noSender());
      }
    }
,AkkaUtils.globalExecutionContext());
    hasNotifiedPipelinedConsumers=true;
  }
}
