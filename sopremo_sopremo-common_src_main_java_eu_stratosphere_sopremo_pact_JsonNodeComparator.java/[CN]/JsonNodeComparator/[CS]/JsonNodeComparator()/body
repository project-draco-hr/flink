{
  for (  final Class<?> subComparator : this.getClass().getDeclaredClasses())   try {
    this.nodeComparators.put(BoundTypeUtil.getBindingOfSuperclass(subComparator,Comparator.class).getParameters()[0].getType(),(Comparator<?>)subComparator.newInstance());
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
  this.nodeComparators.put(ArrayNode.class,ArrayNodeComparator.INSTANCE);
  final Comparator<ObjectNode> cannotCompare=new Comparator<ObjectNode>(){
    @Override public int compare(    final ObjectNode o1,    final ObjectNode o2){
      throw new EvaluationException("Cannot compare two objects");
    }
  }
;
}
