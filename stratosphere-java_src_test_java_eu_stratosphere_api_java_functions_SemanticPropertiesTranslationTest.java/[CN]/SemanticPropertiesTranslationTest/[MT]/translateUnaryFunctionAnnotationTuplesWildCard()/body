{
  try {
    ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
    @SuppressWarnings("unchecked") DataSet<Tuple3<Long,String,Integer>> input=env.fromElements(new Tuple3<Long,String,Integer>(3l,"test",42));
    input.map(new WildcardConstantMapper<Tuple3<Long,String,Integer>>()).print();
    Plan plan=env.createProgramPlan();
    GenericDataSinkBase<?> sink=plan.getDataSinks().iterator().next();
    MapOperatorBase<?,?,?> mapper=(MapOperatorBase<?,?,?>)sink.getInput();
    SingleInputSemanticProperties semantics=mapper.getSemanticProperties();
    FieldSet fw1=semantics.getForwardedField(0);
    FieldSet fw2=semantics.getForwardedField(1);
    FieldSet fw3=semantics.getForwardedField(2);
    assertNotNull(fw1);
    assertNotNull(fw2);
    assertNotNull(fw3);
    assertTrue(fw1.contains(0));
    assertTrue(fw2.contains(1));
    assertTrue(fw3.contains(2));
  }
 catch (  Exception e) {
    System.err.println(e.getMessage());
    e.printStackTrace();
    fail("Exception in test: " + e.getMessage());
  }
}
