{
  addDependencies();
  final byte[] buf=new byte[128];
  if (this.outputFile == null) {
    throw new IOException("Output file is null");
  }
  if (this.outputFile.exists()) {
    this.outputFile.delete();
  }
  try (JarOutputStream jos=new JarOutputStream(new FileOutputStream(this.outputFile),new Manifest())){
    final Iterator<Class<?>> it=this.classSet.iterator();
    while (it.hasNext()) {
      final Class<?> clazz=it.next();
      final String entry=clazz.getName().replace('.','/') + CLASS_EXTENSION;
      jos.putNextEntry(new JarEntry(entry));
      String name=clazz.getName();
      int n=name.lastIndexOf('.');
      String className=null;
      if (n > -1) {
        className=name.substring(n + 1,name.length());
      }
      final InputStream classInputStream=clazz.getResourceAsStream(className + CLASS_EXTENSION);
      int num=classInputStream.read(buf);
      while (num != -1) {
        jos.write(buf,0,num);
        num=classInputStream.read(buf);
      }
      classInputStream.close();
      jos.closeEntry();
    }
  }
 }
