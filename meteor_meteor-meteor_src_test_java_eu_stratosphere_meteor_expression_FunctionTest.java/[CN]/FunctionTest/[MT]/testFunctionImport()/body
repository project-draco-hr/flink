{
  final SopremoPlan actualPlan=this.parseScript("testudf = javaudf('" + getClass().getName() + ".udfTest');\n"+ "$input = read from 'input.json';\n"+ "$result = transform $input into { squared: testudf($input) };\n"+ "write $result to 'output.json'; ");
  final SopremoPlan expectedPlan=new SopremoPlan();
  final Source input=new Source("input.json");
  final VarReturnJavaMethod javaMethod=new VarReturnJavaMethod("testudf");
  javaMethod.addSignature(getClass().getMethod("udfTest",IJsonNode.class,IJsonNode[].class));
  final Projection projection=new Projection().withInputs(input).withResultProjection(new ObjectCreation(new ObjectCreation.FieldAssignment("squared",new FunctionCall("testudf",javaMethod,new InputSelection(0)))));
  final Sink sink=new Sink("output.json").withInputs(projection);
  expectedPlan.setSinks(sink);
  Assert.assertEquals("unexpectedPlan",expectedPlan,actualPlan);
}
