{
  super.read(kryo,input);
  boolean isNotNull=input.readBoolean();
  if (isNotNull) {
    ClassLoader cl=null;
    try {
      cl=LibraryCacheManager.getClassLoader(this.getJobGraph().getJobID());
    }
 catch (    IOException ioe) {
      new RuntimeException(ioe);
    }
    final String className=input.readString();
    try {
      this.inputClass=(Class<? extends AbstractInputTask<?>>)Class.forName(className,true,cl).asSubclass(AbstractInputTask.class);
    }
 catch (    ClassNotFoundException cnfe) {
      throw new RuntimeException("Class " + className + " not found in one of the supplied jar files: "+ StringUtils.stringifyException(cnfe));
    }
catch (    ClassCastException ccex) {
      throw new RuntimeException("Class " + className + " is not a subclass of "+ AbstractInputTask.class.getName()+ ": "+ StringUtils.stringifyException(ccex));
    }
  }
}
