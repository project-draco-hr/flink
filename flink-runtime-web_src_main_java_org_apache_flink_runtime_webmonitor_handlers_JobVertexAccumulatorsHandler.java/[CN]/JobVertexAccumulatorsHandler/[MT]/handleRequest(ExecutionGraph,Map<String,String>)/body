{
  String vidString=params.get("vertexid");
  if (vidString == null) {
    throw new IllegalArgumentException("vertexId parameter missing");
  }
  JobVertexID vid;
  try {
    vid=JobVertexID.fromHexString(vidString);
  }
 catch (  Exception e) {
    throw new IllegalArgumentException("Invalid JobVertexID string '" + vidString + "': "+ e.getMessage());
  }
  ExecutionJobVertex jobVertex=graph.getJobVertex(vid);
  if (jobVertex == null) {
    throw new IllegalArgumentException("No vertex with ID '" + vidString + "' exists.");
  }
  StringifiedAccumulatorResult[] accs=jobVertex.getAggregatedUserAccumulatorsStringified();
  StringWriter writer=new StringWriter();
  JsonGenerator gen=JsonFactory.jacksonFactory.createJsonGenerator(writer);
  gen.writeStartObject();
  gen.writeStringField("id",jobVertex.getJobVertexId().toString());
  gen.writeArrayFieldStart("user-accumulators");
  for (  StringifiedAccumulatorResult acc : accs) {
    gen.writeStartObject();
    gen.writeStringField("name",acc.getName());
    gen.writeStringField("type",acc.getType());
    gen.writeStringField("value",acc.getValue());
    gen.writeEndObject();
  }
  gen.writeEndArray();
  gen.writeEndObject();
  gen.close();
  return writer.toString();
}
