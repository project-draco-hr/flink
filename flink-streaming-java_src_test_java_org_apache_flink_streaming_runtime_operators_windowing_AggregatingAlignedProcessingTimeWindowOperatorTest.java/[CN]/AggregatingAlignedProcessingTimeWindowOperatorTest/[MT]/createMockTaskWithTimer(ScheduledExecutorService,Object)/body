{
  StreamTask<?,?> mockTask=createMockTask();
  doAnswer(new Answer<Void>(){
    @Override public Void answer(    InvocationOnMock invocationOnMock) throws Throwable {
      final Long timestamp=(Long)invocationOnMock.getArguments()[0];
      final Triggerable target=(Triggerable)invocationOnMock.getArguments()[1];
      timerService.schedule(new Callable<Object>(){
        @Override public Object call() throws Exception {
synchronized (lock) {
            target.trigger(timestamp);
          }
          return null;
        }
      }
,timestamp - System.currentTimeMillis(),TimeUnit.MILLISECONDS);
      return null;
    }
  }
).when(mockTask).registerTimer(anyLong(),any(Triggerable.class));
  return mockTask;
}
