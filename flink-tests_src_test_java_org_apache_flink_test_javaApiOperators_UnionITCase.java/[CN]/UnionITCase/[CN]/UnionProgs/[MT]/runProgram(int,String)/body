{
switch (progId) {
case 1:
{
      final ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
      DataSet<Tuple3<Integer,Long,String>> ds=CollectionDataSets.get3TupleDataSet(env);
      DataSet<Tuple3<Integer,Long,String>> unionDs=ds.union(CollectionDataSets.get3TupleDataSet(env));
      unionDs.writeAsCsv(resultPath);
      env.execute();
      return FULL_TUPLE_3_STRING + FULL_TUPLE_3_STRING;
    }
case 2:
{
    final ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
    DataSet<Tuple3<Integer,Long,String>> ds=CollectionDataSets.get3TupleDataSet(env);
    DataSet<Tuple3<Integer,Long,String>> unionDs=ds.union(CollectionDataSets.get3TupleDataSet(env)).union(CollectionDataSets.get3TupleDataSet(env)).union(CollectionDataSets.get3TupleDataSet(env)).union(CollectionDataSets.get3TupleDataSet(env));
    unionDs.writeAsCsv(resultPath);
    env.execute();
    return FULL_TUPLE_3_STRING + FULL_TUPLE_3_STRING + FULL_TUPLE_3_STRING+ FULL_TUPLE_3_STRING+ FULL_TUPLE_3_STRING;
  }
case 3:
{
  final ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
  DataSet<Tuple3<Integer,Long,String>> empty=CollectionDataSets.get3TupleDataSet(env).filter(new RichFilterFunction<Tuple3<Integer,Long,String>>(){
    private static final long serialVersionUID=1L;
    @Override public boolean filter(    Tuple3<Integer,Long,String> value) throws Exception {
      return false;
    }
  }
);
  DataSet<Tuple3<Integer,Long,String>> unionDs=CollectionDataSets.get3TupleDataSet(env).union(empty);
  unionDs.writeAsCsv(resultPath);
  env.execute();
  return FULL_TUPLE_3_STRING;
}
default :
throw new IllegalArgumentException("Invalid program id");
}
}
