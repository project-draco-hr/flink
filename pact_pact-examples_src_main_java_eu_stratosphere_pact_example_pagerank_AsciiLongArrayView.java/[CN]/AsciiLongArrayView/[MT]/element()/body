{
  long result=0;
  boolean negative=false;
  int i=0, max=tokenNumBytes;
  long limit;
  long multmin;
  int digit;
  if (max > 0) {
    if (tokenCharAt(0) == '-') {
      negative=true;
      limit=Long.MIN_VALUE;
      i++;
    }
 else {
      limit=-Long.MAX_VALUE;
    }
    multmin=negative ? MULTMIN_RADIX_TEN : N_MULTMAX_RADIX_TEN;
    if (i < max) {
      digit=Character.digit(tokenCharAt(i++),RADIX_TEN);
      if (digit < 0) {
        throw new NumberFormatException(toString());
      }
 else {
        result=-digit;
      }
    }
    while (i < max) {
      digit=Character.digit(tokenCharAt(i++),RADIX_TEN);
      if (digit < 0) {
        throw new NumberFormatException(toString());
      }
      if (result < multmin) {
        throw new NumberFormatException(toString());
      }
      result*=RADIX_TEN;
      if (result < limit + digit) {
        throw new NumberFormatException(toString());
      }
      result-=digit;
    }
  }
 else {
    throw new NumberFormatException(toString());
  }
  if (negative) {
    if (i > 1) {
      return result;
    }
 else {
      throw new NumberFormatException(toString());
    }
  }
 else {
    return -result;
  }
}
