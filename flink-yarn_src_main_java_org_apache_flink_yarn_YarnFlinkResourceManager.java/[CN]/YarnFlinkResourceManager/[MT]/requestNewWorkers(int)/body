{
  final long mem=taskManagerParameters.taskManagerTotalMemoryMB();
  final int containerMemorySizeMB;
  if (mem <= Integer.MAX_VALUE) {
    containerMemorySizeMB=(int)mem;
  }
 else {
    containerMemorySizeMB=Integer.MAX_VALUE;
    LOG.error("Decreasing container size from {} MB to {} MB (integer value overflow)",mem,containerMemorySizeMB);
  }
  for (int i=0; i < numWorkers; i++) {
    numPendingContainerRequests++;
    LOG.info("Requesting new TaskManager container with {} megabytes memory. Pending requests: {}",containerMemorySizeMB,numPendingContainerRequests);
    Priority priority=Priority.newInstance(0);
    int taskManagerSlots=Integer.valueOf(System.getenv(YarnConfigKeys.ENV_SLOTS));
    int vcores=config.getInteger(ConfigConstants.YARN_VCORES,Math.max(taskManagerSlots,1));
    Resource capability=Resource.newInstance(containerMemorySizeMB,vcores);
    resourceManagerClient.addContainerRequest(new AMRMClient.ContainerRequest(capability,null,null,priority));
  }
  resourceManagerClient.setHeartbeatInterval(FAST_YARN_HEARTBEAT_INTERVAL_MS);
}
