{
  if (!(this.format instanceof FileOutputFormat<?>)) {
    return -1;
  }
  final String pathName=this.config.getStubParameter(FileOutputFormat.FILE_PARAMETER_KEY,null);
  final Path path;
  if (pathName == null) {
    return 0;
  }
  try {
    path=new Path(pathName);
  }
 catch (  Throwable t) {
    return 0;
  }
  try {
    final FileSystem fs=path.getFileSystem();
    try {
      final FileStatus f=fs.getFileStatus(path);
      if (f == null) {
        return 1;
      }
      if (f.isDir()) {
        return -1;
      }
 else {
        fs.delete(path,false);
        int dop=getTaskConfiguration().getInteger(DEGREE_OF_PARALLELISM_KEY,-1);
        if (dop == 1) {
          return 1;
        }
 else {
          fs.mkdirs(path);
          return -1;
        }
      }
    }
 catch (    FileNotFoundException fnfex) {
      int dop=getTaskConfiguration().getInteger(DEGREE_OF_PARALLELISM_KEY,-1);
      if (dop == 1) {
        return 1;
      }
      fs.mkdirs(path);
      return -1;
    }
  }
 catch (  IOException e) {
    LOG.error("Could not access the file system to detemine the status of the output.",e);
    return 1;
  }
}
