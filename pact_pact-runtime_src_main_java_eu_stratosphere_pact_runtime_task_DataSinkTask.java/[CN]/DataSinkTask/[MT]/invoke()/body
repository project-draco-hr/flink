{
  if (LOG.isInfoEnabled())   LOG.info(getLogString("Start PACT code"));
  final Path path=getFileOutputPath();
  final RecordReader<KeyValuePair<Key,Value>> reader=this.reader;
  final OutputFormat format=this.format;
  OutputPathOpenThread opot=new OutputPathOpenThread(path,this.getEnvironment().getIndexInSubtaskGroup() + 1,10000);
  opot.start();
  FSDataOutputStream fdos=null;
  try {
    fdos=opot.getFSDataOutputStream();
    if (this.taskCanceled) {
      return;
    }
    if (LOG.isDebugEnabled())     LOG.debug(getLogString("Start writing output to " + path.toString()));
    format.setOutput(fdos);
    format.open();
    while (!this.taskCanceled && reader.hasNext()) {
      KeyValuePair pair=reader.next();
      format.writePair(pair);
    }
  }
 catch (  Exception ex) {
    if (!this.taskCanceled) {
      if (LOG.isErrorEnabled())       LOG.error(getLogString("Unexpected ERROR in PACT code"));
      throw ex;
    }
  }
 finally {
    if (this.format != null) {
      try {
        this.format.close();
      }
 catch (      Throwable t) {
      }
    }
    if (fdos != null) {
      try {
        fdos.close();
      }
 catch (      Throwable t) {
      }
    }
  }
  if (!this.taskCanceled) {
    if (LOG.isDebugEnabled())     LOG.debug(getLogString("Finished writing output to " + path.toString()));
    if (LOG.isInfoEnabled())     LOG.info(getLogString("Finished PACT code"));
  }
 else {
    if (LOG.isWarnEnabled())     LOG.warn(getLogString("PACT code cancelled"));
  }
}
