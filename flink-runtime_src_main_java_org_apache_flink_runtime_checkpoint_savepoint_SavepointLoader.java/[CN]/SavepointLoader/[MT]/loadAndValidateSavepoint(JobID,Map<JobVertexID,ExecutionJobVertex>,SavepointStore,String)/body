{
  Savepoint savepoint=savepointStore.loadSavepoint(checkNotNull(savepointPath));
  final Map<JobVertexID,TaskState> taskStates=new HashMap<>(savepoint.getTaskStates().size());
  for (  TaskState taskState : savepoint.getTaskStates()) {
    ExecutionJobVertex executionJobVertex=tasks.get(taskState.getJobVertexID());
    if (executionJobVertex != null) {
      if (executionJobVertex.getParallelism() == taskState.getParallelism()) {
        taskStates.put(taskState.getJobVertexID(),taskState);
      }
 else {
        String msg=String.format("Failed to rollback to savepoint %s. " + "Parallelism mismatch between savepoint state and new program. " + "Cannot map operator %s with parallelism %d to new program with "+ "parallelism %d. This indicates that the program has been changed "+ "in a non-compatible way after the savepoint.",savepoint,taskState.getJobVertexID(),taskState.getParallelism(),executionJobVertex.getParallelism());
        throw new IllegalStateException(msg);
      }
    }
 else {
      String msg=String.format("Failed to rollback to savepoint %s. " + "Cannot map old state for task %s to the new program. " + "This indicates that the program has been changed in a "+ "non-compatible way  after the savepoint.",savepointPath,taskState.getJobVertexID());
      throw new IllegalStateException(msg);
    }
  }
  return new CompletedCheckpoint(jobId,savepoint.getCheckpointId(),0L,0L,taskStates,false);
}
