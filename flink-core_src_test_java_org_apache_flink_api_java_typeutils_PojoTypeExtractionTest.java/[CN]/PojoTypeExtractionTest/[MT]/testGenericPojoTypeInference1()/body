{
  MapFunction<?,?> function=new MyMapper<String>();
  TypeInformation<?> ti=TypeExtractor.getMapReturnTypes(function,(TypeInformation)TypeInfoParser.parse("org.apache.flink.api.java.typeutils.PojoTypeExtractionTest$PojoWithGenerics<key=int,field1=Long,field2=String>"));
  Assert.assertTrue(ti instanceof PojoTypeInfo<?>);
  PojoTypeInfo<?> pti=(PojoTypeInfo<?>)ti;
  for (int i=0; i < pti.getArity(); i++) {
    PojoField field=pti.getPojoFieldAt(i);
    String name=field.getField().getName();
    if (name.equals("field1")) {
      Assert.assertEquals(BasicTypeInfo.STRING_TYPE_INFO,field.getTypeInformation());
    }
 else     if (name.equals("field2")) {
      Assert.assertEquals(BasicTypeInfo.STRING_TYPE_INFO,field.getTypeInformation());
    }
 else     if (name.equals("key")) {
      Assert.assertEquals(BasicTypeInfo.INT_TYPE_INFO,field.getTypeInformation());
    }
 else {
      Assert.fail("Unexpected field " + field);
    }
  }
}
