{
  expected.add("a");
  expected.add("b");
  expected.add("c");
  expected.add("1");
  expected.add("2");
  expected.add("3");
  expected.add("4");
  LocalStreamEnvironment env=StreamExecutionEnvironment.createLocalEnvironment(1);
  DataStream<Tuple1<Integer>> ds1=env.fromElements(1,2,3,4);
  @SuppressWarnings("unused") DataStream<Tuple1<Boolean>> ds2=env.fromElements("a","b","c").coMapWith(new CoMapFunction<Tuple1<String>,Tuple1<Integer>,Tuple1<Boolean>>(){
    private static final long serialVersionUID=1L;
    @Override public Tuple1<Boolean> map1(    Tuple1<String> value){
      System.out.println("1: " + value);
      result.add(value.f0);
      return new Tuple1<Boolean>(true);
    }
    @Override public Tuple1<Boolean> map2(    Tuple1<Integer> value){
      System.out.println("2: " + value);
      result.add(value.f0.toString());
      return new Tuple1<Boolean>(false);
    }
  }
,ds1).print();
  env.executeTest(32);
  Assert.assertArrayEquals(expected.toArray(),result.toArray());
}
