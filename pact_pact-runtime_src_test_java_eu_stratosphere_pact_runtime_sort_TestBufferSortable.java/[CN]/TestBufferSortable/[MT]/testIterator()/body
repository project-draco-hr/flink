{
  MemorySegment memory=memoryManager.allocate(MEMORY_SIZE);
  int writtenPairs=0, readPairs=0;
  Iterator<KeyValuePair<TestData.Key,TestData.Value>> it;
{
    TestData.Generator generator=new TestData.Generator(SEED,KEY_MAX,VALUE_LENGTH,KeyMode.SORTED,ValueMode.FIX_LENGTH);
    BufferSortable<TestData.Key,TestData.Value> buffer=newSortBuffer(memory,OFFSETS_PERCENTAGE);
    int writtenBytes=0;
    KeyValuePair<TestData.Key,TestData.Value> pair=generator.next();
    while (buffer.write(pair)) {
      writtenBytes+=generator.sizeOf(pair) + Integer.SIZE / 8;
      writtenPairs++;
      pair=generator.next();
    }
    LOG.info("Written " + writtenPairs + " pairs to buffer which occupied "+ writtenBytes+ " of "+ MEMORY_SIZE+ " bytes.");
    it=buffer.getIterator();
    while (it.hasNext()) {
      it.next();
      readPairs++;
    }
    memory=buffer.unbind();
    Assert.assertEquals(writtenPairs,readPairs);
  }
  memoryManager.release(memory);
}
