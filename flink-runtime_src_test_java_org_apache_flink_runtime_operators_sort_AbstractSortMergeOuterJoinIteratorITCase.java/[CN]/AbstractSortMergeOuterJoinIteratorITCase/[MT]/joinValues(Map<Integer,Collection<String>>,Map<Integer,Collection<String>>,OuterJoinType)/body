{
  Map<Integer,Collection<Match>> map=new HashMap<>();
  for (  Integer key : leftMap.keySet()) {
    Collection<String> leftValues=leftMap.get(key);
    Collection<String> rightValues=rightMap.get(key);
    if (outerJoinType == OuterJoinType.RIGHT && rightValues == null) {
      continue;
    }
    if (!map.containsKey(key)) {
      map.put(key,new ArrayList<Match>());
    }
    Collection<Match> joinedValues=map.get(key);
    for (    String leftValue : leftValues) {
      if (rightValues != null) {
        for (        String rightValue : rightValues) {
          joinedValues.add(new Match(leftValue,rightValue));
        }
      }
 else {
        joinedValues.add(new Match(leftValue,null));
      }
    }
  }
  if (outerJoinType == OuterJoinType.RIGHT || outerJoinType == OuterJoinType.FULL) {
    for (    Integer key : rightMap.keySet()) {
      Collection<String> leftValues=leftMap.get(key);
      Collection<String> rightValues=rightMap.get(key);
      if (leftValues != null) {
        continue;
      }
      if (!map.containsKey(key)) {
        map.put(key,new ArrayList<Match>());
      }
      Collection<Match> joinedValues=map.get(key);
      for (      String rightValue : rightValues) {
        joinedValues.add(new Match(null,rightValue));
      }
    }
  }
  return map;
}
