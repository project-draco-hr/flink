{
  CollectionIterator<Tuple2<String,String>> input1=CollectionIterator.of();
  CollectionIterator<Tuple2<String,Integer>> input2=CollectionIterator.of(new Tuple2<String,Integer>("Allison",100),new Tuple2<String,Integer>("Jack",200),new Tuple2<String,Integer>("Zed",150),new Tuple2<String,Integer>("Zed",250));
  List<Tuple4<String,String,String,Object>> actualLeft=computeOuterJoin(input1,input2,OuterJoinType.LEFT);
  List<Tuple4<String,String,String,Object>> actualRight=computeOuterJoin(input1,input2,OuterJoinType.RIGHT);
  List<Tuple4<String,String,String,Object>> actualFull=computeOuterJoin(input1,input2,OuterJoinType.FULL);
  List<Tuple4<String,String,String,Object>> expected=Arrays.asList(new Tuple4<String,String,String,Object>(null,null,"Allison",100),new Tuple4<String,String,String,Object>(null,null,"Jack",200),new Tuple4<String,String,String,Object>(null,null,"Zed",150),new Tuple4<String,String,String,Object>(null,null,"Zed",250));
  Assert.assertEquals(Collections.<Tuple4<String,String,String,Object>>emptyList(),actualLeft);
  Assert.assertEquals(expected,actualRight);
  Assert.assertEquals(expected,actualFull);
}
