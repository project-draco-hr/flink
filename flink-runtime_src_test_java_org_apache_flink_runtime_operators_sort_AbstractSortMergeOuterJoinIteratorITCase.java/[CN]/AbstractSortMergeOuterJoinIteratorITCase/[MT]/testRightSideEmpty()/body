{
  CollectionIterator<Tuple2<String,String>> input1=CollectionIterator.of(new Tuple2<>("Jack","Engineering"),new Tuple2<>("Tim","Sales"),new Tuple2<>("Zed","HR"));
  CollectionIterator<Tuple2<String,Integer>> input2=CollectionIterator.of();
  List<Tuple4<String,String,String,Object>> actualLeft=computeOuterJoin(input1,input2,OuterJoinType.LEFT);
  List<Tuple4<String,String,String,Object>> actualRight=computeOuterJoin(input1,input2,OuterJoinType.RIGHT);
  List<Tuple4<String,String,String,Object>> actualFull=computeOuterJoin(input1,input2,OuterJoinType.FULL);
  List<Tuple4<String,String,String,Object>> expected=Arrays.asList(new Tuple4<String,String,String,Object>("Jack","Engineering",null,null),new Tuple4<String,String,String,Object>("Tim","Sales",null,null),new Tuple4<String,String,String,Object>("Zed","HR",null,null));
  Assert.assertEquals(expected,actualLeft);
  Assert.assertEquals(expected,actualFull);
  Assert.assertEquals(Collections.<Tuple4<String,String,String,Object>>emptyList(),actualRight);
}
