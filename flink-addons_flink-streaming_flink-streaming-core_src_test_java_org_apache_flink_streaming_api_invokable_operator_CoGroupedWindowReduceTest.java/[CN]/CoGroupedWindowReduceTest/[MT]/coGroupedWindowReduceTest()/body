{
  List<Tuple2<String,Integer>> inputs1=new ArrayList<Tuple2<String,Integer>>();
  inputs1.add(new Tuple2<String,Integer>("a",1));
  inputs1.add(new Tuple2<String,Integer>("a",2));
  inputs1.add(new Tuple2<String,Integer>("b",2));
  inputs1.add(new Tuple2<String,Integer>("b",2));
  inputs1.add(new Tuple2<String,Integer>("b",5));
  inputs1.add(new Tuple2<String,Integer>("a",7));
  inputs1.add(new Tuple2<String,Integer>("b",9));
  inputs1.add(new Tuple2<String,Integer>("b",10));
  List<Tuple2<String,Integer>> inputs2=new ArrayList<Tuple2<String,Integer>>();
  inputs2.add(new Tuple2<String,Integer>("a",1));
  inputs2.add(new Tuple2<String,Integer>("a",2));
  inputs2.add(new Tuple2<String,Integer>("b",2));
  inputs2.add(new Tuple2<String,Integer>("b",2));
  inputs2.add(new Tuple2<String,Integer>("b",5));
  inputs2.add(new Tuple2<String,Integer>("a",7));
  inputs2.add(new Tuple2<String,Integer>("b",9));
  inputs2.add(new Tuple2<String,Integer>("b",10));
  List<String> expected=new ArrayList<String>();
  expected.add("3");
  expected.add("9");
  expected.add("7");
  expected.add("7");
  expected.add("9");
  expected.add("7");
  expected.add("19");
  expected.add("3");
  expected.add("9");
  expected.add("7");
  expected.add("7");
  expected.add("9");
  expected.add("7");
  expected.add("19");
  CoGroupedWindowReduceInvokable<Tuple2<String,Integer>,Tuple2<String,Integer>,String> invokable=new CoGroupedWindowReduceInvokable<Tuple2<String,Integer>,Tuple2<String,Integer>,String>(new MyCoReduceFunction(),3L,3L,2L,2L,0,0,new MyTimeStamp<Tuple2<String,Integer>>(timestamps),new MyTimeStamp<Tuple2<String,Integer>>(timestamps));
  List<String> result=MockCoInvokable.createAndExecute(invokable,inputs1,inputs2);
  Collections.sort(result);
  Collections.sort(expected);
  assertEquals(expected,result);
}
