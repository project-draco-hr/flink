{
  final SopremoTestPlan sopremoPlan=new SopremoTestPlan(1,1);
  sopremoPlan.getEvaluationContext().getFunctionRegistry().put(DefaultFunctions.class);
  final ObjectCreation transformation=new ObjectCreation();
  final BatchAggregationExpression batch=new BatchAggregationExpression();
  transformation.addMapping("d",new PathExpression(new InputSelection(0),batch.add(DefaultFunctions.FIRST),new ObjectAccess("dept")));
  transformation.addMapping("total",new PathExpression(new InputSelection(0),batch.add(DefaultFunctions.SUM,new ObjectAccess("income"))));
  final Grouping aggregation=new Grouping().withResultProjection(transformation);
  aggregation.setInputs(sopremoPlan.getInputOperator(0));
  aggregation.setGroupingKey(0,createPath("dept"));
  sopremoPlan.getOutputOperator(0).setInputs(aggregation);
  sopremoPlan.getInput(0).addObject("id",1,"dept",1,"income",12000).addObject("id",2,"dept",1,"income",13000).addObject("id",3,"dept",2,"income",15000).addObject("id",4,"dept",1,"income",10000).addObject("id",5,"dept",3,"income",8000).addObject("id",6,"dept",2,"income",5000).addObject("id",7,"dept",1,"income",24000);
  sopremoPlan.getExpectedOutput(0).addObject("d",1,"total",59000).addObject("d",2,"total",20000).addObject("d",3,"total",8000);
  sopremoPlan.run();
}
