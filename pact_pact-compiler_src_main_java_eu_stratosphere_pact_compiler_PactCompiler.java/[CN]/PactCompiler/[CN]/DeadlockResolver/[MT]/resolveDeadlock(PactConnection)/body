{
  OptimizerNode sourcePact=conn.getSourcePact();
  OptimizerNode targetPact=conn.getTargetPact();
  if (sourcePact instanceof DataSourceNode) {
    DataSourceNode duplicateDataSource=new DataSourceNode((GenericDataSource<?>)sourcePact.getPactContract());
    duplicateDataSource.setDegreeOfParallelism(sourcePact.getDegreeOfParallelism());
    duplicateDataSource.setInstancesPerMachine(sourcePact.getInstancesPerMachine());
    PactConnection newConn=new PactConnection(conn,duplicateDataSource,targetPact);
    sourcePact.getOutConns().remove(conn);
    duplicateDataSource.addOutConn(newConn);
    if (targetPact instanceof SingleInputNode) {
      ((SingleInputNode)targetPact).setInConn(newConn);
    }
 else     if (targetPact instanceof TwoInputNode) {
      if (((TwoInputNode)targetPact).getFirstInConn() == conn) {
        ((TwoInputNode)targetPact).setFirstInConn(newConn);
      }
 else {
        ((TwoInputNode)targetPact).setSecondInConn(newConn);
      }
    }
  }
 else   if (sourcePact.getIncomingConnections().size() > 1) {
    conn.setTempMode(TempMode.TEMP_RECEIVER_SIDE);
  }
 else   if (sourcePact.getOutConns().size() > 1) {
    conn.setTempMode(TempMode.TEMP_RECEIVER_SIDE);
  }
 else {
    PactConnection predConn=sourcePact.getIncomingConnections().get(0);
    long curSize=sourcePact.getEstimatedOutputSize();
    long predSize=predConn.getSourcePact().getEstimatedOutputSize();
    if (curSize < predSize) {
      conn.setTempMode(TempMode.TEMP_RECEIVER_SIDE);
    }
 else {
      resolveDeadlock(predConn);
    }
  }
}
