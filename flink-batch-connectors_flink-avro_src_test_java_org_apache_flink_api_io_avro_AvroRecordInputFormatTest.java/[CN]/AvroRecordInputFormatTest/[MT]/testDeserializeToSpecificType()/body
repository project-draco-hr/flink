{
  DatumReader<User> datumReader=new SpecificDatumReader<User>(userSchema);
  try (FileReader<User> dataFileReader=DataFileReader.openReader(testFile,datumReader)){
    User rec=dataFileReader.next();
    assertNotNull(rec);
    assertEquals("name not equal",TEST_NAME,rec.get("name").toString());
    assertEquals("enum not equal",TEST_ENUM_COLOR.toString(),rec.get("type_enum").toString());
    ExecutionConfig ec=new ExecutionConfig();
    TypeInformation<User> te=TypeExtractor.createTypeInfo(User.class);
    Assert.assertEquals(AvroTypeInfo.class,te.getClass());
    TypeSerializer<User> tser=te.createSerializer(ec);
    ByteArrayOutputStream out=new ByteArrayOutputStream();
    try (DataOutputViewStreamWrapper outView=new DataOutputViewStreamWrapper(out)){
      tser.serialize(rec,outView);
    }
     User newRec;
    try (DataInputViewStreamWrapper inView=new DataInputViewStreamWrapper(new ByteArrayInputStream(out.toByteArray()))){
      newRec=tser.deserialize(inView);
    }
     assertNotNull(newRec);
    assertEquals("name not equal",TEST_NAME,newRec.getName().toString());
    assertEquals("enum not equal",TEST_ENUM_COLOR.toString(),newRec.getTypeEnum().toString());
  }
 }
