{
  S sink=createSink();
  OneInputStreamOperatorTestHarness<IN,IN> testHarness=new OneInputStreamOperatorTestHarness<>(sink);
  testHarness.open();
  int elementCounter=1;
  int snapshotCount=0;
  for (int x=0; x < 20; x++) {
    testHarness.processElement(new StreamRecord<>(generateValue(elementCounter,0)));
    elementCounter++;
  }
  testHarness.snapshot(snapshotCount++,0);
  testHarness.notifyOfCompletedCheckpoint(snapshotCount - 1);
  for (int x=0; x < 20; x++) {
    testHarness.processElement(new StreamRecord<>(generateValue(elementCounter,1)));
    elementCounter++;
  }
  testHarness.snapshot(snapshotCount++,0);
  testHarness.notifyOfCompletedCheckpoint(snapshotCount - 1);
  for (int x=0; x < 20; x++) {
    testHarness.processElement(new StreamRecord<>(generateValue(elementCounter,2)));
    elementCounter++;
  }
  testHarness.snapshot(snapshotCount++,0);
  testHarness.notifyOfCompletedCheckpoint(snapshotCount - 1);
  verifyResultsIdealCircumstances(testHarness,sink);
}
