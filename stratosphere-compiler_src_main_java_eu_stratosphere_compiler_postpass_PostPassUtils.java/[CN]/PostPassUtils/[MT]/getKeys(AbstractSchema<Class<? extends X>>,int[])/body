{
  @SuppressWarnings("unchecked") Class<? extends Key<?>>[] keyTypes=new Class[fields.length];
  for (int i=0; i < fields.length; i++) {
    Class<? extends X> type=schema.getType(fields[i]);
    if (type == null) {
      throw new MissingFieldTypeInfoException(i);
    }
 else     if (Key.class.isAssignableFrom(type)) {
      @SuppressWarnings("unchecked") Class<? extends Key<?>> keyType=(Class<? extends Key<?>>)type;
      keyTypes[i]=keyType;
    }
 else {
      throw new CompilerException("The field type " + type.getName() + " cannot be used as a key because it does not implement the interface 'Key'");
    }
  }
  return keyTypes;
}
