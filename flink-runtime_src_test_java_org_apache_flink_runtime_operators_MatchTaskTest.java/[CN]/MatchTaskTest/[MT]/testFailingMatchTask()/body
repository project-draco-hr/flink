{
  int keyCnt1=20;
  int valCnt1=20;
  int keyCnt2=20;
  int valCnt2=20;
  setOutput(new NirvanaOutputList());
  addDriverComparator(this.comparator1);
  addDriverComparator(this.comparator2);
  getTaskConfig().setDriverPairComparator(RecordPairComparatorFactory.get());
  getTaskConfig().setDriverStrategy(DriverStrategy.INNER_MERGE);
  getTaskConfig().setRelativeMemoryDriver(bnljn_frac);
  setNumFileHandlesForSort(4);
  final JoinDriver<Record,Record,Record> testTask=new JoinDriver<Record,Record,Record>();
  addInput(new UniformRecordGenerator(keyCnt1,valCnt1,true));
  addInput(new UniformRecordGenerator(keyCnt2,valCnt2,true));
  try {
    testDriver(testTask,MockFailingMatchStub.class);
    Assert.fail("Driver did not forward Exception.");
  }
 catch (  ExpectedTestException e) {
  }
catch (  Exception e) {
    e.printStackTrace();
    Assert.fail("The test caused an exception.");
  }
}
