{
  String[] registrationNames=new String[]{"TAsIrGnc7MULwVupNKZ0","086133IrGn0Ii2853237"};
  ExecutionJobVertex[] vertices=new ExecutionJobVertex[]{createJobVertex(32),createJobVertex(13)};
  KvStateID[][] ids=new KvStateID[vertices.length][];
  for (int i=0; i < ids.length; i++) {
    ids[i]=new KvStateID[vertices[i].getParallelism()];
    for (int j=0; j < vertices[i].getParallelism(); j++) {
      ids[i][j]=new KvStateID();
    }
  }
  KvStateServerAddress server=new KvStateServerAddress(InetAddress.getLocalHost(),12032);
  Map<JobVertexID,ExecutionJobVertex> vertexMap=createVertexMap(vertices);
  KvStateLocationRegistry registry=new KvStateLocationRegistry(new JobID(),vertexMap);
  for (int i=0; i < vertices.length; i++) {
    int numKeyGroups=vertices[i].getParallelism();
    for (int keyGroupIndex=0; keyGroupIndex < numKeyGroups; keyGroupIndex++) {
      registry.notifyKvStateRegistered(vertices[i].getJobVertexId(),keyGroupIndex,registrationNames[i],ids[i][keyGroupIndex],server);
    }
  }
  for (int i=0; i < vertices.length; i++) {
    KvStateLocation location=registry.getKvStateLocation(registrationNames[i]);
    assertNotNull(location);
    int parallelism=vertices[i].getParallelism();
    for (int keyGroupIndex=0; keyGroupIndex < parallelism; keyGroupIndex++) {
      assertEquals(ids[i][keyGroupIndex],location.getKvStateID(keyGroupIndex));
      assertEquals(server,location.getKvStateServerAddress(keyGroupIndex));
    }
  }
  for (int i=0; i < vertices.length; i++) {
    int numKeyGroups=vertices[i].getParallelism();
    JobVertexID jobVertexId=vertices[i].getJobVertexId();
    for (int keyGroupIndex=0; keyGroupIndex < numKeyGroups; keyGroupIndex++) {
      registry.notifyKvStateUnregistered(jobVertexId,keyGroupIndex,registrationNames[i]);
    }
  }
  for (int i=0; i < registrationNames.length; i++) {
    assertNull(registry.getKvStateLocation(registrationNames[i]));
  }
}
