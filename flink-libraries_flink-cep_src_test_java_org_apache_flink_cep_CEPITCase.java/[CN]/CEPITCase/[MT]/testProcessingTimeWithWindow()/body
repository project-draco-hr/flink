{
  StreamExecutionEnvironment env=StreamExecutionEnvironment.getExecutionEnvironment();
  env.setParallelism(1);
  DataStream<Integer> input=env.fromElements(1,2);
  Pattern<Integer,?> pattern=Pattern.<Integer>begin("start").followedBy("end").within(Time.days(1));
  DataStream<Integer> result=CEP.pattern(input,pattern).select(new PatternSelectFunction<Integer,Integer>(){
    @Override public Integer select(    Map<String,Integer> pattern) throws Exception {
      return pattern.get("start") + pattern.get("end");
    }
  }
);
  result.writeAsText(resultPath,FileSystem.WriteMode.OVERWRITE);
  expected="3";
  env.execute();
}
