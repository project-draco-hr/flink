{
  ExecutionEnvironment env=ExecutionEnvironment.createLocalEnvironment();
  env.setParallelism(DEFAULT_PARALLELISM);
  DataSource<Tuple2<Long,String>> data=env.readCsvFile("/some/path").types(Long.class,String.class);
  data.getSplitDataProperties().splitsPartitionedBy(1).splitsOrderedBy(new int[]{1},new Order[]{Order.ASCENDING});
  data.print();
  JavaPlan plan=env.createProgramPlan();
  OptimizedPlan oPlan=compileNoStats(plan);
  SinkPlanNode sinkNode=oPlan.getDataSinks().iterator().next();
  SourcePlanNode sourceNode=(SourcePlanNode)sinkNode.getPredecessor();
  GlobalProperties gprops=sourceNode.getGlobalProperties();
  LocalProperties lprops=sourceNode.getLocalProperties();
  Assert.assertTrue((new FieldSet(gprops.getPartitioningFields().toArray())).equals(new FieldSet(1)));
  Assert.assertTrue(gprops.getPartitioning() == PartitioningProperty.ANY_PARTITIONING);
  Assert.assertTrue((new FieldSet(lprops.getGroupedFields().toArray())).equals(new FieldSet(1)));
  Assert.assertTrue(lprops.getOrdering() == null);
}
