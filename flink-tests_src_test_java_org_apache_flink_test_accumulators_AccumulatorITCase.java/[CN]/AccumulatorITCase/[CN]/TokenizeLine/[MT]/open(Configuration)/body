{
  this.cntNumLines=getRuntimeContext().getIntCounter("num-lines");
  this.wordsPerLineDistribution=getRuntimeContext().getHistogram("words-per-line");
  getRuntimeContext().addAccumulator("open-close-counter",this.openCloseCounter);
  this.distinctWords=new SetAccumulator<StringValue>();
  this.getRuntimeContext().addAccumulator("distinct-words",distinctWords);
  IntCounter simpleCounter=getRuntimeContext().getIntCounter("simple-counter");
  simpleCounter.add(1);
  Assert.assertEquals(simpleCounter.getLocalValue().intValue(),1);
  IntCounter simpleCounter2=getRuntimeContext().getIntCounter("simple-counter");
  Assert.assertEquals(simpleCounter.getLocalValue(),simpleCounter2.getLocalValue());
  try {
    @SuppressWarnings("unused") DoubleCounter simpleCounter3=getRuntimeContext().getDoubleCounter("simple-counter");
    Assert.fail("Should not be able to obtain previously created counter with different type");
  }
 catch (  UnsupportedOperationException ex) {
  }
  this.openCloseCounter.add(0.5);
}
