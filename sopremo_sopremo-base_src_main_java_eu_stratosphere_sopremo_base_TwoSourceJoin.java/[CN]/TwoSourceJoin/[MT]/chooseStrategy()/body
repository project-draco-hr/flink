{
  if (this.condition instanceof ComparativeExpression) {
    ComparativeExpression comparison=(ComparativeExpression)this.condition;
switch (comparison.getBinaryOperator()) {
case EQUAL:
      EvaluationExpression[] expressions=sortExpressionsWithInput(comparison.getExpr1(),comparison.getExpr2());
    return new OuterJoin().withKeyExpression(0,expressions[0]).withKeyExpression(1,expressions[1]).withMode(expressions[0].find(InputSelection.class).hasTag(ExpressionTag.RETAIN),expressions[1].find(InputSelection.class).hasTag(ExpressionTag.RETAIN));
default :
  return new ThetaJoin().withComparison(comparison);
}
}
 else if (this.condition instanceof ElementInSetExpression) {
ElementInSetExpression elementInSetExpression=(ElementInSetExpression)this.condition;
switch (elementInSetExpression.getQuantor()) {
case EXISTS_NOT_IN:
return new AntiJoin();
case EXISTS_IN:
return new SemiJoin();
}
}
throw new UnsupportedOperationException("condition " + this.condition + " not supported");
}
