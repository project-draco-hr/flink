{
  this.keyClass=keyClass;
  this.valueClass=valueClass;
  this.segment=segment;
  this.segment.inputView.setPosition(0);
  if (initialCapacity < 0) {
    throw new IllegalArgumentException("Illegal initial capacity: " + initialCapacity);
  }
  if (initialCapacity > MAXIMUM_CAPACITY) {
    initialCapacity=MAXIMUM_CAPACITY;
  }
  if (loadFactor <= 0 || Float.isNaN(loadFactor)) {
    throw new IllegalArgumentException("Illegal load factor: " + loadFactor);
  }
  int capacity=1;
  while (capacity < initialCapacity) {
    capacity<<=1;
  }
  this.loadFactor=loadFactor;
  this.threshold=(int)(capacity * loadFactor);
  this.offsets=new int[capacity];
  for (int i=0; i < capacity; i++) {
    this.offsets[i]=OFFSET_NULL;
  }
  this.writePosition=0;
  this.numberOfKeys=0;
  this.numberOfValues=0;
}
