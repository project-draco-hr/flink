{
  final WorksetIterationPlanNode iteration=wspn.getContainingIterationNode();
  final boolean merge;
  if (mergeIterationAuxTasks && wspn.getOutgoingChannels().size() == 1) {
    final Channel c=wspn.getOutgoingChannels().get(0);
    final PlanNode successor=c.getTarget();
    merge=c.getShipStrategy() == ShipStrategyType.FORWARD && c.getLocalStrategy() == LocalStrategy.NONE && c.getTempMode() == TempMode.NONE && successor.getDegreeOfParallelism() == wspn.getDegreeOfParallelism() && successor.getSubtasksPerInstance() == wspn.getSubtasksPerInstance() && !(successor instanceof UnionPlanNode) && successor != iteration.getNextWorkSetPlanNode() && iteration.getInitialWorksetInput().getLocalStrategy() == LocalStrategy.NONE;
  }
 else {
    merge=false;
  }
  final JobTaskVertex toReturn;
  final JobTaskVertex headVertex;
  final TaskConfig headConfig;
  if (merge) {
    final PlanNode successor=wspn.getOutgoingChannels().get(0).getTarget();
    headVertex=(JobTaskVertex)this.vertices.get(successor);
    if (headVertex == null) {
      throw new CompilerException("Bug: Trying to merge solution set with its sucessor, but successor has not been created.");
    }
    headVertex.setTaskClass(IterationHeadPactTask.class);
    headConfig=new TaskConfig(headVertex.getConfiguration());
    toReturn=null;
  }
 else {
    headVertex=new JobTaskVertex(iteration.getPactContract().getName() + " - Workset Iteration Head",this.jobGraph);
    headVertex.setTaskClass(IterationHeadPactTask.class);
    headConfig=new TaskConfig(headVertex.getConfiguration());
    headConfig.setDriver(NoOpDriver.class);
    toReturn=headVertex;
  }
  IterationDescriptor descr=this.iterations.get(iteration);
  if (descr == null) {
    throw new CompilerException("Bug: Iteration descriptor was not created at when translating the iteration node.");
  }
  descr.setHeadTask(headVertex,headConfig);
  return toReturn;
}
