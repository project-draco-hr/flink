{
  Source depts=new Source(createJsonArray(createObject("did",1L,"name","development"),createObject("did",2L,"name","marketing"),createObject("did",3L,"name","sales")));
  String deptJaql="depts = [   {did: 1, name: \"development\"},   {did: 2, name: \"marketing\"},   {did: 3, name: \"sales\"} ]; ";
  Transformation transformation=new Transformation();
  transformation.addMapping(new ValueAssignment("dept",createPath("0","dept")));
  transformation.addMapping(new ValueAssignment("deptName",createPath("1","[0]","name")));
  transformation.addMapping(new ValueAssignment("emps",createPath("0","[*]","id")));
  Path[] params={createPath("0")};
  transformation.addMapping(new ValueAssignment("numEmps",new Function("count",new Input(0))));
  assertParseResult(new Aggregation(transformation,Arrays.asList(createPath("0","dept"),createPath("1","did")),this.employeeSource(),depts),this.employeeJaql() + deptJaql + "group employees by g = $.dept as es, "+ "depts     by g = $.did  as ds "+ "into { dept: g, deptName: ds[0].name, emps: es[*].id, numEmps: count(es) };");
}
