{
  if (++this.bufferCount % GRANULARITY != 0) {
    this.sumOfBufferSizes+=sizeOfLastUncompressedBuffer;
    this.sumOfTransferDurations+=durationOfLastBufferTransfer;
  }
 else {
    final double currentDataRate=(double)this.sumOfBufferSizes / ((double)this.sumOfTransferDurations * 128.0f);
    if (this.lastDataRate < 0.0f) {
      this.lastDataRate=currentDataRate;
    }
    this.decisionLogger.log(System.currentTimeMillis(),currentDataRate,this.currentSelection);
    final int nextCompressionLevel=selectNextCompressionLevel(currentDataRate);
    final int diff=nextCompressionLevel - this.currentSelection;
    if (diff > 0) {
      this.increasedCompressionLevel=true;
    }
 else     if (diff < 0) {
      this.increasedCompressionLevel=false;
    }
    this.currentSelection=nextCompressionLevel;
    System.out.println("Next compression level " + this.currentSelection);
    System.out.println("Backoff level for compression level " + this.currentSelection + ": "+ this.backoff[this.currentSelection]);
    this.lastDataRate=currentDataRate;
    this.sumOfBufferSizes=0;
    this.sumOfTransferDurations=0;
  }
  if (!this.loggerInitialized) {
    this.decisionLogger.log(System.currentTimeMillis(),0.0,this.currentSelection);
    this.loggerInitialized=true;
  }
  return this.currentSelection;
}
