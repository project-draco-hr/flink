{
  try {
    org.apache.hadoop.fs.FileSystem fs=org.apache.hadoop.fs.FileSystem.get(tezConf);
    LOG.info("Jar path received is " + jarPath.toString());
    String jarFile=jarPath.getName();
    Path remoteJarPath=null;
    Path stagingDir=TezCommonUtils.getTezBaseStagingPath(tezConf);
    LOG.info("Tez staging path is " + stagingDir);
    TezClientUtils.ensureStagingDirExists(tezConf,stagingDir);
    LOG.info("Tez staging dir exists");
    remoteJarPath=fs.makeQualified(new Path(stagingDir,jarFile));
    LOG.info("Copying " + jarPath.toString() + " to "+ remoteJarPath.toString());
    fs.copyFromLocalFile(jarPath,remoteJarPath);
    FileStatus remoteJarStatus=fs.getFileStatus(remoteJarPath);
    Credentials credentials=new Credentials();
    TokenCache.obtainTokensForNamenodes(credentials,new Path[]{remoteJarPath},tezConf);
    Map<String,LocalResource> localResources=new TreeMap<String,LocalResource>();
    LocalResource jobJar=LocalResource.newInstance(ConverterUtils.getYarnUrlFromPath(remoteJarPath),LocalResourceType.FILE,LocalResourceVisibility.APPLICATION,remoteJarStatus.getLen(),remoteJarStatus.getModificationTime());
    localResources.put(jarFile.toString(),jobJar);
    dag.addTaskLocalFiles(localResources);
    LOG.info("Added job jar as local resource.");
  }
 catch (  Exception e) {
    System.out.println(e.getMessage());
    e.printStackTrace();
    System.exit(-1);
  }
}
