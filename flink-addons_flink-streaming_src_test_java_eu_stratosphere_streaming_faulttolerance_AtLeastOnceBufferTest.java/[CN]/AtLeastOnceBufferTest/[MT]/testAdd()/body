{
  StreamRecord record1=new StreamRecord(new Tuple1<String>("R1")).setId(1);
  UID id1=record1.getId().copy();
  Long nt=System.nanoTime();
  buffer.add(record1);
  System.out.println(id1);
  System.out.println(buffer.ackCounter);
  System.out.println("ADD - " + " exec. time (ns): " + (System.nanoTime() - nt));
  record1.setTuple(new Tuple1<String>("R2"));
  record1.setId(1);
  UID id2=record1.getId().copy();
  try {
    Thread.sleep(10);
  }
 catch (  InterruptedException e) {
  }
  buffer.add(record1);
  System.out.println(id1);
  System.out.println(buffer.ackCounter);
  assertEquals((Integer)3,buffer.ackCounter.get(id1));
  assertEquals((Integer)3,buffer.ackCounter.get(id2));
  assertEquals("R1",buffer.recordBuffer.get(id1).getField(0));
  assertEquals(id1,buffer.recordBuffer.get(id1).getId());
  assertEquals("R2",buffer.recordBuffer.get(id2).getField(0));
  assertEquals(id2,buffer.recordBuffer.get(id2).getId());
  assertEquals(2,buffer.recordTimestamps.size());
  assertEquals(2,buffer.recordsByTime.size());
  assertEquals(2,buffer.recordBuffer.size());
  assertEquals(2,buffer.ackCounter.size());
}
