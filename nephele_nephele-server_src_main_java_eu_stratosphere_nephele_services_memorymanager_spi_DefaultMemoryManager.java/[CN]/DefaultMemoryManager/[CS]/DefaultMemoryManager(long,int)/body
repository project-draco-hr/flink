{
  this.totalSize=memorySize;
  this.freeSegments=new LinkedList<FreeSegmentEntry>();
  this.allocatedSegments=new HashMap<AbstractInvokable,ArrayList<DefaultMemorySegment>>();
  int numberOfFullChunks=(int)(memorySize / chunkSize);
  int lastChunkSize=(int)(memorySize % chunkSize);
  int numberOfChunks=lastChunkSize == 0 ? numberOfFullChunks : numberOfFullChunks + 1;
  this.chunkSize=chunkSize;
  this.memory=new byte[numberOfChunks][];
  for (int i=0; i < numberOfFullChunks; i++) {
    memory[i]=new byte[chunkSize];
    freeSegments.add(new FreeSegmentEntry(i,i * this.chunkSize,i * this.chunkSize + memory[i].length));
  }
  if (lastChunkSize > 0) {
    memory[numberOfFullChunks]=new byte[lastChunkSize];
    freeSegments.add(new FreeSegmentEntry(numberOfFullChunks,numberOfFullChunks * this.chunkSize,numberOfFullChunks * this.chunkSize + lastChunkSize));
  }
}
