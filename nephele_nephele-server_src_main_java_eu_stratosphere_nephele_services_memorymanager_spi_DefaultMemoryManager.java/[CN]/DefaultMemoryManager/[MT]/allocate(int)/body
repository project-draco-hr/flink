{
  if (segmentSize < 1) {
    throw new IllegalArgumentException();
  }
  MemorySegmentDescriptor descriptor=null;
synchronized (this) {
    if (isShutDown) {
      throw new IllegalStateException("Memory Manager has been shut down.");
    }
    Iterator<FreeSegmentEntry> freeSegs=freeSegments.iterator();
    while (freeSegs.hasNext()) {
      FreeSegmentEntry entry=freeSegs.next();
      if (segmentSize <= entry.end - entry.start) {
        int chunk=(int)(entry.start / chunkSize);
        int start=(int)(entry.start % chunkSize);
        descriptor=new MemorySegmentDescriptor(memory[chunk],chunk,start,start + segmentSize);
        allocatedSegments.add(descriptor);
        entry.start+=segmentSize;
        if (entry.start == entry.end) {
          freeSegs.remove();
        }
        break;
      }
    }
  }
  if (descriptor == null) {
    throw new MemoryAllocationException("Not enough memory available.");
  }
  MemorySegment segment=factory(descriptor);
  return segment;
}
