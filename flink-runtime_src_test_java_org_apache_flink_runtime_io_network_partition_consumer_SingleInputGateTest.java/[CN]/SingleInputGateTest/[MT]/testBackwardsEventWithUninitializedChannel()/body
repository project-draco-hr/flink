{
  final TaskEventDispatcher taskEventDispatcher=mock(TaskEventDispatcher.class);
  when(taskEventDispatcher.publish(any(ResultPartitionID.class),any(TaskEvent.class))).thenReturn(true);
  final ResultSubpartitionView iterator=mock(ResultSubpartitionView.class);
  when(iterator.getNextBuffer()).thenReturn(new Buffer(new MemorySegment(new byte[1024]),mock(BufferRecycler.class)));
  final ResultPartitionManager partitionManager=mock(ResultPartitionManager.class);
  when(partitionManager.createSubpartitionView(any(ResultPartitionID.class),anyInt(),any(BufferProvider.class))).thenReturn(iterator);
  final IntermediateDataSetID resultId=new IntermediateDataSetID();
  final SingleInputGate inputGate=new SingleInputGate("Test Task Name",resultId,0,2);
  final BufferPool bufferPool=mock(BufferPool.class);
  when(bufferPool.getNumberOfRequiredMemorySegments()).thenReturn(2);
  inputGate.setBufferPool(bufferPool);
  ResultPartitionID localPartitionId=new ResultPartitionID(new IntermediateResultPartitionID(),new ExecutionAttemptID());
  InputChannel local=new LocalInputChannel(inputGate,0,localPartitionId,partitionManager,taskEventDispatcher);
  ResultPartitionID unknownPartitionId=new ResultPartitionID(new IntermediateResultPartitionID(),new ExecutionAttemptID());
  InputChannel unknown=new UnknownInputChannel(inputGate,1,unknownPartitionId,partitionManager,taskEventDispatcher,mock(ConnectionManager.class));
  inputGate.setInputChannel(localPartitionId.getPartitionId(),local);
  inputGate.setInputChannel(unknownPartitionId.getPartitionId(),unknown);
  inputGate.requestPartitions();
  verify(partitionManager,times(1)).createSubpartitionView(any(ResultPartitionID.class),anyInt(),any(BufferProvider.class));
  final TaskEvent event=new TestTaskEvent();
  inputGate.sendTaskEvent(event);
  verify(taskEventDispatcher,times(1)).publish(any(ResultPartitionID.class),any(TaskEvent.class));
  inputGate.updateInputChannel(new InputChannelDeploymentDescriptor(new ResultPartitionID(unknownPartitionId.getPartitionId(),unknownPartitionId.getProducerId()),ResultPartitionLocation.createLocal()));
  verify(partitionManager,times(2)).createSubpartitionView(any(ResultPartitionID.class),anyInt(),any(BufferProvider.class));
  verify(taskEventDispatcher,times(2)).publish(any(ResultPartitionID.class),any(TaskEvent.class));
}
