{
  try {
    String[] testValues=getValidTestValues();
    T[] results=getValidTestResults();
    for (int i=0; i < testValues.length; i++) {
      FieldParser<T> parser1=getParser();
      FieldParser<T> parser2=getParser();
      FieldParser<T> parser3=getParser();
      byte[] bytes1=testValues[i].getBytes();
      byte[] bytes2=testValues[i].getBytes();
      byte[] bytes3=testValues[i].getBytes();
      int numRead1=parser1.parseField(bytes1,0,bytes1.length,new byte[]{'|'},parser1.createValue());
      int numRead2=parser2.parseField(bytes2,0,bytes2.length,new byte[]{'&','&'},parser2.createValue());
      int numRead3=parser3.parseField(bytes3,0,bytes3.length,new byte[]{'9','9','9'},parser3.createValue());
      assertTrue("Parser declared the valid value " + testValues[i] + " as invalid.",numRead1 != -1);
      assertTrue("Parser declared the valid value " + testValues[i] + " as invalid.",numRead2 != -1);
      assertTrue("Parser declared the valid value " + testValues[i] + " as invalid.",numRead3 != -1);
      assertEquals("Invalid number of bytes read returned.",bytes1.length,numRead1);
      assertEquals("Invalid number of bytes read returned.",bytes2.length,numRead2);
      assertEquals("Invalid number of bytes read returned.",bytes3.length,numRead3);
      T result1=parser1.getLastResult();
      T result2=parser2.getLastResult();
      T result3=parser3.getLastResult();
      assertEquals("Parser parsed wrong. " + testValues[i],results[i],result1);
      assertEquals("Parser parsed wrong. " + testValues[i],results[i],result2);
      assertEquals("Parser parsed wrong. " + testValues[i],results[i],result3);
    }
  }
 catch (  Exception e) {
    System.err.println(e.getMessage());
    e.printStackTrace();
    fail("Test erroneous: " + e.getMessage());
  }
}
