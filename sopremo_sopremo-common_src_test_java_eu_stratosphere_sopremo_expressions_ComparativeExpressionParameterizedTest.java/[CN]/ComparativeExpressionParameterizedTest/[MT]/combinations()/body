{
  return Arrays.asList(new Object[][]{{IntNode.valueOf(42),BinaryOperator.EQUAL,IntNode.valueOf(42),BooleanNode.TRUE},{IntNode.valueOf(42),BinaryOperator.NOT_EQUAL,IntNode.valueOf(42),BooleanNode.FALSE},{IntNode.valueOf(42),BinaryOperator.GREATER,IntNode.valueOf(42),BooleanNode.FALSE},{IntNode.valueOf(42),BinaryOperator.GREATER_EQUAL,IntNode.valueOf(42),BooleanNode.TRUE},{IntNode.valueOf(42),BinaryOperator.LESS,IntNode.valueOf(42),BooleanNode.FALSE},{IntNode.valueOf(42),BinaryOperator.LESS_EQUAL,IntNode.valueOf(42),BooleanNode.TRUE},{IntNode.valueOf(42),BinaryOperator.EQUAL,IntNode.valueOf(23),BooleanNode.FALSE},{IntNode.valueOf(42),BinaryOperator.NOT_EQUAL,IntNode.valueOf(23),BooleanNode.TRUE},{IntNode.valueOf(42),BinaryOperator.GREATER,IntNode.valueOf(23),BooleanNode.TRUE},{IntNode.valueOf(42),BinaryOperator.GREATER_EQUAL,IntNode.valueOf(23),BooleanNode.TRUE},{IntNode.valueOf(42),BinaryOperator.LESS,IntNode.valueOf(23),BooleanNode.FALSE},{IntNode.valueOf(42),BinaryOperator.LESS_EQUAL,IntNode.valueOf(23),BooleanNode.FALSE},{IntNode.valueOf(23),BinaryOperator.EQUAL,IntNode.valueOf(42),BooleanNode.FALSE},{IntNode.valueOf(23),BinaryOperator.NOT_EQUAL,IntNode.valueOf(42),BooleanNode.TRUE},{IntNode.valueOf(23),BinaryOperator.GREATER,IntNode.valueOf(42),BooleanNode.FALSE},{IntNode.valueOf(23),BinaryOperator.GREATER_EQUAL,IntNode.valueOf(42),BooleanNode.FALSE},{IntNode.valueOf(23),BinaryOperator.LESS,IntNode.valueOf(42),BooleanNode.TRUE},{IntNode.valueOf(23),BinaryOperator.LESS_EQUAL,IntNode.valueOf(42),BooleanNode.TRUE},{TextNode.valueOf("42"),BinaryOperator.EQUAL,TextNode.valueOf("42"),BooleanNode.TRUE},{TextNode.valueOf("42"),BinaryOperator.NOT_EQUAL,TextNode.valueOf("42"),BooleanNode.FALSE},{TextNode.valueOf("42"),BinaryOperator.GREATER,TextNode.valueOf("42"),BooleanNode.FALSE},{TextNode.valueOf("42"),BinaryOperator.GREATER_EQUAL,TextNode.valueOf("42"),BooleanNode.TRUE},{TextNode.valueOf("42"),BinaryOperator.LESS,TextNode.valueOf("42"),BooleanNode.FALSE},{TextNode.valueOf("42"),BinaryOperator.LESS_EQUAL,TextNode.valueOf("42"),BooleanNode.TRUE},{TextNode.valueOf("42"),BinaryOperator.EQUAL,TextNode.valueOf("23"),BooleanNode.FALSE},{TextNode.valueOf("42"),BinaryOperator.NOT_EQUAL,TextNode.valueOf("23"),BooleanNode.TRUE},{TextNode.valueOf("42"),BinaryOperator.GREATER,TextNode.valueOf("23"),BooleanNode.TRUE},{TextNode.valueOf("42"),BinaryOperator.GREATER_EQUAL,TextNode.valueOf("23"),BooleanNode.TRUE},{TextNode.valueOf("42"),BinaryOperator.LESS,TextNode.valueOf("23"),BooleanNode.FALSE},{TextNode.valueOf("42"),BinaryOperator.LESS_EQUAL,TextNode.valueOf("23"),BooleanNode.FALSE},{TextNode.valueOf("23"),BinaryOperator.EQUAL,TextNode.valueOf("42"),BooleanNode.FALSE},{TextNode.valueOf("23"),BinaryOperator.NOT_EQUAL,TextNode.valueOf("42"),BooleanNode.TRUE},{TextNode.valueOf("23"),BinaryOperator.GREATER,TextNode.valueOf("42"),BooleanNode.FALSE},{TextNode.valueOf("23"),BinaryOperator.GREATER_EQUAL,TextNode.valueOf("42"),BooleanNode.FALSE},{TextNode.valueOf("23"),BinaryOperator.LESS,TextNode.valueOf("42"),BooleanNode.TRUE},{TextNode.valueOf("23"),BinaryOperator.LESS_EQUAL,TextNode.valueOf("42"),BooleanNode.TRUE}});
}
