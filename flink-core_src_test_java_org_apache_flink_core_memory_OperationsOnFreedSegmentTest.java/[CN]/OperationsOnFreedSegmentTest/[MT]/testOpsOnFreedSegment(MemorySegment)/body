{
  segment.free();
  assertTrue(segment.isFreed());
  try {
    segment.get(0);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|NullPointerException ignored) {
  }
  try {
    segment.get(-1);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|NullPointerException|IndexOutOfBoundsException ignored) {
  }
  try {
    segment.get(1);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|NullPointerException ignored) {
  }
  try {
    segment.get(segment.size());
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|NullPointerException ignored) {
  }
  try {
    segment.get(-segment.size());
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|NullPointerException|IndexOutOfBoundsException ignored) {
  }
  try {
    segment.get(Integer.MAX_VALUE);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|NullPointerException ignored) {
  }
  try {
    segment.get(Integer.MIN_VALUE);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|NullPointerException ignored) {
  }
  try {
    segment.put(0,(byte)0);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|NullPointerException ignored) {
  }
  try {
    segment.put(-1,(byte)0);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|NullPointerException|IndexOutOfBoundsException ignored) {
  }
  try {
    segment.put(1,(byte)0);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|NullPointerException ignored) {
  }
  try {
    segment.put(segment.size(),(byte)0);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|NullPointerException ignored) {
  }
  try {
    segment.put(-segment.size(),(byte)0);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|NullPointerException|IndexOutOfBoundsException ignored) {
  }
  try {
    segment.put(Integer.MAX_VALUE,(byte)0);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|NullPointerException ignored) {
  }
  try {
    segment.put(Integer.MIN_VALUE,(byte)0);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|NullPointerException ignored) {
  }
  try {
    segment.getBoolean(0);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|NullPointerException ignored) {
  }
  try {
    segment.getBoolean(-1);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|NullPointerException|IndexOutOfBoundsException ignored) {
  }
  try {
    segment.getBoolean(1);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|NullPointerException ignored) {
  }
  try {
    segment.getBoolean(segment.size());
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|NullPointerException ignored) {
  }
  try {
    segment.getBoolean(-segment.size());
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|NullPointerException|IndexOutOfBoundsException ignored) {
  }
  try {
    segment.getBoolean(Integer.MAX_VALUE);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|NullPointerException ignored) {
  }
  try {
    segment.getBoolean(Integer.MIN_VALUE);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|NullPointerException ignored) {
  }
  try {
    segment.putBoolean(0,true);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|NullPointerException ignored) {
  }
  try {
    segment.putBoolean(-1,true);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|NullPointerException|IndexOutOfBoundsException ignored) {
  }
  try {
    segment.putBoolean(1,true);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|NullPointerException ignored) {
  }
  try {
    segment.putBoolean(segment.size(),true);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|NullPointerException ignored) {
  }
  try {
    segment.putBoolean(-segment.size(),true);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|NullPointerException|IndexOutOfBoundsException ignored) {
  }
  try {
    segment.putBoolean(Integer.MAX_VALUE,true);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|NullPointerException ignored) {
  }
  try {
    segment.putBoolean(Integer.MIN_VALUE,true);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|NullPointerException ignored) {
  }
  try {
    segment.getChar(0);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException ignored) {
  }
  try {
    segment.getChar(-1);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|IndexOutOfBoundsException ignored) {
  }
  try {
    segment.getChar(1);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException ignored) {
  }
  try {
    segment.getChar(segment.size());
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException ignored) {
  }
  try {
    segment.getChar(-segment.size());
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|IndexOutOfBoundsException ignored) {
  }
  try {
    segment.getChar(Integer.MAX_VALUE);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException ignored) {
  }
  try {
    segment.getChar(Integer.MIN_VALUE);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException ignored) {
  }
  try {
    segment.putChar(0,'a');
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException ignored) {
  }
  try {
    segment.putChar(-1,'a');
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|IndexOutOfBoundsException ignored) {
  }
  try {
    segment.putChar(1,'a');
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException ignored) {
  }
  try {
    segment.putChar(segment.size(),'a');
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException ignored) {
  }
  try {
    segment.putChar(-segment.size(),'a');
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|IndexOutOfBoundsException ignored) {
  }
  try {
    segment.putChar(Integer.MAX_VALUE,'a');
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException ignored) {
  }
  try {
    segment.putChar(Integer.MIN_VALUE,'a');
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException ignored) {
  }
  try {
    segment.getShort(0);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException ignored) {
  }
  try {
    segment.getShort(-1);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|IndexOutOfBoundsException ignored) {
  }
  try {
    segment.getShort(1);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException ignored) {
  }
  try {
    segment.getShort(segment.size());
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException ignored) {
  }
  try {
    segment.getShort(-segment.size());
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|IndexOutOfBoundsException ignored) {
  }
  try {
    segment.getShort(Integer.MAX_VALUE);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException ignored) {
  }
  try {
    segment.getShort(Integer.MIN_VALUE);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException ignored) {
  }
  try {
    segment.putShort(0,(short)42);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException ignored) {
  }
  try {
    segment.putShort(-1,(short)42);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|IndexOutOfBoundsException ignored) {
  }
  try {
    segment.putShort(1,(short)42);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException ignored) {
  }
  try {
    segment.putShort(segment.size(),(short)42);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException ignored) {
  }
  try {
    segment.putShort(-segment.size(),(short)42);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|IndexOutOfBoundsException ignored) {
  }
  try {
    segment.putShort(Integer.MAX_VALUE,(short)42);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException ignored) {
  }
  try {
    segment.putShort(Integer.MIN_VALUE,(short)42);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException ignored) {
  }
  try {
    segment.getInt(0);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException ignored) {
  }
  try {
    segment.getInt(-1);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|IndexOutOfBoundsException ignored) {
  }
  try {
    segment.getInt(1);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException ignored) {
  }
  try {
    segment.getInt(segment.size());
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException ignored) {
  }
  try {
    segment.getInt(-segment.size());
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|IndexOutOfBoundsException ignored) {
  }
  try {
    segment.getInt(Integer.MAX_VALUE);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException ignored) {
  }
  try {
    segment.getInt(Integer.MIN_VALUE);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException ignored) {
  }
  try {
    segment.putInt(0,42);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException ignored) {
  }
  try {
    segment.putInt(-1,42);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|IndexOutOfBoundsException ignored) {
  }
  try {
    segment.putInt(1,42);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException ignored) {
  }
  try {
    segment.putInt(segment.size(),42);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException ignored) {
  }
  try {
    segment.putInt(-segment.size(),42);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|IndexOutOfBoundsException ignored) {
  }
  try {
    segment.putInt(Integer.MAX_VALUE,42);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException ignored) {
  }
  try {
    segment.putInt(Integer.MIN_VALUE,42);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException ignored) {
  }
  try {
    segment.getLong(0);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException ignored) {
  }
  try {
    segment.getLong(-1);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|IndexOutOfBoundsException ignored) {
  }
  try {
    segment.getLong(1);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException ignored) {
  }
  try {
    segment.getLong(segment.size());
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException ignored) {
  }
  try {
    segment.getLong(-segment.size());
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|IndexOutOfBoundsException ignored) {
  }
  try {
    segment.getLong(Integer.MAX_VALUE);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException ignored) {
  }
  try {
    segment.getLong(Integer.MIN_VALUE);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException ignored) {
  }
  try {
    segment.putLong(0,42);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException ignored) {
  }
  try {
    segment.putLong(-1,42);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|IndexOutOfBoundsException ignored) {
  }
  try {
    segment.putLong(1,42);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException ignored) {
  }
  try {
    segment.putLong(segment.size(),42);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException ignored) {
  }
  try {
    segment.putLong(-segment.size(),42);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|IndexOutOfBoundsException ignored) {
  }
  try {
    segment.putLong(Integer.MAX_VALUE,42);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException ignored) {
  }
  try {
    segment.putLong(Integer.MIN_VALUE,42);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException ignored) {
  }
  try {
    segment.getFloat(0);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException ignored) {
  }
  try {
    segment.getFloat(-1);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|IndexOutOfBoundsException ignored) {
  }
  try {
    segment.getFloat(1);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException ignored) {
  }
  try {
    segment.getFloat(segment.size());
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException ignored) {
  }
  try {
    segment.getFloat(-segment.size());
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|IndexOutOfBoundsException ignored) {
  }
  try {
    segment.getFloat(Integer.MAX_VALUE);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException ignored) {
  }
  try {
    segment.getFloat(Integer.MIN_VALUE);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException ignored) {
  }
  try {
    segment.putFloat(0,42);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException ignored) {
  }
  try {
    segment.putFloat(-1,42);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|IndexOutOfBoundsException ignored) {
  }
  try {
    segment.putFloat(1,42);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException ignored) {
  }
  try {
    segment.putFloat(segment.size(),42);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException ignored) {
  }
  try {
    segment.putFloat(-segment.size(),42);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|IndexOutOfBoundsException ignored) {
  }
  try {
    segment.putFloat(Integer.MAX_VALUE,42);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException ignored) {
  }
  try {
    segment.putFloat(Integer.MIN_VALUE,42);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException ignored) {
  }
  try {
    segment.getDouble(0);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException ignored) {
  }
  try {
    segment.getDouble(-1);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|IndexOutOfBoundsException ignored) {
  }
  try {
    segment.getDouble(1);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException ignored) {
  }
  try {
    segment.getDouble(segment.size());
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException ignored) {
  }
  try {
    segment.getDouble(-segment.size());
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|IndexOutOfBoundsException ignored) {
  }
  try {
    segment.getDouble(Integer.MAX_VALUE);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException ignored) {
  }
  try {
    segment.getDouble(Integer.MIN_VALUE);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException ignored) {
  }
  try {
    segment.putDouble(0,42);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException ignored) {
  }
  try {
    segment.putDouble(-1,42);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|IndexOutOfBoundsException ignored) {
  }
  try {
    segment.putDouble(1,42);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException ignored) {
  }
  try {
    segment.putDouble(segment.size(),42);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException ignored) {
  }
  try {
    segment.putDouble(-segment.size(),42);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|IndexOutOfBoundsException ignored) {
  }
  try {
    segment.putDouble(Integer.MAX_VALUE,42);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException ignored) {
  }
  try {
    segment.putDouble(Integer.MIN_VALUE,42);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException ignored) {
  }
  final byte[] array=new byte[55];
  try {
    segment.get(0,array,3,17);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|NullPointerException ignored) {
  }
  try {
    segment.get(-1,array,3,17);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|NullPointerException|IndexOutOfBoundsException ignored) {
  }
  try {
    segment.get(1,array,3,17);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|NullPointerException ignored) {
  }
  try {
    segment.get(segment.size(),array,3,17);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|NullPointerException ignored) {
  }
  try {
    segment.get(-segment.size(),array,3,17);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|NullPointerException|IndexOutOfBoundsException ignored) {
  }
  try {
    segment.get(Integer.MAX_VALUE,array,3,17);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|NullPointerException ignored) {
  }
  try {
    segment.get(Integer.MIN_VALUE,array,3,17);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|NullPointerException ignored) {
  }
  try {
    segment.put(0,array,3,17);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|NullPointerException ignored) {
  }
  try {
    segment.put(-1,array,3,17);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|NullPointerException|IndexOutOfBoundsException ignored) {
  }
  try {
    segment.put(1,array,3,17);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|NullPointerException ignored) {
  }
  try {
    segment.put(segment.size(),array,3,17);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|NullPointerException ignored) {
  }
  try {
    segment.put(-segment.size(),array,3,17);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|NullPointerException|IndexOutOfBoundsException ignored) {
  }
  try {
    segment.put(Integer.MAX_VALUE,array,3,17);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|NullPointerException ignored) {
  }
  try {
    segment.put(Integer.MIN_VALUE,array,3,17);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|NullPointerException ignored) {
  }
  for (  ByteBuffer bbuf : new ByteBuffer[]{ByteBuffer.allocate(55),ByteBuffer.allocateDirect(55)}) {
    try {
      segment.get(0,bbuf,17);
      fail("Should fail with an exception");
    }
 catch (    IllegalStateException|NullPointerException ignored) {
    }
    try {
      segment.get(-1,bbuf,17);
      fail("Should fail with an exception");
    }
 catch (    IllegalStateException|NullPointerException|IndexOutOfBoundsException ignored) {
    }
    try {
      segment.get(1,bbuf,17);
      fail("Should fail with an exception");
    }
 catch (    IllegalStateException|NullPointerException ignored) {
    }
    try {
      segment.get(segment.size(),bbuf,17);
      fail("Should fail with an exception");
    }
 catch (    IllegalStateException|NullPointerException ignored) {
    }
    try {
      segment.get(-segment.size(),bbuf,17);
      fail("Should fail with an exception");
    }
 catch (    IllegalStateException|NullPointerException|IndexOutOfBoundsException ignored) {
    }
    try {
      segment.get(Integer.MAX_VALUE,bbuf,17);
      fail("Should fail with an exception");
    }
 catch (    IllegalStateException|NullPointerException|IndexOutOfBoundsException ignored) {
    }
    try {
      segment.get(Integer.MIN_VALUE,bbuf,17);
      fail("Should fail with an exception");
    }
 catch (    IllegalStateException|NullPointerException|IndexOutOfBoundsException ignored) {
    }
    try {
      segment.put(0,bbuf,17);
      fail("Should fail with an exception");
    }
 catch (    IllegalStateException|NullPointerException|IndexOutOfBoundsException ignored) {
    }
    try {
      segment.put(-1,bbuf,17);
      fail("Should fail with an exception");
    }
 catch (    IllegalStateException|NullPointerException|IndexOutOfBoundsException ignored) {
    }
    try {
      segment.put(1,bbuf,17);
      fail("Should fail with an exception");
    }
 catch (    IllegalStateException|NullPointerException ignored) {
    }
    try {
      segment.put(segment.size(),bbuf,17);
      fail("Should fail with an exception");
    }
 catch (    IllegalStateException|NullPointerException ignored) {
    }
    try {
      segment.put(-segment.size(),bbuf,17);
      fail("Should fail with an exception");
    }
 catch (    IllegalStateException|NullPointerException|IndexOutOfBoundsException ignored) {
    }
    try {
      segment.put(Integer.MAX_VALUE,bbuf,17);
      fail("Should fail with an exception");
    }
 catch (    IllegalStateException|NullPointerException|IndexOutOfBoundsException ignored) {
    }
    try {
      segment.put(Integer.MIN_VALUE,bbuf,17);
      fail("Should fail with an exception");
    }
 catch (    IllegalStateException|NullPointerException|IndexOutOfBoundsException ignored) {
    }
  }
  final DataInput din=new DataInputStream(new ByteArrayInputStream(new byte[100]));
  final DataOutput dout=new DataOutputStream(new ByteArrayOutputStream());
  try {
    segment.get(dout,0,17);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|NullPointerException ignored) {
  }
  try {
    segment.get(dout,-1,17);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|NullPointerException|IndexOutOfBoundsException ignored) {
  }
  try {
    segment.get(dout,1,17);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|NullPointerException ignored) {
  }
  try {
    segment.get(dout,segment.size(),17);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|NullPointerException ignored) {
  }
  try {
    segment.get(dout,-segment.size(),17);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|NullPointerException|IndexOutOfBoundsException ignored) {
  }
  try {
    segment.get(dout,Integer.MAX_VALUE,17);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|NullPointerException|IndexOutOfBoundsException ignored) {
  }
  try {
    segment.get(dout,Integer.MIN_VALUE,17);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|NullPointerException|IndexOutOfBoundsException ignored) {
  }
  try {
    segment.put(din,0,17);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|NullPointerException|IndexOutOfBoundsException ignored) {
  }
  try {
    segment.put(din,-1,17);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|NullPointerException|IndexOutOfBoundsException ignored) {
  }
  try {
    segment.put(din,1,17);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|NullPointerException ignored) {
  }
  try {
    segment.put(din,segment.size(),17);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|NullPointerException ignored) {
  }
  try {
    segment.put(din,-segment.size(),17);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|NullPointerException|IndexOutOfBoundsException ignored) {
  }
  try {
    segment.put(din,Integer.MAX_VALUE,17);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|NullPointerException|IndexOutOfBoundsException ignored) {
  }
  try {
    segment.put(din,Integer.MIN_VALUE,17);
    fail("Should fail with an exception");
  }
 catch (  IllegalStateException|NullPointerException|IndexOutOfBoundsException ignored) {
  }
}
