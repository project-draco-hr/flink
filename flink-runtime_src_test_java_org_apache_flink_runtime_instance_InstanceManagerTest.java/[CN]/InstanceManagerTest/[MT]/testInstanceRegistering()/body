{
  try {
    InstanceManager cm=new InstanceManager();
    final int dataPort=20000;
    HardwareDescription hardwareDescription=HardwareDescription.extractFromSystem(4096);
    InetAddress address=InetAddress.getByName("127.0.0.1");
    InstanceConnectionInfo ici1=new InstanceConnectionInfo(address,dataPort);
    InstanceConnectionInfo ici2=new InstanceConnectionInfo(address,dataPort + 15);
    InstanceConnectionInfo ici3=new InstanceConnectionInfo(address,dataPort + 30);
    ResourceID resID1=ResourceID.generate();
    ResourceID resID2=ResourceID.generate();
    ResourceID resID3=ResourceID.generate();
    final JavaTestKit probe1=new JavaTestKit(system);
    final JavaTestKit probe2=new JavaTestKit(system);
    final JavaTestKit probe3=new JavaTestKit(system);
    cm.registerTaskManager(probe1.getRef(),resID1,ici1,hardwareDescription,1,leaderSessionID);
    cm.registerTaskManager(probe2.getRef(),resID2,ici2,hardwareDescription,2,leaderSessionID);
    cm.registerTaskManager(probe3.getRef(),resID3,ici3,hardwareDescription,5,leaderSessionID);
    assertEquals(3,cm.getNumberOfRegisteredTaskManagers());
    assertEquals(8,cm.getTotalNumberOfSlots());
    Collection<Instance> instances=cm.getAllRegisteredInstances();
    Set<InstanceConnectionInfo> instanceConnectionInfos=new HashSet<InstanceConnectionInfo>();
    for (    Instance instance : instances) {
      instanceConnectionInfos.add(instance.getInstanceConnectionInfo());
    }
    assertTrue(instanceConnectionInfos.contains(ici1));
    assertTrue(instanceConnectionInfos.contains(ici2));
    assertTrue(instanceConnectionInfos.contains(ici3));
    cm.shutdown();
  }
 catch (  Exception e) {
    System.err.println(e.getMessage());
    e.printStackTrace();
    Assert.fail("Test erroneous: " + e.getMessage());
  }
}
