{
  try {
    InstanceManager cm=new InstanceManager();
    assertTrue(cm.getHeartbeatTimeout() < 2 * 60 * 1000);
    final int dataPort=20000;
    HardwareDescription hardwareDescription=HardwareDescription.extractFromSystem(4096);
    InetAddress address=InetAddress.getByName("127.0.0.1");
    InstanceConnectionInfo ici1=new InstanceConnectionInfo(address,dataPort + 0);
    InstanceConnectionInfo ici2=new InstanceConnectionInfo(address,dataPort + 15);
    InstanceConnectionInfo ici3=new InstanceConnectionInfo(address,dataPort + 30);
    final JavaTestKit probe1=new JavaTestKit(system);
    final JavaTestKit probe2=new JavaTestKit(system);
    final JavaTestKit probe3=new JavaTestKit(system);
    InstanceID i1=cm.registerTaskManager(probe1.getRef(),ici1,hardwareDescription,1);
    InstanceID i2=cm.registerTaskManager(probe2.getRef(),ici2,hardwareDescription,2);
    InstanceID i3=cm.registerTaskManager(probe3.getRef(),ici3,hardwareDescription,5);
    assertEquals(3,cm.getNumberOfRegisteredTaskManagers());
    assertEquals(8,cm.getTotalNumberOfSlots());
    assertEquals(ici1,cm.getAllRegisteredInstances().get(i1).getInstanceConnectionInfo());
    assertEquals(ici2,cm.getAllRegisteredInstances().get(i2).getInstanceConnectionInfo());
    assertEquals(ici3,cm.getAllRegisteredInstances().get(i3).getInstanceConnectionInfo());
    cm.shutdown();
  }
 catch (  Exception e) {
    System.err.println(e.getMessage());
    e.printStackTrace();
    Assert.fail("Test erroneous: " + e.getMessage());
  }
}
