{
  try {
    InstanceManager cm=new InstanceManager();
    final int dataPort=20000;
    HardwareDescription hardwareDescription=HardwareDescription.extractFromSystem(4096);
    InetAddress address=InetAddress.getByName("127.0.0.1");
    InstanceConnectionInfo ici1=new InstanceConnectionInfo(address,dataPort + 0);
    InstanceConnectionInfo ici2=new InstanceConnectionInfo(address,dataPort + 1);
    InstanceConnectionInfo ici3=new InstanceConnectionInfo(address,dataPort + 2);
    JavaTestKit probe1=new JavaTestKit(system);
    JavaTestKit probe2=new JavaTestKit(system);
    JavaTestKit probe3=new JavaTestKit(system);
    InstanceID i1=cm.registerTaskManager(probe1.getRef(),ici1,hardwareDescription,1);
    InstanceID i2=cm.registerTaskManager(probe2.getRef(),ici2,hardwareDescription,1);
    InstanceID i3=cm.registerTaskManager(probe3.getRef(),ici3,hardwareDescription,1);
    assertTrue(cm.reportHeartBeat(i1));
    assertTrue(cm.reportHeartBeat(i2));
    assertTrue(cm.reportHeartBeat(i3));
    assertFalse(cm.reportHeartBeat(new InstanceID()));
    final long WAIT=200;
    CommonTestUtils.sleepUninterruptibly(WAIT);
    long h1=cm.getAllRegisteredInstances().get(i1).getLastHeartBeat();
    long h2=cm.getAllRegisteredInstances().get(i2).getLastHeartBeat();
    long h3=cm.getAllRegisteredInstances().get(i3).getLastHeartBeat();
    assertTrue(cm.reportHeartBeat(i1));
    long newH1=cm.getAllRegisteredInstances().get(i1).getLastHeartBeat();
    long now=System.currentTimeMillis();
    assertTrue(now - h1 >= WAIT);
    assertTrue(now - h2 >= WAIT);
    assertTrue(now - h3 >= WAIT);
    assertTrue(now - newH1 <= WAIT);
    cm.shutdown();
  }
 catch (  Exception e) {
    System.err.println(e.getMessage());
    e.printStackTrace();
    Assert.fail("Test erroneous: " + e.getMessage());
  }
}
