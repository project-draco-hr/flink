{
  DataSet<TriangleListing.Result<K>> triangles=input.run(new TriangleListing<K,VV,EV>().setLittleParallelism(littleParallelism));
  DataSet<Tuple2<K,LongValue>> triangleVertices=triangles.flatMap(new SplitTriangles<K>()).name("Split triangle vertices");
  DataSet<Tuple2<K,LongValue>> vertexTriangleCount=triangleVertices.groupBy(0).reduce(new CountTriangles<K>()).name("Count triangles");
  DataSet<Vertex<K,Degrees>> vertexDegree=input.run(new VertexDegrees<K,VV,EV>().setParallelism(littleParallelism).setIncludeZeroDegreeVertices(true));
  return vertexDegree.leftOuterJoin(vertexTriangleCount).where(0).equalTo(0).with(new JoinVertexDegreeWithTriangleCount<K>()).setParallelism(littleParallelism).name("Clustering coefficient");
}
