{
  long card1=getFirstPredecessorNode().getEstimatedNumRecords();
  long card2=getSecondPredecessorNode().getEstimatedNumRecords();
  if (card1 < 0 || card2 < 0) {
    this.estimatedNumRecords=-1;
  }
 else {
    this.estimatedNumRecords=Math.max(card1,card2);
  }
  if (this.estimatedNumRecords >= 0) {
    float width1=getFirstPredecessorNode().getEstimatedAvgWidthPerOutputRecord();
    float width2=getSecondPredecessorNode().getEstimatedAvgWidthPerOutputRecord();
    float width=(width1 <= 0 || width2 <= 0) ? -1 : width1 + width2;
    if (width > 0) {
      this.estimatedOutputSize=(long)(width * this.estimatedNumRecords);
    }
  }
}
