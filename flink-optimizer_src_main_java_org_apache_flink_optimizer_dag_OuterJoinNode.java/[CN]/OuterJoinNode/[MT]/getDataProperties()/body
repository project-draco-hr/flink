{
  OuterJoinOperatorBase<?,?,?,?> operator=getOperator();
  OuterJoinType type=operator.getOuterJoinType();
  JoinHint joinHint=operator.getJoinHint();
  joinHint=joinHint == null ? JoinHint.OPTIMIZER_CHOOSES : joinHint;
  List<OperatorDescriptorDual> list;
switch (type) {
case LEFT:
    list=createLeftOuterJoinDescriptors(joinHint);
  break;
case RIGHT:
list=createRightOuterJoinDescriptors(joinHint);
break;
case FULL:
list=createFullOuterJoinDescriptors(joinHint);
break;
default :
throw new CompilerException("Unknown outer join type: " + type);
}
Partitioner<?> customPartitioner=operator.getCustomPartitioner();
if (customPartitioner != null) {
for (OperatorDescriptorDual desc : list) {
((AbstractJoinDescriptor)desc).setCustomPartitioner(customPartitioner);
}
}
return list;
}
