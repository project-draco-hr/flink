{
  super(operator);
  if (this.keys == null) {
    setParallelism(1);
  }
  OperatorDescriptorSingle props;
  if (this.keys == null) {
    props=new AllReduceProperties();
  }
 else {
    DriverStrategy combinerStrategy;
switch (operator.getCombineHint()) {
case OPTIMIZER_CHOOSES:
      combinerStrategy=DriverStrategy.SORTED_PARTIAL_REDUCE;
    break;
case SORT:
  combinerStrategy=DriverStrategy.SORTED_PARTIAL_REDUCE;
break;
case HASH:
combinerStrategy=DriverStrategy.HASHED_PARTIAL_REDUCE;
break;
default :
throw new RuntimeException("Unknown CombineHint");
}
props=new ReduceProperties(this.keys,operator.getCustomPartitioner(),combinerStrategy);
}
this.possibleProperties=Collections.singletonList(props);
}
