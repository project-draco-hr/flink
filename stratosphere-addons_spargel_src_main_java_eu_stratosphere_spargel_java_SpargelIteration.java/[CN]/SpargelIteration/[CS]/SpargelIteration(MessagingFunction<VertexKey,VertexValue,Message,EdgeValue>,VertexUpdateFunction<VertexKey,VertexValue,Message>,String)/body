{
  this.vertexKey=ReflectionUtil.getTemplateType1(mf.getClass());
  this.vertexValue=ReflectionUtil.getTemplateType2(mf.getClass());
  this.messageType=ReflectionUtil.getTemplateType3(mf.getClass());
  this.edgeValue=ReflectionUtil.getTemplateType4(mf.getClass());
  if (vertexKey == null || vertexValue == null || messageType == null || edgeValue == null) {
    throw new RuntimeException();
  }
  this.iteration=new DeltaIteration(0,name);
  this.messager=CoGroupOperator.builder(MessagingDriver.class,vertexKey,0,0).input2(iteration.getWorkset()).name("Message Sender").build();
  this.vertexUpdater=CoGroupOperator.builder(VertexUpdateDriver.class,vertexKey,0,0).input1(messager).input2(iteration.getSolutionSet()).name("Vertex Updater").build();
  iteration.setNextWorkset(vertexUpdater);
  iteration.setSolutionSetDelta(vertexUpdater);
  try {
    Configuration vertexUdfParams=vertexUpdater.getParameters();
    InstantiationUtil.writeObjectToConfig(uf,vertexUdfParams,VertexUpdateDriver.UDF_PARAM);
    vertexUdfParams.setClass(VertexUpdateDriver.KEY_PARAM,vertexKey);
    vertexUdfParams.setClass(VertexUpdateDriver.VALUE_PARAM,vertexValue);
    vertexUdfParams.setClass(VertexUpdateDriver.MESSAGE_PARAM,messageType);
    Configuration messageUdfParams=messager.getParameters();
    InstantiationUtil.writeObjectToConfig(mf,messageUdfParams,MessagingDriver.UDF_PARAM);
    messageUdfParams.setClass(MessagingDriver.KEY_PARAM,vertexKey);
    messageUdfParams.setClass(MessagingDriver.VALUE_PARAM,vertexValue);
    messageUdfParams.setClass(MessagingDriver.MESSAGE_PARAM,messageType);
    messageUdfParams.setClass(MessagingDriver.EDGE_PARAM,edgeValue);
  }
 catch (  IOException e) {
    throw new RuntimeException("Could not serialize the UDFs for distribution" + (e.getMessage() == null ? '.' : ": " + e.getMessage()),e);
  }
}
