{
switch (mode) {
case NONE:
    return op1.join(op2).where(firstKeys).equalTo(secondKeys).setParallelism(parallelism).map(new NestedKeyDiscarder()).setParallelism(parallelism).name("DefaultJoinPostStep");
case HUGE:
  return op1.joinWithHuge(op2).where(firstKeys).equalTo(secondKeys).setParallelism(parallelism).map(new NestedKeyDiscarder()).setParallelism(parallelism).name("DefaultJoinPostStep");
case TINY:
return op1.joinWithTiny(op2).where(firstKeys).equalTo(secondKeys).setParallelism(parallelism).map(new NestedKeyDiscarder()).setParallelism(parallelism).name("DefaultJoinPostStep");
default :
throw new IllegalArgumentException("Invalid join mode specified.");
}
}
