{
  if (this.availableInstanceTypes == null) {
    LOG.error("Cannot compute instance accommodation matrix: availableInstanceTypes is null");
    return null;
  }
  final int matrixSize=this.availableInstanceTypes.length;
  final int[][] am=new int[matrixSize][matrixSize];
  for (int i=0; i < matrixSize; i++) {
    for (int j=0; j < matrixSize; j++) {
      if (i == j) {
        am[i][j]=1;
      }
 else {
        final InstanceType sourceType=this.availableInstanceTypes[i];
        InstanceType targetType=this.availableInstanceTypes[j];
        final int cores=targetType.getNumberOfCores() / sourceType.getNumberOfCores();
        final int cu=targetType.getNumberOfComputeUnits() / sourceType.getNumberOfComputeUnits();
        final int mem=targetType.getMemorySize() / sourceType.getMemorySize();
        final int disk=targetType.getDiskCapacity() / sourceType.getDiskCapacity();
        am[i][j]=Math.min(cores,Math.min(cu,Math.min(mem,disk)));
      }
    }
  }
  return am;
}
