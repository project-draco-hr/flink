{
{
    try {
      segment.putBoolean(-1,false);
      fail("IndexOutOfBoundsException expected");
    }
 catch (    Exception e) {
      assertTrue(e instanceof IndexOutOfBoundsException);
    }
    try {
      segment.putBoolean(SEGMENT_SIZE,false);
      fail("IndexOutOfBoundsException expected");
    }
 catch (    Exception e) {
      assertTrue(e instanceof IndexOutOfBoundsException);
    }
    try {
      segment.getBoolean(-1);
      fail("IndexOutOfBoundsException expected");
    }
 catch (    Exception e) {
      assertTrue(e instanceof IndexOutOfBoundsException);
    }
    try {
      segment.getBoolean(SEGMENT_SIZE);
      fail("IndexOutOfBoundsException expected");
    }
 catch (    Exception e) {
      assertTrue(e instanceof IndexOutOfBoundsException);
    }
  }
{
    long seed=random.nextLong();
    random.setSeed(seed);
    for (int i=0; i < SEGMENT_SIZE; i++) {
      segment.putBoolean(i,random.nextBoolean());
    }
    random.setSeed(seed);
    for (int i=0; i < SEGMENT_SIZE; i++) {
      assertEquals(random.nextBoolean(),segment.getBoolean(i));
    }
  }
}
