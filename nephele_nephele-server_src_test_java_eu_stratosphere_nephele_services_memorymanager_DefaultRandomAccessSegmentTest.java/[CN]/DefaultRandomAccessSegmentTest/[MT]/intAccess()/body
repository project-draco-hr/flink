{
{
    try {
      segment.putInt(-1,0);
      fail("IndexOutOfBoundsException expected");
    }
 catch (    Exception e) {
      assertTrue(e instanceof IndexOutOfBoundsException);
    }
    try {
      segment.putInt(SEGMENT_SIZE,0);
      fail("IndexOutOfBoundsException expected");
    }
 catch (    Exception e) {
      assertTrue(e instanceof IndexOutOfBoundsException);
    }
    try {
      segment.getInt(-1);
      fail("IndexOutOfBoundsException expected");
    }
 catch (    Exception e) {
      assertTrue(e instanceof IndexOutOfBoundsException);
    }
    try {
      segment.getInt(SEGMENT_SIZE);
      fail("IndexOutOfBoundsException expected");
    }
 catch (    Exception e) {
      assertTrue(e instanceof IndexOutOfBoundsException);
    }
  }
{
    long seed=random.nextLong();
    random.setSeed(seed);
    for (int i=0; i < SEGMENT_SIZE / 4; i+=4) {
      segment.putInt(i,random.nextInt());
    }
    random.setSeed(seed);
    for (int i=0; i < SEGMENT_SIZE / 4; i+=4) {
      assertEquals(random.nextInt(),segment.getInt(i));
    }
  }
}
