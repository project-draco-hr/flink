{
switch (progId) {
case 1:
{
      final ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
      DataSet<Tuple5<Integer,Long,Integer,String,Long>> ds=CollectionDataSets.get5TupleDataSet(env);
      DataSet<Tuple5<Integer,Long,Integer,String,Long>> ds2=CollectionDataSets.get5TupleDataSet(env);
      DataSet<Tuple2<Integer,Integer>> coGroupDs=ds.coGroup(ds2).where(0).equalTo(0).with(new Tuple5CoGroup());
      coGroupDs.writeAsCsv(resultPath);
      env.execute();
      return "1,0\n" + "2,6\n" + "3,24\n"+ "4,60\n"+ "5,120\n";
    }
case 2:
{
    final ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
    DataSet<CustomType> ds=CollectionDataSets.getCustomTypeDataSet(env);
    DataSet<CustomType> ds2=CollectionDataSets.getCustomTypeDataSet(env);
    DataSet<CustomType> coGroupDs=ds.coGroup(ds2).where(new KeySelector<CustomType,Integer>(){
      private static final long serialVersionUID=1L;
      @Override public Integer getKey(      CustomType in){
        return in.myInt;
      }
    }
).equalTo(new KeySelector<CustomType,Integer>(){
      private static final long serialVersionUID=1L;
      @Override public Integer getKey(      CustomType in){
        return in.myInt;
      }
    }
).with(new CustomTypeCoGroup());
    coGroupDs.writeAsText(resultPath);
    env.execute();
    return "1,0,test\n" + "2,6,test\n" + "3,24,test\n"+ "4,60,test\n"+ "5,120,test\n"+ "6,210,test\n";
  }
case 3:
{
  final ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
  DataSet<Tuple3<Integer,Long,String>> ds=CollectionDataSets.get3TupleDataSet(env);
  DataSet<Tuple3<Integer,Long,String>> ds2=CollectionDataSets.get3TupleDataSet(env);
  DataSet<Tuple3<Integer,Long,String>> coGroupDs=ds.coGroup(ds2).where(0).equalTo(0).with(new Tuple3ReturnLeft());
  coGroupDs.writeAsCsv(resultPath);
  env.execute();
  return "1,1,Hi\n" + "2,2,Hello\n" + "3,2,Hello world\n"+ "4,3,Hello world, how are you?\n"+ "5,3,I am fine.\n";
}
case 4:
{
final ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
DataSet<Tuple5<Integer,Long,Integer,String,Long>> ds=CollectionDataSets.get5TupleDataSet(env);
DataSet<Tuple5<Integer,Long,Integer,String,Long>> ds2=CollectionDataSets.get5TupleDataSet(env);
DataSet<Tuple5<Integer,Long,Integer,String,Long>> coGroupDs=ds.coGroup(ds2).where(0).equalTo(0).with(new Tuple5ReturnRight());
coGroupDs.writeAsCsv(resultPath);
env.execute();
return "1,1,0,Hallo,1\n" + "2,2,1,Hallo Welt,2\n" + "2,3,2,Hallo Welt wie,1\n"+ "3,4,3,Hallo Welt wie gehts?,2\n"+ "3,5,4,ABC,2\n"+ "3,6,5,BCD,3\n";
}
case 5:
{
final ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
DataSet<Integer> intDs=CollectionDataSets.getIntegerDataSet(env);
DataSet<Tuple5<Integer,Long,Integer,String,Long>> ds=CollectionDataSets.get5TupleDataSet(env);
DataSet<Tuple5<Integer,Long,Integer,String,Long>> ds2=CollectionDataSets.get5TupleDataSet(env);
DataSet<Tuple3<Integer,Integer,Integer>> coGroupDs=ds.coGroup(ds2).where(0).equalTo(0).with(new Tuple5CoGroupBC()).withBroadcastSet(intDs,"ints");
coGroupDs.writeAsCsv(resultPath);
env.execute();
return "1,0,55\n" + "2,6,55\n" + "3,24,55\n"+ "4,60,55\n"+ "5,120,55\n";
}
default :
throw new IllegalArgumentException("Invalid program id");
}
}
