{
  this.types=new Class[types.length];
  this.instances=new CopyableValue[types.length];
  this.lengths=new int[types.length];
  int len=0;
  for (int i=0; i < types.length; i++) {
    if (CopyableValue.class.isAssignableFrom(types[i])) {
      this.types[i]=(Class<CopyableValue<Value>>)types[i];
      this.instances[i]=InstantiationUtil.instantiate(this.types[i],this.clazz);
      this.lengths[i]=this.instances[i].getBinaryLength();
      if (len >= 0) {
        if (this.lengths[i] > 0) {
          len+=this.lengths[i];
        }
 else {
          len=-1;
        }
      }
    }
 else {
      throw new IllegalArgumentException("The array model currently supports only value types that implement the '" + CopyableValue.class.getName() + "'.");
    }
  }
  this.len=len;
  this.clazz=(Class<CopyableValue<Value>>)(Class<?>)CopyableValue.class;
}
