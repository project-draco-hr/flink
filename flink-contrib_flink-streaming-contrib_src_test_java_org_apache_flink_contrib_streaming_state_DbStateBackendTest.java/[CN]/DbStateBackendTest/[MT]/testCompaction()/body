{
  DbBackendConfig conf=new DbBackendConfig("flink","flink",url1);
  MockAdapter adapter=new MockAdapter();
  conf.setKvStateCompactionFrequency(2);
  conf.setDbAdapter(adapter);
  DbStateBackend backend1=new DbStateBackend(conf);
  DbStateBackend backend2=new DbStateBackend(conf);
  DbStateBackend backend3=new DbStateBackend(conf);
  backend1.initializeForJob(new DummyEnvironment("test",3,0));
  backend2.initializeForJob(new DummyEnvironment("test",3,1));
  backend3.initializeForJob(new DummyEnvironment("test",3,2));
  LazyDbKvState<?,?> s1=backend1.createKvState("a_1","a",null,null,null);
  LazyDbKvState<?,?> s2=backend2.createKvState("a_1","a",null,null,null);
  LazyDbKvState<?,?> s3=backend3.createKvState("a_1","a",null,null,null);
  assertTrue(s1.isCompactor());
  assertFalse(s2.isCompactor());
  assertFalse(s3.isCompactor());
  assertNotNull(s1.getExecutor());
  assertNull(s2.getExecutor());
  assertNull(s3.getExecutor());
  s1.snapshot(1,100);
  s1.notifyCheckpointComplete(1);
  s1.snapshot(2,200);
  s1.snapshot(3,300);
  s1.notifyCheckpointComplete(2);
  s1.notifyCheckpointComplete(3);
  s1.snapshot(4,400);
  s1.snapshot(5,500);
  s1.notifyCheckpointComplete(4);
  s1.notifyCheckpointComplete(5);
  s1.dispose();
  s2.dispose();
  s3.dispose();
  s1.getExecutor().awaitTermination(5,TimeUnit.SECONDS);
  assertEquals(2,adapter.numCompcations.get());
  assertEquals(5,adapter.keptAlive);
  backend1.close();
  backend2.close();
  backend3.close();
}
