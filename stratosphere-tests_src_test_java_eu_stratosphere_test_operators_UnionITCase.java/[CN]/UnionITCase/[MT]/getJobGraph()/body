{
  String pathPrefix=getFilesystemProvider().getURIPrefix() + getFilesystemProvider().getTempDirPath();
  FileDataSource input1=new FileDataSource(new ContractITCaseInputFormat(),pathPrefix + config.getString("UnionTest#Input1Path",""));
  DelimitedInputFormat.configureDelimitedFormat(input1).recordDelimiter('\n');
  input1.setDegreeOfParallelism(config.getInteger("UnionTest#NoSubtasks",1));
  FileDataSource input2=new FileDataSource(new ContractITCaseInputFormat(),pathPrefix + config.getString("UnionTest#Input2Path",""));
  DelimitedInputFormat.configureDelimitedFormat(input2).recordDelimiter('\n');
  input2.setDegreeOfParallelism(config.getInteger("UnionTest#NoSubtasks",1));
  MapOperator testMapper=MapOperator.builder(new TestMapper()).build();
  testMapper.setDegreeOfParallelism(config.getInteger("UnionTest#NoSubtasks",1));
  FileDataSink output=new FileDataSink(new ContractITCaseOutputFormat(),pathPrefix + "/result.txt");
  output.setDegreeOfParallelism(1);
  output.setInput(testMapper);
  testMapper.addInput(input1);
  testMapper.addInput(input2);
  Plan plan=new Plan(output);
  PactCompiler pc=new PactCompiler(new DataStatistics());
  OptimizedPlan op=pc.compile(plan);
  NepheleJobGraphGenerator jgg=new NepheleJobGraphGenerator();
  return jgg.compileJobGraph(op);
}
