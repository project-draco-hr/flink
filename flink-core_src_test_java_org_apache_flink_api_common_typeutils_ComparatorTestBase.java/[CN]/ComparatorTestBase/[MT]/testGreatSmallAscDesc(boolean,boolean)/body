{
  try {
    T[] data=getSortedData();
    TypeComparator<T> comparator=getComparator(ascending);
    TestOutputView out1;
    TestOutputView out2;
    TestInputView in1;
    TestInputView in2;
    for (int x=0; x < data.length - 1; x++) {
      for (int y=x + 1; y < data.length; y++) {
        out1=new TestOutputView();
        writeSortedData(data[x],out1);
        in1=out1.getInputView();
        out2=new TestOutputView();
        writeSortedData(data[y],out2);
        in2=out2.getInputView();
        if (greater && ascending) {
          assertTrue(comparator.compareSerialized(in1,in2) < 0);
        }
        if (greater && !ascending) {
          assertTrue(comparator.compareSerialized(in1,in2) > 0);
        }
        if (!greater && ascending) {
          assertTrue(comparator.compareSerialized(in2,in1) > 0);
        }
        if (!greater && !ascending) {
          assertTrue(comparator.compareSerialized(in2,in1) < 0);
        }
      }
    }
  }
 catch (  Exception e) {
    System.err.println(e.getMessage());
    e.printStackTrace();
    fail("Exception in test: " + e.getMessage());
  }
}
