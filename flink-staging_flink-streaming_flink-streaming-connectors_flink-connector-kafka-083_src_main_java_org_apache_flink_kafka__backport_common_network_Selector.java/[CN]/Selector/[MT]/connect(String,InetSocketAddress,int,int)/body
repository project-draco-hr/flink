{
  if (this.keys.containsKey(id))   throw new IllegalStateException("There is already a connection for id " + id);
  SocketChannel channel=SocketChannel.open();
  channel.configureBlocking(false);
  Socket socket=channel.socket();
  socket.setKeepAlive(true);
  socket.setSendBufferSize(sendBufferSize);
  socket.setReceiveBufferSize(receiveBufferSize);
  socket.setTcpNoDelay(true);
  try {
    channel.connect(address);
  }
 catch (  UnresolvedAddressException e) {
    channel.close();
    throw new IOException("Can't resolve address: " + address,e);
  }
catch (  IOException e) {
    channel.close();
    throw e;
  }
  SelectionKey key=channel.register(this.nioSelector,SelectionKey.OP_CONNECT);
  key.attach(new Transmissions(id));
  this.keys.put(id,key);
}
