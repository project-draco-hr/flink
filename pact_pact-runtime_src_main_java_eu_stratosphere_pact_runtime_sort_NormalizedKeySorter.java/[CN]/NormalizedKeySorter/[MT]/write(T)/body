{
  if (this.currentSortIndexOffset > this.lastIndexEntryOffset) {
    if (memoryAvailable()) {
      this.currentSortIndexSegment=nextMemorySegment();
      this.sortIndex.add(this.currentSortIndexSegment);
      this.currentSortIndexOffset=0;
      this.sortIndexBytes+=this.segmentSize;
    }
 else     return false;
  }
  this.currentSortIndexSegment.putPointer(this.currentSortIndexOffset,this.currentDataBufferOffset);
  this.comparator.putNormalizedKey(record,this.currentSortIndexSegment.getBackingArray(),this.currentSortIndexSegment.translateOffset(this.currentSortIndexOffset + POINTER_LEN),this.numKeyBytes);
  try {
    long bytes=this.serializer.serialize(record,this.recordCollector);
    this.currentSortIndexOffset+=this.indexEntrySize;
    this.currentDataBufferOffset+=bytes;
    this.numRecords++;
    return true;
  }
 catch (  EOFException eofex) {
    return false;
  }
}
