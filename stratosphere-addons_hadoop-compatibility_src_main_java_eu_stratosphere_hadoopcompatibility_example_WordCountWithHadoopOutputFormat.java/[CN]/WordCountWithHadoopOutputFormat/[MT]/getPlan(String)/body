{
  int numSubTasks=(args.length > 0 ? Integer.parseInt(args[0]) : 1);
  String dataInput=(args.length > 1 ? args[1] : "");
  String output=(args.length > 2 ? args[2] : "");
  HadoopDataSource<LongWritable,Text> source=new HadoopDataSource<LongWritable,Text>(new TextInputFormat(),new JobConf(),"Input Lines");
  TextInputFormat.addInputPath(source.getJobConf(),new Path(dataInput));
  MapOperator mapper=MapOperator.builder(new TokenizeLine()).input(source).name("Tokenize Lines").build();
  ReduceOperator reducer=ReduceOperator.builder(CountWords.class,StringValue.class,0).input(mapper).name("Count Words").build();
  HadoopDataSink<Text,IntWritable> out=new HadoopDataSink<Text,IntWritable>(new TextOutputFormat<Text,IntWritable>(),new JobConf(),"Hadoop TextOutputFormat",reducer,Text.class,IntWritable.class);
  TextOutputFormat.setOutputPath(out.getJobConf(),new Path(output));
  Plan plan=new Plan(out,"Hadoop OutputFormat Example");
  plan.setDefaultParallelism(numSubTasks);
  return plan;
}
