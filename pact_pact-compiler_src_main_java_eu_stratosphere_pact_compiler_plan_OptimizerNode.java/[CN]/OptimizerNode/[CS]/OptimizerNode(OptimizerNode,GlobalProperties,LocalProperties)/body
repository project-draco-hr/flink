{
  this.pactContract=toClone.pactContract;
  this.localStrategy=toClone.localStrategy;
  this.localProps=localProps;
  this.globalProps=globalProps;
  this.estimatedOutputSize=toClone.estimatedOutputSize;
  this.estimatedKeyCardinality=toClone.estimatedKeyCardinality;
  this.estimatedNumRecords=toClone.estimatedNumRecords;
  this.id=toClone.id;
  this.degreeOfParallelism=toClone.degreeOfParallelism;
  this.instancesPerMachine=toClone.instancesPerMachine;
  this.stubOutCardLB=toClone.stubOutCardLB;
  this.stubOutCardUB=toClone.stubOutCardUB;
  this.addSet=toClone.addSet;
  this.outputSchema=toClone.outputSchema == null ? null : Arrays.copyOf(toClone.outputSchema,toClone.outputSchema.length);
  if (toClone.isBranching()) {
    this.branchPlan=new HashMap<OptimizerNode,OptimizerNode>(6);
    this.branchPlan.put(toClone,this);
  }
  this.lastJoinedBranchNode=toClone.lastJoinedBranchNode;
}
