{
  Class<? extends Annotation> clazz=null;
  OutputContract oc=null;
  if (getPactContract() instanceof OutputContractConfigurable) {
    clazz=((OutputContractConfigurable)getPactContract()).getOutputContract();
    if (clazz != null) {
      OutputContract cc=OutputContract.getOutputContract(clazz);
      if (cc != null) {
        oc=cc;
      }
    }
  }
  if (oc == null) {
    Class<?> stubClass=getPactContract().getUserCodeClass();
    Annotation[] allAnnotations=stubClass.getAnnotations();
    for (int i=0; i < allAnnotations.length; i++) {
      clazz=allAnnotations[i].annotationType();
      if (clazz.getEnclosingClass().equals(eu.stratosphere.pact.common.contract.OutputContract.class)) {
        OutputContract cc=OutputContract.getOutputContract(clazz);
        if (cc != null) {
          if (oc == null) {
            oc=cc;
          }
 else {
            throw new CompilerException("Contract '" + this.pactContract.getName() + "' ("+ getPactType().name()+ ") has more than one output contract.");
          }
        }
      }
    }
  }
  return oc == null ? OutputContract.None : oc;
}
