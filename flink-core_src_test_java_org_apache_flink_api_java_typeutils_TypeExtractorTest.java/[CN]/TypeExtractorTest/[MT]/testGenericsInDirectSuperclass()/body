{
  RichMapFunction<?,?> function=new RichMapFunction<ChainedThree,ChainedThree>(){
    private static final long serialVersionUID=1L;
    @Override public ChainedThree map(    ChainedThree value) throws Exception {
      return null;
    }
  }
;
  TypeInformation<?> ti=TypeExtractor.getMapReturnTypes(function,(TypeInformation)TypeInfoParser.parse("Tuple3<String, Long, String>"));
  Assert.assertTrue(ti.isTupleType());
  Assert.assertEquals(3,ti.getArity());
  TupleTypeInfo<?> tti=(TupleTypeInfo<?>)ti;
  Assert.assertEquals(ChainedThree.class,tti.getTypeClass());
  Assert.assertEquals(BasicTypeInfo.STRING_TYPE_INFO,tti.getTypeAt(0));
  Assert.assertEquals(BasicTypeInfo.LONG_TYPE_INFO,tti.getTypeAt(1));
  Assert.assertEquals(BasicTypeInfo.STRING_TYPE_INFO,tti.getTypeAt(2));
}
