{
  final DeploymentManager deploymentManager=new TestDeploymentManager();
  final InstanceType instanceType=new InstanceType();
  final QueueScheduler toTest=spy(new QueueScheduler(deploymentManager,this.instanceManager));
  final JobID jobid=new JobID();
  final AllocatedResource resource=mock(AllocatedResource.class);
  when(resource.getInstanceType()).thenReturn(instanceType);
  final List<AllocatedResource> resources=new ArrayList<AllocatedResource>();
  resources.add(resource);
  InstanceConnectionInfo instanceConnectionInfo=mock(InstanceConnectionInfo.class);
  when(instanceConnectionInfo.toString()).thenReturn("");
  LocalInstance instance=spy(new LocalInstance(instanceType,instanceConnectionInfo,null,null,null));
  final Method methodToMock=MemberMatcher.method(QueueScheduler.class,JobID.class);
  PowerMockito.when(toTest,methodToMock).withArguments(Matchers.any(JobID.class)).thenReturn(null);
  when(resource.getInstance()).thenReturn(instance);
  try {
    whenNew(ExecutionGraphIterator.class).withArguments(Matchers.any(ExecutionGraph.class),Matchers.anyBoolean()).thenReturn(this.graphIterator);
    whenNew(ExecutionGraphIterator.class).withArguments(Matchers.any(ExecutionGraph.class),Matchers.anyInt(),Matchers.anyBoolean(),Matchers.anyBoolean()).thenReturn(this.graphIterator2);
  }
 catch (  Exception e) {
    throw new RuntimeException(e);
  }
  PowerMockito.when(toTest,methodToMock).withArguments(Matchers.any(JobID.class)).thenReturn(this.executionGraph);
  when(this.graphIterator.next()).thenReturn(this.vertex1);
  when(this.graphIterator.hasNext()).thenReturn(true,true,true,true,false);
  when(this.graphIterator2.next()).thenReturn(this.vertex1);
  when(this.graphIterator2.hasNext()).thenReturn(true,true,true,true,false);
  when(this.vertex1.getExecutionState()).thenReturn(ExecutionState.SCHEDULED);
  whenNew(ExecutionGroupVertexIterator.class).withArguments(this.executionGraph,true,0).thenReturn(this.groupVertexIterator);
  when(this.groupVertexIterator.hasNext()).thenReturn(true,true,true,true,false);
  when(this.groupVertexIterator.next()).thenReturn(this.groupVertex);
  when(this.groupVertex.getCurrentNumberOfGroupMembers()).thenReturn(0,1,2,3);
  when(this.groupVertex.getGroupMember(Mockito.anyInt())).thenReturn(this.vertex1);
  when(this.vertex1.getAllocatedResource()).thenReturn(resource);
  when(resource.getInstanceType()).thenReturn(instanceType);
  when(this.executionGraph.getCurrentExecutionStage()).thenReturn(this.stage1);
  when(this.stage1.getNumberOfStageMembers()).thenReturn(0);
  toTest.resourcesAllocated(jobid,resources);
  verify(this.vertex1,times(4)).updateExecutionState(ExecutionState.ASSIGNED);
}
