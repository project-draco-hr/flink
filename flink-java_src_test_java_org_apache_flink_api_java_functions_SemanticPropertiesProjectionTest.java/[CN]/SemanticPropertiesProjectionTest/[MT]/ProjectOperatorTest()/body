{
  try {
    ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
    DataSet<Tuple5<Integer,Long,String,Long,Integer>> tupleDs=env.fromCollection(emptyTupleData,tupleTypeInfo);
    tupleDs.project(1,3,2).print();
    Plan plan=env.createProgramPlan();
    GenericDataSinkBase<?> sink=plan.getDataSinks().iterator().next();
    PlanProjectOperator<?,?> projectOperator=((PlanProjectOperator<?,?>)sink.getInput());
    SingleInputSemanticProperties props=projectOperator.getSemanticProperties();
    assertTrue(props.getForwardedField(1).size() == 1);
    assertTrue(props.getForwardedField(3).size() == 1);
    assertTrue(props.getForwardedField(2).size() == 1);
    assertTrue(props.getForwardedField(1).contains(0));
    assertTrue(props.getForwardedField(3).contains(1));
    assertTrue(props.getForwardedField(2).contains(2));
  }
 catch (  Exception e) {
    System.err.println(e.getMessage());
    e.printStackTrace();
    fail("Exception in test: " + e.getMessage());
  }
}
