{
  ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
  DataSet<Tuple4<Integer,Tuple3<String,Integer,Long>,Tuple2<Long,Long>,String>> tupleDs=env.fromCollection(emptyNestedTupleData,nestedTupleTypeInfo);
  tupleDs.join(tupleDs).where(0).equalTo(0).projectFirst(2,0).projectSecond(1,3).output(new DiscardingOutputFormat<Tuple>());
  Plan plan=env.createProgramPlan();
  GenericDataSinkBase<?> sink=plan.getDataSinks().iterator().next();
  InnerJoinOperatorBase<?,?,?,?> projectJoinOperator=((InnerJoinOperatorBase<?,?,?,?>)sink.getInput());
  DualInputSemanticProperties props=projectJoinOperator.getSemanticProperties();
  assertEquals(1,props.getForwardingTargetFields(0,0).size());
  assertNotNull(props.getForwardingTargetFields(0,1));
  assertNotNull(props.getForwardingTargetFields(0,2));
  assertNotNull(props.getForwardingTargetFields(0,3));
  assertEquals(1,props.getForwardingTargetFields(0,4).size());
  assertEquals(1,props.getForwardingTargetFields(0,5).size());
  assertNotNull(props.getForwardingTargetFields(0,6));
  assertEquals(0,props.getForwardingTargetFields(0,1).size());
  assertEquals(0,props.getForwardingTargetFields(0,2).size());
  assertEquals(0,props.getForwardingTargetFields(0,3).size());
  assertEquals(0,props.getForwardingTargetFields(0,6).size());
  assertNotNull(props.getForwardingTargetFields(1,0));
  assertEquals(1,props.getForwardingTargetFields(1,1).size());
  assertEquals(1,props.getForwardingTargetFields(1,2).size());
  assertEquals(1,props.getForwardingTargetFields(1,3).size());
  assertNotNull(props.getForwardingTargetFields(1,4));
  assertNotNull(props.getForwardingTargetFields(1,5));
  assertEquals(1,props.getForwardingTargetFields(1,6).size());
  assertEquals(0,props.getForwardingTargetFields(1,0).size());
  assertEquals(0,props.getForwardingTargetFields(1,4).size());
  assertEquals(0,props.getForwardingTargetFields(1,5).size());
  assertTrue(props.getForwardingTargetFields(0,4).contains(0));
  assertTrue(props.getForwardingTargetFields(0,5).contains(1));
  assertTrue(props.getForwardingTargetFields(0,0).contains(2));
  assertTrue(props.getForwardingTargetFields(1,1).contains(3));
  assertTrue(props.getForwardingTargetFields(1,2).contains(4));
  assertTrue(props.getForwardingTargetFields(1,3).contains(5));
  assertTrue(props.getForwardingTargetFields(1,6).contains(6));
}
