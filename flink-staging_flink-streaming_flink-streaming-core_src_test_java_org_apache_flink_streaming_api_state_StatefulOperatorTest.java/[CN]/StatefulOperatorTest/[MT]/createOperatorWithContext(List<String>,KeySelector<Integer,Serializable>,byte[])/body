{
  final List<String> outputList=output;
  StreamingRuntimeContext context=new StreamingRuntimeContext("MockTask",new MockEnvironment(3 * 1024 * 1024,new MockInputSplitProvider(),1024),null,new ExecutionConfig(),partitioner,new LocalStateHandleProvider<Serializable>());
  StreamMap<Integer,String> op=new StreamMap<Integer,String>(new StatefulMapper());
  op.setup(new Output<String>(){
    @Override public void collect(    String record){
      outputList.add(record);
    }
    @Override public void close(){
    }
  }
,context);
  if (serializedState != null) {
    op.restoreInitialState((Map<String,PartitionedStateHandle>)InstantiationUtil.deserializeObject(serializedState,Thread.currentThread().getContextClassLoader()));
  }
  op.open(null);
  return op;
}
