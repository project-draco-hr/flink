{
  final List<String> outputList=output;
  StreamingRuntimeContext context=new StreamingRuntimeContext(new MockEnvironment("MockTask",3 * 1024 * 1024,new MockInputSplitProvider(),1024),new ExecutionConfig(),partitioner,new LocalStateHandleProvider<Serializable>(),new HashMap<String,Accumulator<?,?>>());
  StreamMap<Integer,String> op=new StreamMap<Integer,String>(new StatefulMapper());
  op.setup(new Output<StreamRecord<String>>(){
    @Override public void collect(    StreamRecord<String> record){
      outputList.add(record.getValue());
    }
    @Override public void emitWatermark(    Watermark mark){
    }
    @Override public void close(){
    }
  }
,context);
  if (serializedState != null) {
    op.restoreInitialState((Tuple2<StateHandle<Serializable>,Map<String,OperatorStateHandle>>)InstantiationUtil.deserializeObject(serializedState,Thread.currentThread().getContextClassLoader()));
  }
  op.open(null);
  return op;
}
