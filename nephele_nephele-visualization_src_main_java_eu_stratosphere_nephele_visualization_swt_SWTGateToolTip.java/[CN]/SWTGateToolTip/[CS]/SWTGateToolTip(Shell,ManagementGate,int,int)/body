{
  super(parent,x,y);
  int height;
  this.managementGate=managementGate;
  if (managementGate.isInputGate()) {
    setTitle("Input Gate " + managementGate.getIndex());
  }
 else {
    setTitle("Output Gate " + managementGate.getIndex());
  }
  final Color backgroundColor=getShell().getBackground();
  final Color foregroundColor=getShell().getForeground();
  final GateVisualizationData gateVisualizationData=(GateVisualizationData)managementGate.getAttachment();
  if (gateVisualizationData.isProfilingEnabled()) {
    this.chart=createChart(gateVisualizationData,backgroundColor);
    this.chart.setLayoutData(new GridData(GridData.FILL_BOTH));
    height=200;
  }
 else {
    this.chart=null;
    height=100;
  }
  final Composite tableComposite=new Composite(getShell(),SWT.NONE);
  tableComposite.setBackground(backgroundColor);
  tableComposite.setForeground(foregroundColor);
  final GridLayout tableGridLayout=new GridLayout(2,false);
  tableGridLayout.marginHeight=0;
  tableGridLayout.marginLeft=0;
  tableComposite.setLayout(tableGridLayout);
  ChannelType channelType;
  if (managementGate.isInputGate()) {
    channelType=managementGate.getVertex().getGroupVertex().getBackwardEdge(managementGate.getIndex()).getChannelType();
  }
 else {
    channelType=managementGate.getVertex().getGroupVertex().getForwardEdge(managementGate.getIndex()).getChannelType();
  }
  final Label channelTypeTextLabel=new Label(tableComposite,SWT.NONE);
  channelTypeTextLabel.setBackground(backgroundColor);
  channelTypeTextLabel.setForeground(foregroundColor);
  channelTypeTextLabel.setText("Channel type:");
  this.channelTypeLabel=new Label(tableComposite,SWT.NONE);
  this.channelTypeLabel.setBackground(backgroundColor);
  this.channelTypeLabel.setForeground(foregroundColor);
  this.channelTypeLabel.setText(channelType.toString());
  if (!this.managementGate.isInputGate()) {
    final ManagementGroupEdge groupEdge=this.managementGate.getVertex().getGroupVertex().getForwardEdge(this.managementGate.getIndex());
    final GroupEdgeVisualizationData groupEdgeVisualizationData=(GroupEdgeVisualizationData)groupEdge.getAttachment();
    if (groupEdgeVisualizationData.isIOBottleneck()) {
      this.warningComposite=createWarningComposite(WARNINGTEXT,SWT.ICON_WARNING);
      height+=ICONSIZE;
    }
 else {
      this.warningComposite=null;
    }
  }
 else {
    this.warningComposite=null;
  }
  getShell().setSize(WIDTH,height);
  finishInstantiation(x,y,WIDTH,false);
}
