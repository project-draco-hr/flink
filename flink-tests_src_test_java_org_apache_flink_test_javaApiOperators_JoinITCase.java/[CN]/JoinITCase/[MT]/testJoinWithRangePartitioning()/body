{
  final ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
  DataSet<Tuple3<Integer,Long,String>> ds1=CollectionDataSets.get3TupleDataSet(env);
  DataSet<Tuple5<Integer,Long,Integer,String,Long>> ds2=CollectionDataSets.get5TupleDataSet(env);
  env.setParallelism(4);
  TestDistribution testDis=new TestDistribution();
  DataSet<Tuple2<String,String>> joinDs=DataSetUtils.partitionByRange(ds1,testDis,0,1).join(DataSetUtils.partitionByRange(ds2,testDis,0,4)).where(0,1).equalTo(0,4).with(new T3T5FlatJoin());
  List<Tuple2<String,String>> result=joinDs.collect();
  String expected="Hi,Hallo\n" + "Hello,Hallo Welt\n" + "Hello world,Hallo Welt wie gehts?\n"+ "Hello world,ABC\n"+ "I am fine.,HIJ\n"+ "I am fine.,IJK\n";
  compareResultAsTuples(result,expected);
}
