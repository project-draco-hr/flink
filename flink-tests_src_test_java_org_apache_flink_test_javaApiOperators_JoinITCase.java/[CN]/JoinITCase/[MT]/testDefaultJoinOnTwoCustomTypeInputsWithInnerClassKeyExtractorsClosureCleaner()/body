{
  final ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
  DataSet<CustomType> ds1=CollectionDataSets.getCustomTypeDataSet(env);
  DataSet<CustomType> ds2=CollectionDataSets.getSmallCustomTypeDataSet(env);
  DataSet<Tuple2<CustomType,CustomType>> joinDs=ds1.join(ds2).where(new KeySelector<CustomType,Integer>(){
    @Override public Integer getKey(    CustomType value){
      return value.myInt;
    }
  }
).equalTo(new KeySelector<CustomType,Integer>(){
    @Override public Integer getKey(    CustomType value) throws Exception {
      return value.myInt;
    }
  }
);
  List<Tuple2<CustomType,CustomType>> result=joinDs.collect();
  String expected="1,0,Hi,1,0,Hi\n" + "2,1,Hello,2,1,Hello\n" + "2,1,Hello,2,2,Hello world\n"+ "2,2,Hello world,2,1,Hello\n"+ "2,2,Hello world,2,2,Hello world\n";
  compareResultAsTuples(result,expected);
}
