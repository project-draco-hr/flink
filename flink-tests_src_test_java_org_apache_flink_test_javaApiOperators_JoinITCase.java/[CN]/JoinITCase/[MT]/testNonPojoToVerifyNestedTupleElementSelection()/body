{
  final ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
  DataSet<Tuple2<Tuple2<Integer,Integer>,String>> ds1=CollectionDataSets.getSmallNestedTupleDataSet(env);
  DataSet<Tuple2<Tuple2<Integer,Integer>,String>> ds2=CollectionDataSets.getSmallNestedTupleDataSet(env);
  DataSet<Tuple2<Tuple2<Tuple2<Integer,Integer>,String>,Tuple2<Tuple2<Integer,Integer>,String>>> joinDs=ds1.join(ds2).where("f0.f0").equalTo("f0.f0");
  env.setParallelism(1);
  List<Tuple2<Tuple2<Tuple2<Integer,Integer>,String>,Tuple2<Tuple2<Integer,Integer>,String>>> result=joinDs.collect();
  String expected="((1,1),one),((1,1),one)\n" + "((2,2),two),((2,2),two)\n" + "((3,3),three),((3,3),three)\n";
  compareResultAsTuples(result,expected);
}
