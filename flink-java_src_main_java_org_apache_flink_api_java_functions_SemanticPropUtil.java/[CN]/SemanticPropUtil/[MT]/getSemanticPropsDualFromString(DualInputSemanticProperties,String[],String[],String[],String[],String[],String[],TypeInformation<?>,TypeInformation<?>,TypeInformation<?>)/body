{
  boolean hasForwardedFirstAnnotation=false;
  boolean hasForwardedSecondAnnotation=false;
  boolean hasNonForwardedFirstAnnotation=false;
  boolean hasNonForwardedSecondAnnotation=false;
  if (forwardedFirst != null && forwardedFirst.length > 0) {
    hasForwardedFirstAnnotation=true;
  }
  if (forwardedSecond != null && forwardedSecond.length > 0) {
    hasForwardedSecondAnnotation=true;
  }
  if (nonForwardedFirst != null && nonForwardedFirst.length > 0) {
    hasNonForwardedFirstAnnotation=true;
  }
  if (nonForwardedSecond != null && nonForwardedSecond.length > 0) {
    hasNonForwardedSecondAnnotation=true;
  }
  if (hasForwardedFirstAnnotation && hasNonForwardedFirstAnnotation) {
    throw new InvalidSemanticAnnotationException("Either ForwardedFieldsFirst OR " + "NonForwardedFieldsFirst annotation permitted, NOT both.");
  }
  if (hasForwardedSecondAnnotation && hasNonForwardedSecondAnnotation) {
    throw new InvalidSemanticAnnotationException("Either ForwardedFieldsSecond OR " + "NonForwardedFieldsSecond annotation permitted, NOT both.");
  }
  if (hasForwardedFirstAnnotation) {
    parseForwardedFields(result,forwardedFirst,inType1,outType,0);
  }
 else   if (hasNonForwardedFirstAnnotation) {
    parseNonForwardedFields(result,nonForwardedFirst,inType1,outType,0);
  }
  if (hasForwardedSecondAnnotation) {
    parseForwardedFields(result,forwardedSecond,inType2,outType,1);
  }
 else   if (hasNonForwardedSecondAnnotation) {
    parseNonForwardedFields(result,nonForwardedSecond,inType2,outType,1);
  }
  parseReadFields(result,readFieldsFirst,inType1,0);
  parseReadFields(result,readFieldsSecond,inType2,1);
}
