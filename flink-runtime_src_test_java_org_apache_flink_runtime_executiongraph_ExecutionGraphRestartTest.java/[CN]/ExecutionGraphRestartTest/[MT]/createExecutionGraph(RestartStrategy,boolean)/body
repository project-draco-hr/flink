{
  Instance instance=ExecutionGraphTestUtils.getInstance(new SimpleActorGateway(TestingUtils.directExecutionContext()),NUM_TASKS);
  Scheduler scheduler=new Scheduler(TestingUtils.defaultExecutionContext());
  scheduler.newInstanceAvailable(instance);
  JobVertex sender=newJobVertex("Task",NUM_TASKS,Tasks.NoOpInvokable.class);
  JobGraph jobGraph=new JobGraph("Pointwise job",sender);
  ExecutionGraph eg=newExecutionGraph(restartStrategy);
  if (isSpy) {
    eg=spy(eg);
  }
  eg.attachJobGraph(jobGraph.getVerticesSortedTopologicallyFromSources());
  assertEquals(JobStatus.CREATED,eg.getState());
  eg.scheduleForExecution(scheduler);
  assertEquals(JobStatus.RUNNING,eg.getState());
  return new Tuple2<>(eg,instance);
}
