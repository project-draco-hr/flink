{
  if (this.openBranches != null) {
    return;
  }
  addClosedBranches(getFirstPredecessorNode().closedBranchingNodes);
  addClosedBranches(getSecondPredecessorNode().closedBranchingNodes);
  List<UnclosedBranchDescriptor> pred1branches=getFirstPredecessorNode().openBranches;
  List<UnclosedBranchDescriptor> pred2branches=getSecondPredecessorNode().openBranches;
  if (pred1branches == null || pred1branches.isEmpty()) {
    this.openBranches=(pred2branches == null || pred2branches.isEmpty()) ? Collections.<UnclosedBranchDescriptor>emptyList() : pred2branches;
  }
 else   if (pred2branches == null || pred2branches.isEmpty()) {
    this.openBranches=pred1branches;
  }
 else {
    List<UnclosedBranchDescriptor> result1=new ArrayList<UnclosedBranchDescriptor>(pred1branches);
    List<UnclosedBranchDescriptor> result2=new ArrayList<UnclosedBranchDescriptor>(pred2branches);
    ArrayList<UnclosedBranchDescriptor> result=new ArrayList<UnclosedBranchDescriptor>();
    mergeLists(result1,result2,result,false);
    this.openBranches=result.isEmpty() ? Collections.<UnclosedBranchDescriptor>emptyList() : result;
  }
}
