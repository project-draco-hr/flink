{
  DualInputContract<?> c=(DualInputContract<?>)super.getPactContract();
  ImplicitOperationFirst implOp1Annotation=c.getUserCodeClass().getAnnotation(ImplicitOperationFirst.class);
  ImplicitOperationSecond implOp2Annotation=c.getUserCodeClass().getAnnotation(ImplicitOperationSecond.class);
  this.implOpMode1=null;
  this.explCopies1=null;
  this.explProjections1=null;
  if (implOp1Annotation != null) {
switch (implOp1Annotation.implicitOperation()) {
case Copy:
      ExplicitProjections explProjAnnotation=c.getUserCodeClass().getAnnotation(ExplicitProjections.class);
    if (explProjAnnotation != null) {
      this.implOpMode1=ImplicitOperationMode.Copy;
      this.explProjections1=explProjAnnotation.fields();
      Arrays.sort(this.explProjections1);
    }
  break;
case Projection:
ExplicitCopies explCopyjAnnotation=c.getUserCodeClass().getAnnotation(ExplicitCopies.class);
if (explCopyjAnnotation != null) {
this.implOpMode1=ImplicitOperationMode.Projection;
this.explCopies1=explCopyjAnnotation.fields();
Arrays.sort(this.explCopies1);
}
break;
}
}
this.implOpMode2=null;
this.explCopies2=null;
this.explProjections2=null;
if (implOp2Annotation != null) {
switch (implOp2Annotation.implicitOperation()) {
case Copy:
ExplicitProjections explProjAnnotation=c.getUserCodeClass().getAnnotation(ExplicitProjections.class);
if (explProjAnnotation != null) {
this.implOpMode2=ImplicitOperationMode.Copy;
this.explProjections2=explProjAnnotation.fields();
Arrays.sort(this.explProjections2);
}
break;
case Projection:
ExplicitCopies explCopyjAnnotation=c.getUserCodeClass().getAnnotation(ExplicitCopies.class);
if (explCopyjAnnotation != null) {
this.implOpMode2=ImplicitOperationMode.Projection;
this.explCopies2=explCopyjAnnotation.fields();
Arrays.sort(this.explCopies2);
}
break;
}
}
}
