{
  if (inputSchemas.size() != 2)   throw new IllegalArgumentException("TwoInputNode requires exactly 2 input nodes");
switch (input) {
case 0:
    if (implOpMode1 != null) {
switch (implOpMode1) {
case Copy:
        if (this.explProjections1 != null) {
          return new FieldSet(this.explProjections1,this.explWrites);
        }
 else {
          return null;
        }
case Projection:
      if (this.explCopies1 != null) {
        FieldSet writeSet=new FieldSet(inputSchemas.get(0));
        writeSet.removeAll(this.explCopies1);
        writeSet.addAll(this.explWrites);
        return writeSet;
      }
 else {
        return null;
      }
default :
    return null;
}
}
 else {
return null;
}
case 1:
if (implOpMode2 != null) {
switch (implOpMode2) {
case Copy:
if (this.explProjections2 != null) {
  return new FieldSet(this.explProjections2,this.explWrites);
}
 else {
  return null;
}
case Projection:
if (this.explCopies2 != null) {
FieldSet writeSet=new FieldSet(inputSchemas.get(1));
writeSet.removeAll(this.explCopies2);
writeSet.addAll(this.explWrites);
return writeSet;
}
 else {
return null;
}
default :
return null;
}
}
 else {
return null;
}
case -1:
if (this.implOpMode1 != null && this.implOpMode2 != null && this.explWrites != null) {
FieldSet projection1=null;
FieldSet projection2=null;
switch (this.implOpMode1) {
case Copy:
projection1=this.explProjections1;
break;
case Projection:
if (this.explCopies1 != null) {
projection1=new FieldSet(inputSchemas.get(0));
projection1.removeAll(this.explCopies1);
}
 else {
return null;
}
break;
default :
return null;
}
switch (this.implOpMode2) {
case Copy:
projection2=this.explProjections2;
break;
case Projection:
if (this.explCopies2 != null) {
projection2=new FieldSet(inputSchemas.get(0));
projection2.removeAll(this.explCopies2);
}
 else {
return null;
}
break;
default :
return null;
}
if (projection1 != null && projection2 != null) {
return new FieldSet(projection1,new FieldSet(projection2,this.explWrites));
}
 else {
return null;
}
}
 else {
return null;
}
default :
throw new IndexOutOfBoundsException();
}
}
