{
  if (inputSchemas.size() != 2)   throw new IllegalArgumentException("TwoInputNode requires exactly 2 input nodes");
  FieldSet constFields1=null;
  FieldSet constFields2=null;
  if (explWrites == null) {
    return null;
  }
  if (implOpMode1 == null) {
    constFields1=null;
  }
 else {
switch (implOpMode1) {
case Copy:
      if (this.explProjections1 != null) {
        constFields1=new FieldSet(inputSchemas.get(0));
        constFields1.removeAll(this.explProjections1);
      }
 else {
        constFields1=null;
      }
    break;
case Projection:
  constFields1=this.explCopies1;
break;
}
}
if (implOpMode2 == null) {
constFields2=null;
}
 else {
switch (implOpMode2) {
case Copy:
if (this.explProjections2 != null) {
constFields2=new FieldSet(inputSchemas.get(1));
constFields2.removeAll(this.explProjections2);
}
 else {
constFields2=null;
}
break;
case Projection:
constFields2=this.explCopies2;
break;
}
}
if (constFields1 != null && constFields2 != null) {
return new FieldSet(constFields1,new FieldSet(constFields2,this.explWrites));
}
 else {
return null;
}
}
