{
  this.counter.set(0);
  final List<String> par3=new ArrayList<String>(NUMBER_OF_TEST_STRINGS);
  for (int i=0; i < NUMBER_OF_TEST_STRINGS; ++i) {
    par3.add(constructTestString(i));
  }
  RPCService rpcService=null;
  try {
    rpcService=new RPCService(RPC_TEST_PORT);
    rpcService.setProtocolCallbackHandler(RPCTestProtocol.class,this);
    final RPCTestProtocol proxy=rpcService.getProxy(new InetSocketAddress("localhost",RPC_TEST_PORT),RPCTestProtocol.class);
    for (int i=0; i < NUMBER_OF_RPC_CALLS; ++i) {
      assertEquals(i,proxy.testMethod(true,i,par3));
    }
  }
 catch (  Exception e) {
    fail(StringUtils.stringifyException(e));
  }
 finally {
    if (rpcService != null) {
      rpcService.shutDown();
    }
  }
  assertEquals(NUMBER_OF_RPC_CALLS,this.counter.get());
}
