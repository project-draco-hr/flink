{
  List<EvaluableExpression> fragments=new ArrayList<EvaluableExpression>();
  for (int index=0; index < parts.length; index++) {
    EvaluableExpression segment;
    if (parts[index].equals("$"))     segment=new InputSelection(0);
 else     if (parts[index].matches("[0-9]+"))     segment=new InputSelection(Integer.parseInt(parts[index]));
 else     if (parts[index].matches("\\[.*\\]")) {
      if (parts[index].charAt(1) == '*')       segment=new ArrayAccess();
 else       if (parts[index].contains(":")) {
        int delim=parts[index].indexOf(":");
        segment=new ArrayAccess(Integer.parseInt(parts[index].substring(1,delim)),Integer.parseInt(parts[index].substring(delim + 1,parts[index].length() - 1)));
      }
 else       segment=new ArrayAccess(Integer.parseInt(parts[index].substring(1,parts[index].length() - 1)));
    }
 else     segment=new FieldAccess(parts[index]);
    fragments.add(segment);
  }
  return new PathExpression(fragments);
}
