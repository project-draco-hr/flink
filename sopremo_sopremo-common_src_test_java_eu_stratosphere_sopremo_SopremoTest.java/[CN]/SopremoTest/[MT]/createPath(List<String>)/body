{
  List<EvaluableExpression> fragments=new ArrayList<EvaluableExpression>();
  for (int index=0; index < parts.size(); index++) {
    EvaluableExpression segment;
    String part=parts.get(index);
    if (part.equals("$"))     segment=new InputSelection(0);
 else     if (part.matches("[0-9]+"))     segment=new InputSelection(Integer.parseInt(part));
 else     if (part.matches("\\[.*\\]")) {
      if (part.charAt(1) == '*') {
        segment=new ArrayMap(createPath(parts.subList(index + 1,parts.size())));
        index=parts.size();
      }
 else       if (part.contains(":")) {
        int delim=part.indexOf(":");
        segment=new ArrayAccess(Integer.parseInt(part.substring(1,delim)),Integer.parseInt(part.substring(delim + 1,part.length() - 1)));
      }
 else       segment=new ArrayAccess(Integer.parseInt(part.substring(1,part.length() - 1)));
    }
 else     segment=new ObjectAccess(part);
    fragments.add(segment);
  }
  return new PathExpression(fragments);
}
