{
  final List<InterfaceAddress> interfaces=getNetworkInterface().getInterfaceAddresses();
  final Iterator<InterfaceAddress> it=interfaces.iterator();
  final List<InterfaceAddress> matchesIPv4=new ArrayList<InterfaceAddress>();
  final List<InterfaceAddress> matchesIPv6=new ArrayList<InterfaceAddress>();
  while (it.hasNext()) {
    final InterfaceAddress ia=it.next();
    if (ia.getBroadcast() != null) {
      if (ia.getAddress() instanceof Inet4Address) {
        matchesIPv4.add(ia);
      }
 else {
        matchesIPv6.add(ia);
      }
    }
  }
  if (matchesIPv4.isEmpty() && matchesIPv6.isEmpty()) {
    throw new Exception("Interface " + getNetworkInterface().getName() + " has no interface address attached.");
  }
  if (preferIPv4 && !matchesIPv4.isEmpty()) {
    for (    InterfaceAddress ia : matchesIPv4) {
      if ((ia.getAddress().toString().contains("192") || ia.getAddress().toString().contains("10"))) {
        return ia;
      }
    }
    return matchesIPv4.get(0);
  }
  return !matchesIPv6.isEmpty() ? matchesIPv6.get(0) : matchesIPv4.get(0);
}
