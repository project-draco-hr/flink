{
  byte type=(byte)input.readByte();
  if (type > 0 && type < 26) {
    Deserializer[] d=new Deserializer[type];
    for (int x=0; x < d.length; x++) {
      d[x]=getDeserializer();
    }
    return new TupleDeserializer(d);
  }
switch (type) {
case TYPE_BOOLEAN:
    return new BooleanDeserializer();
case TYPE_BYTE:
  return new ByteDeserializer();
case TYPE_INTEGER:
return new IntDeserializer();
case TYPE_LONG:
return new LongDeserializer();
case TYPE_FLOAT:
return new FloatDeserializer();
case TYPE_DOUBLE:
return new DoubleDeserializer();
case TYPE_STRING:
return new StringDeserializer();
case TYPE_BYTES:
return new BytesDeserializer();
case TYPE_NULL:
return new NullDeserializer();
default :
return new CustomTypeDeserializer(type);
}
}
