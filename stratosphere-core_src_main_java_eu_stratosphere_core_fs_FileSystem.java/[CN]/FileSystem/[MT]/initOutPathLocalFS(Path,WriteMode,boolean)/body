{
  if (this.isDistributedFS()) {
    return false;
  }
  FileStatus status=null;
  try {
    status=getFileStatus(outPath);
  }
 catch (  FileNotFoundException e) {
  }
  if (status != null) {
switch (writeMode) {
case NO_OVERWRITE:
      if (status.isDir()) {
        return true;
      }
 else {
        throw new IOException("File or directory already exists. Existing files and directories are not overwritten in " + WriteMode.NO_OVERWRITE.name() + " mode. Use "+ WriteMode.OVERWRITE.name()+ " mode to overwrite existing files and directories.");
      }
case OVERWRITE:
    if (status.isDir()) {
      if (createDirectory) {
        return true;
      }
 else {
        try {
          this.delete(outPath,true);
        }
 catch (        IOException ioe) {
        }
      }
    }
 else {
      try {
        this.delete(outPath,false);
      }
 catch (      IOException ioe) {
      }
    }
  break;
default :
throw new IllegalArgumentException("Invalid write mode: " + writeMode);
}
}
if (createDirectory) {
try {
if (!this.exists(outPath)) {
this.mkdirs(outPath);
}
}
 catch (IOException ioe) {
}
try {
FileStatus check=getFileStatus(outPath);
return check.isDir();
}
 catch (FileNotFoundException e) {
return false;
}
}
 else {
return !this.exists(outPath);
}
}
