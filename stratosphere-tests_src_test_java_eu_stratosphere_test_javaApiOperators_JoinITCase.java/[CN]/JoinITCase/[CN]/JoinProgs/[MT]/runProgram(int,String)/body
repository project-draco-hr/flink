{
switch (progId) {
case 1:
{
      final ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
      DataSet<Tuple3<Integer,Long,String>> ds1=CollectionDataSets.getSmall3TupleDataSet(env);
      DataSet<Tuple5<Integer,Long,Integer,String,Long>> ds2=CollectionDataSets.get5TupleDataSet(env);
      DataSet<Tuple2<String,String>> joinDs=ds1.join(ds2).where(1).equalTo(1).with(new T3T5Join());
      joinDs.writeAsCsv(resultPath);
      env.execute();
      return "Hi,Hallo\n" + "Hello,Hallo Welt\n" + "Hello world,Hallo Welt\n";
    }
case 2:
{
    final ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
    DataSet<Tuple3<Integer,Long,String>> ds1=CollectionDataSets.get3TupleDataSet(env);
    DataSet<Tuple5<Integer,Long,Integer,String,Long>> ds2=CollectionDataSets.get5TupleDataSet(env);
    DataSet<Tuple2<String,String>> joinDs=ds1.join(ds2).where(0,1).equalTo(0,4).with(new T3T5Join());
    joinDs.writeAsCsv(resultPath);
    env.execute();
    return "Hi,Hallo\n" + "Hello,Hallo Welt\n" + "Hello world,Hallo Welt wie gehts?\n"+ "Hello world,ABC\n"+ "I am fine.,HIJ\n"+ "I am fine.,IJK\n";
  }
case 3:
{
  final ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
  DataSet<Tuple3<Integer,Long,String>> ds1=CollectionDataSets.getSmall3TupleDataSet(env);
  DataSet<Tuple5<Integer,Long,Integer,String,Long>> ds2=CollectionDataSets.get5TupleDataSet(env);
  DataSet<Tuple2<Tuple3<Integer,Long,String>,Tuple5<Integer,Long,Integer,String,Long>>> joinDs=ds1.join(ds2).where(1).equalTo(1);
  joinDs.writeAsCsv(resultPath);
  env.execute();
  return "(1, 1, Hi),(1, 1, 0, Hallo, 1)\n" + "(2, 2, Hello),(2, 2, 1, Hallo Welt, 2)\n" + "(3, 2, Hello world),(2, 2, 1, Hallo Welt, 2)\n";
}
case 4:
{
final ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
DataSet<Tuple3<Integer,Long,String>> ds1=CollectionDataSets.getSmall3TupleDataSet(env);
DataSet<Tuple5<Integer,Long,Integer,String,Long>> ds2=CollectionDataSets.get5TupleDataSet(env);
DataSet<Tuple2<String,String>> joinDs=ds1.joinWithHuge(ds2).where(1).equalTo(1).with(new T3T5Join());
joinDs.writeAsCsv(resultPath);
env.execute();
return "Hi,Hallo\n" + "Hello,Hallo Welt\n" + "Hello world,Hallo Welt\n";
}
case 5:
{
final ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
DataSet<Tuple3<Integer,Long,String>> ds1=CollectionDataSets.getSmall3TupleDataSet(env);
DataSet<Tuple5<Integer,Long,Integer,String,Long>> ds2=CollectionDataSets.get5TupleDataSet(env);
DataSet<Tuple2<String,String>> joinDs=ds1.joinWithTiny(ds2).where(1).equalTo(1).with(new T3T5Join());
joinDs.writeAsCsv(resultPath);
env.execute();
return "Hi,Hallo\n" + "Hello,Hallo Welt\n" + "Hello world,Hallo Welt\n";
}
case 6:
{
final ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
DataSet<Tuple3<Integer,Long,String>> ds1=CollectionDataSets.getSmall3TupleDataSet(env);
DataSet<Tuple5<Integer,Long,Integer,String,Long>> ds2=CollectionDataSets.get5TupleDataSet(env);
DataSet<Tuple3<Integer,Long,String>> joinDs=ds1.join(ds2).where(1).equalTo(1).with(new LeftReturningJoin());
joinDs.writeAsCsv(resultPath);
env.execute();
return "1,1,Hi\n" + "2,2,Hello\n" + "3,2,Hello world\n";
}
case 7:
{
final ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
DataSet<Tuple3<Integer,Long,String>> ds1=CollectionDataSets.getSmall3TupleDataSet(env);
DataSet<Tuple5<Integer,Long,Integer,String,Long>> ds2=CollectionDataSets.get5TupleDataSet(env);
DataSet<Tuple5<Integer,Long,Integer,String,Long>> joinDs=ds1.join(ds2).where(1).equalTo(1).with(new RightReturningJoin());
joinDs.writeAsCsv(resultPath);
env.execute();
return "1,1,0,Hallo,1\n" + "2,2,1,Hallo Welt,2\n" + "2,2,1,Hallo Welt,2\n";
}
case 8:
{
final ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
DataSet<Integer> intDs=CollectionDataSets.getIntegerDataSet(env);
DataSet<Tuple3<Integer,Long,String>> ds1=CollectionDataSets.get3TupleDataSet(env);
DataSet<Tuple5<Integer,Long,Integer,String,Long>> ds2=CollectionDataSets.getSmall5TupleDataSet(env);
DataSet<Tuple3<String,String,Integer>> joinDs=ds1.join(ds2).where(1).equalTo(4).with(new T3T5BCJoin()).withBroadcastSet(intDs,"ints");
joinDs.writeAsCsv(resultPath);
env.execute();
return "Hi,Hallo,55\n" + "Hi,Hallo Welt wie,55\n" + "Hello,Hallo Welt,55\n"+ "Hello world,Hallo Welt,55\n";
}
case 9:
{
final ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
DataSet<CustomType> ds1=CollectionDataSets.getSmallCustomTypeDataSet(env);
DataSet<Tuple3<Integer,Long,String>> ds2=CollectionDataSets.get3TupleDataSet(env);
DataSet<Tuple2<String,String>> joinDs=ds1.join(ds2).where(new KeySelector<CustomType,Integer>(){
@Override public Integer getKey(CustomType value){
return value.myInt;
}
}
).equalTo(0).with(new CustT3Join());
joinDs.writeAsCsv(resultPath);
env.execute();
return "Hi,Hi\n" + "Hello,Hello\n" + "Hello world,Hello\n";
}
default :
throw new IllegalArgumentException("Invalid program id");
}
}
