{
  try {
    final int segmentSize=1337;
    MemorySegment seg=createSegment(segmentSize);
    byte[] bytes=new byte[segmentSize];
    random.nextBytes(bytes);
    seg.put(0,bytes);
    DataOutputStream out=new DataOutputStream(new OutputStream(){
      int bytesSoFar=0;
      @Override public void write(      int b) throws IOException {
        bytesSoFar++;
        if (bytesSoFar > segmentSize / 2) {
          throw new IOException("overflow");
        }
      }
    }
);
    try {
      int pos=0;
      while (pos < pageSize) {
        int len=random.nextInt(segmentSize / 10);
        len=Math.min(len,pageSize - pos);
        seg.get(out,pos,len);
        pos+=len;
      }
      fail("Should fail with an IOException");
    }
 catch (    IOException e) {
    }
    DataInputStream in=new DataInputStream(new ByteArrayInputStream(new byte[segmentSize / 2]));
    try {
      int pos=0;
      while (pos < pageSize) {
        int len=random.nextInt(segmentSize / 10);
        len=Math.min(len,pageSize - pos);
        seg.put(in,pos,len);
        pos+=len;
      }
      fail("Should fail with an EOFException");
    }
 catch (    EOFException e) {
    }
  }
 catch (  Exception e) {
    e.printStackTrace();
    fail(e.getMessage());
  }
}
