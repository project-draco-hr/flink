{
  byte[] bytes=new byte[pageSize + 49];
  random.nextBytes(bytes);
  ByteBuffer source=directBuffer ? ByteBuffer.allocateDirect(pageSize + 49) : ByteBuffer.allocate(pageSize + 49);
  source.put(bytes);
  source.position(19).limit(19 + pageSize);
  ByteBuffer slicedSource=source.slice();
  MemorySegment seg=createSegment(3 * pageSize);
  final int offset=2 * pageSize;
  int pos=0;
  while (pos < pageSize) {
    int len=random.nextInt(pageSize / 10);
    len=Math.min(len,pageSize - pos);
    seg.put(offset + pos,slicedSource,len);
    pos+=len;
  }
  byte[] result=new byte[pageSize];
  seg.get(offset,result);
  byte[] expected=Arrays.copyOfRange(bytes,19,19 + pageSize);
  assertArrayEquals(expected,result);
}
