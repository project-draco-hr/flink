{
  try {
    final int HALF_SIZE=pageSize / 2;
    final byte[] bytes1=new byte[pageSize];
    final byte[] bytes2=new byte[HALF_SIZE];
    Arrays.fill(bytes2,(byte)1);
    MemorySegment seg1=createSegment(pageSize);
    MemorySegment seg2=createSegment(HALF_SIZE);
    seg1.put(0,bytes1);
    seg2.put(0,bytes2);
    int pos=0;
    while (pos < HALF_SIZE) {
      int len=random.nextInt(pageSize / 40);
      len=Math.min(len,HALF_SIZE - pos);
      seg1.swapBytes(new byte[len],seg2,pos + HALF_SIZE,pos,len);
      pos+=len;
    }
    for (int i=0; i < HALF_SIZE; i++) {
      assertEquals((byte)0,seg1.get(i));
      assertEquals((byte)0,seg2.get(i));
      assertEquals((byte)1,seg1.get(i + HALF_SIZE));
    }
  }
 catch (  Exception e) {
    e.printStackTrace();
    fail(e.getMessage());
  }
}
