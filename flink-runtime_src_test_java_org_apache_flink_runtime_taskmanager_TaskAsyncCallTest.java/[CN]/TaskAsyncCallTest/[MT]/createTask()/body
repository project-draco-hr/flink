{
  LibraryCacheManager libCache=mock(LibraryCacheManager.class);
  when(libCache.getClassLoader(any(JobID.class))).thenReturn(ClassLoader.getSystemClassLoader());
  ResultPartitionManager partitionManager=mock(ResultPartitionManager.class);
  ResultPartitionConsumableNotifier consumableNotifier=mock(ResultPartitionConsumableNotifier.class);
  PartitionStateChecker partitionStateChecker=mock(PartitionStateChecker.class);
  Executor executor=mock(Executor.class);
  NetworkEnvironment networkEnvironment=mock(NetworkEnvironment.class);
  when(networkEnvironment.getResultPartitionManager()).thenReturn(partitionManager);
  when(networkEnvironment.getDefaultIOMode()).thenReturn(IOManager.IOMode.SYNC);
  when(networkEnvironment.createKvStateTaskRegistry(any(JobID.class),any(JobVertexID.class))).thenReturn(mock(TaskKvStateRegistry.class));
  TaskDeploymentDescriptor tdd=new TaskDeploymentDescriptor(new JobID(),"Job Name",new JobVertexID(),new ExecutionAttemptID(),new SerializedValue<>(new ExecutionConfig()),"Test Task",1,0,1,0,new Configuration(),new Configuration(),CheckpointsInOrderInvokable.class.getName(),Collections.<ResultPartitionDeploymentDescriptor>emptyList(),Collections.<InputGateDeploymentDescriptor>emptyList(),Collections.<BlobKey>emptyList(),Collections.<URL>emptyList(),0);
  return new Task(tdd,mock(MemoryManager.class),mock(IOManager.class),networkEnvironment,mock(BroadcastVariableManager.class),mock(TaskManagerConnection.class),mock(InputSplitProvider.class),mock(CheckpointResponder.class),libCache,mock(FileCache.class),new TaskManagerRuntimeInfo("localhost",new Configuration(),System.getProperty("java.io.tmpdir")),mock(TaskMetricGroup.class),consumableNotifier,partitionStateChecker,executor);
}
