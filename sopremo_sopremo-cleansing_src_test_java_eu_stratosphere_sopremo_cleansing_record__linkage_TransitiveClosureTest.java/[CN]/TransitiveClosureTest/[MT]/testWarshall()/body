{
  final BinarySparseMatrix<JsonNode> matrix=new BinarySparseMatrix<JsonNode>();
  final JsonNode[] nodes=new JsonNode[6];
  for (int index=0; index < nodes.length; index++)   nodes[index]=IntNode.valueOf(index);
  matrix.set(nodes[0],nodes[1]);
  matrix.set(nodes[1],nodes[2]);
  matrix.set(nodes[2],nodes[3]);
  matrix.set(nodes[4],nodes[5]);
  matrix.makeSymmetric();
  TransitiveClosure.warshall(matrix);
  final BinarySparseMatrix<JsonNode> expected=new BinarySparseMatrix<JsonNode>();
  expected.set(nodes[0],nodes[1]);
  expected.set(nodes[1],nodes[2]);
  expected.set(nodes[2],nodes[3]);
  expected.set(nodes[0],nodes[2]);
  expected.set(nodes[0],nodes[3]);
  expected.set(nodes[1],nodes[3]);
  expected.set(nodes[4],nodes[5]);
  expected.makeSymmetric();
  Assert.assertEquals(expected,matrix);
}
