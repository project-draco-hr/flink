{
  String myString="my key|my val$$$my key2\n$$ctd.$$|my value2";
  MyStringBufferIS is=new MyStringBufferIS(myString);
  Configuration parameters=new Configuration();
  parameters.setString(TextInputFormat.FORMAT_PAIR_DELIMITER,"$$$");
  format.configure(parameters);
  format.setInput(new DistributedDataInputStream(new FSDataInputStream(is)),0,myString.length(),5);
  format.open();
  KeyValuePair<PactString,PactString> pair=new KeyValuePair<PactString,PactString>();
  pair.setKey(new PactString());
  pair.setValue(new PactString());
  assertTrue(format.nextPair(pair));
  assertEquals("my key",pair.getKey().toString());
  assertEquals("my val",pair.getValue().toString());
  assertTrue(format.nextPair(pair));
  assertEquals("my key2\n$$ctd.$$",pair.getKey().getValue());
  assertEquals("my value2",pair.getValue().toString());
  assertFalse(format.nextPair(pair));
  assertTrue(format.reachedEnd());
  myString="my key|my val$$$my key2\n$$ctd.$$|my value2";
  is=new MyStringBufferIS(myString);
  parameters=new Configuration();
  parameters.setString(TextInputFormat.FORMAT_PAIR_DELIMITER,"\n");
  format.configure(parameters);
  format.setInput(new DistributedDataInputStream(new FSDataInputStream(is)),0,myString.length(),5);
  format.open();
  pair=new KeyValuePair<PactString,PactString>();
  pair.setKey(new PactString());
  pair.setValue(new PactString());
  assertTrue(format.nextPair(pair));
  assertEquals("my key",pair.getKey().toString());
  assertEquals("my val$$$my key2",pair.getValue().toString());
  assertTrue(format.nextPair(pair));
  assertEquals("$$ctd.$$",pair.getKey().getValue());
  assertEquals("my value2",pair.getValue().toString());
  assertFalse(format.nextPair(pair));
  assertTrue(format.reachedEnd());
}
