{
  super.configure(parameters);
  this.schema=SopremoUtil.deserialize(parameters,IOConstants.SCHEMA,Schema.class);
  final EvaluationExpression expression=SopremoUtil.deserialize(parameters,ADHOC_EXPRESSION_PARAMETER_KEY,EvaluationExpression.class);
  final IJsonNode node=expression.evaluate(NullNode.getInstance(),null,this.CONTEXT);
  final ArrayNode arrayNode=JsonUtil.asArray(node);
  this.values=new ArrayList<IJsonNode>(arrayNode.size());
  for (  final IJsonNode member : arrayNode)   this.values.add(member);
}
