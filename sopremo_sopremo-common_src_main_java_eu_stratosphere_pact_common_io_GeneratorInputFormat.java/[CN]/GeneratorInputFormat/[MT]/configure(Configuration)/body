{
  super.configure(parameters);
  this.schema=SopremoUtil.deserialize(parameters,IOConstants.SCHEMA,Schema.class);
  this.context=SopremoUtil.deserialize(parameters,SopremoUtil.CONTEXT,EvaluationContext.class);
  final EvaluationExpression expression=SopremoUtil.deserialize(parameters,ADHOC_EXPRESSION_PARAMETER_KEY,EvaluationExpression.class);
  IJsonNode value=expression.evaluate(NullNode.getInstance(),null,this.context);
  if (value.isArray()) {
    numValues=((ArrayNode)value).size();
    this.valueIterator=((IArrayNode)value).iterator();
  }
 else   this.valueIterator=Arrays.asList(value).iterator();
}
