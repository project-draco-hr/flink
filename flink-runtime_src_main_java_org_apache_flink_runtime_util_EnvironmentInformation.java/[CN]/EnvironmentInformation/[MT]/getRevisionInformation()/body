{
  String revision=UNKNOWN;
  String commitDate=UNKNOWN;
  try (InputStream propFile=EnvironmentInformation.class.getClassLoader().getResourceAsStream(".version.properties")){
    if (propFile != null) {
      Properties properties=new Properties();
      properties.load(propFile);
      String propRevision=properties.getProperty("git.commit.id.abbrev");
      String propCommitDate=properties.getProperty("git.commit.time");
      revision=propRevision != null ? propRevision : UNKNOWN;
      commitDate=propCommitDate != null ? propCommitDate : UNKNOWN;
    }
  }
 catch (  Throwable t) {
    if (LOG.isDebugEnabled()) {
      LOG.debug("Cannot determine code revision: Unable to read version property file.",t);
    }
 else {
      LOG.info("Cannot determine code revision: Unable to read version property file.");
    }
  }
  return new RevisionInformation(revision,commitDate);
}
