{
  if (segment == null || segment.getOwner() == null) {
    return;
  }
  final Object owner=segment.getOwner();
synchronized (lock) {
    if (segment.isFreed()) {
      return;
    }
    if (isShutDown) {
      throw new IllegalStateException("Memory manager has been shut down.");
    }
    try {
      Set<MemorySegment> segsForOwner=this.allocatedSegments.get(owner);
      if (segsForOwner != null) {
        segsForOwner.remove(segment);
        if (segsForOwner.isEmpty()) {
          this.allocatedSegments.remove(owner);
        }
      }
      if (isPreAllocated) {
        memoryPool.returnSegmentToPool(segment);
      }
 else {
        segment.free();
        numNonAllocatedPages++;
      }
    }
 catch (    Throwable t) {
      throw new RuntimeException("Error removing book-keeping reference to allocated memory segment.",t);
    }
  }
}
