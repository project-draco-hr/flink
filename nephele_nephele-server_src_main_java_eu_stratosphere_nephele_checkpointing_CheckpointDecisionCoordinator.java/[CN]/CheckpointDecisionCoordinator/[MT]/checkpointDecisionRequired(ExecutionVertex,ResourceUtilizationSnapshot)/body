{
  LOG.info("Checkpoint decision for vertex " + vertex + " required");
  final ExecutionGraph graph=vertex.getExecutionGraph();
  final Map<AbstractInstance,List<CheckpointDecision>> checkpointDecisions=new HashMap<AbstractInstance,List<CheckpointDecision>>();
  final List<CheckpointDecision> checkpointDecisionList=new SerializableArrayList<CheckpointDecision>();
synchronized (graph) {
    checkpointDecisionList.add(new CheckpointDecision(vertex.getID(),true));
    checkpointDecisions.put(vertex.getAllocatedResource().getInstance(),checkpointDecisionList);
  }
  this.decisionPropagator.propagateCheckpointDecisions(checkpointDecisions);
}
