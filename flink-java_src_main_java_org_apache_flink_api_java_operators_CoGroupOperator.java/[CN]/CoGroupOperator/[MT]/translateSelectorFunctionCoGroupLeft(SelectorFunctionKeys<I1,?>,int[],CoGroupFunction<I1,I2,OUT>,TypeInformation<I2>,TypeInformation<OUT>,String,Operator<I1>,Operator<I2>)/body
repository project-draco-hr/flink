{
  if (!inputType2.isTupleType()) {
    throw new InvalidParameterException("Should not happen.");
  }
  @SuppressWarnings("unchecked") final SelectorFunctionKeys<I1,K> keys1=(SelectorFunctionKeys<I1,K>)rawKeys1;
  final TypeInformation<Tuple2<K,I1>> typeInfoWithKey1=SelectorFunctionKeys.createTypeWithKey(keys1);
  final Operator<Tuple2<K,I1>> keyedInput1=SelectorFunctionKeys.appendKeyExtractor(input1,keys1);
  final PlanLeftUnwrappingCoGroupOperator<I1,I2,OUT,K> cogroup=new PlanLeftUnwrappingCoGroupOperator<>(function,keys1,logicalKeyPositions2,name,outputType,typeInfoWithKey1,inputType2);
  cogroup.setFirstInput(keyedInput1);
  cogroup.setSecondInput(input2);
  return cogroup;
}
