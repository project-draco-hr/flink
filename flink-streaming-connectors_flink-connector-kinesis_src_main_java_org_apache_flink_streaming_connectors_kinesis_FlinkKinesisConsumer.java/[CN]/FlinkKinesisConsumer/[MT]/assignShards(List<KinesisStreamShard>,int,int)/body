{
  checkArgument(numFlinkConsumerTasks > 0);
  checkArgument(thisConsumerTaskIndex < numFlinkConsumerTasks);
  List<KinesisStreamShard> closedShards=new ArrayList<>();
  List<KinesisStreamShard> openShards=new ArrayList<>();
  for (  KinesisStreamShard shard : shards) {
    if (shard.isClosed()) {
      closedShards.add(shard);
    }
 else {
      openShards.add(shard);
    }
  }
  List<KinesisStreamShard> subscribedShards=new ArrayList<>();
  for (int i=0; i < closedShards.size(); i++) {
    if (i % numFlinkConsumerTasks == thisConsumerTaskIndex) {
      subscribedShards.add(closedShards.get(i));
    }
  }
  for (int i=0; i < openShards.size(); i++) {
    if (i % numFlinkConsumerTasks == thisConsumerTaskIndex) {
      subscribedShards.add(openShards.get(i));
    }
  }
  return subscribedShards;
}
