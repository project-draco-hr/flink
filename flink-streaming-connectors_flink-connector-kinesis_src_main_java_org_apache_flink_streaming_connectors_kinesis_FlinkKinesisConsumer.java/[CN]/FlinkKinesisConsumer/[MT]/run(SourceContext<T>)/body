{
  fetcher=new KinesisDataFetcher<>(streams,sourceContext,getRuntimeContext(),configProps,deserializer);
  boolean isRestoringFromFailure=!lastStateSnapshot.isEmpty();
  fetcher.setIsRestoringFromFailure(isRestoringFromFailure);
  if (isRestoringFromFailure) {
    for (    Map.Entry<KinesisStreamShard,SequenceNumber> restored : lastStateSnapshot.entrySet()) {
      fetcher.advanceLastDiscoveredShardOfStream(restored.getKey().getStreamName(),restored.getKey().getShard().getShardId());
      if (LOG.isInfoEnabled()) {
        LOG.info("Subtask {} is seeding the fetcher with restored shard {}," + "starting state set to the restored sequence number {}" + getRuntimeContext().getIndexOfThisSubtask(),restored.getKey().toString(),restored.getValue());
      }
      fetcher.registerNewSubscribedShardState(new KinesisStreamShardState(restored.getKey(),restored.getValue()));
    }
  }
  if (!running) {
    return;
  }
  fetcher.runFetcher();
  fetcher.awaitTermination();
  sourceContext.close();
}
