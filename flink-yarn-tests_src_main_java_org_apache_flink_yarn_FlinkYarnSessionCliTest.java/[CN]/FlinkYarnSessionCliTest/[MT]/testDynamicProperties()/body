{
  Map<String,String> map=new HashMap<String,String>(System.getenv());
  File tmpFolder=tmp.newFolder();
  File fakeConf=new File(tmpFolder,"flink-conf.yaml");
  fakeConf.createNewFile();
  map.put("FLINK_CONF_DIR",tmpFolder.getAbsolutePath());
  TestBaseUtils.setEnv(map);
  Options options=new Options();
  FlinkYarnSessionCli cli=new FlinkYarnSessionCli("","");
  cli.getYARNSessionCLIOptions(options);
  CommandLineParser parser=new PosixParser();
  CommandLine cmd=null;
  try {
    cmd=parser.parse(options,new String[]{"run","-j","fake.jar","-n","15","-D","akka.ask.timeout=5 min"});
  }
 catch (  Exception e) {
    e.printStackTrace();
    Assert.fail("Parsing failed with " + e.getMessage());
  }
  AbstractFlinkYarnClient flinkYarnClient=cli.createFlinkYarnClient(cmd);
  Assert.assertNotNull(flinkYarnClient);
  List<Tuple2<String,String>> dynProperties=CliFrontend.getDynamicProperties(flinkYarnClient.getDynamicPropertiesEncoded());
  Assert.assertEquals(1,dynProperties.size());
  Assert.assertEquals("akka.ask.timeout",dynProperties.get(0).f0);
  Assert.assertEquals("5 min",dynProperties.get(0).f1);
}
