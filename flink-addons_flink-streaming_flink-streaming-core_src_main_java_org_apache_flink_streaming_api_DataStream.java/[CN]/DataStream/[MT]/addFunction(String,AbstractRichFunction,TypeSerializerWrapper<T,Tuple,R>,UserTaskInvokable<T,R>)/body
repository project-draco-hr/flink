{
  DataStream<T> inputStream=this.copy();
  StreamOperator<T,R> returnStream=new StreamOperator<T,R>(environment,functionName);
  try {
    jobGraphBuilder.addTask(returnStream.getId(),functionInvokable,typeWrapper,functionName,SerializationUtils.serialize(function),degreeOfParallelism);
  }
 catch (  SerializationException e) {
    throw new RuntimeException("Cannot serialize user defined function");
  }
  connectGraph(inputStream,returnStream.getId(),0);
  if (inputStream.iterationflag) {
    returnStream.addIterationSource(inputStream.iterationID.toString());
    inputStream.iterationflag=false;
  }
  if (inputStream instanceof NamedDataStream) {
    returnStream.name(inputStream.userDefinedName);
  }
  return returnStream;
}
