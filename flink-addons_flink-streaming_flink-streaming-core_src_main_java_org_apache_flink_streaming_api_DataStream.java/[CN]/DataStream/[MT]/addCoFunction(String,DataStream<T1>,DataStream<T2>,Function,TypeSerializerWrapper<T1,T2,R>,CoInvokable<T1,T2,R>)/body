{
  StreamOperator<R> returnStream=new TwoInputStreamOperator<T1,T2,R>(environment,functionName);
  try {
    jobGraphBuilder.addCoTask(returnStream.getId(),functionInvokable,typeWrapper,functionName,SerializationUtils.serialize((Serializable)function),degreeOfParallelism);
  }
 catch (  SerializationException e) {
    throw new RuntimeException("Cannot serialize user defined function");
  }
  connectGraph(inputStream1,returnStream.getId(),1);
  connectGraph(inputStream2,returnStream.getId(),2);
  if ((inputStream1 instanceof NamedDataStream) && (inputStream2 instanceof NamedDataStream)) {
    throw new RuntimeException("An operator cannot have two names");
  }
 else {
    if (inputStream1 instanceof NamedDataStream) {
      returnStream.name(inputStream1.userDefinedName);
    }
    if (inputStream2 instanceof NamedDataStream) {
      returnStream.name(inputStream2.userDefinedName);
    }
  }
  return returnStream;
}
