{
  if (this.isEmpty())   return EMPTY_ITERATOR;
  if (!this.isAdhoc() && this.inputFormatClass != null) {
    final InputFileIterator inputFileIterator=this.getInputFileIterator();
    if (!inputFileIterator.hasNext() || info == null)     return inputFileIterator;
    return this.createSortedIterator(inputFileIterator,info);
  }
  if (info != null)   Collections.sort(this.records,new Comparator<PactRecord>(){
    @Override public int compare(    PactRecord o1,    PactRecord o2){
      for (int index=0; index < info.keyClasses.length; index++) {
        int comparison=info.comparators[index].compare(o1.getField(info.sortKeys[index],info.keyClasses[index]),o2.getField(info.sortKeys[index],info.keyClasses[index]));
        if (comparison != 0)         return comparison;
      }
      return 0;
    }
  }
);
  return this.records.iterator();
}
