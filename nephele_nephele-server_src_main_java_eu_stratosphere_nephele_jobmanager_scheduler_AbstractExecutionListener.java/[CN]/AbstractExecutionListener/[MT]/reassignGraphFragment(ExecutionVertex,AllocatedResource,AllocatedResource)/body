{
  if (oldResource.equals(vertex.getAllocatedResource())) {
    vertex.setAllocatedResource(newResource);
    if (vertex.getExecutionState() == ExecutionState.SCHEDULED) {
      vertex.setExecutionState(ExecutionState.ASSIGNED);
    }
    final int numberOfOutputGates=vertex.getEnvironment().getNumberOfOutputGates();
    for (int i=0; i < numberOfOutputGates; ++i) {
      final OutputGate<? extends Record> outputGate=vertex.getEnvironment().getOutputGate(i);
      if (outputGate.getChannelType() == ChannelType.NETWORK) {
        continue;
      }
      final int numberOfOutputChannels=outputGate.getNumberOfOutputChannels();
      for (int j=0; j < numberOfOutputChannels; ++j) {
        final AbstractOutputChannel<? extends Record> outputChannel=outputGate.getOutputChannel(j);
        final ExecutionVertex connectedVertex=vertex.getExecutionGraph().getVertexByChannelID(outputChannel.getConnectedChannelID());
        reassignGraphFragment(connectedVertex,oldResource,newResource);
      }
    }
  }
}
