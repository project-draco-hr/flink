{
  if (!(type instanceof CompositeType<?>)) {
    throw new IllegalArgumentException("Key expressions are only supported on POJO types and Tuples. " + "A type is considered a POJO if all its fields are public, or have both getters and setters defined");
  }
  CompositeType<T> cType=(CompositeType<T>)type;
  String[] expressions=removeDuplicates(expressionsIn);
  if (expressionsIn.length != expressions.length) {
    LOG.warn("The key expressions contained duplicates. They are now unique");
  }
  keyFields=new ArrayList<FlatFieldDescriptor>(expressions.length);
  for (int i=0; i < expressions.length; i++) {
    List<FlatFieldDescriptor> keys=cType.getFlatFields(expressions[i]);
    if (keys.size() == 0) {
      throw new IllegalArgumentException("Unable to extract key from expression '" + expressions[i] + "' on key "+ cType);
    }
    keyFields.addAll(keys);
  }
}
