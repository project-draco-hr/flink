{
  if (other instanceof ExpressionKeys) {
    ExpressionKeys<?> oKey=(ExpressionKeys<?>)other;
    if (oKey.getNumberOfKeyFields() != this.getNumberOfKeyFields()) {
      throw new IncompatibleKeysException(IncompatibleKeysException.SIZE_MISMATCH_MESSAGE);
    }
    for (int i=0; i < this.keyFields.size(); i++) {
      if (!this.keyFields.get(i).getType().equals(oKey.keyFields.get(i).getType())) {
        throw new IncompatibleKeysException(this.keyFields.get(i).getType(),oKey.keyFields.get(i).getType());
      }
    }
    return true;
  }
 else   if (other instanceof SelectorFunctionKeys<?,?>) {
    return other.areCompatible(this);
  }
 else {
    throw new IncompatibleKeysException("The key is not compatible with " + other);
  }
}
