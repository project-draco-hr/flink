{
  try {
    final DataInputDeserializer deserializer=new DataInputDeserializer(buffer);
    final String className=deserializer.readUTF();
    final Class<? extends AbstractEvent> clazz;
    try {
      clazz=classLoader.loadClass(className).asSubclass(AbstractEvent.class);
    }
 catch (    ClassNotFoundException e) {
      throw new RuntimeException("Could not load event class '" + className + "'.",e);
    }
catch (    ClassCastException e) {
      throw new RuntimeException("The class '" + className + "' is not a valid subclass of '"+ AbstractEvent.class.getName()+ "'.",e);
    }
    final AbstractEvent event=InstantiationUtil.instantiate(clazz,AbstractEvent.class);
    event.read(deserializer);
    return event;
  }
 catch (  IOException e) {
    throw new RuntimeException("Error while deserializing event.",e);
  }
}
