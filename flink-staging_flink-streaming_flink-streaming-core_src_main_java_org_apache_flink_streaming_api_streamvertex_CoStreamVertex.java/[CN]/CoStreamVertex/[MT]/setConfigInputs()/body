{
  setDeserializers();
  int numberOfInputs=configuration.getNumberOfInputs();
  ArrayList<BufferReader> inputList1=new ArrayList<BufferReader>();
  ArrayList<BufferReader> inputList2=new ArrayList<BufferReader>();
  for (int i=0; i < numberOfInputs; i++) {
    int inputType=configuration.getInputIndex(i);
    BufferReader reader=getEnvironment().getReader(i);
switch (inputType) {
case 1:
      inputList1.add(reader);
    break;
case 2:
  inputList2.add(reader);
break;
default :
throw new RuntimeException("Invalid input type number: " + inputType);
}
}
final BufferReaderBase reader1=inputList1.size() == 1 ? inputList1.get(0) : new UnionBufferReader(inputList1.toArray(new BufferReader[inputList1.size()]));
final BufferReaderBase reader2=inputList2.size() == 1 ? inputList2.get(0) : new UnionBufferReader(inputList2.toArray(new BufferReader[inputList2.size()]));
coReader=new CoRecordReader<DeserializationDelegate<StreamRecord<IN1>>,DeserializationDelegate<StreamRecord<IN2>>>(reader1,reader2);
}
