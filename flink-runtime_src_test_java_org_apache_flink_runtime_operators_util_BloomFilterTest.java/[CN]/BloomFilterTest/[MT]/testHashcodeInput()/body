{
  bloomFilter.reset();
  int val1="val1".hashCode();
  int val2="val2".hashCode();
  int val3="val3".hashCode();
  int val4="val4".hashCode();
  int val5="val5".hashCode();
  assertFalse(bloomFilter.testHash(val1));
  assertFalse(bloomFilter.testHash(val2));
  assertFalse(bloomFilter.testHash(val3));
  assertFalse(bloomFilter.testHash(val4));
  assertFalse(bloomFilter.testHash(val5));
  bloomFilter.addHash(val1);
  assertTrue(bloomFilter.testHash(val1));
  assertFalse(bloomFilter.testHash(val2));
  assertFalse(bloomFilter.testHash(val3));
  assertFalse(bloomFilter.testHash(val4));
  assertFalse(bloomFilter.testHash(val5));
  bloomFilter.addHash(val2);
  assertTrue(bloomFilter.testHash(val1));
  assertTrue(bloomFilter.testHash(val2));
  assertFalse(bloomFilter.testHash(val3));
  assertFalse(bloomFilter.testHash(val4));
  assertFalse(bloomFilter.testHash(val5));
  bloomFilter.addHash(val3);
  assertTrue(bloomFilter.testHash(val1));
  assertTrue(bloomFilter.testHash(val2));
  assertTrue(bloomFilter.testHash(val3));
  assertFalse(bloomFilter.testHash(val4));
  assertFalse(bloomFilter.testHash(val5));
  bloomFilter.addHash(val4);
  assertTrue(bloomFilter.testHash(val1));
  assertTrue(bloomFilter.testHash(val2));
  assertTrue(bloomFilter.testHash(val3));
  assertTrue(bloomFilter.testHash(val4));
  assertFalse(bloomFilter.testHash(val5));
  bloomFilter.addHash(val5);
  assertTrue(bloomFilter.testHash(val1));
  assertTrue(bloomFilter.testHash(val2));
  assertTrue(bloomFilter.testHash(val3));
  assertTrue(bloomFilter.testHash(val4));
  assertTrue(bloomFilter.testHash(val5));
}
