{
  boolean modified=false;
  int last=fnn.numChildren() - 1;
  int i;
  for (i=last; i >= 0; i--) {
    Expr c=fnn.child(i);
    if (c instanceof ConstExpr) {
      ConstExpr ce=(ConstExpr)c;
      if (ce.value == null) {
        modified=true;
        fnn.removeChild(i);
        last--;
      }
    }
  }
  if (last < 0) {
    fnn.replaceInParent(new ConstExpr(null));
    return true;
  }
  for (i=0; i < last; i++) {
    if (fnn.child(i).getSchema().is(NULL).never()) {
      break;
    }
  }
  if (i == 0 || last == 0) {
    Expr c=fnn.child(i);
    fnn.replaceInParent(c);
    modified=true;
  }
 else {
    for (; last > i; last--) {
      fnn.removeChild(last);
      modified=true;
    }
  }
  return modified;
}
