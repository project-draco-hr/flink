{
  FieldList forwardFields=null;
  GlobalProperties returnProps=this;
  if (props == null) {
    return new GlobalProperties();
  }
  if (this.ordering != null) {
    Ordering no=new Ordering();
    for (    int index : this.ordering.getInvolvedIndexes()) {
      forwardFields=props.getForwardFields(input,index) == null ? null : props.getForwardFields(input,index).toFieldList();
      if (forwardFields == null) {
        returnProps=new GlobalProperties();
        no=null;
        break;
      }
 else {
        returnProps=returnProps == this ? this.clone() : returnProps;
        for (int i=0; i < forwardFields.size(); i++) {
          no.appendOrdering(forwardFields.get(i),this.ordering.getType(index),this.ordering.getOrder(index));
        }
      }
      returnProps.setOrdering(no);
    }
  }
  if (this.partitioningFields != null) {
    returnProps=returnProps == this ? this.clone() : returnProps;
    returnProps.setPartitioningFields(new FieldList());
    for (    int index : this.partitioningFields) {
      forwardFields=props.getForwardFields(input,index) == null ? null : props.getForwardFields(input,index).toFieldList();
      if (forwardFields == null) {
        returnProps=new GlobalProperties();
        break;
      }
 else {
        returnProps.setPartitioningFields(returnProps.getPartitioningFields().addFields(forwardFields));
      }
    }
  }
  if (this.uniqueFieldCombinations != null) {
    HashSet<FieldSet> newSet=new HashSet<FieldSet>();
    newSet.addAll(this.uniqueFieldCombinations);
    for (Iterator<FieldSet> combos=this.uniqueFieldCombinations.iterator(); combos.hasNext(); ) {
      FieldSet current=combos.next();
      FieldSet nfs=new FieldSet();
      for (      Integer field : current) {
        if (props.getForwardFields(input,field) == null) {
          newSet.remove(current);
          nfs=null;
          break;
        }
 else {
          nfs=nfs.addFields(props.getForwardFields(input,field));
        }
      }
      if (nfs != null) {
        newSet.remove(current);
        newSet.add(nfs);
      }
    }
    GlobalProperties gp=returnProps.clone();
    gp.uniqueFieldCombinations=newSet.isEmpty() ? null : newSet;
    return gp;
  }
  if (this.partitioning == PartitioningProperty.FULL_REPLICATION) {
    return new GlobalProperties();
  }
  return returnProps;
}
