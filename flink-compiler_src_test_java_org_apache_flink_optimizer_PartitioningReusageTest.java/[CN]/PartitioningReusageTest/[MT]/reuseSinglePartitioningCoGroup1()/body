{
  ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
  DataSet<Tuple3<Integer,Integer,Integer>> set1=env.readCsvFile(IN_FILE).types(Integer.class,Integer.class,Integer.class);
  DataSet<Tuple3<Integer,Integer,Integer>> set2=env.readCsvFile(IN_FILE).types(Integer.class,Integer.class,Integer.class);
  DataSet<Tuple3<Integer,Integer,Integer>> coGrouped=set1.partitionByHash(0,1).map(new MockMapper()).withForwardedFields("0;1").coGroup(set2).where(0,1).equalTo(0,1).with(new MockCoGroup());
  coGrouped.print();
  JavaPlan plan=env.createProgramPlan();
  OptimizedPlan oPlan=compileWithStats(plan);
  SinkPlanNode sink=oPlan.getDataSinks().iterator().next();
  DualInputPlanNode coGroup=(DualInputPlanNode)sink.getInput().getSource();
  checkValidCoGroupInputProperties(coGroup);
}
