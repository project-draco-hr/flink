{
  try {
    ActorGateway jobManager=retriever.getJobManagerGateway();
    if (jobManager != null) {
      Future<Object> future=jobManager.ask(RequestJobsWithIDsOverview.getInstance(),timeout);
      JobsWithIDsOverview result=(JobsWithIDsOverview)Await.result(future,timeout);
      return JsonFactory.generateJobsOverviewJSON(result);
    }
 else {
      throw new Exception("No connection to the leading JobManager.");
    }
  }
 catch (  Exception e) {
    throw new RuntimeException("Failed to fetch list of all running jobs: " + e.getMessage(),e);
  }
}
