{
  if (from == null) {
    return null;
  }
  Class<?> actualType=from.getClass();
  if (reuse == null || actualType != reuse.getClass()) {
    return copy(from);
  }
  if (actualType == clazz) {
    try {
      for (int i=0; i < numFields; i++) {
        Object value=fields[i].get(from);
        if (value != null) {
          Object copy=fieldSerializers[i].copy(fields[i].get(from),fields[i].get(reuse));
          fields[i].set(reuse,copy);
        }
 else {
          fields[i].set(reuse,null);
        }
      }
    }
 catch (    IllegalAccessException e) {
      throw new RuntimeException("Error during POJO copy, this should not happen since we check the fields" + "before.");
    }
  }
 else {
    TypeSerializer subclassSerializer=getSubclassSerializer(actualType);
    reuse=(T)subclassSerializer.copy(from,reuse);
  }
  return reuse;
}
