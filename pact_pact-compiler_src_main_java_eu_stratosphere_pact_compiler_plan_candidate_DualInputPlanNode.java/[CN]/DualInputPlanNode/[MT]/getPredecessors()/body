{
  return new Iterator<PlanNode>(){
    private int hasLeft=2;
    @Override public boolean hasNext(){
      return this.hasLeft > 0;
    }
    @Override public PlanNode next(){
      if (this.hasLeft == 2) {
        this.hasLeft=1;
        return DualInputPlanNode.this.input1.getSource();
      }
 else       if (this.hasLeft == 1) {
        this.hasLeft=0;
        return DualInputPlanNode.this.input2.getSource();
      }
 else       throw new NoSuchElementException();
    }
    @Override public void remove(){
      throw new UnsupportedOperationException();
    }
  }
;
}
