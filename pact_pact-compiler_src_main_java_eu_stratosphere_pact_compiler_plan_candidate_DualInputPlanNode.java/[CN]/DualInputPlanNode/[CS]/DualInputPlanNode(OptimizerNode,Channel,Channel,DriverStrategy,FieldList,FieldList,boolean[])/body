{
  super(template,localStrategy);
  this.input1=input1;
  this.input2=input2;
  this.keys1=driverKeyFields1;
  this.keys2=driverKeyFields2;
  this.sortOrders=driverSortOrders;
  if (this.input1.getShipStrategy() == ShipStrategyType.BROADCAST) {
    this.input1.setReplicationFactor(getDegreeOfParallelism());
  }
  if (this.input2.getShipStrategy() == ShipStrategyType.BROADCAST) {
    this.input2.setReplicationFactor(getDegreeOfParallelism());
  }
  this.globalProps=input.getGlobalProperties().clone();
  this.globalProps.clearUniqueFieldSets();
  this.globalProps.filterByNodesConstantSet(template,0);
  this.localProps=input.getLocalProperties().clone();
switch (this.getDriverStrategy()) {
case NONE:
case GROUP:
    break;
default :
  throw new CompilerException("Unrecognized diver strategy impacting local properties.");
}
this.localProps.clearUniqueFieldSets();
this.localProps.filterByNodesConstantSet(template,0);
updatePropertiesWithUniqueSets(template.getUniqueFields());
}
