{
  LOG.info("Trying to associate with JobManager leader " + leaderAddress);
  final Object registerMessage=decorateMessage(new RegisterResourceManager(self()));
  final Object retryMessage=decorateMessage(new TriggerRegistrationAtJobManager(leaderAddress));
  ActorSelection jobManagerSel=context().actorSelection(leaderAddress);
  Future<Object> future=Patterns.ask(jobManagerSel,registerMessage,new Timeout(messageTimeout));
  future.onComplete(new OnComplete<Object>(){
    @Override public void onComplete(    Throwable failure,    Object msg){
      if (msg != null) {
        if (msg instanceof LeaderSessionMessage && ((LeaderSessionMessage)msg).message() instanceof RegisterResourceManagerSuccessful) {
          self().tell(msg,ActorRef.noSender());
        }
 else {
          LOG.error("Invalid response type to registration at JobManager: {}",msg);
          self().tell(retryMessage,ActorRef.noSender());
        }
      }
 else {
        LOG.error("Resource manager could not register at JobManager",failure);
        self().tell(retryMessage,ActorRef.noSender());
      }
    }
  }
,context().dispatcher());
}
