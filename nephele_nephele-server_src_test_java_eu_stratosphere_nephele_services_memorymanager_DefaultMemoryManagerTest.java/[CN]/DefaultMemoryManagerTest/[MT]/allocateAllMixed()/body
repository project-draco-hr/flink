{
  final AbstractInvokable mockInvoke=new DummyInvokable();
  memoryManager=new DefaultMemoryManager(MEMORY_SIZE);
  List<MemorySegment> segments=new ArrayList<MemorySegment>();
  try {
    segments.add(memoryManager.allocate(mockInvoke,1024 * 1024 * 10));
    segments.add(memoryManager.allocate(mockInvoke,1024 * 1024 * 10));
    segments.add(memoryManager.allocate(mockInvoke,1024 * 1024 * 10));
    segments.addAll(memoryManager.allocate(mockInvoke,2,1024 * 1024 * 3));
    segments.add(memoryManager.allocate(mockInvoke,1024 * 1024 * 10));
    segments.add(memoryManager.allocate(mockInvoke,1024 * 1024 * 10));
    segments.add(memoryManager.allocate(mockInvoke,1024 * 1024 * 10));
    segments.addAll(memoryManager.allocate(mockInvoke,2,1024 * 1024 * 3));
  }
 catch (  MemoryAllocationException e) {
    Assert.fail("Unable to allocate memory");
  }
  memoryManager.release(segments);
}
