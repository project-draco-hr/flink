{
  final FlatJoinFunction<IT1,IT2,OT> joinFunction=taskContext.getStub();
  final Collector<OT> collector=taskContext.getOutputCollector();
  IT1 buildSideRecord=this.solutionSideRecord;
  IT2 probeSideRecord=this.probeSideRecord;
  final CompactingHashTable<IT1> join=hashTable;
  final MutableObjectIterator<IT2> probeSideInput=taskContext.<IT2>getInput(0);
  final CompactingHashTable<IT1>.HashTableProber<IT2> prober=join.getProber(probeSideComparator,pairComparator);
  while (this.running && ((probeSideRecord=probeSideInput.next(probeSideRecord)) != null)) {
    if (prober.getMatchFor(probeSideRecord,buildSideRecord)) {
      joinFunction.join(buildSideRecord,probeSideRecord,collector);
    }
 else {
      joinFunction.join(null,probeSideRecord,collector);
    }
  }
}
