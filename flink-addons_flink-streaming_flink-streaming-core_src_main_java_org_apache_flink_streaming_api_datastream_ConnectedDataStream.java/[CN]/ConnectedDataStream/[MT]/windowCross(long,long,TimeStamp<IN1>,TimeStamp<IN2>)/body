{
  if (windowSize < 1) {
    throw new IllegalArgumentException("Window size must be positive");
  }
  if (slideInterval < 1) {
    throw new IllegalArgumentException("Slide interval must be positive");
  }
  TypeWrapper<IN1> in1TypeWrapper=null;
  TypeWrapper<IN2> in2TypeWrapper=null;
  in1TypeWrapper=new ClassTypeWrapper<IN1>(dataStream1.getOutputType().getTypeClass());
  in2TypeWrapper=new ClassTypeWrapper<IN2>(dataStream2.getOutputType().getTypeClass());
  CombineTypeWrapper<IN1,IN2> outTypeWrapper=new CombineTypeWrapper<IN1,IN2>(in1TypeWrapper,in2TypeWrapper);
  return addCoFunction("coWindowReduce",new CrossWindowFunction<IN1,IN2>(),in1TypeWrapper,in2TypeWrapper,outTypeWrapper,new CoWindowInvokable<IN1,IN2,Tuple2<IN1,IN2>>(new CrossWindowFunction<IN1,IN2>(),windowSize,slideInterval,timestamp1,timestamp2));
}
