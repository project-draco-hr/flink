{
  if (windowSize < 1) {
    throw new IllegalArgumentException("Window size must be positive");
  }
  if (slideInterval < 1) {
    throw new IllegalArgumentException("Slide interval must be positive");
  }
  FunctionTypeWrapper<IN1> in1TypeWrapper=new FunctionTypeWrapper<IN1>(coWindowFunction,CoWindowFunction.class,0);
  FunctionTypeWrapper<IN2> in2TypeWrapper=new FunctionTypeWrapper<IN2>(coWindowFunction,CoWindowFunction.class,1);
  FunctionTypeWrapper<OUT> outTypeWrapper=new FunctionTypeWrapper<OUT>(coWindowFunction,CoWindowFunction.class,2);
  return addCoFunction("coWindowReduce",coWindowFunction,in1TypeWrapper,in2TypeWrapper,outTypeWrapper,new CoWindowInvokable<IN1,IN2,OUT>(coWindowFunction,windowSize,slideInterval,timestamp1,timestamp2));
}
