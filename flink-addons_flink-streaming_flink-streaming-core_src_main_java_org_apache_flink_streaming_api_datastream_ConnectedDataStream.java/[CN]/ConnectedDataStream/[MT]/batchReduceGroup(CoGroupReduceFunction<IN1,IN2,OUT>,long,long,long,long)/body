{
  if (batchSize1 < 1 || batchSize2 < 1) {
    throw new IllegalArgumentException("Batch size must be positive");
  }
  if (slideSize1 < 1 || slideSize2 < 1) {
    throw new IllegalArgumentException("Slide size must be positive");
  }
  if (batchSize1 < slideSize1 || batchSize2 < slideSize2) {
    throw new IllegalArgumentException("Batch size must be at least slide size");
  }
  FunctionTypeWrapper<IN1> in1TypeWrapper=new FunctionTypeWrapper<IN1>(coReducer,CoGroupReduceFunction.class,0);
  FunctionTypeWrapper<IN2> in2TypeWrapper=new FunctionTypeWrapper<IN2>(coReducer,CoGroupReduceFunction.class,1);
  FunctionTypeWrapper<OUT> outTypeWrapper=new FunctionTypeWrapper<OUT>(coReducer,CoGroupReduceFunction.class,2);
  return addCoFunction("coBatchReduce",coReducer,in1TypeWrapper,in2TypeWrapper,outTypeWrapper,new CoBatchGroupReduceInvokable<IN1,IN2,OUT>(coReducer,batchSize1,batchSize2,slideSize1,slideSize2));
}
