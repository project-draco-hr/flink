{
  super(0,aggregationType,first);
  if (!(typeInfo instanceof CompositeType<?>)) {
    throw new IllegalArgumentException("Key expressions are only supported on POJO types and Tuples. " + "A type is considered a POJO if all its fields are public, or have both getters and setters defined");
  }
  @SuppressWarnings("unchecked") CompositeType<T> cType=(CompositeType<T>)typeInfo;
  List<FlatFieldDescriptor> fieldDescriptors=new ArrayList<FlatFieldDescriptor>();
  cType.getKey(field,0,fieldDescriptors);
  int logicalKeyPosition=fieldDescriptors.get(0).getPosition();
  if (cType instanceof PojoTypeInfo) {
    pojoComparator=(PojoComparator<T>)cType.createComparator(new int[]{logicalKeyPosition},new boolean[]{false},0);
  }
 else {
    throw new IllegalArgumentException("Key expressions are only supported on POJO types. " + "A type is considered a POJO if all its fields are public, or have both getters and setters defined");
  }
}
