{
  int numSubTasks=(args.length > 0 ? Integer.parseInt(args[0]) : 1);
  String dataInput=(args.length > 1 ? args[1] : "");
  String output=(args.length > 2 ? args[2] : "");
  @SuppressWarnings("unchecked") CsvInputFormat format=new CsvInputFormat(' ',IntValue.class,IntValue.class);
  FileDataSource input=new FileDataSource(format,dataInput,"Input");
  ReduceOperator sorter=ReduceOperator.builder(new IdentityReducer(),IntValue.class,0).input(input).name("Reducer").build();
  sorter.setGroupOrder(new Ordering(1,IntValue.class,Order.ASCENDING));
  FileDataSink out=new FileDataSink(new CsvOutputFormat(),output,sorter,"Sorted Output");
  CsvOutputFormat.configureRecordFormat(out).recordDelimiter('\n').fieldDelimiter(' ').field(IntValue.class,0).field(IntValue.class,1);
  Plan plan=new Plan(out,"SecondarySort Example");
  plan.setDefaultParallelism(numSubTasks);
  return plan;
}
