{
  if (isFinished) {
    return false;
  }
  while (true) {
    if (currentRecordDeserializer != null) {
      DeserializationResult result=currentRecordDeserializer.getNextRecord(target);
      if (result.isBufferConsumed()) {
        currentRecordDeserializer.getCurrentBuffer().recycle();
        currentRecordDeserializer=null;
      }
      if (result.isFullRecord()) {
        return true;
      }
    }
    final BufferOrEvent bufferOrEvent=inputGate.getNextBufferOrEvent();
    if (bufferOrEvent.isBuffer()) {
      currentRecordDeserializer=recordDeserializers[bufferOrEvent.getChannelIndex()];
      currentRecordDeserializer.setNextBuffer(bufferOrEvent.getBuffer());
    }
 else {
      if (recordDeserializers[bufferOrEvent.getChannelIndex()].hasUnfinishedData()) {
        throw new IOException("Received an event in channel " + bufferOrEvent.getChannelIndex() + " while still having "+ "data from a record. This indicates broken serialization logic. "+ "If you are using custom serialization code (Writable or Value types), check their "+ "serialization routines. In the case of Kryo, check the respective Kryo serializer.");
      }
      if (handleEvent(bufferOrEvent.getEvent())) {
        if (inputGate.isFinished()) {
          isFinished=true;
          return false;
        }
 else         if (hasReachedEndOfSuperstep()) {
          return false;
        }
      }
    }
  }
}
