{
  StreamRecord record=new StreamRecord(new Tuple2<String,Integer>("Stratosphere",1));
  assertEquals(2,record.getNumOfFields());
  assertEquals(1,record.getNumOfTuples());
  assertEquals("Stratosphere",record.getString(0));
  assertEquals((Integer)1,record.getInteger(1));
  record.setField(1,"Big Data");
  assertEquals("Big Data",record.getString(1));
  record.setRecord(new Tuple2<String,Long>("Big Data looks tiny from here.",2L));
  assertEquals(2,record.getNumOfFields());
  assertEquals(1,record.getNumOfTuples());
  assertEquals((Long)2L,record.getLong(1));
  record.setRecord(new Tuple2<String,Boolean>("Big Data looks tiny from here.",true));
  assertEquals(2,record.getNumOfFields());
  assertEquals(1,record.getNumOfTuples());
  assertEquals(true,record.getBoolean(1));
  record.setRecord(new Tuple2<String,Double>("Big Data looks tiny from here.",2.5));
  assertEquals(2,record.getNumOfFields());
  assertEquals(1,record.getNumOfTuples());
  assertEquals((Double)2.5,record.getDouble(1));
  Tuple2<String,Double> tuple=new Tuple2<String,Double>();
  record.getTupleInto(tuple);
  assertEquals("Big Data looks tiny from here.",tuple.getField(0));
  assertEquals((Double)2.5,tuple.getField(1));
  record.setDouble(1,3.3);
  assertEquals("Big Data looks tiny from here.",tuple.getField(0));
  assertEquals((Double)2.5,tuple.getField(1));
}
