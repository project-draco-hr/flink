{
  Tuple9<Boolean[],Byte[],Character[],Double[],Float[],Integer[],Long[],Short[],String[]> t1=new Tuple9<Boolean[],Byte[],Character[],Double[],Float[],Integer[],Long[],Short[],String[]>(new Boolean[]{true},new Byte[]{12},new Character[]{'a'},new Double[]{12.5},new Float[]{13.5f},new Integer[]{1234},new Long[]{12345678900l},new Short[]{12345},new String[]{"something"});
  StreamRecord s1=new StreamRecord(t1);
  StreamRecord s2=s1.copySerialized();
  Tuple9 t2=(Tuple9)s2.getTuple();
  assertArrayEquals(new Boolean[]{true},(Boolean[])t2.getField(0));
  assertArrayEquals(new Byte[]{12},(Byte[])t2.getField(1));
  assertArrayEquals(new Character[]{'a'},(Character[])t2.getField(2));
  assertArrayEquals(new Double[]{12.5},(Double[])t2.getField(3));
  assertArrayEquals(new Float[]{13.5f},(Float[])t2.getField(4));
  assertArrayEquals(new Integer[]{1234},(Integer[])t2.getField(5));
  assertArrayEquals(new Long[]{12345678900l},(Long[])t2.getField(6));
  assertArrayEquals(new Short[]{12345},(Short[])t2.getField(7));
  assertArrayEquals(new String[]{"something"},(String[])t2.getField(8));
  assertEquals(t1.getField(0).getClass(),t2.getField(0).getClass());
  assertEquals(t1.getField(1).getClass(),t2.getField(1).getClass());
  assertEquals(t1.getField(2).getClass(),t2.getField(2).getClass());
  assertEquals(t1.getField(3).getClass(),t2.getField(3).getClass());
  assertEquals(t1.getField(4).getClass(),t2.getField(4).getClass());
  assertEquals(t1.getField(5).getClass(),t2.getField(5).getClass());
  assertEquals(t1.getField(6).getClass(),t2.getField(6).getClass());
  assertEquals(t1.getField(7).getClass(),t2.getField(7).getClass());
  assertEquals(t1.getField(8).getClass(),t2.getField(8).getClass());
}
