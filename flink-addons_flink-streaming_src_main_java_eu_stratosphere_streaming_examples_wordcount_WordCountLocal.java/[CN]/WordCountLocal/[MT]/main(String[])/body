{
  if (args.length != 9) {
    wrongArgs();
  }
 else {
    LogUtils.initializeDefaultConsoleLogger(Level.ERROR,Level.INFO);
    int sourceSubtasks=1;
    int sourceSubtasksPerInstance=1;
    int splitterSubtasks=1;
    int splitterSubtasksPerInstance=1;
    int counterSubtasks=1;
    int counterSubtasksPerInstance=1;
    int sinkSubtasks=1;
    int sinkSubtasksPerInstance=1;
    try {
      sourceSubtasks=Integer.parseInt(args[1]);
      sourceSubtasksPerInstance=Integer.parseInt(args[2]);
      splitterSubtasks=Integer.parseInt(args[3]);
      splitterSubtasksPerInstance=Integer.parseInt(args[4]);
      counterSubtasks=Integer.parseInt(args[5]);
      counterSubtasksPerInstance=Integer.parseInt(args[6]);
      sinkSubtasks=Integer.parseInt(args[7]);
      sinkSubtasksPerInstance=Integer.parseInt(args[8]);
    }
 catch (    Exception e) {
      wrongArgs();
    }
    try {
      JobGraph jG=getJobGraph(sourceSubtasks,sourceSubtasksPerInstance,splitterSubtasks,splitterSubtasksPerInstance,counterSubtasks,counterSubtasksPerInstance,sinkSubtasks,sinkSubtasksPerInstance);
      Configuration configuration=jG.getJobConfiguration();
      if (args.length == 0) {
        args=new String[]{"local"};
      }
      if (args[0].equals("local")) {
        System.out.println("Running in Local mode");
        NepheleMiniCluster exec=new NepheleMiniCluster();
        exec.start();
        Client client=new Client(new InetSocketAddress("localhost",6498),configuration);
        client.run(jG,true);
        exec.stop();
      }
 else       if (args[0].equals("cluster")) {
        System.out.println("Running in Cluster mode");
        Client client=new Client(new InetSocketAddress("hadoop01",6123),configuration);
        client.run(jG,true);
      }
    }
 catch (    Exception e) {
      System.out.println(e);
    }
  }
}
