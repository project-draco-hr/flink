{
  TestOutput<StreamWindow<Tuple2<Integer,Integer>>> collector=new TestOutput<StreamWindow<Tuple2<Integer,Integer>>>();
  SlidingTimePreReducer<Tuple2<Integer,Integer>> preReducer=new SlidingTimePreReducer<Tuple2<Integer,Integer>>(tupleReducer,tupleType.createSerializer(new ExecutionConfig()),3,2,new TimestampWrapper<Tuple2<Integer,Integer>>(new Timestamp<Tuple2<Integer,Integer>>(){
    private static final long serialVersionUID=1L;
    @Override public long getTimestamp(    Tuple2<Integer,Integer> value){
      return value.f0;
    }
  }
,1));
  int timeOffset=0;
  preReducer.store(new Tuple2<Integer,Integer>(timeOffset + 1,1));
  preReducer.store(new Tuple2<Integer,Integer>(timeOffset + 2,2));
  preReducer.emitWindow(collector);
  preReducer.store(new Tuple2<Integer,Integer>(timeOffset + 3,3));
  preReducer.store(new Tuple2<Integer,Integer>(timeOffset + 4,4));
  preReducer.evict(1);
  preReducer.emitWindow(collector);
  preReducer.evict(2);
  preReducer.store(new Tuple2<Integer,Integer>(timeOffset + 5,5));
  preReducer.store(new Tuple2<Integer,Integer>(timeOffset + 6,6));
  preReducer.emitWindow(collector);
  preReducer.evict(2);
  preReducer.store(new Tuple2<Integer,Integer>(timeOffset + 7,7));
  preReducer.store(new Tuple2<Integer,Integer>(timeOffset + 8,8));
  preReducer.emitWindow(collector);
  preReducer.evict(2);
  preReducer.store(new Tuple2<Integer,Integer>(timeOffset + 9,9));
  preReducer.store(new Tuple2<Integer,Integer>(timeOffset + 10,10));
  preReducer.emitWindow(collector);
  preReducer.evict(2);
  preReducer.store(new Tuple2<Integer,Integer>(timeOffset + 11,11));
  preReducer.store(new Tuple2<Integer,Integer>(timeOffset + 12,12));
  preReducer.emitWindow(collector);
  preReducer.store(new Tuple2<Integer,Integer>(timeOffset + 13,13));
  preReducer.evict(100);
  timeOffset=25;
  preReducer.store(new Tuple2<Integer,Integer>(timeOffset + 1,1));
  preReducer.store(new Tuple2<Integer,Integer>(timeOffset + 2,2));
  preReducer.emitWindow(collector);
  preReducer.store(new Tuple2<Integer,Integer>(timeOffset + 3,3));
  preReducer.store(new Tuple2<Integer,Integer>(timeOffset + 4,4));
  preReducer.evict(1);
  preReducer.emitWindow(collector);
  preReducer.evict(2);
  preReducer.store(new Tuple2<Integer,Integer>(timeOffset + 5,5));
  preReducer.store(new Tuple2<Integer,Integer>(timeOffset + 6,6));
  preReducer.emitWindow(collector);
  preReducer.evict(2);
  preReducer.store(new Tuple2<Integer,Integer>(timeOffset + 7,7));
  preReducer.store(new Tuple2<Integer,Integer>(timeOffset + 8,8));
  preReducer.emitWindow(collector);
  preReducer.evict(2);
  preReducer.store(new Tuple2<Integer,Integer>(timeOffset + 9,9));
  preReducer.store(new Tuple2<Integer,Integer>(timeOffset + 10,10));
  preReducer.emitWindow(collector);
  preReducer.evict(2);
  preReducer.store(new Tuple2<Integer,Integer>(timeOffset + 11,11));
  preReducer.store(new Tuple2<Integer,Integer>(timeOffset + 12,12));
  preReducer.emitWindow(collector);
  preReducer.store(new Tuple2<Integer,Integer>(timeOffset + 13,13));
  List<StreamWindow<Tuple2<Integer,Integer>>> expected=new ArrayList<StreamWindow<Tuple2<Integer,Integer>>>();
  timeOffset=0;
  expected.add(StreamWindow.fromElements(new Tuple2<Integer,Integer>(timeOffset + 1,3)));
  expected.add(StreamWindow.fromElements(new Tuple2<Integer,Integer>(timeOffset + 2,9)));
  expected.add(StreamWindow.fromElements(new Tuple2<Integer,Integer>(timeOffset + 4,15)));
  expected.add(StreamWindow.fromElements(new Tuple2<Integer,Integer>(timeOffset + 6,21)));
  expected.add(StreamWindow.fromElements(new Tuple2<Integer,Integer>(timeOffset + 8,27)));
  expected.add(StreamWindow.fromElements(new Tuple2<Integer,Integer>(timeOffset + 10,33)));
  timeOffset=25;
  expected.add(StreamWindow.fromElements(new Tuple2<Integer,Integer>(timeOffset + 1,3)));
  expected.add(StreamWindow.fromElements(new Tuple2<Integer,Integer>(timeOffset + 2,9)));
  expected.add(StreamWindow.fromElements(new Tuple2<Integer,Integer>(timeOffset + 4,15)));
  expected.add(StreamWindow.fromElements(new Tuple2<Integer,Integer>(timeOffset + 6,21)));
  expected.add(StreamWindow.fromElements(new Tuple2<Integer,Integer>(timeOffset + 8,27)));
  expected.add(StreamWindow.fromElements(new Tuple2<Integer,Integer>(timeOffset + 10,33)));
  assertEquals(expected,collector.getCollected());
}
