{
  double val=0;
  long fraction=-1;
  long expVal=-1;
  int i;
  boolean neg=false;
  boolean negExp=false;
  if (bytes[startPos] == '-') {
    neg=true;
    startPos++;
  }
  for (i=startPos; i < length; i++) {
    if (bytes[i] == delim) {
      break;
    }
    if (bytes[i] == this.decimalSep) {
      if (expVal != -1) {
        return -1;
      }
      fraction=0;
      continue;
    }
    if (bytes[i] == 'E' || bytes[i] == 'e') {
      if (expVal != -1) {
        return -1;
      }
      expVal=0;
      if (i < length && bytes[i + 1] == '-') {
        negExp=true;
        i++;
      }
      continue;
    }
    if (bytes[i] < 48 || bytes[i] > 57) {
      return -1;
    }
    if (expVal == -1) {
      val*=10;
      val+=bytes[i] - 48;
      if (fraction >= 0) {
        fraction++;
      }
    }
 else {
      expVal*=10;
      expVal+=bytes[i] - 48;
    }
  }
  if (expVal != -1) {
    fraction-=(expVal * (negExp ? -1 : 1));
  }
  field.setValue(((double)val) / Math.pow(10,fraction == -1 ? 0 : fraction) * (neg ? -1 : 1));
  return i == length ? length : i + 1;
}
