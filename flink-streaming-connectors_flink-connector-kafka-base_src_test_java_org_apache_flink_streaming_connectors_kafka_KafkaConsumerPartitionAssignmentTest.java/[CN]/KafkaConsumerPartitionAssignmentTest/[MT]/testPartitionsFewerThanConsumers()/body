{
  try {
    List<KafkaTopicPartition> inPartitions=Arrays.asList(new KafkaTopicPartition("test-topic",4),new KafkaTopicPartition("test-topic",52),new KafkaTopicPartition("test-topic",17),new KafkaTopicPartition("test-topic",1));
    final Set<KafkaTopicPartition> allPartitions=new HashSet<>();
    allPartitions.addAll(inPartitions);
    final int numConsumers=2 * inPartitions.size() + 3;
    for (int i=0; i < numConsumers; i++) {
      List<KafkaTopicPartition> parts=FlinkKafkaConsumerBase.assignPartitions(inPartitions,numConsumers,i);
      assertNotNull(parts);
      assertTrue(parts.size() <= 1);
      for (      KafkaTopicPartition p : parts) {
        assertTrue(allPartitions.remove(p));
      }
    }
    assertTrue(allPartitions.isEmpty());
  }
 catch (  Exception e) {
    e.printStackTrace();
    fail(e.getMessage());
  }
}
