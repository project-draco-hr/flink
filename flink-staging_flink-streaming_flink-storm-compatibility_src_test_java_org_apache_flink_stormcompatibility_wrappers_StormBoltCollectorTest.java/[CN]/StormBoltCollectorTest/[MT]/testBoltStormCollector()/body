{
  for (int numberOfAttributes=0; numberOfAttributes < 26; ++numberOfAttributes) {
    final Output flinkCollector=mock(Output.class);
    Tuple flinkTuple=null;
    final Values tuple=new Values();
    StormBoltCollector<?> collector;
    if (numberOfAttributes == 0) {
      collector=new StormBoltCollector(numberOfAttributes,flinkCollector);
      tuple.add(new Integer(this.r.nextInt()));
    }
 else {
      collector=new StormBoltCollector(numberOfAttributes,flinkCollector);
      flinkTuple=Tuple.getTupleClass(numberOfAttributes).newInstance();
      for (int i=0; i < numberOfAttributes; ++i) {
        tuple.add(new Integer(this.r.nextInt()));
        flinkTuple.setField(tuple.get(i),i);
      }
    }
    final String streamId="streamId";
    final Collection anchors=mock(Collection.class);
    final List<Integer> taskIds;
    taskIds=collector.emit(streamId,anchors,tuple);
    Assert.assertNull(taskIds);
    if (numberOfAttributes == 0) {
      verify(flinkCollector).collect(tuple.get(0));
    }
 else {
      verify(flinkCollector).collect(flinkTuple);
    }
  }
}
