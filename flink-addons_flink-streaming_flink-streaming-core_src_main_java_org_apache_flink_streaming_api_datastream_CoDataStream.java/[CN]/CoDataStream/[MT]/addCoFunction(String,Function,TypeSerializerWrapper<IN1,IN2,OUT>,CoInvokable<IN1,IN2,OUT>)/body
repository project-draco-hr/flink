{
  @SuppressWarnings({"unchecked","rawtypes"}) SingleOutputStreamOperator<OUT,?> returnStream=new SingleOutputStreamOperator(environment,functionName);
  try {
    input1.jobGraphBuilder.addCoTask(returnStream.getId(),functionInvokable,typeWrapper,functionName,SerializationUtils.serialize((Serializable)function),environment.getDegreeOfParallelism());
  }
 catch (  SerializationException e) {
    throw new RuntimeException("Cannot serialize user defined function");
  }
  input1.connectGraph(input1,returnStream.getId(),1);
  input1.connectGraph(input2,returnStream.getId(),2);
  if ((input1.userDefinedName != null) && (input2.userDefinedName != null)) {
    throw new RuntimeException("An operator cannot have two names");
  }
 else {
    if (input1.userDefinedName != null) {
      returnStream.name(input1.getUserDefinedNames());
    }
    if (input2.userDefinedName != null) {
      returnStream.name(input2.getUserDefinedNames());
    }
  }
  return returnStream;
}
