{
  StreamRecord<Tuple2<Integer,String>> streamRecord=new StreamRecord<Tuple2<Integer,String>>();
  Tuple2<Integer,String> tuple=new Tuple2<Integer,String>(2,"a");
  streamRecord.setTuple(tuple).setId(1);
  TupleSerializer<Tuple2<Integer,String>> ts=(TupleSerializer<Tuple2<Integer,String>>)TypeExtractor.getForObject(tuple).createSerializer();
  SerializationDelegate<Tuple2<Integer,String>> sd=new SerializationDelegate<Tuple2<Integer,String>>(ts);
  streamRecord.setSeralizationDelegate(sd);
  DataOutputSerializer out=new DataOutputSerializer(64);
  streamRecord.write(out);
  ByteBuffer buff=out.wrapAsByteBuffer();
  DataInputDeserializer in=new DataInputDeserializer(buff);
  StreamRecord<Tuple2<Integer,String>> streamRecord2=new StreamRecord<Tuple2<Integer,String>>();
  streamRecord2.setDeseralizationDelegate(new DeserializationDelegate<Tuple2<Integer,String>>(ts),ts);
  streamRecord2.read(in);
  assertEquals(streamRecord.getTuple(),streamRecord2.getTuple());
}
