{
  DataStream<R> returnStream=new DataStream<R>(this,returnType);
  jobGraphBuilder.setTask(inputStream.getId(),new UserTaskInvokable(){
    private static final long serialVersionUID=1L;
    private StreamRecord outRecord=new ArrayStreamRecord(BATCH_SIZE);
    @Override public void invoke(    StreamRecord record) throws Exception {
      int batchSize=record.getBatchSize();
      for (int i=0; i < batchSize; i++) {
        T tuple=(T)record.getTuple(i);
        R resultTuple=mapper.map(tuple);
        outRecord.setTuple(i,(Tuple)resultTuple);
      }
    }
  }
);
  jobGraphBuilder.shuffleConnect(inputStream.getId(),returnStream.getId());
  return returnStream;
}
