{
  for (  Class<? extends Type> type : types)   this.handlers.put(type,(Handler)handler);
  Method[] methods=handler.getClass().getMethods();
  for (  Method method : methods)   if (method.getDeclaringClass() == handler.getClass()) {
    method.setAccessible(true);
    this.callbacks.put(handler.getClass(),method);
  }
  if (this.outputBase == null) {
    BoundType bounds=ReflectUtil.getBindingOfSuperclass(handler.getClass(),TypeHandler.class);
    this.outputBase=bounds.getParameters()[1].getType();
  }
}
