{
  int noSubTasks=(args.length > 0 ? Integer.parseInt(args[0]) : 1);
  String dataInput=(args.length > 1 ? args[1] : "");
  String output=(args.length > 2 ? args[2] : "");
  FileDataSource input=new FileDataSource(RecordInputFormat.class,dataInput,"Input");
  input.setParameter(RecordInputFormat.RECORD_DELIMITER,"\n");
  input.setParameter(RecordInputFormat.FIELD_DELIMITER_PARAMETER," ");
  input.setParameter(RecordInputFormat.NUM_FIELDS_PARAMETER,2);
  input.getParameters().setClass(RecordInputFormat.FIELD_PARSER_PARAMETER_PREFIX + 0,DecimalTextIntParser.class);
  input.setParameter(RecordInputFormat.TEXT_POSITION_PARAMETER_PREFIX + 0,0);
  input.getParameters().setClass(RecordInputFormat.FIELD_PARSER_PARAMETER_PREFIX + 1,DecimalTextIntParser.class);
  input.setParameter(RecordInputFormat.TEXT_POSITION_PARAMETER_PREFIX + 1,1);
  ReduceContract sorter=new ReduceContract(IdentityReducer.class,PactInteger.class,0,input,"Reducer");
  sorter.setGroupOrder(new Ordering(1,PactInteger.class,Order.ASCENDING));
  FileDataSink out=new FileDataSink(RecordOutputFormat.class,output,sorter,"Sorted Output");
  out.getParameters().setString(RecordOutputFormat.RECORD_DELIMITER_PARAMETER,"\n");
  out.getParameters().setString(RecordOutputFormat.FIELD_DELIMITER_PARAMETER," ");
  out.getParameters().setBoolean(RecordOutputFormat.LENIENT_PARSING,true);
  out.getParameters().setInteger(RecordOutputFormat.NUM_FIELDS_PARAMETER,2);
  out.getParameters().setClass(RecordOutputFormat.FIELD_TYPE_PARAMETER_PREFIX + 0,PactInteger.class);
  out.getParameters().setInteger(RecordOutputFormat.RECORD_POSITION_PARAMETER_PREFIX + 0,0);
  out.getParameters().setClass(RecordOutputFormat.FIELD_TYPE_PARAMETER_PREFIX + 1,PactInteger.class);
  out.getParameters().setInteger(RecordOutputFormat.RECORD_POSITION_PARAMETER_PREFIX + 1,1);
  Plan plan=new Plan(out,"SecondarySort Example");
  plan.setDefaultParallelism(noSubTasks);
  return plan;
}
