{
  int numSubTasks=(args.length > 0 ? Integer.parseInt(args[0]) : 1);
  String dataInput=(args.length > 1 ? args[1] : "");
  String output=(args.length > 2 ? args[2] : "");
  FileDataSource input=new FileDataSource(RecordInputFormat.class,dataInput,"Input");
  RecordInputFormat.configureRecordFormat(input).recordDelimiter('\n').fieldDelimiter(' ').field(DecimalTextIntParser.class,0).field(DecimalTextIntParser.class,1);
  ReduceContract sorter=new ReduceContract.Builder(IdentityReducer.class,PactInteger.class,0).input(input).name("Reducer").build();
  sorter.setGroupOrder(new Ordering(1,PactInteger.class,Order.ASCENDING));
  FileDataSink out=new FileDataSink(RecordOutputFormat.class,output,sorter,"Sorted Output");
  RecordOutputFormat.configureRecordFormat(out).recordDelimiter('\n').fieldDelimiter(' ').field(PactInteger.class,0).field(PactInteger.class,1);
  Plan plan=new Plan(out,"SecondarySort Example");
  plan.setDefaultParallelism(numSubTasks);
  return plan;
}
