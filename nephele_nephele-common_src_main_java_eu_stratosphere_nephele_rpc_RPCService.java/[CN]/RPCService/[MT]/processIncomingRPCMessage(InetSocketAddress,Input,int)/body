{
  final ThreadLocal<Kryo> threadLocalKryo=this.kryo;
  final Runnable runnable=new Runnable(){
    /** 
 * {@inheritDoc}
 */
    @Override public void run(){
      final Kryo kryo=threadLocalKryo.get();
      kryo.reset();
      final RPCEnvelope envelope=kryo.readObject(input,RPCEnvelope.class);
      final RPCMessage msg=envelope.getRPCMessage();
      if (fragmentationID != msg.getMessageID()) {
        Log.error("Received message with invalid fragmentation ID");
        return;
      }
      if (msg instanceof RPCRequest) {
        processIncomingRPCRequest(remoteSocketAddress,(RPCRequest)msg);
      }
 else       if (msg instanceof RPCResponse) {
        processIncomingRPCResponse((RPCResponse)msg);
      }
 else {
        processIncomingRPCCleanup(remoteSocketAddress,(RPCCleanup)msg);
      }
    }
  }
;
  this.rpcHandlers.execute(runnable);
}
