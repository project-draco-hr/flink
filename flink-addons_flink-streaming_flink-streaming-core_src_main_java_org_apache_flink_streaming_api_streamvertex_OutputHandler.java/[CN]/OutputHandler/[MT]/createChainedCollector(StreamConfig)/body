{
  boolean isDirectEmit=chainedTaskConfig.isDirectedEmit();
  CollectorWrapper<OUT> wrapper=isDirectEmit ? new DirectedCollectorWrapper(chainedTaskConfig.getOutputSelectors(cl)) : new CollectorWrapper<OUT>();
  for (  String output : chainedTaskConfig.getOutputs(cl)) {
    Collector<?> outCollector=outputMap.get(output);
    if (isDirectEmit) {
      ((DirectedCollectorWrapper<OUT>)wrapper).addCollector(outCollector,chainedTaskConfig.getSelectedNames(output));
    }
 else {
      wrapper.addCollector(outCollector);
    }
  }
  for (  String output : chainedTaskConfig.getChainedOutputs(cl)) {
    Collector<?> outCollector=createChainedCollector(chainedConfigs.get(output));
    if (isDirectEmit) {
      ((DirectedCollectorWrapper<OUT>)wrapper).addCollector(outCollector,chainedTaskConfig.getSelectedNames(output));
    }
 else {
      wrapper.addCollector(outCollector);
    }
  }
  if (chainedTaskConfig.isChainStart()) {
    return wrapper;
  }
 else {
    ChainableInvokable chainableInvokable=chainedTaskConfig.getUserInvokable(vertex.getUserCodeClassLoader());
    chainableInvokable.setup(wrapper,chainedTaskConfig.getTypeSerializerIn1(vertex.getUserCodeClassLoader()));
    chainedInvokables.add(chainableInvokable);
    return chainableInvokable;
  }
}
