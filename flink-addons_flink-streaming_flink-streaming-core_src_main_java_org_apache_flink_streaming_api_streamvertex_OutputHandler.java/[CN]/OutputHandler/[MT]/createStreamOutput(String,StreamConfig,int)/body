{
  StreamPartitioner<T> outputPartitioner=configuration.getPartitioner(cl,outputVertex);
  RecordWriter<SerializationDelegate<StreamRecord<T>>> output;
  if (configuration.getBufferTimeout() >= 0) {
    output=new StreamRecordWriter<SerializationDelegate<StreamRecord<T>>>(vertex.getEnvironment().getWriter(outputIndex),outputPartitioner,configuration.getBufferTimeout());
    if (LOG.isTraceEnabled()) {
      LOG.trace("StreamRecordWriter initiated with {} bufferTimeout for {}",configuration.getBufferTimeout(),vertex.getClass().getSimpleName());
    }
  }
 else {
    output=new RecordWriter<SerializationDelegate<StreamRecord<T>>>(vertex.getEnvironment().getWriter(outputIndex),outputPartitioner);
    if (LOG.isTraceEnabled()) {
      LOG.trace("RecordWriter initiated for {}",vertex.getClass().getSimpleName());
    }
  }
  StreamOutput<T> streamOutput=new StreamOutput<T>(output,configuration.isSelectAll(outputVertex) ? null : configuration.getOutputNames(outputVertex));
  if (LOG.isTraceEnabled()) {
    LOG.trace("Partitioner set: {} with {} outputs for {}",outputPartitioner.getClass().getSimpleName(),outputIndex,vertex.getClass().getSimpleName());
  }
  return streamOutput;
}
