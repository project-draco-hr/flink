{
  StreamPartitioner<OUT> outputPartitioner=null;
  try {
    outputPartitioner=configuration.getPartitioner(outputNumber);
  }
 catch (  Exception e) {
    throw new StreamVertexException("Cannot deserialize partitioner for " + streamVertex.getName() + " with "+ outputNumber+ " outputs",e);
  }
  RecordWriter<SerializationDelegate<StreamRecord<OUT>>> output;
  if (bufferTimeout >= 0) {
    output=new StreamRecordWriter<SerializationDelegate<StreamRecord<OUT>>>(streamVertex,outputPartitioner,bufferTimeout);
    if (LOG.isTraceEnabled()) {
      LOG.trace("StreamRecordWriter initiated with {} bufferTimeout for {}",bufferTimeout,streamVertex.getClass().getSimpleName());
    }
  }
 else {
    output=new RecordWriter<SerializationDelegate<StreamRecord<OUT>>>(streamVertex,outputPartitioner);
    if (LOG.isTraceEnabled()) {
      LOG.trace("RecordWriter initiated for {}",streamVertex.getClass().getSimpleName());
    }
  }
  outputs.add(output);
  List<String> outputName=configuration.getOutputName(outputNumber);
  boolean isSelectAllOutput=configuration.getSelectAll(outputNumber);
  if (collector != null) {
    collector.addOutput(output,outputName,isSelectAllOutput);
  }
  if (LOG.isTraceEnabled()) {
    LOG.trace("Partitioner set: {} with {} outputs for {}",outputPartitioner.getClass().getSimpleName(),outputNumber,streamVertex.getClass().getSimpleName());
  }
}
