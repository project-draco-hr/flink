{
  final int delimLimit=limit - delim.length + 1;
  int i=startPos;
  while (i < limit) {
    if (i < delimLimit && delimiterNext(bytes,i,delim)) {
      if (i == startPos) {
        setErrorState(ParseErrorState.EMPTY_COLUMN);
        return -1;
      }
      break;
    }
    i++;
  }
  for (  byte[] aTRUE : TRUE) {
    if (byteArrayEquals(bytes,startPos,i - startPos,aTRUE)) {
      result=true;
      return (i == limit) ? limit : i + delim.length;
    }
  }
  for (  byte[] aFALSE : FALSE) {
    if (byteArrayEquals(bytes,startPos,i - startPos,aFALSE)) {
      result=false;
      return (i == limit) ? limit : i + delim.length;
    }
  }
  setErrorState(ParseErrorState.BOOLEAN_INVALID);
  return -1;
}
