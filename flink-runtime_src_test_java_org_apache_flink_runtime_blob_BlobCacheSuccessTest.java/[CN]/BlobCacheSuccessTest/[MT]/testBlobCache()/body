{
  final byte[] buf=new byte[128];
  final List<BlobKey> blobKeys=new ArrayList<BlobKey>(2);
  BlobServer blobServer=null;
  BlobCache blobCache=null;
  try {
    blobServer=new BlobServer(new Configuration());
    final InetSocketAddress serverAddress=new InetSocketAddress(blobServer.getPort());
    BlobClient blobClient=null;
    try {
      blobClient=new BlobClient(serverAddress);
      blobKeys.add(blobClient.put(buf));
      buf[0]=1;
      blobKeys.add(blobClient.put(buf));
    }
  finally {
      if (blobClient != null) {
        blobClient.close();
      }
    }
    blobCache=new BlobCache(serverAddress,new Configuration());
    for (    BlobKey blobKey : blobKeys) {
      blobCache.getURL(blobKey);
    }
    blobServer.shutdown();
    blobServer=null;
    final URL[] urls=new URL[blobKeys.size()];
    for (int i=0; i < blobKeys.size(); i++) {
      urls[i]=blobCache.getURL(blobKeys.get(i));
    }
    assertEquals(blobKeys.size(),urls.length);
    for (    final URL url : urls) {
      assertNotNull(url);
      try {
        final File cachedFile=new File(url.toURI());
        assertTrue(cachedFile.exists());
        assertEquals(buf.length,cachedFile.length());
      }
 catch (      URISyntaxException e) {
        fail(e.getMessage());
      }
    }
  }
 catch (  Exception e) {
    e.printStackTrace();
    fail(e.getMessage());
  }
 finally {
    if (blobServer != null) {
      blobServer.shutdown();
    }
    if (blobCache != null) {
      blobCache.shutdown();
    }
  }
}
