{
  int globalMaxParallelism=42;
  int keyedResult2MaxParallelism=17;
  StreamExecutionEnvironment env=StreamExecutionEnvironment.getExecutionEnvironment();
  env.getConfig().setMaxParallelism(globalMaxParallelism);
  DataStream<Integer> source=env.fromElements(1,2,3);
  DataStream<Integer> keyedResult1=source.keyBy(new KeySelector<Integer,Integer>(){
    private static final long serialVersionUID=9205556348021992189L;
    @Override public Integer getKey(    Integer value) throws Exception {
      return value;
    }
  }
).map(new NoOpIntMap());
  DataStream<Integer> keyedResult2=keyedResult1.keyBy(new KeySelector<Integer,Integer>(){
    private static final long serialVersionUID=1250168178707154838L;
    @Override public Integer getKey(    Integer value) throws Exception {
      return value;
    }
  }
).map(new NoOpIntMap()).setMaxParallelism(keyedResult2MaxParallelism);
  keyedResult2.addSink(new DiscardingSink<Integer>());
  StreamGraph graph=env.getStreamGraph();
  StreamNode keyedResult1Node=graph.getStreamNode(keyedResult1.getId());
  StreamNode keyedResult2Node=graph.getStreamNode(keyedResult2.getId());
  assertEquals(globalMaxParallelism,keyedResult1Node.getMaxParallelism());
  assertEquals(keyedResult2MaxParallelism,keyedResult2Node.getMaxParallelism());
}
