{
  returnStatus=ReturnStatus.RETURN_NONE;
  matchStatus=MatchStatus.NONE_REMAINED;
  final Comparator<Key> keyComparator=new KeyComparator();
  @SuppressWarnings("unchecked") final Comparator<Key>[] comparators=(Comparator<Key>[])new Comparator[this.keyClasses.length];
  for (int i=0; i < comparators.length; i++) {
    comparators[i]=keyComparator;
  }
  if (this.localStrategy == LocalStrategy.SORT_BOTH_MERGE || this.localStrategy == LocalStrategy.SORT_FIRST_MERGE) {
    this.sortMerger1=new UnilateralSortMerger(this.memoryManager,this.ioManager,this.memoryPerChannel,this.fileHandlesPerChannel,comparators,this.firstKeyPositions,this.keyClasses,this.reader1,this.parentTask,this.spillingThreshold);
  }
  if (this.localStrategy == LocalStrategy.SORT_BOTH_MERGE || this.localStrategy == LocalStrategy.SORT_SECOND_MERGE) {
    this.sortMerger2=new UnilateralSortMerger(this.memoryManager,this.ioManager,this.memoryPerChannel,this.fileHandlesPerChannel,comparators,this.secondKeyPositions,this.keyClasses,this.reader2,this.parentTask,this.spillingThreshold);
  }
switch (this.localStrategy) {
case SORT_BOTH_MERGE:
    this.iterator1=new KeyGroupedIterator(sortMerger1.getIterator(),this.firstKeyPositions,this.keyClasses);
  this.iterator2=new KeyGroupedIterator(sortMerger2.getIterator(),this.secondKeyPositions,this.keyClasses);
break;
case SORT_FIRST_MERGE:
this.iterator1=new KeyGroupedIterator(sortMerger1.getIterator(),this.firstKeyPositions,this.keyClasses);
this.iterator2=new KeyGroupedIterator(reader2,this.secondKeyPositions,this.keyClasses);
break;
case SORT_SECOND_MERGE:
this.iterator1=new KeyGroupedIterator(reader1,this.firstKeyPositions,this.keyClasses);
this.iterator2=new KeyGroupedIterator(sortMerger2.getIterator(),this.secondKeyPositions,this.keyClasses);
break;
case MERGE:
this.iterator1=new KeyGroupedIterator(reader1,this.firstKeyPositions,this.keyClasses);
this.iterator2=new KeyGroupedIterator(reader2,this.secondKeyPositions,this.keyClasses);
break;
default :
throw new RuntimeException("Unsupported Local Strategy in SortMergeCoGroupIterator: " + this.localStrategy);
}
}
