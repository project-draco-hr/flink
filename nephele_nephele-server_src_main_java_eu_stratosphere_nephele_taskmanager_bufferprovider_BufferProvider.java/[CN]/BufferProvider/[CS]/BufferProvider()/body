{
  this.numberOfReadBuffers=GlobalConfiguration.getInteger("channel.network.numberOfReadBuffers",DEFAULT_NUMBER_OF_READ_BUFFERS);
  this.numberOfWriteBuffers=GlobalConfiguration.getInteger("channel.network.numberOfWriteBuffers",DEFAULT_NUMBER_OF_WRITE_BUFFERS);
  this.bufferSizeInBytes=GlobalConfiguration.getInteger("channel.network.bufferSizeInBytes",DEFAULT_BUFFER_SIZE_IN_BYTES);
  this.isSpillingAllowed=GlobalConfiguration.getBoolean("channel.network.allowSpilling",DEFAULT_ALLOW_SPILLING);
  for (int i=0; i < this.numberOfReadBuffers; i++) {
    final ByteBuffer readBuffer=ByteBuffer.allocateDirect(bufferSizeInBytes);
    this.emptyReadBuffers.add(readBuffer);
  }
  for (int i=0; i < this.numberOfWriteBuffers; i++) {
    final ByteBuffer writeBuffer=ByteBuffer.allocateDirect(bufferSizeInBytes);
    this.emptyWriteBuffers.add(writeBuffer);
  }
  this.fileBufferManager=FileBufferManager.getFileBufferManager();
  LOG.info("Initialized buffer provider with " + this.numberOfReadBuffers + " read buffers, "+ this.numberOfWriteBuffers+ " write buffers ("+ this.bufferSizeInBytes+ " bytes) and spilling "+ (this.isSpillingAllowed ? "activated" : "deactivated"));
}
