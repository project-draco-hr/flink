def parents(obj, objtype, depth=1, ignore=()):
    "Find the chain of referents for obj. Chain will end with obj.\n\n    objtype: an object type or tuple of types to search for\n    depth: search depth (e.g. depth=2 is 'grandparents')\n    ignore: an object or tuple of objects to ignore in the search\n    "
    edge_func = gc.get_referents
    predicate = (lambda x: isinstance(x, objtype))
    ignore = ((ignore,) if (not hasattr(ignore, '__len__')) else ignore)
    ignore = (id(obj) for obj in ignore)
    chain = find_chain(obj, predicate, edge_func, depth)[::(-1)]
    return chain
