def children(obj, objtype, depth=1, ignore=()):
    "Find the chain of referrers for obj. Chain will start with obj.\n\n    objtype: an object type or tuple of types to search for\n    depth: search depth (e.g. depth=2 is 'grandchildren')\n    ignore: an object or tuple of objects to ignore in the search\n\n    NOTE: a common thing to ignore is all globals, 'ignore=(globals(),)'\n\n    NOTE: repeated calls may yield different results, as python stores\n    the last value in the special variable '_'; thus, it is often good\n    to execute something to replace '_' (e.g. >>> 1+1).\n    "
    edge_func = gc.get_referrers
    predicate = (lambda x: isinstance(x, objtype))
    ignore = ((ignore,) if (not hasattr(ignore, '__len__')) else ignore)
    ignore = (id(obj) for obj in ignore)
    chain = find_chain(obj, predicate, edge_func, depth, ignore)
    return chain
