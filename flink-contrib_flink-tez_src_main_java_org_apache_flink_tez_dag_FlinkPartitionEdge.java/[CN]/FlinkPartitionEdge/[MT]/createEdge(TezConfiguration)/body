{
  Map<String,String> serializerMap=new HashMap<String,String>();
  serializerMap.put("io.flink.typeserializer",EncodingUtils.encodeObjectToString(this.typeSerializer));
  try {
    UnorderedPartitionedKVEdgeConfig edgeConfig=(UnorderedPartitionedKVEdgeConfig.newBuilder(IntWritable.class.getName(),typeSerializer.createInstance().getClass().getName(),SimplePartitioner.class.getName()).setFromConfiguration(tezConf).setKeySerializationClass(WritableSerialization.class.getName(),null).setValueSerializationClass(FlinkSerialization.class.getName(),serializerMap).configureInput().setAdditionalConfiguration("io.flink.typeserializer",EncodingUtils.encodeObjectToString(this.typeSerializer))).done().build();
    EdgeProperty property=edgeConfig.createDefaultEdgeProperty();
    this.cached=Edge.create(source.getVertex(),target.getVertex(),property);
    return cached;
  }
 catch (  Exception e) {
    throw new CompilerException("An error occurred while creating a Tez Shuffle Edge: " + e.getMessage(),e);
  }
}
