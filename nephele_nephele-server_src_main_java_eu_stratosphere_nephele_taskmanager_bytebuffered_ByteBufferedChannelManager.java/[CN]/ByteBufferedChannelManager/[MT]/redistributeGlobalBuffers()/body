{
  final int numberOfChannelsForMulticast=10;
  final int totalNumberOfBuffers=GlobalBufferPool.getInstance().getTotalNumberOfBuffers();
  int totalNumberOfChannels=this.registeredChannels.size();
  if (this.multicastEnabled) {
    totalNumberOfChannels+=numberOfChannelsForMulticast;
  }
  System.out.println("Total number of buffers: " + totalNumberOfBuffers);
  System.out.println("Total number of channels: " + totalNumberOfChannels);
  final double buffersPerChannel=(double)totalNumberOfBuffers / (double)totalNumberOfChannels;
  if (buffersPerChannel < 1.0) {
    LOG.warn("System is low on memory buffers. This may result in reduced performance.");
  }
  if (LOG.isDebugEnabled()) {
    LOG.debug("Total number of buffers is " + totalNumberOfBuffers);
    LOG.debug("Total number of channels is " + totalNumberOfChannels);
  }
  if (this.localBufferPoolOwner.isEmpty()) {
    return;
  }
  final Iterator<LocalBufferPoolOwner> it=this.localBufferPoolOwner.values().iterator();
  while (it.hasNext()) {
    final LocalBufferPoolOwner lbpo=it.next();
    final int buffersForLocalOwner=(int)Math.ceil(buffersPerChannel * lbpo.getNumberOfChannels());
    System.out.println("Buffers for " + lbpo + ": "+ buffersForLocalOwner);
    lbpo.setDesignatedNumberOfBuffers(buffersForLocalOwner);
  }
  if (this.multicastEnabled) {
    final int buffersForMulticast=(int)Math.ceil(buffersPerChannel * numberOfChannelsForMulticast);
    System.out.println("Assigning " + buffersForMulticast + " for multicast manager");
    this.transitBufferPool.setDesignatedNumberOfBuffers(buffersForMulticast);
  }
}
