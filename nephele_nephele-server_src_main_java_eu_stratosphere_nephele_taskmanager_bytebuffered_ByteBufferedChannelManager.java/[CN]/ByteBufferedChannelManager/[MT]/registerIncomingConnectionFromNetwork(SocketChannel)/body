{
  final InetSocketAddress remoteInetSocketAddress=(InetSocketAddress)socketChannel.socket().getRemoteSocketAddress();
  final IncomingConnection incomingConnection=new IncomingConnection(this,socketChannel,false);
synchronized (this.incomingConnections) {
    final IncomingConnection previousConnection=this.incomingConnections.get(remoteInetSocketAddress.getAddress());
    incomingConnection.setPreviousConnection(previousConnection);
    if (previousConnection == null) {
      Integer sequenceNumberToExpectNext=this.sequenceToNumbersToExpectNext.get(remoteInetSocketAddress.getAddress());
      if (sequenceNumberToExpectNext == null) {
        incomingConnection.setSequenceNumberToExpectNext(0);
      }
 else {
        incomingConnection.setSequenceNumberToExpectNext(sequenceNumberToExpectNext.intValue());
      }
    }
 else {
      incomingConnection.setSequenceNumberToExpectNext(previousConnection.getSequenceNumberToExpectNext());
    }
    this.incomingConnections.put(remoteInetSocketAddress.getAddress(),incomingConnection);
  }
  getIncomingConnectionThread().addToPendingIncomingConnections(incomingConnection);
}
