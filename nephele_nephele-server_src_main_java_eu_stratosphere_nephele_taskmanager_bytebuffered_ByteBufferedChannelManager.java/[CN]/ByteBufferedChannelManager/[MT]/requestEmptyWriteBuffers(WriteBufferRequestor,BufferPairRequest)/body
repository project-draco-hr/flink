{
synchronized (this.emptyWriteBuffers) {
    while (this.emptyWriteBuffers.size() < bufferPairRequest.getNumberOfRequestedByteBuffers()) {
      requestor.outOfWriteBuffers();
synchronized (this.registeredOutOfWriteBuffersListeners) {
        if (!this.registeredOutOfWriteBuffersListeners.isEmpty()) {
          final Iterator<OutOfByteBuffersListener> it=this.registeredOutOfWriteBuffersListeners.iterator();
          while (it.hasNext()) {
            it.next().outOfByteBuffers();
          }
          this.logBufferUtilization();
        }
      }
      if (this.emptyWriteBuffers.size() >= bufferPairRequest.getNumberOfRequestedByteBuffers()) {
        break;
      }
      this.emptyWriteBuffers.wait();
    }
    Buffer compressedDataBuffer=null;
    Buffer uncompressedDataBuffer=null;
    if (bufferPairRequest.getCompressedDataBufferSize() >= 0) {
      compressedDataBuffer=BufferFactory.createFromMemory(bufferPairRequest.getCompressedDataBufferSize(),this.emptyWriteBuffers.poll(),this.emptyWriteBuffers);
    }
    if (bufferPairRequest.getUncompressedDataBufferSize() >= 0) {
      uncompressedDataBuffer=BufferFactory.createFromMemory(bufferPairRequest.getUncompressedDataBufferSize(),this.emptyWriteBuffers.poll(),this.emptyWriteBuffers);
    }
    return new BufferPairResponse(compressedDataBuffer,uncompressedDataBuffer);
  }
}
