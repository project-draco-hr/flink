{
  final ChannelID targetID=transferEnvelope.getTarget();
  ByteBufferedChannelWrapper targetChannelWrapper=null;
  if (targetID == null) {
    throw new IOException("Cannot process incoming transfer envelope: target channel ID is null!");
  }
synchronized (this.registeredChannels) {
    targetChannelWrapper=this.registeredChannels.get(targetID);
  }
  if (targetChannelWrapper == null) {
    if (transferEnvelope.getBuffer() != null) {
      transferEnvelope.getBuffer().recycleBuffer();
    }
    if (this.canceledChannelSet.contains(transferEnvelope.getSource())) {
      return;
    }
 else {
      throw new IOException("Cannot find target channel to ID " + targetID + " to process incoming transfer envelope");
    }
  }
  if (targetChannelWrapper.isInputChannel()) {
    final ByteBufferedInputChannelWrapper networkInputChannelWrapper=(ByteBufferedInputChannelWrapper)targetChannelWrapper;
    networkInputChannelWrapper.queueIncomingTransferEnvelope(transferEnvelope);
  }
 else {
    final ByteBufferedOutputChannelWrapper networkOutputChannelWrapper=(ByteBufferedOutputChannelWrapper)targetChannelWrapper;
    if (transferEnvelope.getBuffer() != null) {
      LOG.error("Incoming transfer envelope for network output channel " + targetChannelWrapper.getChannelID() + " has a buffer attached");
    }
    final EventList eventList=transferEnvelope.getEventList();
    final Iterator<AbstractEvent> iterator=eventList.iterator();
    while (iterator.hasNext()) {
      networkOutputChannelWrapper.processEvent(iterator.next());
    }
  }
}
