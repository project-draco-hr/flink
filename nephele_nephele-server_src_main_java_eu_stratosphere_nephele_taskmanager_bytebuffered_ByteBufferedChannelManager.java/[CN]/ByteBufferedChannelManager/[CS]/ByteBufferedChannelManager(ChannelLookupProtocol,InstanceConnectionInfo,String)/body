{
  final Configuration configuration=GlobalConfiguration.getConfiguration();
  this.fileBufferManager=new FileBufferManager(tmpDir);
  this.numberOfReadBuffers=configuration.getInteger("channel.network.numberOfReadBuffers",DEFAULT_NUMBER_OF_READ_BUFFERS);
  this.numberOfWriteBuffers=configuration.getInteger("channel.network.numberOfWriteBuffers",DEFAULT_NUMBER_OF_WRITE_BUFFERS);
  this.bufferSizeInBytes=configuration.getInteger("channel.network.bufferSizeInBytes",DEFAULT_BUFFER_SIZE_IN_BYTES);
  this.channelLookupService=channelLookupService;
  this.localConnectionInfo=localInstanceConnectionInfo;
  final int numberOfOutgoingConnectionThreads=configuration.getInteger("channel.network.numberOfOutgoingConnectionThreads",DEFAULT_NUMBER_OF_OUTGOING_CONNECTION_THREADS);
synchronized (this.outgoingConnectionThreads) {
    for (int i=0; i < numberOfOutgoingConnectionThreads; i++) {
      final OutgoingConnectionThread outgoingConnectionThread=new OutgoingConnectionThread();
      outgoingConnectionThread.start();
      this.outgoingConnectionThreads.add(outgoingConnectionThread);
    }
  }
  final int numberOfIncomingConnectionThreads=configuration.getInteger("channel.network.numgerOfIncomingConnectionThreads",DEFAULT_NUMBER_OF_INCOMING_CONNECTION_THREADS);
synchronized (this.incomingConnectionThreads) {
    for (int i=0; i < numberOfIncomingConnectionThreads; i++) {
      final IncomingConnectionThread incomingConnectionThread=new IncomingConnectionThread(this,(i == 0),new InetSocketAddress(localInstanceConnectionInfo.getAddress(),localInstanceConnectionInfo.getDataPort()));
      incomingConnectionThread.start();
      this.incomingConnectionThreads.add(incomingConnectionThread);
    }
  }
  this.numberOfConnectionRetries=configuration.getInteger("channel.network.numberOfConnectionRetries",DEFAULT_NUMBER_OF_CONNECTION_RETRIES);
  this.isSpillingAllowed=configuration.getBoolean("channel.network.allowSpilling",DEFAULT_ALLOW_SPILLING);
  LOG.info("Starting NetworkChannelManager with Spilling " + (this.isSpillingAllowed ? "activated" : "deactivated"));
  for (int i=0; i < numberOfReadBuffers; i++) {
    final ByteBuffer readBuffer=ByteBuffer.allocateDirect(bufferSizeInBytes);
    this.emptyReadBuffers.add(readBuffer);
  }
  for (int i=0; i < numberOfWriteBuffers; i++) {
    final ByteBuffer writeBuffer=ByteBuffer.allocateDirect(bufferSizeInBytes);
    this.emptyWriteBuffers.add(writeBuffer);
  }
  this.minimumQueueLengthForThrottling=configuration.getInteger("channel.network.minimumQueueLengthForThrottling",6);
  this.maximumQueueLengthForThrottling=configuration.getInteger("channel.network.maximumQueueLengthForThrottling",13);
}
