{
  this.channelLookupService=channelLookupService;
  this.localConnectionInfo=localInstanceConnectionInfo;
  FileBufferManager.getInstance();
  GlobalBufferPool.getInstance();
  this.transitBufferPool=new LocalBufferPool(128,true);
  this.networkConnectionManager=new NetworkConnectionManager(this,localInstanceConnectionInfo.getAddress(),localInstanceConnectionInfo.getDataPort());
  this.allowSenderSideSpilling=GlobalConfiguration.getBoolean("channel.network.allowSenderSideSpilling",DEFAULT_ALLOW_SENDER_SIDE_SPILLING);
  this.mergeSpilledBuffers=GlobalConfiguration.getBoolean("channel.network.mergeSpilledBuffers",DEFAULT_MERGE_SPILLED_BUFFERS);
  String logDir=System.getProperty("log.file");
  if (logDir != null) {
    final int pos=logDir.lastIndexOf(File.separatorChar);
    if (pos < 0) {
      throw new RuntimeException("Cannot parse log dir " + logDir);
    }
    logDir=logDir.substring(0,pos);
  }
 else {
    logDir=GlobalConfiguration.getString(ConfigConstants.TASK_MANAGER_TMP_DIR_KEY,"/tmp/");
  }
  this.bufferedWriter=new BufferedWriter(new FileWriter(logDir + File.separator + "multicast_"+ localInstanceConnectionInfo.getHostName()));
  LOG.info("Initialized byte buffered channel manager with sender-side spilling " + (this.allowSenderSideSpilling ? "enabled" : "disabled") + (this.mergeSpilledBuffers ? " and spilled buffer merging enabled" : ""));
}
