{
  resultPath=new String[]{getTempDirPath("result0"),getTempDirPath("result1")};
  File sequenceFile=createAndRegisterTempFile("seqFile");
  sequenceFileInPath=sequenceFile.toURI().toString();
  org.apache.hadoop.conf.Configuration conf=new org.apache.hadoop.conf.Configuration();
  FileSystem fs=FileSystem.get(URI.create(sequenceFile.getAbsolutePath()),conf);
  Path path=new Path(sequenceFile.getAbsolutePath());
  int kvCount=4;
  LongWritable key=new LongWritable();
  Text value=new Text();
  SequenceFile.Writer writer=null;
  try {
    writer=SequenceFile.createWriter(fs,conf,path,key.getClass(),value.getClass());
    for (int i=0; i < kvCount; i++) {
      if (i == 1) {
        for (int a=0; a < 15; a++) {
          key.set(i);
          value.set(i + " - somestring");
          writer.append(key,value);
        }
      }
      key.set(i);
      value.set(i + " - somestring");
      writer.append(key,value);
    }
  }
  finally {
    IOUtils.closeStream(writer);
  }
  File sequenceFileNull=createAndRegisterTempFile("seqFileNullKey");
  sequenceFileInPathNull=sequenceFileNull.toURI().toString();
  path=new Path(sequenceFileInPathNull);
  LongWritable value1=new LongWritable();
  SequenceFile.Writer writer1=null;
  try {
    writer1=SequenceFile.createWriter(fs,conf,path,NullWritable.class,value1.getClass());
    for (int i=0; i < kvCount; i++) {
      value1.set(i);
      writer1.append(NullWritable.get(),value1);
    }
  }
  finally {
    IOUtils.closeStream(writer1);
  }
}
