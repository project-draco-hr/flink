{
  int totalLongestPath=0;
  int[] longestPath=new int[getNumberOfChildren()];
  for (int i=0; i < getNumberOfChildren(); i++) {
    AbstractSWTComponent child=getChildAt(i);
    if (child instanceof AbstractSWTVertex) {
      AbstractSWTVertex childVertex=(AbstractSWTVertex)child;
      longestPath[i]=1 + childVertex.getLongestPathAmongChildren();
    }
 else {
      longestPath[i]=1;
    }
    totalLongestPath+=longestPath[i];
  }
  if (totalLongestPath == 0) {
    return;
  }
  int heightPerPathSegment=getHeight() / totalLongestPath;
  AbstractSWTComponent last=null;
  final int width=getWidth() - (2 * SPACING);
  final int x=getX() + SPACING;
  for (int i=0; i < getNumberOfChildren(); i++) {
    AbstractSWTComponent child=getChildAt(i);
    child.setX(x);
    child.setWidth(width);
    final int height=(heightPerPathSegment * longestPath[i]) - (2 * SPACING);
    child.setHeight(height);
    if (last == null) {
      child.setY(getY() + getHeight() - child.getHeight() - SPACING);
    }
 else {
      child.setY(last.getY() - child.getHeight() - (SPACING * 2));
    }
    last=child;
  }
  layoutChildren();
}
