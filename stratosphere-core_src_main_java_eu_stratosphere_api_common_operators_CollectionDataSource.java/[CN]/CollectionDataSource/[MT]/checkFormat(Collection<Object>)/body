{
  String type=null;
  List<String> typeList=new ArrayList<String>();
  Iterator<Object> it=c.iterator();
  while (it.hasNext()) {
    Object o=it.next();
    if (type != null && !type.equals(o.getClass().getName())) {
      throw new RuntimeException("elements of input list should have the same type");
    }
 else {
      type=o.getClass().getName();
    }
    if (typeList.size() == 0 && o.getClass().isArray()) {
      for (      Object s : (Object[])o) {
        typeList.add(s.getClass().getName());
      }
    }
 else     if (o.getClass().isArray()) {
      int index=0;
      if (((Object[])o).length != typeList.size()) {
        throw new RuntimeException("elements of input list should have the same size");
      }
      for (      Object s : (Object[])o)       if (!s.getClass().getName().equals(typeList.get(index++))) {
        throw new RuntimeException("elements of input list should have the same type");
      }
    }
    if (typeList.size() == 0 && o instanceof Collection) {
      @SuppressWarnings("unchecked") Iterator<Object> tmpIt=((Collection<Object>)o).iterator();
      while (tmpIt.hasNext()) {
        Object s=tmpIt.next();
        typeList.add(s.getClass().getName());
      }
    }
 else     if (o instanceof Collection) {
      int index=0;
      @SuppressWarnings("unchecked") Iterator<Object> tmpIt=((Collection<Object>)o).iterator();
      while (tmpIt.hasNext()) {
        Object s=tmpIt.next();
        if (!s.getClass().getName().equals(typeList.get(index++))) {
          throw new RuntimeException("elements of input list should have the same type");
        }
      }
      if (index != typeList.size()) {
        throw new RuntimeException("elements of input list should have the same size");
      }
    }
  }
}
