{
  final URI parentUri=parent.toUri();
  if (extension.isEmpty()) {
    return parent;
  }
  final String path=parentUri.getPath();
  String extendedPath;
  if (path.isEmpty()) {
    if (extension.charAt(0) == Path.SEPARATOR_CHAR) {
      extendedPath=extension;
    }
 else {
      extendedPath=Path.SEPARATOR + extension;
    }
  }
 else {
    if (path.charAt(path.length() - 1) == Path.SEPARATOR_CHAR) {
      if (extension.charAt(0) == Path.SEPARATOR_CHAR) {
        if (extension.length() > 1) {
          extendedPath=path + extension.substring(1);
        }
 else {
          extendedPath=path;
        }
      }
 else {
        extendedPath=path + extension;
      }
    }
 else {
      if (extension.charAt(0) == Path.SEPARATOR_CHAR) {
        extendedPath=path + extension;
      }
 else {
        extendedPath=path + Path.SEPARATOR + extension;
      }
    }
  }
  try {
    final URI extendedUri=new URI(parentUri.getScheme(),((parentUri.getAuthority() != null) ? parentUri.getAuthority() : ""),extendedPath,parentUri.getQuery(),parentUri.getFragment());
    return new Path(extendedUri);
  }
 catch (  URISyntaxException e) {
    throw new IOException(StringUtils.stringifyException(e));
  }
}
