{
  int keyCnt1=10;
  int valCnt1=1;
  int keyCnt2=0;
  int valCnt2=0;
  final int expCnt=keyCnt1 * valCnt1 * keyCnt2* valCnt2;
  setOutput(this.output);
  addInput(new UniformPactRecordGenerator(keyCnt1,valCnt1,false));
  addInput(new UniformPactRecordGenerator(keyCnt2,valCnt2,false));
  getTaskConfig().setDriverStrategy(DriverStrategy.NESTEDLOOP_STREAMED_OUTER_FIRST);
  getTaskConfig().setMemoryDriver(CROSS_MEM);
  final CrossDriver<PactRecord,PactRecord,PactRecord> testTask=new CrossDriver<PactRecord,PactRecord,PactRecord>();
  try {
    testDriver(testTask,MockCrossStub.class);
  }
 catch (  Exception e) {
    e.printStackTrace();
    Assert.fail("Test failed due to an exception.");
  }
  Assert.assertEquals("Wrong result size.",expCnt,this.output.getNumberOfRecords());
}
