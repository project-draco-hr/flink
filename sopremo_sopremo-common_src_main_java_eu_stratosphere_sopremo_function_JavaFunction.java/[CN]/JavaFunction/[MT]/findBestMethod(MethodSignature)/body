{
  Method method=this.cachedSignatures.get(signature);
  if (method != null)   return method;
  int minDistance=MethodSignature.INCOMPATIBLE;
  boolean ambiguous=false;
  MethodSignature bestSignatureSoFar=null;
  for (  Entry<MethodSignature,Method> originalSignature : this.originalSignatures.entrySet()) {
    int distance=originalSignature.getKey().getDistance(signature);
    if (distance < minDistance) {
      minDistance=distance;
      bestSignatureSoFar=originalSignature.getKey();
      ambiguous=false;
    }
 else     if (distance == minDistance)     ambiguous=true;
  }
  if (minDistance == MethodSignature.INCOMPATIBLE)   return null;
  if (ambiguous && LOG.isWarnEnabled())   this.warnForAmbiguity(signature,minDistance);
  method=minDistance == MethodSignature.INCOMPATIBLE ? null : this.originalSignatures.get(bestSignatureSoFar);
  this.cachedSignatures.put(bestSignatureSoFar,method);
  return method;
}
