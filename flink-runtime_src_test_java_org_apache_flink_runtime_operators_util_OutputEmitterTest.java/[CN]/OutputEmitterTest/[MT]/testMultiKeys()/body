{
  @SuppressWarnings({"unchecked","rawtypes"}) final TypeComparator<Record> multiComp=new RecordComparatorFactory(new int[]{0,1,3},new Class[]{IntValue.class,StringValue.class,DoubleValue.class}).createComparator();
  final ChannelSelector<SerializationDelegate<Record>> oe1=new OutputEmitter<Record>(ShipStrategyType.PARTITION_HASH,multiComp);
  final SerializationDelegate<Record> delegate=new SerializationDelegate<Record>(new RecordSerializerFactory().getSerializer());
  int numChannels=100;
  int numRecords=5000;
  int[] hit=new int[numChannels];
  for (int i=0; i < numRecords; i++) {
    Record rec=new Record(4);
    rec.setField(0,new IntValue(i));
    rec.setField(1,new StringValue("AB" + i + "CD"+ i));
    rec.setField(3,new DoubleValue(i * 3.141d));
    delegate.setInstance(rec);
    int[] chans=oe1.selectChannels(delegate,hit.length);
    for (    int chan : chans) {
      hit[chan]++;
    }
  }
  int cnt=0;
  for (  int aHit : hit) {
    assertTrue(aHit > 0);
    cnt+=aHit;
  }
  assertTrue(cnt == numRecords);
}
