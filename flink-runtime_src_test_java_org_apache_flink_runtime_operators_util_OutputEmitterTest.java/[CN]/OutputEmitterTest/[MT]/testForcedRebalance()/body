{
  int numChannels=100;
  int toTaskIndex=numChannels * 6 / 7;
  int fromTaskIndex=toTaskIndex + numChannels;
  int extraRecords=numChannels / 3;
  int numRecords=50000 + extraRecords;
  final ChannelSelector<SerializationDelegate<Record>> oe1=new OutputEmitter<Record>(ShipStrategyType.PARTITION_FORCED_REBALANCE,fromTaskIndex);
  final SerializationDelegate<Record> delegate=new SerializationDelegate<Record>(new RecordSerializerFactory().getSerializer());
  int[] hit=new int[numChannels];
  for (int i=0; i < numRecords; i++) {
    IntValue k=new IntValue(i);
    Record rec=new Record(k);
    delegate.setInstance(rec);
    int[] chans=oe1.selectChannels(delegate,hit.length);
    for (    int chan : chans) {
      hit[chan]++;
    }
  }
  int cnt=0;
  for (int i=0; i < hit.length; i++) {
    if (toTaskIndex <= i || i < toTaskIndex + extraRecords - numChannels) {
      assertTrue(hit[i] == (numRecords / numChannels) + 1);
    }
 else {
      assertTrue(hit[i] == numRecords / numChannels);
    }
    cnt+=hit[i];
  }
  assertTrue(cnt == numRecords);
  numChannels=100;
  toTaskIndex=numChannels / 5;
  fromTaskIndex=toTaskIndex + 2 * numChannels;
  extraRecords=numChannels * 2 / 9;
  numRecords=10000 + extraRecords;
  final ChannelSelector<SerializationDelegate<Record>> oe2=new OutputEmitter<Record>(ShipStrategyType.PARTITION_FORCED_REBALANCE,fromTaskIndex);
  hit=new int[numChannels];
  for (int i=0; i < numRecords; i++) {
    StringValue k=new StringValue(i + "");
    Record rec=new Record(k);
    delegate.setInstance(rec);
    int[] chans=oe2.selectChannels(delegate,hit.length);
    for (    int chan : chans) {
      hit[chan]++;
    }
  }
  cnt=0;
  for (int i=0; i < hit.length; i++) {
    if (toTaskIndex <= i && i < toTaskIndex + extraRecords) {
      assertTrue(hit[i] == (numRecords / numChannels) + 1);
    }
 else {
      assertTrue(hit[i] == numRecords / numChannels);
    }
    cnt+=hit[i];
  }
  assertTrue(cnt == numRecords);
}
