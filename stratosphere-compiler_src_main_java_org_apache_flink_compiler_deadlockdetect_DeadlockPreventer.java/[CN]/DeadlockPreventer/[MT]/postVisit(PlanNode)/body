{
  if (visitable instanceof SingleInputPlanNode) {
    SingleInputPlanNode n=(SingleInputPlanNode)visitable;
    if (n.getDriverStrategy().firstDam().equals(DamBehavior.FULL_DAM) || n.getInput().getLocalStrategy().dams() || n.getInput().getTempMode().breaksPipeline()) {
      g.addEdge(n,n.getPredecessor());
    }
 else {
      g.addEdge(n.getPredecessor(),n);
    }
  }
 else   if (visitable instanceof DualInputPlanNode) {
    DualInputPlanNode n=(DualInputPlanNode)visitable;
    if (n.getDriverStrategy().firstDam().equals(DamBehavior.FULL_DAM) || n.getInput1().getLocalStrategy().dams() || n.getInput1().getTempMode().breaksPipeline()) {
      g.addEdge(n,n.getInput1().getSource());
    }
 else {
      g.addEdge(n.getInput1().getSource(),n);
    }
    if (!n.getDriverStrategy().equals(DriverStrategy.NONE) && (n.getDriverStrategy().secondDam().equals(DamBehavior.FULL_DAM) || n.getInput2().getLocalStrategy().dams() || n.getInput2().getTempMode().breaksPipeline())) {
      g.addEdge(n,n.getInput2().getSource());
    }
 else {
      g.addEdge(n.getInput2().getSource(),n);
    }
  }
  if (visitable instanceof BulkIterationPlanNode) {
    DeadlockPreventer dp=new DeadlockPreventer();
    List<PlanNode> planSinks=new ArrayList<PlanNode>(1);
    BulkIterationPlanNode pspn=(BulkIterationPlanNode)visitable;
    planSinks.add(pspn.getRootOfStepFunction());
    dp.resolveDeadlocks(planSinks);
  }
 else   if (visitable instanceof WorksetIterationPlanNode) {
    DeadlockPreventer dp=new DeadlockPreventer();
    List<PlanNode> planSinks=new ArrayList<PlanNode>(2);
    WorksetIterationPlanNode pspn=(WorksetIterationPlanNode)visitable;
    planSinks.add(pspn.getSolutionSetDeltaPlanNode());
    planSinks.add(pspn.getNextWorkSetPlanNode());
    dp.resolveDeadlocks(planSinks);
  }
}
