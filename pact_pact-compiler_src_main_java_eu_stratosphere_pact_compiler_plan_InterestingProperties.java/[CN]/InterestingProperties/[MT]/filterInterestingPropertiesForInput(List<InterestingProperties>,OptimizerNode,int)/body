{
  List<InterestingProperties> preserved=null;
  for (  InterestingProperties p : props) {
    final InterestingProperties filteredProps=p.filterByCodeAnnotations(node,input);
    if (filteredProps == null) {
      continue;
    }
    final GlobalProperties topDownAdjustedGP=filteredProps.globalProps.createInterestingGlobalPropertiesTopDownSubset(node,input);
    if (topDownAdjustedGP == null && filteredProps.localProps.isTrivial())     continue;
    if (preserved == null) {
      preserved=new ArrayList<InterestingProperties>();
    }
    final InterestingProperties toAdd=topDownAdjustedGP == filteredProps.getGlobalProperties() ? filteredProps : new InterestingProperties(filteredProps.getMaximalCosts(),topDownAdjustedGP,filteredProps.localProps);
    mergeUnionOfInterestingProperties(preserved,toAdd);
  }
  return preserved;
}
