{
  if (type.isAssignableFrom(BooleanValue.class)) {
    return (TypeComparator<T>)new ValueComparator<BooleanValue>(sortOrderAscending,(Class<BooleanValue>)type);
  }
 else   if (type.isAssignableFrom(ByteValue.class)) {
    return (TypeComparator<T>)new ValueComparator<ByteValue>(sortOrderAscending,(Class<ByteValue>)type);
  }
 else   if (type.isAssignableFrom(CharValue.class)) {
    return (TypeComparator<T>)new ValueComparator<CharValue>(sortOrderAscending,(Class<CharValue>)type);
  }
 else   if (type.isAssignableFrom(IntValue.class)) {
    return (TypeComparator<T>)new ValueComparator<IntValue>(sortOrderAscending,(Class<IntValue>)type);
  }
 else   if (type.isAssignableFrom(LongValue.class)) {
    return (TypeComparator<T>)new ValueComparator<LongValue>(sortOrderAscending,(Class<LongValue>)type);
  }
 else   if (type.isAssignableFrom(NullValue.class)) {
    return (TypeComparator<T>)new ValueComparator<NullValue>(sortOrderAscending,(Class<NullValue>)type);
  }
 else   if (type.isAssignableFrom(ShortValue.class)) {
    return (TypeComparator<T>)new ValueComparator<ShortValue>(sortOrderAscending,(Class<ShortValue>)type);
  }
 else   if (type.isAssignableFrom(StringValue.class)) {
    return (TypeComparator<T>)new ValueComparator<StringValue>(sortOrderAscending,(Class<StringValue>)type);
  }
 else   if (type.isAssignableFrom(DoubleValue.class)) {
    return (TypeComparator<T>)new ValueComparator<DoubleValue>(sortOrderAscending,(Class<DoubleValue>)type);
  }
 else   if (type.isAssignableFrom(FloatValue.class)) {
    return (TypeComparator<T>)new ValueComparator<FloatValue>(sortOrderAscending,(Class<FloatValue>)type);
  }
 else {
    throw new UnsupportedOperationException("Cannot create a comparator for a value type that is not a subtype of Key.");
  }
}
