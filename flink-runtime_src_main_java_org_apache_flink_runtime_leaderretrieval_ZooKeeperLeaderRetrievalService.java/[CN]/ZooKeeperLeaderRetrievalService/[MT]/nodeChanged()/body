{
  try {
    ChildData childData=cache.getCurrentData();
    String leaderAddress;
    UUID leaderSessionID;
    if (childData == null) {
      leaderAddress=null;
      leaderSessionID=null;
    }
 else {
      byte[] data=childData.getData();
      if (data == null || data.length == 0) {
        leaderAddress=null;
        leaderSessionID=null;
      }
 else {
        ByteArrayInputStream bais=new ByteArrayInputStream(data);
        ObjectInputStream ois=new ObjectInputStream(bais);
        leaderAddress=ois.readUTF();
        leaderSessionID=(UUID)ois.readObject();
      }
    }
    if (!(Objects.equals(leaderAddress,lastLeaderAddress) && Objects.equals(leaderSessionID,lastLeaderSessionID))) {
      lastLeaderAddress=leaderAddress;
      lastLeaderSessionID=leaderSessionID;
      leaderListener.notifyLeaderAddress(leaderAddress,leaderSessionID);
    }
  }
 catch (  Exception e) {
    leaderListener.handleError(new Exception("Could not handle node changed event.",e));
    throw e;
  }
}
