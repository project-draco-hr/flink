{
  if (this.isEmpty())   return Collections.EMPTY_LIST.iterator();
  if (this.file != null)   try {
    FSDataInputStream stream=FileSystem.get(new URI(this.file)).open(new Path(this.file));
    final JsonParser parser=new JsonParser(stream);
    return new AbstractIterator<IJsonNode>(){
      @Override protected IJsonNode loadNext(){
        if (parser.checkEnd())         return this.noMoreElements();
        try {
          return parser.readValueAsTree();
        }
 catch (        IOException e) {
          throw new IllegalStateException(String.format("Cannot parse json file %s",ModifiableChannel.this.file),e);
        }
      }
    }
;
  }
 catch (  IOException e) {
    throw new IllegalStateException(String.format("Cannot open json file %s",this.file),e);
  }
catch (  URISyntaxException e) {
  }
  return this.values.iterator();
}
