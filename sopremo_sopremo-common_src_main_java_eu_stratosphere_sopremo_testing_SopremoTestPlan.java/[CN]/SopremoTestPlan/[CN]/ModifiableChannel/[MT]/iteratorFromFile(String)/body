{
  try {
    final FSDataInputStream stream=FileSystem.get(new URI(file)).open(new Path(file));
    final JsonParser parser=new JsonParser(stream);
    return new AbstractIterator<IJsonNode>(){
      @Override protected IJsonNode loadNext(){
        if (parser.checkEnd())         return this.noMoreElements();
        try {
          return parser.readValueAsTree();
        }
 catch (        final IOException e) {
          throw new IllegalStateException(String.format("Cannot parse json file %s",file),e);
        }
      }
    }
;
  }
 catch (  final IOException e) {
    throw new IllegalStateException(String.format("Cannot open json file %s",this.file),e);
  }
catch (  final URISyntaxException e) {
    throw new IllegalStateException();
  }
}
