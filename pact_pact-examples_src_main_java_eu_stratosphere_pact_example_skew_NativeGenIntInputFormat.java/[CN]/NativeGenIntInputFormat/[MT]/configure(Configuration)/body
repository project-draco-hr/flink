{
  String distFunc=parameters.getString(DISTFUNC_PARAMETER_KEY,"");
  if (distFunc.equals("")) {
    throw new IllegalArgumentException("Distribution function must be set!");
  }
 else   if (distFunc.equals(ZIPF_DISTFUNC)) {
    this.generator=new ZipfIntGenerator();
  }
 else   if (distFunc.equals(PARETO_DISTFUNC)) {
    this.generator=new ParetoIntGenerator();
  }
  this.generator.initialize(parameters);
  this.scale=parameters.getFloat(SCALEFACTOR_PARAMETER_KEY,1.0f);
  int payLoadSize=(int)parameters.getLong(PAYLOAD_SIZE_PARAMETER_KEY,0);
  if (payLoadSize > 0) {
    char[] payLoadC=new char[payLoadSize / 2];
    for (int i=0; i < payLoadC.length; i++) {
      payLoadC[i]='.';
    }
    this.payLoad=new String(payLoadC);
  }
 else   if (payLoadSize == 0) {
    this.payLoad="";
  }
 else {
    throw new IllegalArgumentException("PayLoadSize must be >= 0");
  }
}
