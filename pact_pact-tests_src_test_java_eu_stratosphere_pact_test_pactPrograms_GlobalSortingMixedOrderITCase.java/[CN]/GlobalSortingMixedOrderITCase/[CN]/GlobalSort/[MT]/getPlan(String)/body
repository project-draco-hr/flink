{
  final int numSubtasks=(args.length > 0 ? Integer.parseInt(args[0]) : 1);
  final String recordsPath=(args.length > 1 ? args[1] : "");
  final String output=(args.length > 2 ? args[2] : "");
  FileDataSource source=new FileDataSource(RecordInputFormat.class,recordsPath);
  RecordInputFormat.configureRecordFormat(source).recordDelimiter('\n').fieldDelimiter(',').field(DecimalTextIntParser.class,0).field(DecimalTextIntParser.class,1).field(DecimalTextIntParser.class,2);
  FileDataSink sink=new FileDataSink(RecordOutputFormat.class,output);
  RecordOutputFormat.configureRecordFormat(sink).recordDelimiter('\n').fieldDelimiter(',').lenient(true).field(PactInteger.class,0).field(PactInteger.class,1).field(PactInteger.class,2);
  sink.setGlobalOrder(new Ordering(0,PactInteger.class,Order.DESCENDING).appendOrdering(1,PactInteger.class,Order.ASCENDING).appendOrdering(2,PactInteger.class,Order.DESCENDING),new TripleIntDistribution(Order.DESCENDING,Order.ASCENDING,Order.DESCENDING));
  sink.setInput(source);
  Plan p=new Plan(sink);
  p.setDefaultParallelism(numSubtasks);
  return p;
}
