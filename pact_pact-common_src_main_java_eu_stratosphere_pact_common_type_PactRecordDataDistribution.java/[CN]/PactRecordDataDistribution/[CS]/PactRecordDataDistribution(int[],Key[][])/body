{
  Class<? extends Key>[] keyTypes=new Class[keyPositions.length];
  int numBoundaryKeys=0;
  for (  Key[] boundaryKey : boundaryKeys) {
    if (numBoundaryKeys == 0) {
      if (keyPositions.length != boundaryKey.length) {
        throw new IllegalArgumentException("Length of key positions and boundary keys do not match.");
      }
      numBoundaryKeys=boundaryKey.length;
    }
 else     if (numBoundaryKeys != boundaryKey.length) {
      throw new IllegalArgumentException("All boundaries need the same number of keys.");
    }
    for (int i=0; i < boundaryKey.length; i++) {
      if (keyTypes[i] == null) {
        keyTypes[i]=boundaryKey[i].getClass();
      }
 else       if (!boundaryKey[i].getClass().equals(keyTypes[i])) {
        throw new IllegalArgumentException("Boundary keys do not match the ordering key types.");
      }
    }
  }
  this.boundaryRecords=new PactRecord[boundaryKeys.length];
  for (int i=0; i < boundaryKeys.length; i++) {
    this.boundaryRecords[i]=new PactRecord();
    for (int j=0; j < boundaryKeys[i].length; j++) {
      this.boundaryRecords[i].setField(keyPositions[j],boundaryKeys[i][j]);
    }
  }
}
