{
  Preconditions.checkNotNull(edges);
  Preconditions.checkNotNull(translator);
  Preconditions.checkArgument(parallelism > 0 || parallelism == PARALLELISM_DEFAULT || parallelism == PARALLELISM_UNKNOWN,"The parallelism must be greater than zero.");
  Class<Edge<K,NEW>> edgeClass=(Class<Edge<K,NEW>>)(Class<? extends Edge>)Edge.class;
  TypeInformation<K> idType=((TupleTypeInfo<Edge<K,OLD>>)edges.getType()).getTypeAt(0);
  TypeInformation<NEW> newType=TypeExtractor.createTypeInfo(MapFunction.class,translator.getClass(),1,null,null);
  TupleTypeInfo<Edge<K,NEW>> returnType=new TupleTypeInfo<>(edgeClass,idType,idType,newType);
  return edges.map(new TranslateEdgeValue<K,OLD,NEW>(translator)).returns(returnType).setParallelism(parallelism).name("Translate edge values");
}
