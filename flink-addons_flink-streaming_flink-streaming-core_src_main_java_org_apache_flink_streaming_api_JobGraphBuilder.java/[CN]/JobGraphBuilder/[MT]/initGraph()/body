{
  streamVertices=new HashMap<String,AbstractJobVertex>();
  vertexParallelism=new HashMap<String,Integer>();
  bufferTimeout=new HashMap<String,Long>();
  outEdgeList=new HashMap<String,List<String>>();
  outEdgeIndex=new HashMap<String,List<Integer>>();
  outEdgeNames=new HashMap<String,List<List<String>>>();
  outEdgeSelectAll=new HashMap<String,List<Boolean>>();
  inEdgeList=new HashMap<String,List<String>>();
  outPartitioning=new HashMap<String,List<StreamPartitioner<?>>>();
  operatorNames=new HashMap<String,String>();
  invokableObjects=new HashMap<String,StreamInvokable<?,?>>();
  typeSerializersIn1=new HashMap<String,StreamRecordSerializer<?>>();
  typeSerializersIn2=new HashMap<String,StreamRecordSerializer<?>>();
  typeSerializersOut1=new HashMap<String,StreamRecordSerializer<?>>();
  typeSerializersOut2=new HashMap<String,StreamRecordSerializer<?>>();
  outputSelectors=new HashMap<String,byte[]>();
  vertexClasses=new HashMap<String,Class<? extends AbstractInvokable>>();
  iterationIds=new HashMap<String,Integer>();
  iterationIDtoHeadName=new HashMap<Integer,String>();
  iterationIDtoTailName=new HashMap<Integer,String>();
  iterationTailCount=new HashMap<String,Integer>();
  iterationWaitTime=new HashMap<String,Long>();
  operatorStates=new HashMap<String,Map<String,OperatorState<?>>>();
  inputFormatList=new HashMap<String,InputFormat<String,?>>();
  chainedConfigs=new HashMap<String,Map<String,StreamConfig>>();
  vertexConfigs=new HashMap<String,StreamConfig>();
  sources=new HashSet<String>();
  builtNodes=new HashSet<String>();
}
