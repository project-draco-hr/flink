{
  jobGraph=new JobGraph(jobGraphName);
  components=new HashMap<String,AbstractJobVertex>();
  componentParallelism=new HashMap<String,Integer>();
  mutability=new HashMap<String,Boolean>();
  outEdgeList=new HashMap<String,List<String>>();
  inEdgeList=new HashMap<String,List<String>>();
  connectionTypes=new HashMap<String,List<StreamPartitioner<? extends Tuple>>>();
  userDefinedNames=new HashMap<String,String>();
  operatorNames=new HashMap<String,String>();
  invokableObjects=new HashMap<String,StreamComponentInvokable>();
  serializedFunctions=new HashMap<String,byte[]>();
  outputSelectors=new HashMap<String,byte[]>();
  componentClasses=new HashMap<String,Class<? extends AbstractInvokable>>();
  iterationIds=new HashMap<String,String>();
  iterationHeadNames=new HashMap<String,String>();
  iterationTailCount=new HashMap<String,Integer>();
  maxParallelismVertexName="";
  maxParallelism=0;
  if (LOG.isDebugEnabled()) {
    LOG.debug("JobGraph created");
  }
}
