{
  final LRUCacheMap<Integer,Integer> lruCache=new LRUCacheMap<Integer,Integer>();
  lruCache.put(0,0);
  lruCache.put(1,1);
  lruCache.put(2,2);
  lruCache.put(3,3);
  lruCache.put(4,4);
  Assert.assertEquals(0,lruCache.getLRU().intValue());
  Assert.assertEquals(1,lruCache.getLRU().intValue());
  lruCache.put(5,5);
  Assert.assertEquals(2,lruCache.getLRU().intValue());
  Assert.assertEquals(3,lruCache.getLRU().intValue());
  Assert.assertEquals(4,lruCache.getLRU().intValue());
  Assert.assertEquals(0,lruCache.getLRU().intValue());
  Assert.assertEquals(1,lruCache.getLRU().intValue());
  Assert.assertEquals(5,lruCache.getLRU().intValue());
  Assert.assertEquals(2,lruCache.getLRU().intValue());
  Assert.assertEquals(2,lruCache.remove(2).intValue());
  Assert.assertEquals(3,lruCache.removeLRU().intValue());
  Assert.assertEquals(4,lruCache.removeLRU().intValue());
  Assert.assertEquals(0,lruCache.removeLRU().intValue());
  Assert.assertEquals(1,lruCache.removeLRU().intValue());
  Assert.assertEquals(5,lruCache.removeLRU().intValue());
  Assert.assertTrue(lruCache.isEmpty());
}
