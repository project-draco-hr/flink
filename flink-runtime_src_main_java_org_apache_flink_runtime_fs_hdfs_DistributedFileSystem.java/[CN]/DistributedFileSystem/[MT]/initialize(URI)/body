{
  if (path.getAuthority() == null) {
    String configEntry=this.conf.get("fs.default.name",null);
    if (configEntry == null) {
      configEntry=this.conf.get("fs.defaultFS",null);
    }
    if (LOG.isDebugEnabled()) {
      LOG.debug("fs.defaultFS is set to " + configEntry);
    }
    if (configEntry == null) {
      throw new IOException(getMissingAuthorityErrorPrefix(path) + "Either no default hdfs configuration was registered, " + "or that configuration did not contain an entry for the default hdfs.");
    }
 else {
      try {
        URI initURI=URI.create(configEntry);
        if (initURI.getAuthority() == null) {
          throw new IOException(getMissingAuthorityErrorPrefix(path) + "Either no default hdfs configuration was registered, " + "or the provided configuration contains no valid hdfs namenode address (fs.default.name or fs.defaultFS) describing the hdfs namenode host and port.");
        }
 else         if (!initURI.getScheme().equalsIgnoreCase("hdfs")) {
          throw new IOException(getMissingAuthorityErrorPrefix(path) + "Either no default hdfs configuration was registered, " + "or the provided configuration describes a file system with scheme '"+ initURI.getScheme()+ "' other than the Hadoop Distributed File System (HDFS).");
        }
 else {
          try {
            this.fs.initialize(initURI,this.conf);
          }
 catch (          IOException e) {
            throw new IOException(getMissingAuthorityErrorPrefix(path) + "Could not initialize the file system connection with the given address of the HDFS NameNode: " + e.getMessage(),e);
          }
        }
      }
 catch (      IllegalArgumentException e) {
        throw new IOException(getMissingAuthorityErrorPrefix(path) + "The configuration contains an invalid hdfs default name (fs.default.name or fs.defaultFS): " + configEntry);
      }
    }
  }
 else {
    try {
      this.fs.initialize(path,this.conf);
    }
 catch (    UnknownHostException e) {
      String message="The HDFS NameNode host at '" + path.getAuthority() + "', specified by file path '"+ path.toString()+ "', cannot be resolved"+ (e.getMessage() != null ? ": " + e.getMessage() : ".");
      if (path.getPort() == -1) {
        message+=" Hint: Have you forgotten a slash? (correct URI would be 'hdfs:///" + path.getAuthority() + path.getPath()+ "' ?)";
      }
      throw new IOException(message,e);
    }
catch (    Exception e) {
      throw new IOException("The given file URI (" + path.toString() + ") points to the HDFS NameNode at "+ path.getAuthority()+ ", but the File System could not be initialized with that address"+ (e.getMessage() != null ? ": " + e.getMessage() : "."),e);
    }
  }
}
