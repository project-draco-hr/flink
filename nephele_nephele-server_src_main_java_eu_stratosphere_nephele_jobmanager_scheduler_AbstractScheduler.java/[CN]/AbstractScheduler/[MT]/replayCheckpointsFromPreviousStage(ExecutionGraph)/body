{
  final int currentStageIndex=executionGraph.getIndexOfCurrentExecutionStage();
  final ExecutionStage previousStage=executionGraph.getStage(currentStageIndex - 1);
  final Map<AbstractInstance,List<CheckpointReplayRequest>> checkpointsToReplay=new HashMap<AbstractInstance,List<CheckpointReplayRequest>>();
  for (int i=0; i < previousStage.getNumberOfOutputExecutionVertices(); ++i) {
    final ExecutionVertex vertex=previousStage.getOutputExecutionVertex(i);
    final AbstractInstance instance=vertex.getAllocatedResource().getInstance();
    List<CheckpointReplayRequest> replayRequests=checkpointsToReplay.get(instance);
    if (replayRequests == null) {
      replayRequests=new SerializableArrayList<CheckpointReplayRequest>();
      checkpointsToReplay.put(instance,replayRequests);
    }
    final CheckpointReplayRequest replayRequest=new CheckpointReplayRequest(vertex.getID());
    replayRequest.addOutputChannelIDs(vertex.getEnvironment().getOutputChannelIDs());
    replayRequests.add(replayRequest);
  }
  final Iterator<Map.Entry<AbstractInstance,List<CheckpointReplayRequest>>> it=checkpointsToReplay.entrySet().iterator();
  while (it.hasNext()) {
    final Map.Entry<AbstractInstance,List<CheckpointReplayRequest>> entry=it.next();
    this.deploymentManager.replayCheckpoints(executionGraph.getJobID(),entry.getKey(),entry.getValue());
  }
}
