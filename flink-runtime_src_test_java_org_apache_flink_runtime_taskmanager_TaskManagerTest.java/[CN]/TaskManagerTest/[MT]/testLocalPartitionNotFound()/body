{
  new JavaTestKit(system){
{
      ActorRef jobManager=null;
      ActorRef taskManager=null;
      try {
        final IntermediateDataSetID resultId=new IntermediateDataSetID();
        jobManager=system.actorOf(Props.create(new SimplePartitionStateLookupJobManagerCreator(leaderSessionID.get(),getTestActor())));
        final int dataPort=NetUtils.getAvailablePort();
        taskManager=createTaskManager(jobManager,true,true,dataPort);
        final ActorRef tm=taskManager;
        final JobID jid=new JobID();
        final JobVertexID vid=new JobVertexID();
        final ExecutionAttemptID eid=new ExecutionAttemptID();
        final ResultPartitionID partitionId=new ResultPartitionID();
        final ResultPartitionLocation loc=ResultPartitionLocation.createLocal();
        final InputChannelDeploymentDescriptor[] icdd=new InputChannelDeploymentDescriptor[]{new InputChannelDeploymentDescriptor(partitionId,loc)};
        final InputGateDeploymentDescriptor igdd=new InputGateDeploymentDescriptor(resultId,0,icdd);
        final TaskDeploymentDescriptor tdd=new TaskDeploymentDescriptor(jid,vid,eid,"Receiver",0,1,new Configuration(),new Configuration(),Tasks.AgnosticReceiver.class.getName(),Collections.<ResultPartitionDeploymentDescriptor>emptyList(),Collections.singletonList(igdd),Collections.<BlobKey>emptyList(),0);
        new Within(d){
          @Override protected void run(){
            tm.tell(decorator.decorate(new SubmitTask(tdd)),getTestActor());
            expectMsgClass(Messages.getAcknowledge().getClass());
            TaskExecutionState msg=expectMsgClass(TaskExecutionState.class);
            assertEquals(msg.getExecutionState(),ExecutionState.FAILED);
            assertEquals(msg.getError(ClassLoader.getSystemClassLoader()).getClass(),PartitionNotFoundException.class);
          }
        }
;
      }
 catch (      Exception e) {
        e.printStackTrace();
        fail(e.getMessage());
      }
 finally {
        if (taskManager != null) {
          taskManager.tell(Kill.getInstance(),ActorRef.noSender());
        }
        if (jobManager != null) {
          jobManager.tell(Kill.getInstance(),ActorRef.noSender());
        }
      }
    }
  }
;
}
