{
  try {
    JobManager jobManager=getJobManagerMockBase();
    TaskManager tm=createTaskManager(jobManager);
    JobID jid1=new JobID();
    JobID jid2=new JobID();
    JobVertexID vid1=new JobVertexID();
    JobVertexID vid2=new JobVertexID();
    ExecutionAttemptID eid1=new ExecutionAttemptID();
    ExecutionAttemptID eid2=new ExecutionAttemptID();
    TaskDeploymentDescriptor tdd1=new TaskDeploymentDescriptor(jid1,vid1,eid1,"TestTask1",1,5,new Configuration(),new Configuration(),TestInvokableBlockingCancelable.class.getName(),Collections.<GateDeploymentDescriptor>emptyList(),Collections.<GateDeploymentDescriptor>emptyList(),new String[0],0);
    TaskDeploymentDescriptor tdd2=new TaskDeploymentDescriptor(jid2,vid2,eid2,"TestTask2",2,7,new Configuration(),new Configuration(),TestInvokableBlockingCancelable.class.getName(),Collections.<GateDeploymentDescriptor>emptyList(),Collections.<GateDeploymentDescriptor>emptyList(),new String[0],0);
    LibraryCacheManager.register(jid1,new String[0]);
    LibraryCacheManager.register(jid2,new String[0]);
    assertNotNull(LibraryCacheManager.getClassLoader(jid1));
    assertNotNull(LibraryCacheManager.getClassLoader(jid2));
    TaskOperationResult result1=tm.submitTask(tdd1);
    TaskOperationResult result2=tm.submitTask(tdd2);
    assertTrue(result1.isSuccess());
    assertTrue(result2.isSuccess());
    assertEquals(eid1,result1.getExecutionId());
    assertEquals(eid2,result2.getExecutionId());
    assertEquals(vid1,result1.getVertexId());
    assertEquals(vid2,result2.getVertexId());
    Map<ExecutionAttemptID,Task> tasks=tm.getAllRunningTasks();
    assertEquals(2,tasks.size());
    Task t1=tasks.get(eid1);
    Task t2=tasks.get(eid2);
    assertNotNull(t1);
    assertNotNull(t2);
    assertEquals(ExecutionState2.RUNNING,t1.getExecutionState());
    assertEquals(ExecutionState2.RUNNING,t2.getExecutionState());
    assertTrue(tm.cancelTask(vid1,1,eid1).isSuccess());
    t1.getEnvironment().getExecutingThread().join();
    assertEquals(ExecutionState2.CANCELED,t1.getExecutionState());
    tasks=tm.getAllRunningTasks();
    assertEquals(1,tasks.size());
    assertFalse(tm.cancelTask(vid1,1,eid1).isSuccess());
    assertTrue(tm.cancelTask(vid2,2,eid2).isSuccess());
    t2.getEnvironment().getExecutingThread().join();
    assertEquals(ExecutionState2.CANCELED,t2.getExecutionState());
    tasks=tm.getAllRunningTasks();
    assertEquals(0,tasks.size());
    assertNull(LibraryCacheManager.getClassLoader(jid1));
    assertNull(LibraryCacheManager.getClassLoader(jid2));
  }
 catch (  Exception e) {
    e.printStackTrace();
    fail(e.getMessage());
  }
}
