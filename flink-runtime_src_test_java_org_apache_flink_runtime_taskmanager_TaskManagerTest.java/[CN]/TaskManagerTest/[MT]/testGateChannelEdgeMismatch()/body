{
  try {
    JobManager jobManager=getJobManagerMockBase();
    TaskManager tm=createTaskManager(jobManager);
    JobID jid=new JobID();
    ;
    JobVertexID vid1=new JobVertexID();
    JobVertexID vid2=new JobVertexID();
    ExecutionAttemptID eid1=new ExecutionAttemptID();
    ExecutionAttemptID eid2=new ExecutionAttemptID();
    TaskDeploymentDescriptor tdd1=new TaskDeploymentDescriptor(jid,vid1,eid1,"Sender",0,1,new Configuration(),new Configuration(),Sender.class.getName(),Collections.<GateDeploymentDescriptor>emptyList(),Collections.<GateDeploymentDescriptor>emptyList(),new String[0],0);
    TaskDeploymentDescriptor tdd2=new TaskDeploymentDescriptor(jid,vid2,eid2,"Receiver",2,7,new Configuration(),new Configuration(),Receiver.class.getName(),Collections.<GateDeploymentDescriptor>emptyList(),Collections.<GateDeploymentDescriptor>emptyList(),new String[0],0);
    LibraryCacheManager.register(jid,new String[0]);
    LibraryCacheManager.register(jid,new String[0]);
    assertNotNull(LibraryCacheManager.getClassLoader(jid));
    assertFalse(tm.submitTask(tdd1).isSuccess());
    assertFalse(tm.submitTask(tdd2).isSuccess());
    Map<ExecutionAttemptID,Task> tasks=tm.getAllRunningTasks();
    assertEquals(0,tasks.size());
    assertNetworkResourcesReleased(tm);
    assertNull(LibraryCacheManager.getClassLoader(jid));
  }
 catch (  Exception e) {
    e.printStackTrace();
    fail(e.getMessage());
  }
}
