{
  this.coercers.put(JsonNode.Type.IntNode,new Coercer(){
    @Override public NumericNode coerce(    final JsonNode node){
      return IntNode.valueOf(((NumericNode)node).getIntValue());
    }
  }
);
  this.coercers.put(JsonNode.Type.LongNode,new Coercer(){
    @Override public NumericNode coerce(    final JsonNode node){
      return LongNode.valueOf(((NumericNode)node).getLongValue());
    }
  }
);
  this.coercers.put(JsonNode.Type.DoubleNode,new Coercer(){
    @Override public NumericNode coerce(    final JsonNode node){
      return DoubleNode.valueOf(((NumericNode)node).getDoubleValue());
    }
  }
);
  this.coercers.put(JsonNode.Type.BigIntegerNode,new Coercer(){
    @Override public NumericNode coerce(    final JsonNode node){
      return BigIntegerNode.valueOf(((NumericNode)node).getBigIntegerValue());
    }
  }
);
  this.coercers.put(JsonNode.Type.DecimalNode,new Coercer(){
    @Override public NumericNode coerce(    final JsonNode node){
      return DecimalNode.valueOf(((NumericNode)node).getDecimalValue());
    }
  }
);
  for (  final Entry<JsonNode.Type,Coercer> entry : this.coercers.entrySet())   this.classCoercers.put(this.getImplementationType(entry.getKey()),entry.getValue());
}
