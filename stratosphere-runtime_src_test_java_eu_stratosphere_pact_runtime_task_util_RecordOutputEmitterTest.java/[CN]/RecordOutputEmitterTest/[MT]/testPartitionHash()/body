{
  @SuppressWarnings("unchecked") final RecordComparator intComp=new RecordComparator(new int[]{0},new Class[]{IntValue.class});
  final ChannelSelector<Record> oe1=new RecordOutputEmitter(ShipStrategyType.PARTITION_HASH,intComp);
  int numChans=100;
  int numRecs=50000;
  int[] hit=new int[numChans];
  for (int i=0; i < numRecs; i++) {
    IntValue k=new IntValue(i);
    Record rec=new Record(k);
    int[] chans=oe1.selectChannels(rec,hit.length);
    for (int j=0; j < chans.length; j++) {
      hit[chans[j]]++;
    }
  }
  int cnt=0;
  for (int i=0; i < hit.length; i++) {
    assertTrue(hit[i] > 0);
    cnt+=hit[i];
  }
  assertTrue(cnt == numRecs);
  @SuppressWarnings("unchecked") final RecordComparator stringComp=new RecordComparator(new int[]{0},new Class[]{StringValue.class});
  ChannelSelector<Record> oe2=new RecordOutputEmitter(ShipStrategyType.PARTITION_HASH,stringComp);
  numChans=100;
  numRecs=10000;
  hit=new int[numChans];
  for (int i=0; i < numRecs; i++) {
    StringValue k=new StringValue(i + "");
    Record rec=new Record(k);
    int[] chans=oe2.selectChannels(rec,hit.length);
    for (int j=0; j < chans.length; j++) {
      hit[chans[j]]++;
    }
  }
  cnt=0;
  for (int i=0; i < hit.length; i++) {
    assertTrue(hit[i] > 0);
    cnt+=hit[i];
  }
  assertTrue(cnt == numRecs);
}
