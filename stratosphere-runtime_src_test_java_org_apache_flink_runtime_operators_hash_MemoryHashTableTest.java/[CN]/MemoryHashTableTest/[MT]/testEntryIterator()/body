{
  try {
    final int NUM_MEM_PAGES=SIZE * NUM_LISTS / PAGE_SIZE;
    final IntList[] lists=getRandomizedIntLists(NUM_LISTS,rnd);
    AbstractMutableHashTable<IntList> table=new CompactingHashTable<IntList>(serializerV,comparatorV,getMemory(NUM_MEM_PAGES,PAGE_SIZE));
    table.open();
    int result=0;
    for (int i=0; i < NUM_LISTS; i++) {
      table.insert(lists[i]);
      result+=lists[i].getKey();
    }
    MutableObjectIterator<IntList> iter=table.getEntryIterator();
    IntList target=new IntList();
    int sum=0;
    while ((target=iter.next(target)) != null) {
      sum+=target.getKey();
    }
    table.close();
    assertTrue(sum == result);
    assertEquals("Memory lost",NUM_MEM_PAGES,table.getFreeMemory().size());
  }
 catch (  Exception e) {
    e.printStackTrace();
    fail("Error: " + e.getMessage());
  }
}
