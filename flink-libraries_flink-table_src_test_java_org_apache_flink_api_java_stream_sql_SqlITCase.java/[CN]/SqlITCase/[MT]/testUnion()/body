{
  StreamExecutionEnvironment env=StreamExecutionEnvironment.getExecutionEnvironment();
  StreamTableEnvironment tableEnv=TableEnvironment.getTableEnvironment(env);
  StreamITCase.clear();
  DataStream<Tuple3<Integer,Long,String>> ds1=StreamTestData.getSmall3TupleDataSet(env);
  Table t1=tableEnv.fromDataStream(ds1,"a,b,c");
  tableEnv.registerTable("T1",t1);
  DataStream<Tuple5<Integer,Long,Integer,String,Long>> ds2=StreamTestData.get5TupleDataStream(env);
  tableEnv.registerDataStream("T2",ds2,"a, b, d, c, e");
  String sqlQuery="SELECT STREAM * FROM T1 " + "UNION ALL " + "(SELECT STREAM a, b, c FROM T2 WHERE a	< 3)";
  Table result=tableEnv.sql(sqlQuery);
  DataStream<Row> resultSet=tableEnv.toDataStream(result,Row.class);
  resultSet.addSink(new StreamITCase.StringSink());
  env.execute();
  List<String> expected=new ArrayList<>();
  expected.add("1,1,Hi");
  expected.add("2,2,Hello");
  expected.add("3,2,Hello world");
  expected.add("1,1,Hallo");
  expected.add("2,2,Hallo Welt");
  expected.add("2,3,Hallo Welt wie");
  StreamITCase.compareWithList(expected);
}
