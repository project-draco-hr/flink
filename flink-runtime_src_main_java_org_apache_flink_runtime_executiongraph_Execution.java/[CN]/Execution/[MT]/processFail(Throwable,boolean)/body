{
  while (true) {
    ExecutionState current=this.state;
    if (current == FAILED) {
      return false;
    }
    if (current == CANCELED) {
      if (LOG.isDebugEnabled()) {
        LOG.debug(String.format("Ignoring transition of vertex %s to %s while being %s",getVertexWithAttempt(),FAILED,CANCELED));
      }
      return false;
    }
    if (transitionState(current,FAILED,t)) {
      this.failureCause=t;
      try {
        if (assignedResource != null) {
          assignedResource.releaseSlot();
        }
        vertex.getExecutionGraph().deregisterExecution(this);
      }
  finally {
        vertex.executionFailed(t);
      }
      if (!isCallback && (current == RUNNING || current == DEPLOYING)) {
        if (LOG.isDebugEnabled()) {
          LOG.debug("Sending out cancel request, to remove task execution from TaskManager.");
        }
        try {
          if (assignedResource != null) {
            sendCancelRpcCall();
          }
        }
 catch (        Throwable tt) {
          LOG.error("Error triggering cancel call while marking task as failed.",tt);
        }
      }
      return true;
    }
  }
}
