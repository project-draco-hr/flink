{
  final SimpleSlot slot=this.assignedResource;
  if (slot == null) {
    return;
  }
  Future<Object> cancelResult=AkkaUtils.retry(slot.getInstance().getTaskManager(),new TaskManagerMessages.CancelTask(attemptId),NUM_CANCEL_CALL_TRIES,AkkaUtils.globalExecutionContext(),timeout);
  cancelResult.onComplete(new OnComplete<Object>(){
    @Override public void onComplete(    Throwable failure,    Object success) throws Throwable {
      if (failure != null) {
        fail(new Exception("Task could not be canceled.",failure));
      }
 else {
        TaskManagerMessages.TaskOperationResult result=(TaskManagerMessages.TaskOperationResult)success;
        if (!result.success()) {
          LOG.debug("Cancel task call did not find task. Probably akka message call" + " race.");
        }
      }
    }
  }
,AkkaUtils.globalExecutionContext());
}
