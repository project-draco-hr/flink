{
  final AllocatedSlot slot=this.assignedResource;
  if (slot == null) {
    throw new IllegalStateException("Cannot cancel when task was not running or deployed.");
  }
  Runnable cancelAction=new Runnable(){
    @Override public void run(){
      Throwable exception=null;
      for (int triesLeft=NUM_CANCEL_CALL_TRIES; triesLeft > 0; --triesLeft) {
        try {
          TaskOperationResult result=slot.getInstance().getTaskManagerProxy().cancelTask(attemptId);
          if (!result.isSuccess()) {
            if (LOG.isDebugEnabled()) {
              LOG.debug("Cancel task call did not find task. Probably RPC call race.");
            }
          }
          return;
        }
 catch (        Throwable t) {
          if (exception == null) {
            exception=t;
          }
          LOG.error("Canceling vertex " + getVertexWithAttempt() + " failed ("+ triesLeft+ " tries left): "+ t.getMessage(),t);
        }
      }
      fail(new Exception("Task could not be canceled.",exception));
    }
  }
;
  vertex.execute(cancelAction);
}
