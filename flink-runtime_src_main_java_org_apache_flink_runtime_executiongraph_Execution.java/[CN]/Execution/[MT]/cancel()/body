{
  while (true) {
    ExecutionState current=this.state;
    if (current == CANCELING || current == CANCELED) {
      return;
    }
 else     if (current == RUNNING || current == DEPLOYING) {
      if (transitionState(current,CANCELING)) {
        sendCancelRpcCall();
        return;
      }
    }
 else     if (current == FINISHED || current == FAILED) {
      return;
    }
 else     if (current == CREATED || current == SCHEDULED) {
      if (transitionState(current,CANCELED)) {
        markTimestamp(CANCELING,getStateTimestamp(CANCELED));
        try {
          vertex.executionCanceled();
        }
  finally {
          vertex.getExecutionGraph().deregisterExecution(this);
          if (assignedResource != null) {
            assignedResource.releaseSlot();
          }
        }
        return;
      }
    }
 else {
      throw new IllegalStateException(current.name());
    }
  }
}
