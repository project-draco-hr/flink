{
synchronized (this.lock) {
    Iterator<Instance> clusterIterator=this.registeredHosts.values().iterator();
    Instance instance=null;
    List<AllocatedResource> allocatedResources=new ArrayList<AllocatedResource>();
    int allocatedSlots=0;
    while (clusterIterator.hasNext()) {
      instance=clusterIterator.next();
      while (instance.getNumberOfAvailableSlots() > 0 && allocatedSlots < requiredSlots) {
        AllocatedResource resource=instance.allocateSlot(jobID);
        allocatedResources.add(resource);
        allocatedSlots++;
      }
    }
    if (allocatedSlots < requiredSlots) {
      throw new InstanceException("Cannot allocate the required number of slots: " + requiredSlots + ".");
    }
    if (this.instanceListener != null) {
      final InstanceNotifier instanceNotifier=new InstanceNotifier(this.instanceListener,jobID,allocatedResources);
      instanceNotifier.start();
    }
  }
}
