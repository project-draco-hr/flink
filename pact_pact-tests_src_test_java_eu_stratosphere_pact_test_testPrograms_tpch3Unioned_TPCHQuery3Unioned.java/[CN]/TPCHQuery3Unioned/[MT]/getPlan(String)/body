{
  int noSubtasks=(args.length > 0 ? Integer.parseInt(args[0]) : 1);
  String orders1Path=(args.length > 1 ? args[1] : "");
  String orders2Path=(args.length > 2 ? args[2] : "");
  String partJoin1Path=(args.length > 3 ? args[3] : "");
  String partJoin2Path=(args.length > 4 ? args[4] : "");
  String lineitemsPath=(args.length > 5 ? args[5] : "");
  String output=(args.length > 6 ? args[6] : "");
  FileDataSource orders1=new FileDataSource(RecordInputFormat.class,orders1Path,"Orders 1");
  orders1.setDegreeOfParallelism(noSubtasks);
  orders1.setParameter(RecordInputFormat.RECORD_DELIMITER,"\n");
  orders1.setParameter(RecordInputFormat.FIELD_DELIMITER_PARAMETER,"|");
  orders1.setParameter(RecordInputFormat.NUM_FIELDS_PARAMETER,5);
  orders1.getParameters().setClass(RecordInputFormat.FIELD_PARSER_PARAMETER_PREFIX + 0,DecimalTextLongParser.class);
  orders1.setParameter(RecordInputFormat.TEXT_POSITION_PARAMETER_PREFIX + 0,0);
  orders1.getParameters().setClass(RecordInputFormat.FIELD_PARSER_PARAMETER_PREFIX + 1,DecimalTextIntParser.class);
  orders1.setParameter(RecordInputFormat.TEXT_POSITION_PARAMETER_PREFIX + 1,7);
  orders1.getParameters().setClass(RecordInputFormat.FIELD_PARSER_PARAMETER_PREFIX + 2,VarLengthStringParser.class);
  orders1.setParameter(RecordInputFormat.TEXT_POSITION_PARAMETER_PREFIX + 2,2);
  orders1.getParameters().setClass(RecordInputFormat.FIELD_PARSER_PARAMETER_PREFIX + 3,VarLengthStringParser.class);
  orders1.setParameter(RecordInputFormat.TEXT_POSITION_PARAMETER_PREFIX + 3,4);
  orders1.getParameters().setClass(RecordInputFormat.FIELD_PARSER_PARAMETER_PREFIX + 4,VarLengthStringParser.class);
  orders1.setParameter(RecordInputFormat.TEXT_POSITION_PARAMETER_PREFIX + 4,5);
  orders1.getCompilerHints().setAvgNumRecordsPerDistinctFields(new FieldSet(0),1);
  orders1.getCompilerHints().setAvgBytesPerRecord(16);
  orders1.getCompilerHints().setUniqueField(new FieldSet(0));
  FileDataSource orders2=new FileDataSource(RecordInputFormat.class,orders2Path,"Orders 2");
  orders2.setDegreeOfParallelism(noSubtasks);
  orders2.setParameter(RecordInputFormat.RECORD_DELIMITER,"\n");
  orders2.setParameter(RecordInputFormat.FIELD_DELIMITER_PARAMETER,"|");
  orders2.setParameter(RecordInputFormat.NUM_FIELDS_PARAMETER,5);
  orders2.getParameters().setClass(RecordInputFormat.FIELD_PARSER_PARAMETER_PREFIX + 0,DecimalTextLongParser.class);
  orders2.setParameter(RecordInputFormat.TEXT_POSITION_PARAMETER_PREFIX + 0,0);
  orders2.getParameters().setClass(RecordInputFormat.FIELD_PARSER_PARAMETER_PREFIX + 1,DecimalTextIntParser.class);
  orders2.setParameter(RecordInputFormat.TEXT_POSITION_PARAMETER_PREFIX + 1,7);
  orders2.getParameters().setClass(RecordInputFormat.FIELD_PARSER_PARAMETER_PREFIX + 2,VarLengthStringParser.class);
  orders2.setParameter(RecordInputFormat.TEXT_POSITION_PARAMETER_PREFIX + 2,2);
  orders2.getParameters().setClass(RecordInputFormat.FIELD_PARSER_PARAMETER_PREFIX + 3,VarLengthStringParser.class);
  orders2.setParameter(RecordInputFormat.TEXT_POSITION_PARAMETER_PREFIX + 3,4);
  orders2.getParameters().setClass(RecordInputFormat.FIELD_PARSER_PARAMETER_PREFIX + 4,VarLengthStringParser.class);
  orders2.setParameter(RecordInputFormat.TEXT_POSITION_PARAMETER_PREFIX + 4,5);
  orders2.getCompilerHints().setAvgNumRecordsPerDistinctFields(new FieldSet(0),1);
  orders2.getCompilerHints().setAvgBytesPerRecord(16);
  orders2.getCompilerHints().setUniqueField(new FieldSet(0));
  FileDataSource lineitems=new FileDataSource(RecordInputFormat.class,lineitemsPath,"LineItems");
  lineitems.setDegreeOfParallelism(noSubtasks);
  lineitems.setParameter(RecordInputFormat.RECORD_DELIMITER,"\n");
  lineitems.setParameter(RecordInputFormat.FIELD_DELIMITER_PARAMETER,"|");
  lineitems.setParameter(RecordInputFormat.NUM_FIELDS_PARAMETER,2);
  lineitems.getParameters().setClass(RecordInputFormat.FIELD_PARSER_PARAMETER_PREFIX + 0,DecimalTextLongParser.class);
  lineitems.setParameter(RecordInputFormat.TEXT_POSITION_PARAMETER_PREFIX + 0,0);
  lineitems.getParameters().setClass(RecordInputFormat.FIELD_PARSER_PARAMETER_PREFIX + 1,DecimalTextDoubleParser.class);
  lineitems.setParameter(RecordInputFormat.TEXT_POSITION_PARAMETER_PREFIX + 1,5);
  lineitems.getCompilerHints().setAvgNumRecordsPerDistinctFields(new FieldSet(0),4);
  lineitems.getCompilerHints().setAvgBytesPerRecord(20);
  MapContract filterO1=new MapContract(FilterO.class,"FilterO");
  filterO1.addInput(orders1);
  filterO1.setDegreeOfParallelism(noSubtasks);
  filterO1.setParameter(YEAR_FILTER,1993);
  filterO1.setParameter(PRIO_FILTER,"5");
  filterO1.getCompilerHints().setAvgBytesPerRecord(16);
  filterO1.getCompilerHints().setAvgRecordsEmittedPerStubCall(0.05f);
  filterO1.getCompilerHints().setAvgNumRecordsPerDistinctFields(new FieldSet(0),1);
  MapContract filterO2=new MapContract(FilterO.class,"FilterO");
  filterO2.addInput(orders2);
  filterO2.setDegreeOfParallelism(noSubtasks);
  filterO2.setParameter(YEAR_FILTER,1993);
  filterO2.setParameter(PRIO_FILTER,"5");
  filterO2.getCompilerHints().setAvgBytesPerRecord(16);
  filterO2.getCompilerHints().setAvgRecordsEmittedPerStubCall(1.0f);
  filterO2.getCompilerHints().setAvgNumRecordsPerDistinctFields(new FieldSet(0),1);
  MatchContract joinLiO=new MatchContract(JoinLiO.class,PactLong.class,0,0,filterO2,lineitems,"JoinLiO");
  joinLiO.addFirstInput(filterO1);
  joinLiO.setDegreeOfParallelism(noSubtasks);
  joinLiO.getCompilerHints().setAvgBytesPerRecord(24);
  joinLiO.getCompilerHints().setAvgNumRecordsPerDistinctFields(new FieldSet(new int[]{0,1}),4);
  FileDataSource partJoin1=new FileDataSource(RecordInputFormat.class,partJoin1Path,"Part Join 1");
  partJoin1.setDegreeOfParallelism(noSubtasks);
  partJoin1.setParameter(RecordInputFormat.RECORD_DELIMITER,"\n");
  partJoin1.setParameter(RecordInputFormat.FIELD_DELIMITER_PARAMETER,"|");
  partJoin1.setParameter(RecordInputFormat.NUM_FIELDS_PARAMETER,3);
  partJoin1.getParameters().setClass(RecordInputFormat.FIELD_PARSER_PARAMETER_PREFIX + 0,DecimalTextLongParser.class);
  partJoin1.setParameter(RecordInputFormat.TEXT_POSITION_PARAMETER_PREFIX + 0,0);
  partJoin1.getParameters().setClass(RecordInputFormat.FIELD_PARSER_PARAMETER_PREFIX + 1,DecimalTextIntParser.class);
  partJoin1.setParameter(RecordInputFormat.TEXT_POSITION_PARAMETER_PREFIX + 1,1);
  partJoin1.getParameters().setClass(RecordInputFormat.FIELD_PARSER_PARAMETER_PREFIX + 2,DecimalTextDoubleParser.class);
  partJoin1.setParameter(RecordInputFormat.TEXT_POSITION_PARAMETER_PREFIX + 2,2);
  FileDataSource partJoin2=new FileDataSource(RecordInputFormat.class,partJoin2Path,"Part Join 2");
  partJoin2.setDegreeOfParallelism(noSubtasks);
  partJoin2.setParameter(RecordInputFormat.RECORD_DELIMITER,"\n");
  partJoin2.setParameter(RecordInputFormat.FIELD_DELIMITER_PARAMETER,"|");
  partJoin2.setParameter(RecordInputFormat.NUM_FIELDS_PARAMETER,3);
  partJoin2.getParameters().setClass(RecordInputFormat.FIELD_PARSER_PARAMETER_PREFIX + 0,DecimalTextLongParser.class);
  partJoin2.setParameter(RecordInputFormat.TEXT_POSITION_PARAMETER_PREFIX + 0,0);
  partJoin2.getParameters().setClass(RecordInputFormat.FIELD_PARSER_PARAMETER_PREFIX + 1,DecimalTextIntParser.class);
  partJoin2.setParameter(RecordInputFormat.TEXT_POSITION_PARAMETER_PREFIX + 1,1);
  partJoin2.getParameters().setClass(RecordInputFormat.FIELD_PARSER_PARAMETER_PREFIX + 2,DecimalTextDoubleParser.class);
  partJoin2.setParameter(RecordInputFormat.TEXT_POSITION_PARAMETER_PREFIX + 2,2);
  @SuppressWarnings("unchecked") ReduceContract aggLiO=new ReduceContract(AggLiO.class,new Class[]{PactLong.class,PactString.class},new int[]{0,1},joinLiO,"AggLio");
  aggLiO.addInput(partJoin2);
  aggLiO.addInput(partJoin1);
  aggLiO.setDegreeOfParallelism(noSubtasks);
  aggLiO.getCompilerHints().setAvgBytesPerRecord(30);
  aggLiO.getCompilerHints().setAvgRecordsEmittedPerStubCall(1.0f);
  aggLiO.getCompilerHints().setAvgNumRecordsPerDistinctFields(new FieldSet(new int[]{0,1}),1);
  FileDataSink result=new FileDataSink(RecordOutputFormat.class,output,aggLiO,"Output");
  result.setDegreeOfParallelism(noSubtasks);
  result.getParameters().setString(RecordOutputFormat.RECORD_DELIMITER_PARAMETER,"\n");
  result.getParameters().setString(RecordOutputFormat.FIELD_DELIMITER_PARAMETER,"|");
  result.getParameters().setBoolean(RecordOutputFormat.LENIENT_PARSING,true);
  result.getParameters().setInteger(RecordOutputFormat.NUM_FIELDS_PARAMETER,3);
  result.getParameters().setClass(RecordOutputFormat.FIELD_TYPE_PARAMETER_PREFIX + 0,PactLong.class);
  result.getParameters().setInteger(RecordOutputFormat.RECORD_POSITION_PARAMETER_PREFIX + 0,0);
  result.getParameters().setClass(RecordOutputFormat.FIELD_TYPE_PARAMETER_PREFIX + 1,PactInteger.class);
  result.getParameters().setInteger(RecordOutputFormat.RECORD_POSITION_PARAMETER_PREFIX + 1,1);
  result.getParameters().setClass(RecordOutputFormat.FIELD_TYPE_PARAMETER_PREFIX + 2,PactDouble.class);
  result.getParameters().setInteger(RecordOutputFormat.RECORD_POSITION_PARAMETER_PREFIX + 2,2);
  Plan plan=new Plan(result,"TPCH Q3 Unioned");
  plan.setDefaultParallelism(noSubtasks);
  return plan;
}
