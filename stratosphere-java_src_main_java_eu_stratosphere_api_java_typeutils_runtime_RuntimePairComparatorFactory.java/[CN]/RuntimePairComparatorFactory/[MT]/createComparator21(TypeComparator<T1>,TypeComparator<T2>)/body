{
  if ((comparator1 instanceof TupleLeadingFieldComparator) && (comparator2 instanceof TupleLeadingFieldComparator)) {
    TypeComparator<?> comp1=((TupleLeadingFieldComparator<?,?>)comparator1).getFieldComparator();
    TypeComparator<?> comp2=((TupleLeadingFieldComparator<?,?>)comparator2).getFieldComparator();
    return createLeadingFieldPairComp(comp2,comp1);
  }
 else {
    int[] keyPos1;
    int[] keyPos2;
    TypeComparator<Object>[] comps1;
    TypeComparator<Object>[] comps2;
    if (comparator1 instanceof TupleComparator) {
      TupleComparator<?> tupleComp1=(TupleComparator<?>)comparator1;
      keyPos1=tupleComp1.getKeyPositions();
      comps1=tupleComp1.getComparators();
    }
 else     if (comparator1 instanceof TupleLeadingFieldComparator) {
      TupleLeadingFieldComparator<?,?> tupleComp1=(TupleLeadingFieldComparator<?,?>)comparator1;
      keyPos1=new int[]{0};
      comps1=new TypeComparator[]{tupleComp1.getFieldComparator()};
    }
 else {
      throw new IllegalArgumentException("Cannot instantiate pair comparator from the given comparator: " + comparator1);
    }
    if (comparator2 instanceof TupleComparator) {
      TupleComparator<?> tupleComp2=(TupleComparator<?>)comparator2;
      keyPos2=tupleComp2.getKeyPositions();
      comps2=tupleComp2.getComparators();
    }
 else     if (comparator2 instanceof TupleLeadingFieldComparator) {
      TupleLeadingFieldComparator<?,?> tupleComp2=(TupleLeadingFieldComparator<?,?>)comparator2;
      keyPos2=new int[]{0};
      comps2=new TypeComparator[]{tupleComp2.getFieldComparator()};
    }
 else {
      throw new IllegalArgumentException("Cannot instantiate pair comparator from the given comparator: " + comparator1);
    }
    return (TypePairComparator<T2,T1>)new TuplePairComparator<Tuple,Tuple>(keyPos2,keyPos1,comps2,comps1);
  }
}
