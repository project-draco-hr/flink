{
  CACHE_TYPES.putIfAbsent(cacheId,cacheType);
  String finalCacheId=getFinalCacheId(cacheId,subTaskId,cacheType);
  if (!STORE.containsKey(finalCacheId)) {
    STORE.putIfAbsent(finalCacheId,new ConcurrentHashMap<K,V>(10000));
  }
 else   if (cacheType == CacheType.ISOLATED || cacheType == CacheType.SHARED_READ) {
    throw new RuntimeException("Store already exists: " + finalCacheId);
  }
  if (!SUB_TASKS.containsKey(cacheId)) {
    SUB_TASKS.putIfAbsent(cacheId,new HashSet<Integer>());
  }
  Set<Integer> taskIdSet=SUB_TASKS.get(cacheId);
  boolean existed=!taskIdSet.add(subTaskId);
  if (existed) {
    throw new RuntimeException("Subtask already created cache (cache: " + cacheId + ", id: "+ subTaskId);
  }
}
