{
  final File tempCheckpointDir=new File(new File(ConfigConstants.DEFAULT_TASK_MANAGER_TMP_PATH),UUID.randomUUID().toString());
  assertTrue("Cannot create directory for checkpoints",tempCheckpointDir.mkdirs());
  StreamExecutionEnvironment env=StreamExecutionEnvironment.createRemoteEnvironment("localhost",jobManagerPort);
  env.setParallelism(PARALLELISM);
  env.getConfig().disableSysoutLogging();
  env.setNumberOfExecutionRetries(1);
  env.enableCheckpointing(200);
  env.setStateBackend(new FsStateBackend(tempCheckpointDir.getAbsoluteFile().toURI()));
  DataStream<Long> result=env.addSource(new SleepyDurableGenerateSequence(coordinateDir,DATA_COUNT)).map(new MapFunction<Long,Long>(){
    @Override public Long map(    Long value) throws Exception {
      return value;
    }
  }
).startNewChain().map(new Mapper(coordinateDir));
  result.addSink(new CheckpointedSink(DATA_COUNT));
  try {
    env.execute();
  }
  finally {
    if (tempCheckpointDir.exists()) {
      FileUtils.deleteDirectory(tempCheckpointDir);
    }
  }
}
