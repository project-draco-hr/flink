{
  try {
    MutableObjectIterator<T> iterator=null;
    while (iterator == null) {
      try {
        iterator=this.sorter.getIterator();
      }
 catch (      InterruptedException iex) {
        if (!this.running)         return;
      }
    }
    final KeyGroupedIterator<T> keyIter=new KeyGroupedIterator<T>(iterator,this.serializer,this.comparator);
    final GenericGroupReduce<T,?> stub=this.stub;
    final Collector<T> output=this.output;
    while (this.running && keyIter.nextKey()) {
      stub.combine(keyIter.getValues(),output);
    }
  }
 catch (  Throwable t) {
    ChainedCombineDriver.this.exception=new Exception("The combiner failed due to an exception.",t);
  }
}
