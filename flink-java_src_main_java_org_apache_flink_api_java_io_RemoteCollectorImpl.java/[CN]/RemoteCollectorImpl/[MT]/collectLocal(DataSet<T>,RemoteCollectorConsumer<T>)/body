{
  String ip=System.getProperty("java.rmi.server.hostname");
  if (ip == null) {
    Enumeration<NetworkInterface> networkInterfaces=null;
    try {
      networkInterfaces=NetworkInterface.getNetworkInterfaces();
    }
 catch (    Throwable t) {
      throw new RuntimeException(t);
    }
    while (networkInterfaces.hasMoreElements()) {
      NetworkInterface networkInterface=(NetworkInterface)networkInterfaces.nextElement();
      Enumeration<InetAddress> inetAddresses=networkInterface.getInetAddresses();
      while (inetAddresses.hasMoreElements()) {
        InetAddress inetAddress=(InetAddress)inetAddresses.nextElement();
        if (!inetAddress.isLoopbackAddress() && inetAddress instanceof Inet4Address) {
          ip=inetAddress.getHostAddress();
          System.setProperty("java.rmi.server.hostname",ip);
        }
      }
    }
  }
  Integer randomPort=0;
  try {
    ServerSocket tmp=new ServerSocket(0);
    randomPort=tmp.getLocalPort();
    tmp.close();
  }
 catch (  Throwable t) {
    throw new RuntimeException(t);
  }
  String rmiId=String.format("%s-%s",RemoteCollectorOutputFormat.class.getName(),UUID.randomUUID());
  RemoteCollectorImpl.createAndBind(randomPort,consumer,rmiId);
  OutputFormat<T> remoteCollectorOutputFormat=new RemoteCollectorOutputFormat<T>(ip,randomPort,rmiId);
  return source.output(remoteCollectorOutputFormat);
}
