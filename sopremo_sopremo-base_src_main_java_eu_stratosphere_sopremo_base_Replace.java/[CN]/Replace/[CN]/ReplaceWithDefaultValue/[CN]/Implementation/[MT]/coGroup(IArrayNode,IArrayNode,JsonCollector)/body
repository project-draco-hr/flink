{
  final Iterator<IJsonNode> replaceValueIterator=values2.iterator();
  IJsonNode replaceValue=replaceValueIterator.hasNext() ? replaceValueIterator.next() : null;
  final Iterator<IJsonNode> valueIterator=values1.iterator();
  final EvaluationContext context=this.getContext();
  while (valueIterator.hasNext()) {
    final IJsonNode value=valueIterator.next();
    final IJsonNode replacement;
    if (replaceValue != null)     replacement=replaceValue;
 else {
      final IJsonNode key=this.inputKeyExtractor.evaluate(value,context);
      replacement=this.defaultExpression.evaluate(key,context);
    }
    out.collect(this.inputKeyExtractor.set(value,replacement,context));
  }
}
