{
  final SopremoModule sopremoModule=new SopremoModule(this.getName(),2,1);
  if (this.arrayElementsReplacement) {
    final ArraySplit arraySplit=new ArraySplit().withArrayPath(this.replaceExpression).withSplitProjection(ArraySplit.ResultField.Element,ArraySplit.ResultField.Index,ArraySplit.ResultField.Array).withInputs(sopremoModule.getInput(0));
    EvaluationExpression defaultExpression;
    if (this.defaultExpression == KEEP_VALUE)     defaultExpression=new ArrayAccess(0);
 else     if (this.defaultExpression == FILTER_RECORDS)     defaultExpression=this.defaultExpression;
 else     defaultExpression=new PathExpression(new ArrayAccess(0),this.defaultExpression);
    Replace replacedElements=new Replace().withName(String.format("%s element",getName())).withInputs(arraySplit,sopremoModule.getInput(1)).withDefaultExpression(defaultExpression).withDictionaryValueExtraction(this.dictionaryValueExtraction).withDictionaryKeyExtraction(this.dictionaryKeyExtraction).withReplaceExpression(new ArrayAccess(0));
    final AssembleArray arrayDictionary=new AssembleArray().withInputs(replacedElements);
    final Replace arrayLookup=new Replace().withName(String.format("%s array",getName())).withInputs(sopremoModule.getInput(0),arrayDictionary).withReplaceExpression(this.replaceExpression).withDefaultExpression(FILTER_RECORDS);
    Selection emptyArrays=new Selection().withCondition(new UnaryExpression(this.replaceExpression,true)).withInputs(sopremoModule.getInput(0));
    sopremoModule.getOutput(0).setInput(0,new UnionAll().withInputs(arrayLookup,emptyArrays));
  }
 else {
    EvaluationExpression defaultExpression=this.defaultExpression == KEEP_VALUE ? this.replaceExpression : this.defaultExpression;
    ReplaceBase<?> replaceAtom;
    if (defaultExpression == FILTER_RECORDS)     replaceAtom=new StrictReplace();
 else     replaceAtom=new ReplaceWithDefaultValue().withDefaultExpression(defaultExpression);
    replaceAtom.withInputs(sopremoModule.getInputs()).withReplaceExpression(this.replaceExpression).withDictionaryValueExtraction(this.dictionaryValueExtraction).withKeyExpression(0,getReplaceExpression()).withKeyExpression(1,getDictionaryKeyExtraction());
    sopremoModule.getOutput(0).setInput(0,replaceAtom.withInputs(sopremoModule.getInput(0),sopremoModule.getInput(1)));
  }
  return sopremoModule.asElementary();
}
