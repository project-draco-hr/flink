{
  int keyCnt1=20;
  int valCnt1=20;
  int keyCnt2=20;
  int valCnt2=20;
  addInput(new UniformRecordGenerator(keyCnt1,valCnt1,false));
  addInput(new UniformRecordGenerator(keyCnt2,valCnt2,false));
  addDriverComparator(this.comparator1);
  addDriverComparator(this.comparator2);
  getTaskConfig().setDriverPairComparator(RecordPairComparatorFactory.get());
  setOutput(new NirvanaOutputList());
  getTaskConfig().setDriverStrategy(DriverStrategy.HYBRIDHASH_BUILD_SECOND_CACHED);
  getTaskConfig().setRelativeMemoryDriver(1.0f);
  BuildSecondCachedMatchDriver<Record,Record,Record> testTask=new BuildSecondCachedMatchDriver<Record,Record,Record>();
  try {
    testResettableDriver(testTask,MockFailingMatchStub.class,3);
    Assert.fail("Function exception was not forwarded.");
  }
 catch (  ExpectedTestException etex) {
  }
catch (  Exception e) {
    e.printStackTrace();
    Assert.fail("Test caused an exception.");
  }
}
