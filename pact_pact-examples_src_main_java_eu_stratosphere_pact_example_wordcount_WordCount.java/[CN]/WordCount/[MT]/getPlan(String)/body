{
  if (args == null) {
    args=new String[0];
  }
  int noSubTasks=(args.length > 0 && args[0] != null ? Integer.parseInt(args[0]) : 3);
  String dataInput=(args.length > 1 && args[1] != null ? args[1] : "hdfs://localhost:9000/countwords/data");
  String output=(args.length > 2 && args[2] != null ? args[2] : "hdfs://localhost:9000/countwords/result");
  DataSourceContract<PactString,PactInteger> data=new DataSourceContract<PactString,PactInteger>(LineInFormat.class,dataInput,"Input Lines");
  data.setDegreeOfParallelism(noSubTasks);
  MapContract<PactString,PactInteger,PactString,PactInteger> mapper=new MapContract<PactString,PactInteger,PactString,PactInteger>(TokenizeLine.class,"Tokenize Lines");
  mapper.setDegreeOfParallelism(noSubTasks);
  ReduceContract<PactString,PactInteger,PactString,PactInteger> reducer=new ReduceContract<PactString,PactInteger,PactString,PactInteger>(CountWords.class,"Count Words");
  reducer.setDegreeOfParallelism(noSubTasks);
  DataSinkContract<PactString,PactInteger> out=new DataSinkContract<PactString,PactInteger>(WordCountOutFormat.class,output,"Output");
  out.setDegreeOfParallelism(noSubTasks);
  out.setInput(reducer);
  reducer.setInput(mapper);
  mapper.setInput(data);
  return new Plan(out,"WordCount Example");
}
