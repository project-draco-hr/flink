{
  int noSubTasks=(args.length > 0 ? Integer.parseInt(args[0]) : 1);
  String dataInput=(args.length > 1 ? args[1] : "");
  String output=(args.length > 2 ? args[2] : "");
  DataSourceContract<PactNull,PactString> data=new DataSourceContract<PactNull,PactString>(LineInFormat.class,dataInput,"Input Lines");
  data.setDegreeOfParallelism(noSubTasks);
  MapContract<PactNull,PactString,PactString,PactInteger> mapper=new MapContract<PactNull,PactString,PactString,PactInteger>(TokenizeLine.class,"Tokenize Lines");
  mapper.setDegreeOfParallelism(noSubTasks);
  ReduceContract<PactString,PactInteger,PactString,PactInteger> reducer=new ReduceContract<PactString,PactInteger,PactString,PactInteger>(CountWords.class,"Count Words");
  reducer.setDegreeOfParallelism(noSubTasks);
  DataSinkContract<PactString,PactInteger> out=new DataSinkContract<PactString,PactInteger>(WordCountOutFormat.class,output,"Output");
  out.setDegreeOfParallelism(noSubTasks);
  out.setInput(reducer);
  reducer.setInput(mapper);
  mapper.setInput(data);
  return new Plan(out,"WordCount Example");
}
