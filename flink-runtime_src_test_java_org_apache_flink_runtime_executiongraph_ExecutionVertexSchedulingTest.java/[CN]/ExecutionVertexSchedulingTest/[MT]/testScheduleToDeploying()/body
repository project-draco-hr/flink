{
  try {
    final ExecutionJobVertex ejv=getExecutionVertex(new JobVertexID());
    final ExecutionVertex vertex=new ExecutionVertex(ejv,0,new IntermediateResult[0],AkkaUtils.getDefaultTimeout());
    TestingUtils.setCallingThreadDispatcher(system);
    ActorRef tm=TestActorRef.create(system,Props.create(ExecutionGraphTestUtils.SimpleAcknowledgingTaskManager.class));
    final Instance instance=getInstance(tm);
    final SimpleSlot slot=instance.allocateSimpleSlot(ejv.getJobId());
    Scheduler scheduler=mock(Scheduler.class);
    when(scheduler.scheduleImmediately(Matchers.any(ScheduledUnit.class))).thenReturn(slot);
    assertEquals(ExecutionState.CREATED,vertex.getExecutionState());
    vertex.scheduleForExecution(scheduler,false);
    assertEquals(ExecutionState.DEPLOYING,vertex.getExecutionState());
  }
 catch (  Exception e) {
    e.printStackTrace();
    fail(e.getMessage());
  }
 finally {
    TestingUtils.setGlobalExecutionContext();
  }
}
