{
  try {
    final ExecutionJobVertex ejv=getExecutionVertex(new JobVertexID());
    final ExecutionVertex vertex=new ExecutionVertex(ejv,0,new IntermediateResult[0],AkkaUtils.getDefaultTimeout());
    final Instance instance=getInstance(DummyActorGateway.INSTANCE);
    final SimpleSlot slot=instance.allocateSimpleSlot(ejv.getJobId());
    slot.releaseSlot();
    assertTrue(slot.isReleased());
    final SlotAllocationFuture future=new SlotAllocationFuture();
    Scheduler scheduler=mock(Scheduler.class);
    when(scheduler.scheduleQueued(Matchers.any(ScheduledUnit.class))).thenReturn(future);
    assertEquals(ExecutionState.CREATED,vertex.getExecutionState());
    vertex.scheduleForExecution(scheduler,true);
    assertEquals(ExecutionState.SCHEDULED,vertex.getExecutionState());
    future.setSlot(slot);
    assertEquals(ExecutionState.FAILED,vertex.getExecutionState());
  }
 catch (  Exception e) {
    e.printStackTrace();
    fail(e.getMessage());
  }
}
