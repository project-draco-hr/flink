{
  return new WrappingIterable<T,T>(new ConcatenatingIterable<T>(iterables)){
    @Override protected Iterator<T> wrap(    final Iterator<? extends T> iterator){
      final Set<T> alreadySeen=new HashSet<T>();
      return new FilteringIterator<T>(iterator,new Predicate<T>(){
        @Override public boolean isTrue(        final T param){
          return alreadySeen.add(param);
        }
      }
);
    }
  }
;
}
