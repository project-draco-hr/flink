{
  final TransitiveClosure transitiveClosure=new TransitiveClosure();
  transitiveClosure.setNumberOfPartitions(2);
  final SopremoTestPlan sopremoTestPlan=new SopremoTestPlan(transitiveClosure);
  String nullInput=SopremoTest.getResourcePath("null.json");
  String input=SopremoTest.getResourcePath("gen.json");
  sopremoTestPlan.getInput(0).load(input);
  sopremoTestPlan.getInput(1).load(nullInput);
  final eu.stratosphere.sopremo.cleansing.record_linkage.TransitiveClosure transClos2=new eu.stratosphere.sopremo.cleansing.record_linkage.TransitiveClosure().withClosureMode(ClosureMode.LINKS);
  final SopremoTestPlan sopremoTestPlan2=new SopremoTestPlan(transClos2);
  sopremoTestPlan2.getInput(0).load(input);
  long started=System.currentTimeMillis();
  System.out.println("###starting plan 2 (warshall)###");
  sopremoTestPlan2.run();
  System.out.println("###finished plan 2 (warshall), duration: " + (System.currentTimeMillis() - started) / 1000 + "s ###");
  started=System.currentTimeMillis();
  System.out.println("###starting plan 1 (sopremo)###");
  sopremoTestPlan.run();
  System.out.println("###finished plan 1 (sopremo), duration: " + (System.currentTimeMillis() - started) / 1000 + "s ###");
  System.out.println("###comparing results###");
  sopremoTestPlan.getActualOutput(0).assertEquals(sopremoTestPlan2.getActualOutput(0));
  System.out.println("###finished###");
}
