{
  final MemoryManager memoryManager=getEnvironment().getMemoryManager();
  final IOManager ioManager=getEnvironment().getIOManager();
switch (config.getLocalStrategy()) {
case SORT_BOTH_MERGE:
    return new SortMergeMatchIterator(memoryManager,ioManager,reader1,reader2,matchStub.getFirstInKeyType(),matchStub.getFirstInValueType(),matchStub.getSecondInValueType(),(long)(this.availableMemory * (1.0 - MEMORY_SHARE_RATIO)),this.maxFileHandles,this.spillThreshold,config.getLocalStrategy(),this);
case SORT_FIRST_MERGE:
  return new SortMergeMatchIterator(memoryManager,ioManager,reader1,reader2,matchStub.getFirstInKeyType(),matchStub.getFirstInValueType(),matchStub.getSecondInValueType(),(long)(this.availableMemory * (1.0 - MEMORY_SHARE_RATIO)),this.maxFileHandles,this.spillThreshold,config.getLocalStrategy(),this);
case SORT_SECOND_MERGE:
return new SortMergeMatchIterator(memoryManager,ioManager,reader1,reader2,matchStub.getFirstInKeyType(),matchStub.getFirstInValueType(),matchStub.getSecondInValueType(),(long)(this.availableMemory * (1.0 - MEMORY_SHARE_RATIO)),this.maxFileHandles,this.spillThreshold,config.getLocalStrategy(),this);
case MERGE:
return new SortMergeMatchIterator(memoryManager,ioManager,reader1,reader2,matchStub.getFirstInKeyType(),matchStub.getFirstInValueType(),matchStub.getSecondInValueType(),(long)(this.availableMemory * (1.0 - MEMORY_SHARE_RATIO)),this.maxFileHandles,this.spillThreshold,config.getLocalStrategy(),this);
default :
throw new RuntimeException("Unsupported local strategy for MatchTask: " + config.getLocalStrategy());
}
}
