{
  List<FileInputSplit> snapshot=new ArrayList<>(this.pendingSplits.size());
  for (  FileInputSplit split : this.pendingSplits) {
    snapshot.add(split);
  }
  if (this.currentSplit != null && this.currentSplit.equals(pendingSplits.peek())) {
    this.pendingSplits.remove();
  }
  if (this.currentSplit != null) {
    if (this.format instanceof CheckpointableInputFormat) {
      @SuppressWarnings("unchecked") CheckpointableInputFormat<FileInputSplit,S> checkpointableFormat=(CheckpointableInputFormat<FileInputSplit,S>)this.format;
      S formatState=this.isSplitOpen ? checkpointableFormat.getCurrentState() : restoredFormatState;
      return new Tuple3<>(snapshot,currentSplit,formatState);
    }
 else {
      LOG.info("The format does not support checkpointing. The current input split will be re-read from start upon recovery.");
      return new Tuple3<>(snapshot,currentSplit,null);
    }
  }
 else {
    return new Tuple3<>(snapshot,null,null);
  }
}
