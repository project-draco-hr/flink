{
  int delim=udfPath.lastIndexOf('.');
  if (delim == -1)   throw new IllegalArgumentException("Invalid path");
  String className=udfPath.substring(0,delim), methodName=udfPath.substring(delim + 1);
  JavaFunction function=new JavaFunction(name);
  try {
    Class<?> clazz=Class.forName(className);
    List<Method> functions=FunctionRegistry.getCompatibleMethods(ReflectUtil.getMethods(clazz,methodName,Modifier.STATIC | Modifier.PUBLIC));
    for (    Method method : functions)     function.addSignature(method);
  }
 catch (  ClassNotFoundException e) {
    throw new IllegalArgumentException("Unknown class " + className);
  }
  if (function.getSignatures().isEmpty())   throw new IllegalArgumentException("Unknown method " + methodName);
  this.getContext().getFunctionRegistry().register(function);
}
