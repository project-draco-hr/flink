{
  checkNotNull(executionContext);
  checkNotNull(jobId);
  checkNotNull(jobName);
  checkNotNull(jobConfig);
  checkNotNull(userClassLoader);
  this.executionContext=executionContext;
  this.jobID=jobId;
  this.jobName=jobName;
  this.jobConfiguration=jobConfig;
  this.userClassLoader=userClassLoader;
  this.tasks=new ConcurrentHashMap<JobVertexID,ExecutionJobVertex>();
  this.intermediateResults=new ConcurrentHashMap<IntermediateDataSetID,IntermediateResult>();
  this.verticesInCreationOrder=new ArrayList<ExecutionJobVertex>();
  this.currentExecutions=new ConcurrentHashMap<ExecutionAttemptID,Execution>();
  this.jobStatusListeners=new CopyOnWriteArrayList<>();
  this.executionListeners=new CopyOnWriteArrayList<>();
  this.stateTimestamps=new long[JobStatus.values().length];
  this.stateTimestamps[JobStatus.CREATED.ordinal()]=System.currentTimeMillis();
  this.requiredJarFiles=requiredJarFiles;
  this.requiredClasspaths=requiredClasspaths;
  this.serializedExecutionConfig=checkNotNull(serializedConfig);
  this.timeout=timeout;
  this.restartStrategy=restartStrategy;
  metricGroup.gauge(RESTARTING_TIME_METRIC_NAME,new RestartTimeGauge());
  this.kvStateLocationRegistry=new KvStateLocationRegistry(jobId,getAllVertices());
  try {
    ExecutionConfig executionConfig=serializedConfig.deserializeValue(userClassLoader);
    if (executionConfig != null) {
      this.executionConfigSummary=new ExecutionConfigSummary(executionConfig);
    }
  }
 catch (  IOException|ClassNotFoundException e) {
    LOG.error("Couldn't create ExecutionConfigSummary for job {} ",jobID,e);
  }
}
