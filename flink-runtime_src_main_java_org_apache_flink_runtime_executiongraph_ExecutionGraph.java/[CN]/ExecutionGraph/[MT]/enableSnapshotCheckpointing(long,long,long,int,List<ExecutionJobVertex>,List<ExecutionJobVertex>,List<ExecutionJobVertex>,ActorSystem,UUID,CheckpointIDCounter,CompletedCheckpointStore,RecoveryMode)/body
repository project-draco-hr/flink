{
  if (interval < 10 || checkpointTimeout < 10) {
    throw new IllegalArgumentException();
  }
  if (state != JobStatus.CREATED) {
    throw new IllegalStateException("Job must be in CREATED state");
  }
  ExecutionVertex[] tasksToTrigger=collectExecutionVertices(verticesToTrigger);
  ExecutionVertex[] tasksToWaitFor=collectExecutionVertices(verticesToWaitFor);
  ExecutionVertex[] tasksToCommitTo=collectExecutionVertices(verticesToCommitTo);
  disableSnaphotCheckpointing();
  checkpointCoordinator=new CheckpointCoordinator(jobID,interval,checkpointTimeout,minPauseBetweenCheckpoints,maxConcurrentCheckpoints,tasksToTrigger,tasksToWaitFor,tasksToCommitTo,userClassLoader,checkpointIDCounter,completedCheckpointStore,recoveryMode);
  registerJobStatusListener(checkpointCoordinator.createActivatorDeactivator(actorSystem,leaderSessionID));
}
