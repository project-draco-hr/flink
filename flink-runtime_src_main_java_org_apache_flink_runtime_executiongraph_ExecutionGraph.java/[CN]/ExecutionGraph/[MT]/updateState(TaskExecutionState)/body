{
  Execution attempt=this.currentExecutions.get(state.getID());
  if (attempt != null) {
switch (state.getExecutionState()) {
case RUNNING:
      return attempt.switchToRunning();
case FINISHED:
    try {
      AccumulatorSnapshot accumulators=state.getAccumulators();
      Map<AccumulatorRegistry.Metric,Accumulator<?,?>> flinkAccumulators=accumulators.deserializeFlinkAccumulators();
      Map<String,Accumulator<?,?>> userAccumulators=accumulators.deserializeUserAccumulators(userClassLoader);
      attempt.markFinished(flinkAccumulators,userAccumulators);
    }
 catch (    Exception e) {
      LOG.error("Failed to deserialize final accumulator results.",e);
      attempt.markFailed(e);
    }
  return true;
case CANCELED:
attempt.cancelingComplete();
return true;
case FAILED:
attempt.markFailed(state.getError(userClassLoader));
return true;
default :
attempt.fail(new Exception("TaskManager sent illegal state update: " + state.getExecutionState()));
return false;
}
}
 else {
return false;
}
}
