{
  Execution attempt=this.currentExecutions.get(state.getID());
  if (attempt != null) {
switch (state.getExecutionState()) {
case RUNNING:
      return attempt.switchToRunning();
case FINISHED:
    Map<AccumulatorRegistry.Metric,Accumulator<?,?>> flinkAccumulators=null;
  Map<String,Accumulator<?,?>> userAccumulators=null;
try {
  AccumulatorSnapshot accumulators=state.getAccumulators();
  flinkAccumulators=accumulators.deserializeFlinkAccumulators();
  userAccumulators=accumulators.deserializeUserAccumulators(userClassLoader);
}
 catch (Exception e) {
  LOG.error("Failed to deserialize final accumulator results.",e);
}
attempt.markFinished(flinkAccumulators,userAccumulators);
return true;
case CANCELED:
attempt.cancelingComplete();
return true;
case FAILED:
attempt.markFailed(state.getError(userClassLoader));
return true;
default :
attempt.fail(new Exception("TaskManager sent illegal state update: " + state.getExecutionState()));
return false;
}
}
 else {
return false;
}
}
