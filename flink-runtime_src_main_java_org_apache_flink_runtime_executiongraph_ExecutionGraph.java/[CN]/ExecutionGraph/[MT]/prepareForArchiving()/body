{
  if (!state.isGloballyTerminalState()) {
    throw new IllegalStateException("Can only archive the job from a terminal state");
  }
  restartStrategy=null;
  slotProvider=null;
  checkpointCoordinator=null;
  executionContext=null;
  kvStateLocationRegistry=null;
  for (  ExecutionJobVertex vertex : verticesInCreationOrder) {
    vertex.prepareForArchiving();
  }
  intermediateResults.clear();
  currentExecutions.clear();
  requiredJarFiles.clear();
  requiredClasspaths.clear();
  jobStatusListeners.clear();
  executionListeners.clear();
  if (userClassLoader instanceof FlinkUserCodeClassLoader) {
    try {
      ((FlinkUserCodeClassLoader)userClassLoader).close();
    }
 catch (    IOException e) {
      LOG.warn("Failed to close the user classloader for job {}",jobID,e);
    }
  }
  userClassLoader=null;
  isArchived=true;
}
