{
  if (scheduler == null) {
    throw new IllegalArgumentException("Scheduler must not be null.");
  }
  if (this.scheduler != null && this.scheduler != scheduler) {
    throw new IllegalArgumentException("Cann not use different schedulers for the same job");
  }
  if (transitionState(JobStatus.CREATED,JobStatus.RUNNING)) {
    this.scheduler=scheduler;
    for (    ExecutionJobVertex ejv : this.tasks.values()) {
      if (ejv.getJobVertex().isInputVertex()) {
        ejv.scheduleAll(scheduler,allowQueuedScheduling);
      }
    }
  }
 else {
    throw new IllegalStateException("Job may only be scheduled from state " + JobStatus.CREATED);
  }
}
