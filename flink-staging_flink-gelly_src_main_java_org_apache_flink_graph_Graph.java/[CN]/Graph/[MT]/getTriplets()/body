{
  return this.getVertices().join(this.getEdges()).where(0).equalTo(0).with(new FlatJoinFunction<Vertex<K,VV>,Edge<K,EV>,Tuple4<K,K,VV,EV>>(){
    @Override public void join(    Vertex<K,VV> vertex,    Edge<K,EV> edge,    Collector<Tuple4<K,K,VV,EV>> collector) throws Exception {
      collector.collect(new Tuple4<K,K,VV,EV>(edge.getSource(),edge.getTarget(),vertex.getValue(),edge.getValue()));
    }
  }
).join(this.getVertices()).where(1).equalTo(0).with(new FlatJoinFunction<Tuple4<K,K,VV,EV>,Vertex<K,VV>,Triplet<K,VV,EV>>(){
    @Override public void join(    Tuple4<K,K,VV,EV> tripletWithSrcValSet,    Vertex<K,VV> vertex,    Collector<Triplet<K,VV,EV>> collector) throws Exception {
      collector.collect(new Triplet<K,VV,EV>(tripletWithSrcValSet.f0,tripletWithSrcValSet.f1,tripletWithSrcValSet.f2,vertex.getValue(),tripletWithSrcValSet.f3));
    }
  }
);
}
