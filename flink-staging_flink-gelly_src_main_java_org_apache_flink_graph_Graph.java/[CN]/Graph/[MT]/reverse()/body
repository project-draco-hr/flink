{
  if (this.isUndirected) {
    throw new UnsupportedOperationException("");
  }
 else {
    DataSet<Tuple3<K,K,EV>> undirectedEdges=edges.map(new MapFunction<Tuple3<K,K,EV>,Tuple3<K,K,EV>>(){
      public Tuple3<K,K,EV> map(      Tuple3<K,K,EV> edge){
        return new Tuple3<K,K,EV>(edge.f1,edge.f0,edge.f2);
      }
    }
);
    return new Graph<K,VV,EV>(vertices,(DataSet<Tuple3<K,K,EV>>)undirectedEdges,true);
  }
}
