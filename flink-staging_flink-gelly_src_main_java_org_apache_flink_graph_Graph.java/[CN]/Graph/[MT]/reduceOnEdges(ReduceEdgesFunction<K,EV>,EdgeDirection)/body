{
switch (direction) {
case IN:
    return edges.map(new ProjectVertexIdMap<K,EV>(1)).groupBy(0).reduce(new ApplyReduceFunction<K,EV>(reduceEdgesFunction)).map(new ApplyEdgesMapFunction());
case OUT:
  return edges.map(new ProjectVertexIdMap<K,EV>(0)).groupBy(0).reduce(new ApplyReduceFunction<K,EV>(reduceEdgesFunction)).map(new ApplyEdgesMapFunction());
case ALL:
return edges.flatMap(new EmitOneEdgePerNode<K,VV,EV>()).groupBy(0).reduce(new ApplyReduceFunction<K,EV>(reduceEdgesFunction)).map(new ApplyEdgesMapFunction());
default :
throw new IllegalArgumentException("Illegal edge direction");
}
}
