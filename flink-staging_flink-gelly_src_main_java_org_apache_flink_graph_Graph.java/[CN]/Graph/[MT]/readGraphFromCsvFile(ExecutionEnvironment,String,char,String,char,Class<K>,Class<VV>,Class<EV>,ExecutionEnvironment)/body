{
  CsvReader Tuple2Reader=new CsvReader(Tuple2Filepath,env);
  DataSet<Tuple2<K,VV>> vertices=Tuple2Reader.fieldDelimiter(Tuple2Delimiter).types(Tuple2IdClass,Tuple2ValueClass).map(new MapFunction<Tuple2<K,VV>,Tuple2<K,VV>>(){
    public Tuple2<K,VV> map(    Tuple2<K,VV> value) throws Exception {
      return (Tuple2<K,VV>)value;
    }
  }
);
  CsvReader edgeReader=new CsvReader(edgeFilepath,env);
  DataSet<Tuple3<K,K,EV>> edges=edgeReader.fieldDelimiter(edgeDelimiter).types(Tuple2IdClass,Tuple2IdClass,edgeValueClass).map(new MapFunction<Tuple3<K,K,EV>,Tuple3<K,K,EV>>(){
    public Tuple3<K,K,EV> map(    Tuple3<K,K,EV> value) throws Exception {
      return (Tuple3<K,K,EV>)value;
    }
  }
);
  return Graph.create(vertices,edges,context);
}
