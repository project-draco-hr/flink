{
  final Iterator<Edge<K,EV>> edgesIterator=new Iterator<Edge<K,EV>>(){
    final Iterator<Tuple2<K,Edge<K,EV>>> keysWithEdgesIterator=keysWithEdges.iterator();
    @Override public boolean hasNext(){
      return keysWithEdgesIterator.hasNext();
    }
    @Override public Edge<K,EV> next(){
      return keysWithEdgesIterator.next().f1;
    }
    @Override public void remove(){
      keysWithEdgesIterator.remove();
    }
  }
;
  Iterable<Edge<K,EV>> edgesIterable=new Iterable<Edge<K,EV>>(){
    public Iterator<Edge<K,EV>> iterator(){
      return edgesIterator;
    }
  }
;
  out.collect(function.iterateEdges(vertex.iterator().next(),edgesIterable));
}
