{
  try {
    ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
    env.setParallelism(DEFAULT_PARALLELISM);
{
      DataSet<Long> vertexIds=env.generateSequence(1,2);
      @SuppressWarnings("unchecked") DataSet<Tuple2<Long,Long>> edges=env.fromElements(new Tuple2<Long,Long>(1L,2L));
      DataSet<Tuple2<Long,Long>> initialVertices=vertexIds.map(new IdAssigner());
      DataSet<Tuple2<Long,Long>> result=initialVertices.runOperation(VertexCentricIteration.withPlainEdges(edges,new CCUpdater(),new CCMessager(),100));
      result.output(new DiscardingOutputFormat<Tuple2<Long,Long>>());
    }
    Plan p=env.createProgramPlan("Spargel Connected Components");
    OptimizedPlan op=compileNoStats(p);
    SinkPlanNode sink=op.getDataSinks().iterator().next();
    assertEquals(ShipStrategyType.FORWARD,sink.getInput().getShipStrategy());
    assertEquals(DEFAULT_PARALLELISM,sink.getParallelism());
    WorksetIterationPlanNode iteration=(WorksetIterationPlanNode)sink.getInput().getSource();
    assertEquals(DEFAULT_PARALLELISM,iteration.getParallelism());
    PlanNode ssDelta=iteration.getSolutionSetDeltaPlanNode();
    assertTrue(ssDelta instanceof DualInputPlanNode);
    DualInputPlanNode ssJoin=(DualInputPlanNode)ssDelta;
    assertEquals(DEFAULT_PARALLELISM,ssJoin.getParallelism());
    assertEquals(ShipStrategyType.PARTITION_HASH,ssJoin.getInput1().getShipStrategy());
    assertEquals(new FieldList(0),ssJoin.getInput1().getShipStrategyKeys());
    DualInputPlanNode edgeJoin=(DualInputPlanNode)ssJoin.getInput1().getSource();
    assertEquals(DEFAULT_PARALLELISM,edgeJoin.getParallelism());
    assertEquals(ShipStrategyType.PARTITION_HASH,edgeJoin.getInput1().getShipStrategy());
    assertEquals(ShipStrategyType.FORWARD,edgeJoin.getInput2().getShipStrategy());
    assertTrue(edgeJoin.getInput1().getTempMode().isCached());
    assertEquals(new FieldList(0),edgeJoin.getInput1().getShipStrategyKeys());
    assertEquals(ShipStrategyType.PARTITION_HASH,iteration.getInput1().getShipStrategy());
    assertEquals(ShipStrategyType.PARTITION_HASH,iteration.getInput2().getShipStrategy());
    assertEquals(new FieldList(0),iteration.getInput1().getShipStrategyKeys());
    assertEquals(new FieldList(0),iteration.getInput2().getShipStrategyKeys());
    assertEquals(LocalStrategy.SORT,iteration.getInput2().getLocalStrategy());
    assertEquals(new FieldList(0),iteration.getInput2().getLocalStrategyKeys());
  }
 catch (  Exception e) {
    System.err.println(e.getMessage());
    e.printStackTrace();
    fail(e.getMessage());
  }
}
