{
  if (args.length < 2) {
    System.out.println("KMeansDataGenerator <numberOfDataPoints> <numberOfClusterCenters> [<output-path>] [<relative stddev>] [<centroid range>] [<seed>]");
    System.exit(1);
  }
  final int numDataPoints=Integer.parseInt(args[0]);
  final int k=Integer.parseInt(args[1]);
  final String outDir=args.length > 2 ? args[2] : System.getProperty("java.io.tmpdir");
  final double stddev=args.length > 3 ? Double.parseDouble(args[3]) : RELATIVE_STDDEV;
  final double range=args.length > 4 ? Double.parseDouble(args[4]) : DEFAULT_VALUE_RANGE;
  final long firstSeed=args.length > 5 ? Long.parseLong(args[5]) : DEFAULT_SEED;
  final double absoluteStdDev=stddev * range;
  final Random random=new Random(firstSeed);
  final double[][] means=uniformRandomCenters(random,k,DIMENSIONALITY,range);
  BufferedWriter pointsOut=null;
  try {
    pointsOut=new BufferedWriter(new FileWriter(new File(outDir + "/" + POINTS_FILE)));
    StringBuilder buffer=new StringBuilder();
    double[] point=new double[DIMENSIONALITY];
    int nextCentroid=0;
    for (int i=1; i <= numDataPoints; i++) {
      double[] centroid=means[nextCentroid];
      for (int d=0; d < DIMENSIONALITY; d++) {
        point[d]=(random.nextGaussian() * absoluteStdDev) + centroid[d];
      }
      writePoint(point,buffer,pointsOut);
      nextCentroid=(nextCentroid + 1) % k;
    }
  }
  finally {
    if (pointsOut != null) {
      pointsOut.close();
    }
  }
  BufferedWriter centersOut=null;
  try {
    centersOut=new BufferedWriter(new FileWriter(new File(outDir + "/" + CENTERS_FILE)));
    StringBuilder buffer=new StringBuilder();
    double[][] centers=uniformRandomCenters(random,k,DIMENSIONALITY,range);
    for (int i=0; i < k; i++) {
      writeCenter(i + 1,centers[i],buffer,centersOut);
    }
  }
  finally {
    if (centersOut != null) {
      centersOut.close();
    }
  }
  System.out.println("Wrote " + numDataPoints + " data points to "+ outDir+ "/"+ POINTS_FILE);
  System.out.println("Wrote " + k + " cluster centers to "+ outDir+ "/"+ CENTERS_FILE);
}
