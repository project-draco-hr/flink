{
switch (progId) {
case 1:
{
      final ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
      DataSet<Tuple3<Integer,Long,String>> ds=CollectionDataSets.get3TupleDataSet(env);
      DataSet<Tuple3<Integer,Long,String>> filterDs=ds.filter(new FilterFunction<Tuple3<Integer,Long,String>>(){
        private static final long serialVersionUID=1L;
        @Override public boolean filter(        Tuple3<Integer,Long,String> value) throws Exception {
          return false;
        }
      }
);
      filterDs.writeAsCsv(resultPath);
      env.execute();
      return "\n";
    }
case 2:
{
    final ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
    DataSet<Tuple3<Integer,Long,String>> ds=CollectionDataSets.get3TupleDataSet(env);
    DataSet<Tuple3<Integer,Long,String>> filterDs=ds.filter(new FilterFunction<Tuple3<Integer,Long,String>>(){
      private static final long serialVersionUID=1L;
      @Override public boolean filter(      Tuple3<Integer,Long,String> value) throws Exception {
        return true;
      }
    }
);
    filterDs.writeAsCsv(resultPath);
    env.execute();
    return "1,1,Hi\n" + "2,2,Hello\n" + "3,2,Hello world\n"+ "4,3,Hello world, how are you?\n"+ "5,3,I am fine.\n"+ "6,3,Luke Skywalker\n"+ "7,4,Comment#1\n"+ "8,4,Comment#2\n"+ "9,4,Comment#3\n"+ "10,4,Comment#4\n"+ "11,5,Comment#5\n"+ "12,5,Comment#6\n"+ "13,5,Comment#7\n"+ "14,5,Comment#8\n"+ "15,5,Comment#9\n"+ "16,6,Comment#10\n"+ "17,6,Comment#11\n"+ "18,6,Comment#12\n"+ "19,6,Comment#13\n"+ "20,6,Comment#14\n"+ "21,6,Comment#15\n";
  }
case 3:
{
  final ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
  DataSet<Tuple3<Integer,Long,String>> ds=CollectionDataSets.get3TupleDataSet(env);
  DataSet<Tuple3<Integer,Long,String>> filterDs=ds.filter(new FilterFunction<Tuple3<Integer,Long,String>>(){
    private static final long serialVersionUID=1L;
    @Override public boolean filter(    Tuple3<Integer,Long,String> value) throws Exception {
      return value.f2.contains("world");
    }
  }
);
  filterDs.writeAsCsv(resultPath);
  env.execute();
  return "3,2,Hello world\n" + "4,3,Hello world, how are you?\n";
}
case 4:
{
final ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
DataSet<Tuple3<Integer,Long,String>> ds=CollectionDataSets.get3TupleDataSet(env);
DataSet<Tuple3<Integer,Long,String>> filterDs=ds.filter(new FilterFunction<Tuple3<Integer,Long,String>>(){
  private static final long serialVersionUID=1L;
  @Override public boolean filter(  Tuple3<Integer,Long,String> value) throws Exception {
    return (value.f0 % 2) == 0;
  }
}
);
filterDs.writeAsCsv(resultPath);
env.execute();
return "2,2,Hello\n" + "4,3,Hello world, how are you?\n" + "6,3,Luke Skywalker\n"+ "8,4,Comment#2\n"+ "10,4,Comment#4\n"+ "12,5,Comment#6\n"+ "14,5,Comment#8\n"+ "16,6,Comment#10\n"+ "18,6,Comment#12\n"+ "20,6,Comment#14\n";
}
case 5:
{
final ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
DataSet<String> ds=CollectionDataSets.getStringDataSet(env);
DataSet<String> filterDs=ds.filter(new FilterFunction<String>(){
private static final long serialVersionUID=1L;
@Override public boolean filter(String value) throws Exception {
  return value.startsWith("H");
}
}
);
filterDs.writeAsText(resultPath);
env.execute();
return "Hi\n" + "Hello\n" + "Hello world\n"+ "Hello world, how are you?\n";
}
case 6:
{
final ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
DataSet<CustomType> ds=CollectionDataSets.getCustomTypeDataSet(env);
DataSet<CustomType> filterDs=ds.filter(new FilterFunction<CustomType>(){
private static final long serialVersionUID=1L;
@Override public boolean filter(CustomType value) throws Exception {
return value.myString.contains("a");
}
}
);
filterDs.writeAsText(resultPath);
env.execute();
return "3,3,Hello world, how are you?\n" + "3,4,I am fine.\n" + "3,5,Luke Skywalker\n";
}
case 7:
{
final ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
DataSet<Integer> ints=CollectionDataSets.getIntegerDataSet(env);
DataSet<Tuple3<Integer,Long,String>> ds=CollectionDataSets.get3TupleDataSet(env);
DataSet<Tuple3<Integer,Long,String>> filterDs=ds.filter(new FilterFunction<Tuple3<Integer,Long,String>>(){
private static final long serialVersionUID=1L;
int literal=-1;
@Override public void open(Configuration config){
Collection<Integer> ints=this.getRuntimeContext().getBroadcastVariable("ints");
for (int i : ints) {
literal=literal < i ? i : literal;
}
}
@Override public boolean filter(Tuple3<Integer,Long,String> value) throws Exception {
return value.f0 < literal;
}
}
).withBroadcastSet(ints,"ints");
filterDs.writeAsCsv(resultPath);
env.execute();
return "1,1,Hi\n" + "2,2,Hello\n" + "3,2,Hello world\n"+ "4,3,Hello world, how are you?\n";
}
case 8:
{
final ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
DataSet<Integer> intDs=CollectionDataSets.getIntegerDataSet(env);
DataSet<Tuple3<Integer,Long,String>> ds=CollectionDataSets.get3TupleDataSet(env);
DataSet<Tuple3<Integer,Long,String>> filterDs=ds.filter(new FilterFunction<Tuple3<Integer,Long,String>>(){
private static final long serialVersionUID=1L;
private int broadcastSum=0;
@Override public void open(Configuration config){
Collection<Integer> ints=this.getRuntimeContext().getBroadcastVariable("ints");
for (Integer i : ints) {
broadcastSum+=i;
}
}
@Override public boolean filter(Tuple3<Integer,Long,String> value) throws Exception {
return (value.f1 == (broadcastSum / 11));
}
}
).withBroadcastSet(intDs,"ints");
;
filterDs.writeAsCsv(resultPath);
env.execute();
return "11,5,Comment#5\n" + "12,5,Comment#6\n" + "13,5,Comment#7\n"+ "14,5,Comment#8\n"+ "15,5,Comment#9\n";
}
default :
throw new IllegalArgumentException("Invalid program id");
}
}
