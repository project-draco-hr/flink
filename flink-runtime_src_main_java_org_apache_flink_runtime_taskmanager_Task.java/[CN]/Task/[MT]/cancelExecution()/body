{
  while (true) {
    ExecutionState current=this.executionState;
    if (current == ExecutionState.FINISHED || current == ExecutionState.CANCELED || current == ExecutionState.CANCELING) {
      return;
    }
    if (current == ExecutionState.DEPLOYING) {
      if (STATE_UPDATER.compareAndSet(this,current,ExecutionState.CANCELED)) {
        notifyObservers(ExecutionState.CANCELED,null);
        taskManager.notifyExecutionStateChange(jobId,executionId,ExecutionState.CANCELED,null);
        return;
      }
    }
 else     if (current == ExecutionState.RUNNING) {
      if (STATE_UPDATER.compareAndSet(this,current,ExecutionState.CANCELING)) {
        notifyObservers(ExecutionState.CANCELING,null);
        try {
          this.environment.cancelExecution();
        }
 catch (        Throwable e) {
          LOG.error("Error while cancelling the task.",e);
        }
        return;
      }
    }
 else {
      throw new RuntimeException("unexpected state for cancelling: " + current);
    }
  }
}
