{
  AbstractInvokable invokable=this.invokable;
  final CheckpointMetaData checkpointMetaData=new CheckpointMetaData(checkpointID,checkpointTimestamp);
  if (executionState == ExecutionState.RUNNING && invokable != null) {
    if (invokable instanceof StatefulTask) {
      final StatefulTask statefulTask=(StatefulTask)invokable;
      final String taskName=taskNameWithSubtask;
      Runnable runnable=new Runnable(){
        @Override public void run(){
          try {
            boolean success=statefulTask.triggerCheckpoint(checkpointMetaData);
            if (!success) {
              checkpointResponder.declineCheckpoint(jobId,getExecutionId(),checkpointMetaData);
            }
          }
 catch (          Throwable t) {
            if (getExecutionState() == ExecutionState.RUNNING) {
              failExternally(new RuntimeException("Error while triggering checkpoint for " + taskName,t));
            }
          }
        }
      }
;
      executeAsyncCallRunnable(runnable,"Checkpoint Trigger for " + taskName);
    }
 else {
      LOG.error("Task received a checkpoint request, but is not a checkpointing task - " + taskNameWithSubtask);
    }
  }
 else {
    LOG.debug("Ignoring request to trigger a checkpoint for non-running task.");
  }
}
