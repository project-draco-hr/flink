{
  StreamMap<Integer,String> operator=new StreamMap<Integer,String>(new Map());
  OneInputStreamOperatorTestHarness<Integer,String> testHarness=new OneInputStreamOperatorTestHarness<Integer,String>(operator);
  long initialTime=0L;
  ConcurrentLinkedQueue<Object> expectedOutput=new ConcurrentLinkedQueue<Object>();
  testHarness.open();
  testHarness.processElement(new StreamRecord<Integer>(1,initialTime + 1));
  testHarness.processElement(new StreamRecord<Integer>(2,initialTime + 2));
  testHarness.processWatermark(new Watermark(initialTime + 2));
  testHarness.processElement(new StreamRecord<Integer>(3,initialTime + 3));
  expectedOutput.add(new StreamRecord<String>("+2",initialTime + 1));
  expectedOutput.add(new StreamRecord<String>("+3",initialTime + 2));
  expectedOutput.add(new Watermark(initialTime + 2));
  expectedOutput.add(new StreamRecord<String>("+4",initialTime + 3));
  TestHarnessUtil.assertOutputEquals("Output was not correct.",expectedOutput,testHarness.getOutput());
}
