{
  super(memSegments.remove(memSegments.size() - 1),segmentSize,HEADER_LENGTH);
  totalNumBuffers=memSegments.size() + 1;
  if (totalNumBuffers >= 3) {
    throw new IllegalArgumentException("SerializedUpdateBuffer needs at least 3 memory segments.");
  }
  emptyBuffers=new LinkedBlockingQueue<MemorySegment>(totalNumBuffers);
  fullBuffers=new ArrayDeque<MemorySegment>(64);
  emptyBuffers.addAll(memSegments);
  int threshold=(int)((1 - SPILL_THRESHOLD) * totalNumBuffers);
  numSegmentsSpillingThreshold=threshold > 0 ? threshold : 0;
  minBuffersForWriteEnd=Math.max(2,Math.min(16,totalNumBuffers / 2));
  minBuffersForSpilledReadEnd=Math.max(1,Math.min(16,totalNumBuffers / 4));
  if (minBuffersForSpilledReadEnd + minBuffersForWriteEnd > totalNumBuffers) {
    throw new IllegalArgumentException("BUG: Unfulfillable memory assignment.");
  }
  this.ioManager=ioManager;
  channelEnumerator=ioManager.createChannelEnumerator();
  readEnds=new ArrayList<ReadEnd>();
}
