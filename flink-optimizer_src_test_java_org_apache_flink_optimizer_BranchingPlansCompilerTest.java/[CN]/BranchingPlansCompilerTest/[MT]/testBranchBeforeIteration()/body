{
  ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
  env.setParallelism(DEFAULT_PARALLELISM);
  DataSet<Long> source1=env.generateSequence(0,1);
  DataSet<Long> source2=env.generateSequence(0,1);
  IterativeDataSet<Long> loopHead=source2.iterate(10).name("Loop");
  DataSet<Long> loopTail=source1.map(new IdentityMapper<Long>()).withBroadcastSet(loopHead,"BC").name("In-Loop Mapper");
  DataSet<Long> loopRes=loopHead.closeWith(loopTail);
  DataSet<Long> map=source1.map(new IdentityMapper<Long>()).withBroadcastSet(loopRes,"BC").name("Post-Loop Mapper");
  map.output(new DiscardingOutputFormat<Long>());
  Plan plan=env.createProgramPlan();
  try {
    compileNoStats(plan);
  }
 catch (  Exception e) {
    e.printStackTrace();
    Assert.fail(e.getMessage());
  }
}
