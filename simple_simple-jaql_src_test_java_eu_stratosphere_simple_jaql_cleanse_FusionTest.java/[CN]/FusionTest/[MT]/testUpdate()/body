{
  final SopremoPlan actualPlan=this.parseScript("using cleansing;\n" + "$personCluster = read 'personCluster.json';\n" + "abbr = fn(str, prefix) str + prefix;\n"+ "MergeAddresses = javaudf('eu.stratosphere.simple.jaql.cleanse.FusionTest.mergeAddresses');\n"+ "$fusedPersons = fuse [$member, $sponsor] in $personCluster\n"+ "	update {\n"+ "		$.relative[*].id: $.id,\n"+ "	};\n"+ "write $fusedPersons to hdfs('fusedPersons.json');");
  final SopremoPlan expectedPlan=new SopremoPlan();
  final Source personCluster=new Source("personCluster.json");
  final Fusion fusion=new Fusion().withInputs(personCluster);
  fusion.addUpdateRule(JsonUtil.createPath("0","id"),new PathExpression(new JsonStreamExpression(fusion),new ObjectAccess("relative"),new ArrayProjection(new ObjectAccess("id"))));
  final Sink fusedPersons=new Sink("fusedPersons.json").withInputs(fusion);
  expectedPlan.setSinks(fusedPersons);
  assertEquals(expectedPlan,actualPlan);
}
