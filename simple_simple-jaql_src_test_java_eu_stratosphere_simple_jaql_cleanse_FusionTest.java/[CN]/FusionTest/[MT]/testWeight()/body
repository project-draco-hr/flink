{
  final SopremoPlan actualPlan=this.parseScript("using cleansing;\n" + "$personCluster = read 'personCluster.json';\n" + "abbr = fn(str, prefix) str + prefix;\n"+ "MergeAddresses = javaudf('eu.stratosphere.simple.jaql.cleanse.FusionTest.mergeAddresses');\n"+ "$fusedPersons = fuse [$member, $sponsor] in $personCluster\n"+ "	with weights { \n"+ "		$member: 0.99,\n"+ "		$sponsor: 0.99 * {\n"+ "			addresses: 0.7\n"+ "		}\n"+ "	};\n"+ "write $fusedPersons to hdfs('fusedPersons.json');");
  final SopremoPlan expectedPlan=new SopremoPlan();
  final Source personCluster=new Source("personCluster.json");
  final Fusion fusion=new Fusion().withInputs(personCluster);
  fusion.setWeight(0.99,0,new PathExpression());
  fusion.setWeight(0.99,1,new PathExpression());
  fusion.setWeight(0.7,1,new PathExpression(new ObjectAccess("addresses")));
  final Sink fusedPersons=new Sink("fusedPersons.json").withInputs(fusion);
  expectedPlan.setSinks(fusedPersons);
  assertEquals(expectedPlan,actualPlan);
}
