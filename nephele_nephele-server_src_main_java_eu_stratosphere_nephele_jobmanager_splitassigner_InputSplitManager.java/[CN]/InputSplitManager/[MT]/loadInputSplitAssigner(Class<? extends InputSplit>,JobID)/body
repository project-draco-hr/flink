{
  final String typeClassName=inputSplitType.getSimpleName();
  final String assignerKey=INPUT_SPLIT_CONFIG_KEY_PREFIX + typeClassName;
  LOG.info("Trying to load input split assigner for type " + typeClassName);
  String assignerClassName=GlobalConfiguration.getString(assignerKey,null);
  if (assignerClassName == null) {
    if (FileInputSplit.class.getSimpleName().equals(typeClassName)) {
      assignerClassName=FileInputSplitAssigner.class.getName();
    }
 else {
      return null;
    }
  }
  try {
    Class<? extends InputSplitAssigner> assignerClass;
    boolean useUserJar=GlobalConfiguration.getBoolean(INPUT_SPLIT_CONFIG_KEY_PREFIX + "useUserJar",false);
    if (useUserJar) {
      final ClassLoader cl=LibraryCacheManager.getClassLoader(jid);
      assignerClass=(Class<? extends InputSplitAssigner>)Class.forName(assignerClassName,true,cl);
    }
 else {
      assignerClass=(Class<? extends InputSplitAssigner>)Class.forName(assignerClassName);
    }
    return assignerClass.newInstance();
  }
 catch (  Exception e) {
    LOG.error(StringUtils.stringifyException(e));
  }
  return null;
}
