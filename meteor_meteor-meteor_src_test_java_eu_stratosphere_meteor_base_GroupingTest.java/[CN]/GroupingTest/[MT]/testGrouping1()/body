{
  final SopremoPlan actualPlan=this.parseScript("$employees = read from 'employees.json';\n" + "$result = group $employees into count($employees);\n" + "write $result to 'output.json'; ");
  final SopremoPlan expectedPlan=new SopremoPlan();
  final EvaluationContext context=expectedPlan.getEvaluationContext();
  context.getFunctionRegistry().put(CoreFunctions.class);
  final Source input=new Source("employees.json");
  final Grouping selection=new Grouping().withResultProjection(new FunctionCall("count",context,new InputSelection(0))).withInputs(input);
  final Sink output=new Sink("output.json").withInputs(selection);
  expectedPlan.setSinks(output);
  assertPlanEquals(expectedPlan,actualPlan);
}
