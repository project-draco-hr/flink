'\nModule to show if an object has changed since it was memorised\n'
import os
import sys
import types
try:
    import numpy
    HAS_NUMPY = True
except:
    HAS_NUMPY = False
try:
    import builtins
except ImportError:
    import __builtin__ as builtins
memo = {}
id_to_obj = {}
builtins_types = set((str, list, dict, set, frozenset, int))
dont_memo = set((id(i) for i in (memo, sys.modules, sys.path_importer_cache, os.environ, id_to_obj)))
__import__ = __import__
builtins.__import__ = _imp
if hasattr(builtins, '_'):
    del builtins._
for mod in sys.modules.values():
    memorise(mod)
release_gone()
