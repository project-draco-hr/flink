{
  try {
{
      String[] parameters={"-v","-k"};
      CliFrontend testFrontend=new CliFrontend(CliFrontendTestUtils.getConfigDir());
      int retCode=testFrontend.list(parameters);
      assertTrue(retCode != 0);
    }
{
      final UUID leaderSessionID=UUID.randomUUID();
      final ActorRef jm=actorSystem.actorOf(Props.create(CliJobManager.class,null,leaderSessionID));
      final ActorGateway gateway=new AkkaActorGateway(jm,leaderSessionID);
      String[] parameters={"-r","-s"};
      InfoListTestCliFrontend testFrontend=new InfoListTestCliFrontend(gateway);
      int retCode=testFrontend.list(parameters);
      assertTrue(retCode == 0);
    }
  }
 catch (  Exception e) {
    System.err.println(e.getMessage());
    e.printStackTrace();
    fail("Program caused an exception: " + e.getMessage());
  }
}
