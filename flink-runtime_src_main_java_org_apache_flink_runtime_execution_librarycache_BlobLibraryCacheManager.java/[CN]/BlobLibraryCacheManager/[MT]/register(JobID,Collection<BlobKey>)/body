{
synchronized (lockObject) {
    if (incrementReferenceCounter(id,libraryReferenceCounter) > 1) {
      return;
    }
    if (this.classLoaders.containsKey(id)) {
      throw new IllegalStateException("Library cache manager already contains " + "class loader entry for job ID " + id);
    }
    if (requiredJars.containsKey(id)) {
      throw new IllegalStateException("Library cache manager already contains blob keys" + " entry for job ID " + id);
    }
    requiredJars.put(id,requiredJarFiles);
    URL[] urls=new URL[requiredJarFiles.size()];
    int count=0;
    for (    BlobKey blobKey : requiredJarFiles) {
      urls[count++]=registerBlobKeyAndGetURL(blobKey);
    }
    final URLClassLoader classLoader=new URLClassLoader(urls);
    this.classLoaders.put(id,classLoader);
  }
}
