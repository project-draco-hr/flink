{
  try {
    final JobID jid=new JobID();
    final JobVertexID vid=new JobVertexID();
    JobVertex ajv=new JobVertex("TestVertex",vid);
    ajv.setParallelism(3);
    ajv.setInvokableClass(mock(AbstractInvokable.class).getClass());
    ExecutionGraph graph=new ExecutionGraph(TestingUtils.defaultExecutionContext(),jid,"test job",new Configuration(),AkkaUtils.getDefaultTimeout(),new NoRestartStrategy());
    graph.attachJobGraph(Arrays.asList(ajv));
    setGraphStatus(graph,JobStatus.RUNNING);
    ExecutionJobVertex ejv=graph.getJobVertex(vid);
    for (    ExecutionVertex ee : ejv.getTaskVertices()) {
      SimpleSlot slot=getInstance(new SimpleActorGateway(TestingUtils.defaultExecutionContext())).allocateSimpleSlot(jid);
      ee.deployToSlot(slot);
    }
    for (    ExecutionVertex ee : ejv.getTaskVertices()) {
      ee.executionFinished();
    }
    assertTrue(ejv.isInFinalState());
    assertEquals(JobStatus.FINISHED,graph.getState());
  }
 catch (  Exception e) {
    e.printStackTrace();
    fail(e.getMessage());
  }
}
