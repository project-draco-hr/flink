{
  @SuppressWarnings("unchecked") KafkaTopicPartitionState<KPH>[] partitions=(KafkaTopicPartitionState<KPH>[])new KafkaTopicPartitionState<?>[assignedPartitions.size()];
  int pos=0;
  for (  KafkaTopicPartition partition : assignedPartitions) {
    KPH kafkaHandle=createKafkaPartitionHandle(partition);
    KafkaTopicPartitionState<KPH> partitionState;
switch (timestampWatermarkMode) {
case NO_TIMESTAMPS_WATERMARKS:
      partitionState=new KafkaTopicPartitionState<>(partition,kafkaHandle);
    break;
case PERIODIC_WATERMARKS:
{
    AssignerWithPeriodicWatermarks<T> assignerInstance=watermarksPeriodic.deserializeValue(userCodeClassLoader);
    partitionState=new KafkaTopicPartitionStateWithPeriodicWatermarks<>(partition,kafkaHandle,assignerInstance);
    break;
  }
case PUNCTUATED_WATERMARKS:
{
  AssignerWithPunctuatedWatermarks<T> assignerInstance=watermarksPunctuated.deserializeValue(userCodeClassLoader);
  partitionState=new KafkaTopicPartitionStateWithPunctuatedWatermarks<>(partition,kafkaHandle,assignerInstance);
  break;
}
default :
throw new RuntimeException();
}
partitions[pos++]=partitionState;
}
return partitions;
}
