{
  final int newSize=table.length << 1;
  if (newSize > 0) {
    final Entry<K,V>[] oldTable=this.table;
    final Entry<K,V>[] newTable=allocateTable(newSize);
    final int newShift=shift - 1;
    final int newMask=newSize - 1;
    for (    Entry<K,V> entry : oldTable) {
      while (entry != null) {
        final int newPos=(entry.hashCode >> newShift) & newMask;
        Entry<K,V> nextEntry=entry.next;
        entry.next=newTable[newPos];
        newTable[newPos]=entry;
        entry=nextEntry;
      }
    }
    this.table=newTable;
    this.shift=newShift;
    this.rehashThreshold=getRehashThreshold(newSize);
    this.log2size+=1;
  }
}
