{
  StreamTaskState taskState=super.snapshotOperatorState(checkpointId,timestamp);
  AbstractStateBackend.CheckpointStateOutputView out=getStateBackend().createCheckpointStateOutputView(checkpointId,timestamp);
  out.writeInt(watermarkTimersQueue.size());
  for (  Timer<K,W> timer : watermarkTimersQueue) {
    keySerializer.serialize(timer.key,out);
    windowSerializer.serialize(timer.window,out);
    out.writeLong(timer.timestamp);
  }
  out.writeInt(processingTimeTimers.size());
  for (  Timer<K,W> timer : processingTimeTimersQueue) {
    keySerializer.serialize(timer.key,out);
    windowSerializer.serialize(timer.window,out);
    out.writeLong(timer.timestamp);
  }
  taskState.setOperatorState(out.closeAndGetHandle());
  return taskState;
}
