{
  super.open();
  timestampedCollector=new TimestampedCollector<>(output);
  if (watermarkTimers == null) {
    watermarkTimers=new HashSet<>();
    watermarkTimersQueue=new PriorityQueue<>(100);
  }
  if (processingTimeTimers == null) {
    processingTimeTimers=new HashSet<>();
    processingTimeTimersQueue=new PriorityQueue<>(100);
  }
  context=new Context(null,null);
  windowAssignerContext=new WindowAssigner.WindowAssignerContext(){
    @Override public long getCurrentProcessingTime(){
      return WindowOperator.this.getTimerService().getCurrentProcessingTime();
    }
  }
;
  if (windowAssigner instanceof MergingWindowAssigner) {
    mergingWindowsByKey=new HashMap<>();
  }
}
