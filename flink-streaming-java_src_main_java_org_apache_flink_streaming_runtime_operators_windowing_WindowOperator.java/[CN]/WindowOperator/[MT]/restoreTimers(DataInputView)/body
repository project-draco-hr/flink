{
  int numWatermarkTimers=in.readInt();
  watermarkTimers=new HashSet<>(numWatermarkTimers);
  watermarkTimersQueue=new PriorityQueue<>(Math.max(numWatermarkTimers,1));
  for (int i=0; i < numWatermarkTimers; i++) {
    K key=keySerializer.deserialize(in);
    W window=windowSerializer.deserialize(in);
    long timestamp=in.readLong();
    Timer<K,W> timer=new Timer<>(timestamp,key,window);
    watermarkTimers.add(timer);
    watermarkTimersQueue.add(timer);
  }
  int numProcessingTimeTimers=in.readInt();
  processingTimeTimersQueue=new PriorityQueue<>(Math.max(numProcessingTimeTimers,1));
  processingTimeTimers=new HashSet<>();
  for (int i=0; i < numProcessingTimeTimers; i++) {
    K key=keySerializer.deserialize(in);
    W window=windowSerializer.deserialize(in);
    long timestamp=in.readLong();
    Timer<K,W> timer=new Timer<>(timestamp,key,window);
    processingTimeTimersQueue.add(timer);
    processingTimeTimers.add(timer);
  }
}
