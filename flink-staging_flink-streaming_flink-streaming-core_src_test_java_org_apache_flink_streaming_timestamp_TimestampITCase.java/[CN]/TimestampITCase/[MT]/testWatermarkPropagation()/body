{
  final int NUM_WATERMARKS=10;
  long initialTime=0L;
  StreamExecutionEnvironment env=StreamExecutionEnvironment.createRemoteEnvironment("localhost",cluster.getJobManagerRPCPort());
  env.setParallelism(PARALLELISM);
  env.getConfig().disableSysoutLogging();
  env.getConfig().enableTimestamps();
  DataStream<Integer> source1=env.addSource(new MyTimestampSource(initialTime,NUM_WATERMARKS));
  DataStream<Integer> source2=env.addSource(new MyTimestampSource(initialTime,NUM_WATERMARKS));
  source1.map(new IdentityMap()).connect(source2).map(new IdentityCoMap()).transform("Custom Operator",BasicTypeInfo.INT_TYPE_INFO,new CustomOperator()).addSink(new NoOpSink<Integer>());
  env.execute();
  for (int i=0; i < PARALLELISM; i++) {
    for (int j=0; j < NUM_WATERMARKS; j++) {
      if (!CustomOperator.finalWatermarks[i].get(j).equals(new Watermark(initialTime + j))) {
        Assert.fail("Wrong watermark.");
      }
    }
  }
}
