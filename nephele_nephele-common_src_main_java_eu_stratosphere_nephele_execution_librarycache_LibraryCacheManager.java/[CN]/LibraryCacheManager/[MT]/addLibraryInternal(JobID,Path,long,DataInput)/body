{
  if (size > (long)Integer.MAX_VALUE) {
    throw new IOException("Submitted jar file " + name + " is too large");
  }
  final byte[] buf=new byte[(int)size];
  in.readFully(buf);
  this.md.reset();
  this.md.update(buf);
  final String cacheName=StringUtils.byteToHexString(md.digest()) + ".jar";
  final Path storePath=new Path(this.libraryCachePath + "/" + cacheName);
synchronized (this.fs) {
    if (!this.fs.exists(storePath)) {
      final FSDataOutputStream fos=this.fs.create(storePath,false);
      fos.write(buf,0,buf.length);
      fos.close();
    }
  }
  final LibraryTranslationKey key=new LibraryTranslationKey(jobID,name);
  this.clientPathToCacheName.putIfAbsent(key,cacheName);
}
