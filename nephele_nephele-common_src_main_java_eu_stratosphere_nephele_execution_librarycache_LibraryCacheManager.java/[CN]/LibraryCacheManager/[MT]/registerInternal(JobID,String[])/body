{
synchronized (this.libraryManagerEntries) {
    if (this.libraryManagerEntries.containsKey(id)) {
      return;
    }
  }
  URL[] urls=null;
  if (requiredJarFiles != null) {
    urls=new URL[requiredJarFiles.length];
    for (int i=0; i < requiredJarFiles.length; i++) {
      final Path p=contains(requiredJarFiles[i]);
      if (p == null)       throw new IOException(requiredJarFiles[i] + " does not exist in the library cache");
      try {
        urls[i]=p.toUri().toURL();
      }
 catch (      MalformedURLException e) {
        throw new IOException(StringUtils.stringifyException(e));
      }
    }
  }
  final LibraryManagerEntry entry=new LibraryManagerEntry(id,requiredJarFiles,urls);
synchronized (this.libraryManagerEntries) {
    this.libraryManagerEntries.put(id,entry);
  }
}
