{
  MergingWindowSet<TimeWindow> windowSet=new MergingWindowSet<>(EventTimeSessionWindows.withGap(Time.milliseconds(3)));
  TestingMergeFunction mergeFunction=new TestingMergeFunction();
  mergeFunction.reset();
  assertEquals(new TimeWindow(0,4),windowSet.addWindow(new TimeWindow(0,4),mergeFunction));
  assertFalse(mergeFunction.hasMerged());
  assertTrue(windowSet.getStateWindow(new TimeWindow(0,4)).equals(new TimeWindow(0,4)));
  mergeFunction.reset();
  assertEquals(new TimeWindow(0,4),windowSet.addWindow(new TimeWindow(0,4),mergeFunction));
  assertFalse(mergeFunction.hasMerged());
  mergeFunction.reset();
  assertEquals(new TimeWindow(0,5),windowSet.addWindow(new TimeWindow(3,5),mergeFunction));
  assertTrue(mergeFunction.hasMerged());
  assertEquals(new TimeWindow(0,5),mergeFunction.mergeTarget());
  assertEquals(new TimeWindow(0,4),mergeFunction.stateWindow());
  assertThat(mergeFunction.mergeSources(),containsInAnyOrder(new TimeWindow(0,4)));
  assertTrue(mergeFunction.mergedStateWindows().isEmpty());
  mergeFunction.reset();
  assertEquals(new TimeWindow(0,6),windowSet.addWindow(new TimeWindow(4,6),mergeFunction));
  assertTrue(mergeFunction.hasMerged());
  assertEquals(new TimeWindow(0,6),mergeFunction.mergeTarget());
  assertEquals(new TimeWindow(0,4),mergeFunction.stateWindow());
  assertThat(mergeFunction.mergeSources(),containsInAnyOrder(new TimeWindow(0,5)));
  assertTrue(mergeFunction.mergedStateWindows().isEmpty());
  assertEquals(new TimeWindow(0,4),windowSet.getStateWindow(new TimeWindow(0,6)));
  mergeFunction.reset();
  assertEquals(new TimeWindow(0,6),windowSet.addWindow(new TimeWindow(1,4),mergeFunction));
  assertFalse(mergeFunction.hasMerged());
  mergeFunction.reset();
  assertEquals(new TimeWindow(0,6),windowSet.addWindow(new TimeWindow(0,4),mergeFunction));
  assertFalse(mergeFunction.hasMerged());
  mergeFunction.reset();
  assertEquals(new TimeWindow(0,6),windowSet.addWindow(new TimeWindow(3,5),mergeFunction));
  assertFalse(mergeFunction.hasMerged());
  mergeFunction.reset();
  assertEquals(new TimeWindow(0,6),windowSet.addWindow(new TimeWindow(4,6),mergeFunction));
  assertFalse(mergeFunction.hasMerged());
  assertEquals(new TimeWindow(0,4),windowSet.getStateWindow(new TimeWindow(0,6)));
  mergeFunction.reset();
  assertEquals(new TimeWindow(11,14),windowSet.addWindow(new TimeWindow(11,14),mergeFunction));
  assertFalse(mergeFunction.hasMerged());
  assertEquals(new TimeWindow(0,4),windowSet.getStateWindow(new TimeWindow(0,6)));
  assertEquals(new TimeWindow(11,14),windowSet.getStateWindow(new TimeWindow(11,14)));
  mergeFunction.reset();
  assertEquals(new TimeWindow(10,14),windowSet.addWindow(new TimeWindow(10,13),mergeFunction));
  assertTrue(mergeFunction.hasMerged());
  assertEquals(new TimeWindow(10,14),mergeFunction.mergeTarget());
  assertEquals(new TimeWindow(11,14),mergeFunction.stateWindow());
  assertThat(mergeFunction.mergeSources(),containsInAnyOrder(new TimeWindow(11,14)));
  assertTrue(mergeFunction.mergedStateWindows().isEmpty());
  mergeFunction.reset();
  assertEquals(new TimeWindow(10,15),windowSet.addWindow(new TimeWindow(12,15),mergeFunction));
  assertTrue(mergeFunction.hasMerged());
  assertEquals(new TimeWindow(10,15),mergeFunction.mergeTarget());
  assertEquals(new TimeWindow(11,14),mergeFunction.stateWindow());
  assertThat(mergeFunction.mergeSources(),containsInAnyOrder(new TimeWindow(10,14)));
  assertTrue(mergeFunction.mergedStateWindows().isEmpty());
  mergeFunction.reset();
  assertEquals(new TimeWindow(10,15),windowSet.addWindow(new TimeWindow(11,14),mergeFunction));
  assertFalse(mergeFunction.hasMerged());
  assertEquals(new TimeWindow(0,4),windowSet.getStateWindow(new TimeWindow(0,6)));
  assertEquals(new TimeWindow(11,14),windowSet.getStateWindow(new TimeWindow(10,15)));
  windowSet.retireWindow(new TimeWindow(0,6));
  assertTrue(windowSet.getStateWindow(new TimeWindow(0,6)) == null);
  assertTrue(windowSet.getStateWindow(new TimeWindow(10,15)).equals(new TimeWindow(11,14)));
}
