{
synchronized (lock) {
    Map<String,Tuple4<Integer,File,Path,Future<Path>>> jobEntries=entries.get(jobID);
    if (jobEntries == null) {
      jobEntries=new HashMap<String,Tuple4<Integer,File,Path,Future<Path>>>();
      entries.put(jobID,jobEntries);
    }
    Tuple4<Integer,File,Path,Future<Path>> fileEntry=jobEntries.get(name);
    if (fileEntry != null) {
      fileEntry.f0=fileEntry.f0 + 1;
      return fileEntry.f3;
    }
 else {
      File tempDirToUse=new File(storageDirectories[nextDirectory++],jobID.toString());
      if (nextDirectory >= storageDirectories.length) {
        nextDirectory=0;
      }
      String sourceFile=entry.filePath;
      int posOfSep=sourceFile.lastIndexOf("/");
      if (posOfSep > 0) {
        sourceFile=sourceFile.substring(posOfSep + 1);
      }
      Path target=new Path(tempDirToUse.getAbsolutePath() + "/" + sourceFile);
      CopyProcess cp=new CopyProcess(entry,target);
      FutureTask<Path> copyTask=new FutureTask<Path>(cp);
      executorService.submit(copyTask);
      jobEntries.put(name,new Tuple4<Integer,File,Path,Future<Path>>(1,tempDirToUse,target,copyTask));
      return copyTask;
    }
  }
}
