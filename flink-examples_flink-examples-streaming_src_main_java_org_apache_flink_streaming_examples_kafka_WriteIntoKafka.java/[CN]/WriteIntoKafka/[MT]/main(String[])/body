{
  ParameterTool parameterTool=ParameterTool.fromArgs(args);
  if (parameterTool.getNumberOfParameters() < 2) {
    System.out.println("Missing parameters!");
    System.out.println("Usage: Kafka --topic <topic> --bootstrap.servers <kafka brokers>");
    return;
  }
  StreamExecutionEnvironment env=StreamExecutionEnvironment.getExecutionEnvironment();
  env.getConfig().disableSysoutLogging();
  env.getConfig().setRestartStrategy(RestartStrategies.fixedDelayRestart(4,10000));
  DataStream<String> messageStream=env.addSource(new SourceFunction<String>(){
    private static final long serialVersionUID=6369260445318862378L;
    public boolean running=true;
    @Override public void run(    SourceContext<String> ctx) throws Exception {
      long i=0;
      while (this.running) {
        ctx.collect("Element - " + i++);
        Thread.sleep(500);
      }
    }
    @Override public void cancel(){
      running=false;
    }
  }
);
  messageStream.addSink(new FlinkKafkaProducer08<>(parameterTool.getRequired("topic"),new SimpleStringSchema(),parameterTool.getProperties()));
  env.execute("Write into Kafka example");
}
