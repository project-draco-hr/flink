{
  final Queue<ExecutionVertex> verticesToTest=new ArrayDeque<ExecutionVertex>();
  final Set<ExecutionVertex> visited=new HashSet<ExecutionVertex>();
  verticesToTest.add(failedVertex);
  System.out.println("++++" + failedVertex + " failed");
  while (!verticesToTest.isEmpty()) {
    final ExecutionVertex vertex=verticesToTest.poll();
    if (!vertex.getID().equals(failedVertex.getID())) {
      verticesToBeCanceled.add(vertex);
    }
    for (int j=0; j < vertex.getNumberOfPredecessors(); j++) {
      final ExecutionVertex predecessor=vertex.getPredecessor(j);
      System.out.println("++++ Predecessor " + predecessor + " has checkpoint state "+ predecessor.getCheckpointState());
      if (predecessor.getCheckpointState() != CheckpointState.PARTIAL && predecessor.getCheckpointState() != CheckpointState.COMPLETE) {
        verticesToBeCanceled.add(predecessor);
        if (!visited.contains(predecessor)) {
          verticesToTest.add(predecessor);
        }
      }
 else {
        checkpointsToBeReplayed.add(predecessor);
      }
    }
    visited.add(vertex);
  }
}
