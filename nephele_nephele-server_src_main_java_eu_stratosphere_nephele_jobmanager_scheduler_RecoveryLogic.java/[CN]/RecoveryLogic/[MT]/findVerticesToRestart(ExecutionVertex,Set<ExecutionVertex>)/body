{
  final Queue<ExecutionVertex> verticesToTest=new ArrayDeque<ExecutionVertex>();
  final Set<ExecutionVertex> visited=new HashSet<ExecutionVertex>();
  verticesToTest.add(failedVertex);
  while (!verticesToTest.isEmpty()) {
    final ExecutionVertex vertex=verticesToTest.poll();
    for (int j=0; j < vertex.getNumberOfPredecessors(); j++) {
      final ExecutionVertex predecessor=vertex.getPredecessor(j);
      if (hasInstanceAssigned(predecessor)) {
        verticesToBeCanceled.add(predecessor);
      }
      if (!visited.contains(predecessor)) {
        verticesToTest.add(predecessor);
      }
    }
    visited.add(vertex);
  }
}
