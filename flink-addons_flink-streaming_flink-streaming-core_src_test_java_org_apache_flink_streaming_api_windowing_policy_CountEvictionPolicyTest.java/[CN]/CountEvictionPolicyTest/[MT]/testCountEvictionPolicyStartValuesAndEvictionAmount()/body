{
  boolean triggered=false;
  List<Integer> tuples=Arrays.asList(0,1,2,3,4,5,6,7,8,9);
  for (int x=0; x < 4; x++) {
    for (int i=0; i < 10; i++) {
      int counter=0;
      for (int j=-5; i < 6; i++) {
        EvictionPolicy evictionPolicy=new CountEvictionPolicy(i,x,j);
        for (int k=0; k < ((i - j > 0) ? i - j : 0); k++) {
          counter++;
          assertEquals("Evictionpolicy with count of " + i + " did not evict correct number of tuples at the expected pos "+ counter+ ".",0,evictionPolicy.notifyEviction(tuples.get(Math.abs(j)),(triggered=!triggered),tuples.get(Math.abs((i - j)) % 10)));
        }
        counter++;
        assertEquals("Evictionpolicy with count of " + i + " did not evict correct number of tuples at the expected pos "+ counter+ ".",x,evictionPolicy.notifyEviction(tuples.get(Math.abs(j)),(triggered=!triggered),tuples.get(Math.abs((i - j)) % 10)));
      }
    }
  }
}
