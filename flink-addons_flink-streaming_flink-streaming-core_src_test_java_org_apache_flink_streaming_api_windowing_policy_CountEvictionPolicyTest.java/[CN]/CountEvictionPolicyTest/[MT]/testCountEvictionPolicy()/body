{
  List<Integer> tuples=Arrays.asList(0,1,2,3,4,5,6,7,8,9);
  int counter;
  boolean triggered=false;
  for (int i=0; i < 10; i++) {
    EvictionPolicy evictionPolicy=new CountEvictionPolicy(i,i);
    counter=0;
    for (int j=0; j < i; j++) {
      counter++;
      assertEquals("Evictionpolicy with count of " + i + " evicted tuples at add nr. "+ counter+ ". It should not evict for the first "+ i+ " adds.",0,evictionPolicy.notifyEviction(tuples.get(j),(triggered=!triggered),tuples.get(Math.abs((i - j)) % 10)));
    }
    for (int j=0; j < 3; j++) {
      counter++;
      assertEquals("Evictionpolicy with count of " + i + " did not evict correct number of tuples at the expected pos "+ counter+ ".",i,evictionPolicy.notifyEviction(tuples.get(j),(triggered=!triggered),tuples.get(Math.abs((i - j)) % 10)));
      for (int k=0; k < i - 1; k++) {
        counter++;
        assertEquals("Evictionpolicy with count of " + i + " evicted tuples at add nr. "+ counter,0,evictionPolicy.notifyEviction(tuples.get(j),(triggered=!triggered),tuples.get(Math.abs((i - j)) % 10)));
      }
    }
  }
}
