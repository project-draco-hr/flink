{
  new JavaTestKit(system){
{
      try {
        final JobVertexID jid=new JobVertexID();
        final ActionQueue actions=new ActionQueue();
        TestingUtils.setExecutionContext(new TestingUtils.QueuedActionExecutionContext(actions));
        final ExecutionJobVertex ejv=getExecutionVertex(jid);
        final ExecutionVertex vertex=new ExecutionVertex(ejv,0,new IntermediateResult[0]);
        final ExecutionAttemptID execId=vertex.getCurrentExecutionAttempt().getAttemptId();
        setVertexState(vertex,ExecutionState.SCHEDULED);
        assertEquals(ExecutionState.SCHEDULED,vertex.getExecutionState());
        TestActorRef taskManager=TestActorRef.create(system,Props.create(new CancelSequenceTaskManagerCreator(new TaskOperationResult(execId,false),new TaskOperationResult(execId,true))));
        Instance instance=getInstance(taskManager);
        AllocatedSlot slot=instance.allocateSlot(new JobID());
        vertex.deployToSlot(slot);
        assertEquals(ExecutionState.DEPLOYING,vertex.getExecutionState());
        vertex.cancel();
        assertEquals(ExecutionState.CANCELING,vertex.getExecutionState());
        Runnable deployAction=actions.popNextAction();
        Runnable cancelAction=actions.popNextAction();
        cancelAction.run();
        actions.triggerNextAction();
        assertEquals(ExecutionState.CANCELING,vertex.getExecutionState());
        deployAction.run();
        assertEquals(ExecutionState.CANCELING,vertex.getExecutionState());
        actions.triggerNextAction();
        actions.triggerNextAction();
        vertex.getCurrentExecutionAttempt().cancelingComplete();
        assertEquals(ExecutionState.CANCELED,vertex.getExecutionState());
        assertTrue(slot.isReleased());
        assertNull(vertex.getFailureCause());
        assertTrue(vertex.getStateTimestamp(ExecutionState.CREATED) > 0);
        assertTrue(vertex.getStateTimestamp(ExecutionState.CANCELING) > 0);
        assertTrue(vertex.getStateTimestamp(ExecutionState.CANCELED) > 0);
      }
 catch (      Exception e) {
        e.printStackTrace();
        fail(e.getMessage());
      }
 finally {
        TestingUtils.setGlobalExecutionContext();
      }
    }
  }
;
}
