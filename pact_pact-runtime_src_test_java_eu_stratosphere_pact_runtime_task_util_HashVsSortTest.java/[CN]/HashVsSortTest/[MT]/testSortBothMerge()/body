{
  try {
    Generator generator1=new Generator(SEED1,INPUT_1_SIZE / 10,100,KeyMode.RANDOM,ValueMode.RANDOM_LENGTH);
    Generator generator2=new Generator(SEED2,INPUT_2_SIZE,100,KeyMode.RANDOM,ValueMode.RANDOM_LENGTH);
    final TestData.GeneratorIterator input1=new TestData.GeneratorIterator(generator1,INPUT_1_SIZE);
    final TestData.GeneratorIterator input2=new TestData.GeneratorIterator(generator2,INPUT_2_SIZE);
    final MatchStub matcher=new NoOpMatcher();
    final Collector<PactRecord> collector=new DiscardingOutputCollector();
    generator1.reset();
    generator2.reset();
    input1.reset();
    input2.reset();
    MergeMatchIterator<PactRecord,PactRecord,PactRecord> iterator=new MergeMatchIterator<PactRecord,PactRecord,PactRecord>(input1,input2,this.serializer1,this.comparator1,this.serializer2,this.comparator2,this.pairComparator11,this.memoryManager,this.ioManager,MEMORY_SIZE,64,0.7f,LocalStrategy.SORT_BOTH_MERGE,this.parentTask);
    long start=System.nanoTime();
    iterator.open();
    while (iterator.callWithNextKey(matcher,collector))     ;
    iterator.close();
    long elapsed=System.nanoTime() - start;
    double msecs=elapsed / (1000 * 1000);
    System.out.println("Sort-Merge Took " + msecs + " msecs.");
  }
 catch (  Exception e) {
    e.printStackTrace();
    Assert.fail("An exception occurred during the test: " + e.getMessage());
  }
}
