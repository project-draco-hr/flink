{
  StreamInvokable<StreamWindow<Integer>,StreamWindow<Integer>> splitPartitioner=new WindowPartitioner<Integer>(2);
  StreamInvokable<StreamWindow<Integer>,StreamWindow<Integer>> gbPartitioner=new WindowPartitioner<Integer>(new MyKey());
  StreamWindow<Integer> w1=new StreamWindow<Integer>();
  StreamWindow<Integer> w2=StreamWindow.fromElements(1,2,3,4);
  List<StreamWindow<Integer>> expected1=new ArrayList<StreamWindow<Integer>>();
  expected1.addAll(w1.split(2));
  expected1.addAll(w2.split(2));
  List<StreamWindow<Integer>> expected2=new ArrayList<StreamWindow<Integer>>();
  expected2.addAll(w1.partitionBy(new MyKey()));
  expected2.addAll(w2.partitionBy(new MyKey()));
  List<StreamWindow<Integer>> input=new ArrayList<StreamWindow<Integer>>();
  input.add(w1);
  input.add(w2);
  List<StreamWindow<Integer>> output1=MockContext.createAndExecute(splitPartitioner,input);
  List<StreamWindow<Integer>> output2=MockContext.createAndExecute(gbPartitioner,input);
  assertEquals(expected1,output1);
  assertEquals(expected2,output2);
}
