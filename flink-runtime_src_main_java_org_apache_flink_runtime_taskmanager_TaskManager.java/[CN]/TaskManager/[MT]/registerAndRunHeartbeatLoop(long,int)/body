{
  while (!shutdownStarted.get()) {
    InstanceID resultId=null;
{
      final long maxDelay=10000;
      final long reportingDelay=5000;
      long currentDelay=100;
      while (!shutdownStarted.get()) {
        if (LOG.isDebugEnabled()) {
          LOG.debug("Trying to register at Jobmanager...");
        }
        try {
          resultId=this.jobManager.registerTaskManager(this.localInstanceConnectionInfo,this.hardwareDescription,this.numberOfSlots);
        }
 catch (        IOException e) {
          if (currentDelay >= reportingDelay) {
            LOG.error("Connection to JobManager failed.",e);
          }
 else           if (LOG.isDebugEnabled()) {
            LOG.debug("Could not connect to JobManager.",e);
          }
        }
        if (resultId != null) {
          this.registeredId=resultId;
          break;
        }
 else {
          LOG.error("Registration attempt refused by JobManager.");
        }
        try {
          Thread.sleep(currentDelay);
        }
 catch (        InterruptedException e) {
          if (!shutdownStarted.get()) {
            LOG.error("TaskManager's registration loop was interrupted without shutdown.");
          }
        }
        currentDelay=Math.min(2 * currentDelay,maxDelay);
      }
    }
    int successiveUnsuccessfulHeartbeats=0;
    while (!shutdownStarted.get()) {
      try {
        Thread.sleep(interval);
      }
 catch (      InterruptedException e) {
        if (!shutdownStarted.get()) {
          LOG.error("TaskManager heart beat loop was interrupted without shutdown.");
        }
      }
      try {
        boolean accepted=this.jobManager.sendHeartbeat(resultId);
        if (accepted) {
          successiveUnsuccessfulHeartbeats=0;
        }
 else {
          successiveUnsuccessfulHeartbeats++;
          LOG.error("JobManager rejected heart beat.");
        }
      }
 catch (      IOException e) {
        if (!shutdownStarted.get()) {
          successiveUnsuccessfulHeartbeats++;
          LOG.error("Sending the heart beat failed on I/O error: " + e.getMessage(),e);
        }
      }
      if (successiveUnsuccessfulHeartbeats == maxNonSuccessfulHeatbeats) {
        LOG.error("TaskManager has lost connection to JobManager.");
        this.registeredId=null;
        cancelAndClearEverything();
        try {
          Thread.sleep(DELAY_AFTER_LOST_CONNECTION);
        }
 catch (        InterruptedException e) {
          if (!shutdownStarted.get()) {
            LOG.error("TaskManager heart beat loop was interrupted without shutdown.");
          }
        }
        break;
      }
    }
  }
}
