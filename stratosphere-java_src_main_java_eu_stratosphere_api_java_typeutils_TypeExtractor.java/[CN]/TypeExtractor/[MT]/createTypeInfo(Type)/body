{
  if (t instanceof ParameterizedType) {
    ParameterizedType pt=(ParameterizedType)t;
    Type raw=pt.getRawType();
    if (raw instanceof Class) {
      if (Tuple.class.isAssignableFrom((Class<?>)raw)) {
        Type[] subtypes=pt.getActualTypeArguments();
        TypeInformation<?>[] tupleSubTypes=new TypeInformation<?>[subtypes.length];
        for (int i=0; i < subtypes.length; i++) {
          tupleSubTypes[i]=createTypeInfo(subtypes[i]);
        }
        return new TupleTypeInfo(tupleSubTypes);
      }
    }
  }
 else   if (t instanceof Class) {
    return TypeInformation.getForClass((Class<X>)t);
  }
  return null;
}
