{
  requestPartitionsOnce();
  while (true) {
    if (currentReaderIndex == 0) {
      if ((bufferReader1.isFinished() && bufferReader2.isFinished())) {
        return 0;
      }
      currentReaderIndex=getNextReaderIndexBlocking();
    }
    if (currentReaderIndex == 1) {
      while (true) {
        if (reader1currentRecordDeserializer != null) {
          RecordDeserializer.DeserializationResult result=reader1currentRecordDeserializer.getNextRecord(target1);
          if (result.isBufferConsumed()) {
            reader1currentRecordDeserializer.getCurrentBuffer().recycle();
            reader1currentRecordDeserializer=null;
            currentReaderIndex=0;
          }
          if (result.isFullRecord()) {
            return 1;
          }
        }
 else {
          final BufferOrEvent boe=barrierBuffer1.getNextNonBlocked();
          if (boe.isBuffer()) {
            reader1currentRecordDeserializer=reader1RecordDeserializers[boe.getChannelIndex()];
            reader1currentRecordDeserializer.setNextBuffer(boe.getBuffer());
          }
 else           if (boe.getEvent() instanceof StreamingSuperstep) {
            barrierBuffer1.processSuperstep(boe);
            currentReaderIndex=0;
            break;
          }
 else           if (handleEvent(boe.getEvent())) {
            currentReaderIndex=0;
            break;
          }
        }
      }
    }
 else     if (currentReaderIndex == 2) {
      while (true) {
        if (reader2currentRecordDeserializer != null) {
          RecordDeserializer.DeserializationResult result=reader2currentRecordDeserializer.getNextRecord(target2);
          if (result.isBufferConsumed()) {
            reader2currentRecordDeserializer.getCurrentBuffer().recycle();
            reader2currentRecordDeserializer=null;
            currentReaderIndex=0;
          }
          if (result.isFullRecord()) {
            return 2;
          }
        }
 else {
          final BufferOrEvent boe=barrierBuffer2.getNextNonBlocked();
          if (boe.isBuffer()) {
            reader2currentRecordDeserializer=reader2RecordDeserializers[boe.getChannelIndex()];
            reader2currentRecordDeserializer.setNextBuffer(boe.getBuffer());
          }
 else           if (boe.getEvent() instanceof StreamingSuperstep) {
            barrierBuffer2.processSuperstep(boe);
            currentReaderIndex=0;
            break;
          }
 else           if (handleEvent(boe.getEvent())) {
            currentReaderIndex=0;
            break;
          }
        }
      }
    }
 else {
      throw new IllegalStateException("Bug: unexpected current reader index.");
    }
  }
}
