{
  WindowFunctionMock mock=mock(WindowFunctionMock.class);
  InternalIterableWindowFunction<Long,String,Long,TimeWindow> windowFunction=new InternalIterableWindowFunction<>(mock);
  TypeInformation<String> stringType=BasicTypeInfo.STRING_TYPE_INFO;
  ExecutionConfig execConf=new ExecutionConfig();
  execConf.setParallelism(42);
  windowFunction.setOutputType(stringType,execConf);
  verify(mock).setOutputType(stringType,execConf);
  Configuration config=new Configuration();
  windowFunction.open(config);
  verify(mock).open(config);
  RuntimeContext rCtx=mock(RuntimeContext.class);
  windowFunction.setRuntimeContext(rCtx);
  verify(mock).setRuntimeContext(rCtx);
  TimeWindow w=mock(TimeWindow.class);
  Iterable<Long> i=(Iterable<Long>)mock(Iterable.class);
  Collector<String> c=(Collector<String>)mock(Collector.class);
  windowFunction.apply(42L,w,i,c);
  verify(mock).apply(42L,w,i,c);
  windowFunction.close();
  verify(mock).close();
}
