{
  this.jobSuggestions=jobSuggestions;
  this.loadedPatterns=loadedPatterns;
  this.shell=new Shell(parent);
  this.shell.setSize(WIDTH,HEIGHT);
  this.shell.setText("Manage Failure Patterns");
  GridLayout gl=new GridLayout(1,false);
  gl.horizontalSpacing=0;
  gl.verticalSpacing=0;
  gl.marginRight=0;
  gl.marginLeft=0;
  gl.marginBottom=0;
  gl.marginTop=0;
  gl.marginHeight=0;
  gl.marginWidth=0;
  this.shell.setLayout(gl);
  final Composite mainComposite=new Composite(this.shell,SWT.NONE);
  mainComposite.setLayout(new GridLayout(1,false));
  GridData gridData=new GridData();
  gridData.horizontalAlignment=GridData.FILL;
  gridData.verticalAlignment=GridData.FILL;
  gridData.grabExcessHorizontalSpace=true;
  gridData.grabExcessVerticalSpace=true;
  mainComposite.setLayoutData(gridData);
  final SashForm horizontalSash=new SashForm(mainComposite,SWT.HORIZONTAL);
  horizontalSash.setLayoutData(new GridData(GridData.FILL_BOTH));
  final Group jobGroup=new Group(horizontalSash,SWT.NONE);
  jobGroup.setText("Job Failure Patterns");
  jobGroup.setLayout(new FillLayout());
  this.jobTree=new Tree(jobGroup,SWT.SINGLE | SWT.BORDER);
  this.jobTree.addSelectionListener(this);
  this.jobTree.setMenu(createTreeContextMenu());
  this.failureEventTable=new SWTFailureEventTable(horizontalSash,SWT.BORDER | SWT.SINGLE,nameSuggestions);
  horizontalSash.setWeights(new int[]{2,8});
  final Composite buttonComposite=new Composite(this.shell,SWT.NONE);
  buttonComposite.setLayout(new GridLayout(2,false));
  gridData=new GridData();
  gridData.horizontalAlignment=GridData.FILL;
  buttonComposite.setLayoutData(gridData);
  final Label fillLabel=new Label(buttonComposite,SWT.NONE);
  gridData=new GridData();
  gridData.horizontalAlignment=GridData.FILL;
  gridData.grabExcessHorizontalSpace=true;
  gridData.grabExcessVerticalSpace=false;
  fillLabel.setLayoutData(gridData);
  final Button closeButton=new Button(buttonComposite,SWT.PUSH);
  closeButton.setText("Close");
  gridData=new GridData();
  gridData.horizontalAlignment=SWT.RIGHT;
  closeButton.setLayoutData(gridData);
  closeButton.addSelectionListener(new SelectionAdapter(){
    @Override public void widgetSelected(    SelectionEvent arg0){
      shell.dispose();
    }
  }
);
  final Iterator<JobFailurePattern> it=this.loadedPatterns.values().iterator();
  while (it.hasNext()) {
    addFailurePatternToTree(it.next());
  }
  if (this.jobTree.getItemCount() > 0) {
    final TreeItem ti=this.jobTree.getItem(0);
    this.jobTree.setSelection(ti);
    this.failureEventTable.showFailurePattern((JobFailurePattern)ti.getData());
  }
 else {
    this.failureEventTable.showFailurePattern(null);
  }
}
