{
  LogUtils.initializeDefaultConsoleLogger(Level.OFF,Level.OFF);
  expected.clear();
  result.clear();
  expected.add("word2word3");
  expected.add("word1");
  expected.add("3");
  expected.add("5");
  expected.add("7");
  Tuple3<String,String,String> word1=new Tuple3<String,String,String>("a","word1","b");
  Tuple3<String,String,String> word2=new Tuple3<String,String,String>("b","word2","a");
  Tuple3<String,String,String> word3=new Tuple3<String,String,String>("a","word3","a");
  Tuple2<Integer,Integer> int1=new Tuple2<Integer,Integer>(2,1);
  Tuple2<Integer,Integer> int2=new Tuple2<Integer,Integer>(1,2);
  Tuple2<Integer,Integer> int3=new Tuple2<Integer,Integer>(0,3);
  Tuple2<Integer,Integer> int4=new Tuple2<Integer,Integer>(2,4);
  Tuple2<Integer,Integer> int5=new Tuple2<Integer,Integer>(1,5);
  result=new ArrayList<String>();
  LocalStreamEnvironment env2=StreamExecutionEnvironment.createLocalEnvironment(1);
  @SuppressWarnings("unchecked") DataStream<Tuple2<Integer,Integer>> ds1=env2.fromElements(int1,int3,int5);
  @SuppressWarnings("unchecked") DataStream<Tuple2<Integer,Integer>> ds2=env2.fromElements(int2,int4).merge(ds1);
  @SuppressWarnings({"unused","unchecked"}) DataStream<String> ds4=env2.fromElements(word1,word2,word3).connect(ds2).groupBy(2,0).reduce(new MyCoReduceFunction()).addSink(new EmptySink());
  env2.executeTest(32);
  Assert.assertEquals(result.size(),8);
  Assert.assertTrue(result.containsAll(expected));
}
