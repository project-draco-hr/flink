{
  final long timestamp=System.currentTimeMillis();
  InternalInstanceProfilingData instanceProfilingData=null;
synchronized (this.monitoredThreads) {
    final Iterator<Environment> iterator=this.monitoredThreads.keySet().iterator();
    while (iterator.hasNext()) {
      final Environment environment=iterator.next();
      final EnvironmentThreadSet environmentThreadSet=this.monitoredThreads.get(environment);
      final InternalExecutionVertexThreadProfilingData threadProfilingData=environmentThreadSet.captureCPUUtilization(environment.getJobID(),this.tmx,timestamp);
      if (threadProfilingData != null) {
        this.profilingDataContainer.addProfilingData(threadProfilingData);
      }
    }
    if (!this.monitoredThreads.isEmpty()) {
      try {
        instanceProfilingData=this.instanceProfiler.generateProfilingData(timestamp);
      }
 catch (      ProfilingException e) {
        LOG.error("Error while retrieving instance profiling data: ",e);
      }
    }
  }
synchronized (this.profilingDataContainer) {
    if (instanceProfilingData != null) {
      this.profilingDataContainer.addProfilingData(instanceProfilingData);
    }
    if (!this.profilingDataContainer.isEmpty()) {
      try {
        jobManagerProfiler.tell(new ReportProfilingData(this.profilingDataContainer),ActorRef.noSender());
        this.profilingDataContainer.clear();
      }
 catch (      IOException e) {
        LOG.error("Could not report profiling data.",e);
      }
    }
  }
}
