{
switch (progId) {
case 1:
{
      final ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
      DataSet<Tuple5<Integer,Long,Integer,String,Long>> ds=CollectionDataSets.getSmall5TupleDataSet(env);
      DataSet<Tuple5<Integer,Long,Integer,String,Long>> ds2=CollectionDataSets.getSmall5TupleDataSet(env);
      DataSet<Tuple2<Integer,String>> crossDs=ds.cross(ds2).with(new Tuple5Cross());
      crossDs.writeAsCsv(resultPath);
      env.execute();
      return "0,HalloHallo\n" + "1,HalloHallo Welt\n" + "2,HalloHallo Welt wie\n"+ "1,Hallo WeltHallo\n"+ "2,Hallo WeltHallo Welt\n"+ "3,Hallo WeltHallo Welt wie\n"+ "2,Hallo Welt wieHallo\n"+ "3,Hallo Welt wieHallo Welt\n"+ "4,Hallo Welt wieHallo Welt wie\n";
    }
case 2:
{
    final ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
    DataSet<Tuple3<Integer,Long,String>> ds=CollectionDataSets.getSmall3TupleDataSet(env);
    DataSet<Tuple5<Integer,Long,Integer,String,Long>> ds2=CollectionDataSets.getSmall5TupleDataSet(env);
    DataSet<Tuple3<Integer,Long,String>> crossDs=ds.cross(ds2).with(new Tuple3ReturnLeft());
    crossDs.writeAsCsv(resultPath);
    env.execute();
    return "1,1,Hi\n" + "1,1,Hi\n" + "1,1,Hi\n"+ "2,2,Hello\n"+ "2,2,Hello\n"+ "2,2,Hello\n"+ "3,2,Hello world\n"+ "3,2,Hello world\n"+ "3,2,Hello world\n";
  }
case 3:
{
  final ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
  DataSet<Tuple3<Integer,Long,String>> ds=CollectionDataSets.getSmall3TupleDataSet(env);
  DataSet<Tuple5<Integer,Long,Integer,String,Long>> ds2=CollectionDataSets.getSmall5TupleDataSet(env);
  DataSet<Tuple5<Integer,Long,Integer,String,Long>> crossDs=ds.cross(ds2).with(new Tuple5ReturnRight());
  crossDs.writeAsCsv(resultPath);
  env.execute();
  return "1,1,0,Hallo,1\n" + "1,1,0,Hallo,1\n" + "1,1,0,Hallo,1\n"+ "2,2,1,Hallo Welt,2\n"+ "2,2,1,Hallo Welt,2\n"+ "2,2,1,Hallo Welt,2\n"+ "2,3,2,Hallo Welt wie,1\n"+ "2,3,2,Hallo Welt wie,1\n"+ "2,3,2,Hallo Welt wie,1\n";
}
case 4:
{
final ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
DataSet<Integer> intDs=CollectionDataSets.getIntegerDataSet(env);
DataSet<Tuple5<Integer,Long,Integer,String,Long>> ds=CollectionDataSets.getSmall5TupleDataSet(env);
DataSet<Tuple5<Integer,Long,Integer,String,Long>> ds2=CollectionDataSets.getSmall5TupleDataSet(env);
DataSet<Tuple3<Integer,Integer,Integer>> crossDs=ds.cross(ds2).with(new Tuple5CrossBC()).withBroadcastSet(intDs,"ints");
crossDs.writeAsCsv(resultPath);
env.execute();
return "2,0,55\n" + "3,0,55\n" + "3,0,55\n"+ "3,0,55\n"+ "4,1,55\n"+ "4,2,55\n"+ "3,0,55\n"+ "4,2,55\n"+ "4,4,55\n";
}
case 5:
{
final ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
DataSet<Tuple5<Integer,Long,Integer,String,Long>> ds=CollectionDataSets.getSmall5TupleDataSet(env);
DataSet<Tuple5<Integer,Long,Integer,String,Long>> ds2=CollectionDataSets.getSmall5TupleDataSet(env);
DataSet<Tuple2<Integer,String>> crossDs=ds.crossWithHuge(ds2).with(new Tuple5Cross());
crossDs.writeAsCsv(resultPath);
env.execute();
return "0,HalloHallo\n" + "1,HalloHallo Welt\n" + "2,HalloHallo Welt wie\n"+ "1,Hallo WeltHallo\n"+ "2,Hallo WeltHallo Welt\n"+ "3,Hallo WeltHallo Welt wie\n"+ "2,Hallo Welt wieHallo\n"+ "3,Hallo Welt wieHallo Welt\n"+ "4,Hallo Welt wieHallo Welt wie\n";
}
case 6:
{
final ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
DataSet<Tuple5<Integer,Long,Integer,String,Long>> ds=CollectionDataSets.getSmall5TupleDataSet(env);
DataSet<Tuple5<Integer,Long,Integer,String,Long>> ds2=CollectionDataSets.getSmall5TupleDataSet(env);
DataSet<Tuple2<Integer,String>> crossDs=ds.crossWithTiny(ds2).with(new Tuple5Cross());
crossDs.writeAsCsv(resultPath);
env.execute();
return "0,HalloHallo\n" + "1,HalloHallo Welt\n" + "2,HalloHallo Welt wie\n"+ "1,Hallo WeltHallo\n"+ "2,Hallo WeltHallo Welt\n"+ "3,Hallo WeltHallo Welt wie\n"+ "2,Hallo Welt wieHallo\n"+ "3,Hallo Welt wieHallo Welt\n"+ "4,Hallo Welt wieHallo Welt wie\n";
}
case 7:
{
final ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
DataSet<Tuple3<Integer,Long,String>> ds=CollectionDataSets.getSmall3TupleDataSet(env);
DataSet<Tuple5<Integer,Long,Integer,String,Long>> ds2=CollectionDataSets.getSmall5TupleDataSet(env);
DataSet<Tuple6<String,Long,String,Integer,Long,Long>> crossDs=ds.cross(ds2).projectFirst(2,1).projectSecond(3).projectFirst(0).projectSecond(4,1).types(String.class,Long.class,String.class,Integer.class,Long.class,Long.class);
crossDs.writeAsCsv(resultPath);
env.execute();
return "Hi,1,Hallo,1,1,1\n" + "Hi,1,Hallo Welt,1,2,2\n" + "Hi,1,Hallo Welt wie,1,1,3\n"+ "Hello,2,Hallo,2,1,1\n"+ "Hello,2,Hallo Welt,2,2,2\n"+ "Hello,2,Hallo Welt wie,2,1,3\n"+ "Hello world,2,Hallo,3,1,1\n"+ "Hello world,2,Hallo Welt,3,2,2\n"+ "Hello world,2,Hallo Welt wie,3,1,3\n";
}
case 8:
{
final ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
DataSet<Tuple3<Integer,Long,String>> ds=CollectionDataSets.getSmall3TupleDataSet(env);
DataSet<Tuple5<Integer,Long,Integer,String,Long>> ds2=CollectionDataSets.getSmall5TupleDataSet(env);
DataSet<Tuple6<String,String,Long,Long,Long,Integer>> crossDs=ds.cross(ds2).projectSecond(3).projectFirst(2,1).projectSecond(4,1).projectFirst(0).types(String.class,String.class,Long.class,Long.class,Long.class,Integer.class);
crossDs.writeAsCsv(resultPath);
env.execute();
return "Hallo,Hi,1,1,1,1\n" + "Hallo Welt,Hi,1,2,2,1\n" + "Hallo Welt wie,Hi,1,1,3,1\n"+ "Hallo,Hello,2,1,1,2\n"+ "Hallo Welt,Hello,2,2,2,2\n"+ "Hallo Welt wie,Hello,2,1,3,2\n"+ "Hallo,Hello world,2,1,1,3\n"+ "Hallo Welt,Hello world,2,2,2,3\n"+ "Hallo Welt wie,Hello world,2,1,3,3\n";
}
case 9:
{
final ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
DataSet<Tuple3<Integer,Long,String>> ds=CollectionDataSets.getSmall3TupleDataSet(env);
DataSet<Tuple5<Integer,Long,Integer,String,Long>> ds2=CollectionDataSets.getSmall5TupleDataSet(env);
DataSet<Tuple2<Tuple3<Integer,Long,String>,Tuple5<Integer,Long,Integer,String,Long>>> crossDs=ds.cross(ds2);
crossDs.writeAsCsv(resultPath);
env.execute();
return "(1, 1, Hi),(2, 2, 1, Hallo Welt, 2)\n" + "(1, 1, Hi),(1, 1, 0, Hallo, 1)\n" + "(1, 1, Hi),(2, 3, 2, Hallo Welt wie, 1)\n"+ "(2, 2, Hello),(2, 2, 1, Hallo Welt, 2)\n"+ "(2, 2, Hello),(1, 1, 0, Hallo, 1)\n"+ "(2, 2, Hello),(2, 3, 2, Hallo Welt wie, 1)\n"+ "(3, 2, Hello world),(2, 2, 1, Hallo Welt, 2)\n"+ "(3, 2, Hello world),(1, 1, 0, Hallo, 1)\n"+ "(3, 2, Hello world),(2, 3, 2, Hallo Welt wie, 1)\n";
}
default :
throw new IllegalArgumentException("Invalid program id");
}
}
