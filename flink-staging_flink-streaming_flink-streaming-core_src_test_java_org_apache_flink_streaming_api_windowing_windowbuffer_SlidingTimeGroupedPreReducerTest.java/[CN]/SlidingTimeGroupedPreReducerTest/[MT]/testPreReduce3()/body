{
  TestOutput<StreamWindow<Integer>> collector=new TestOutput<StreamWindow<Integer>>();
  SlidingTimeGroupedPreReducer<Integer> preReducer=new SlidingTimeGroupedPreReducer<Integer>(reducer,serializer,key,6,3,new TimestampWrapper<Integer>(new Timestamp<Integer>(){
    private static final long serialVersionUID=1L;
    @Override public long getTimestamp(    Integer value){
      return value;
    }
  }
,1));
  preReducer.store(1);
  preReducer.store(2);
  preReducer.store(3);
  preReducer.emitWindow(collector);
  preReducer.store(4);
  preReducer.store(5);
  preReducer.store(6);
  preReducer.emitWindow(collector);
  preReducer.evict(3);
  preReducer.store(7);
  preReducer.store(8);
  preReducer.store(9);
  preReducer.emitWindow(collector);
  preReducer.evict(3);
  preReducer.store(10);
  preReducer.store(11);
  preReducer.store(12);
  preReducer.emitWindow(collector);
  preReducer.evict(3);
  preReducer.store(13);
  List<StreamWindow<Integer>> expected=new ArrayList<StreamWindow<Integer>>();
  expected.add(StreamWindow.fromElements(2,4));
  expected.add(StreamWindow.fromElements(9,12));
  expected.add(StreamWindow.fromElements(21,18));
  expected.add(StreamWindow.fromElements(30,27));
  checkResults(expected,collector.getCollected());
}
