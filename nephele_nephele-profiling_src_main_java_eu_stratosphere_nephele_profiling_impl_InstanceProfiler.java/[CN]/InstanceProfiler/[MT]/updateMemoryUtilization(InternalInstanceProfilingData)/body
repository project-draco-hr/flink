{
  try {
    final FileReader memReader=new FileReader(PROC_MEMINFO);
    final BufferedReader in=new BufferedReader(memReader);
    long freeMemory=0;
    long totalMemory=0;
    long bufferedMemory=0;
    long cachedMemory=0;
    long cachedSwapMemory=0;
    int count=0;
    String output;
    while ((output=in.readLine()) != null) {
switch (count) {
case 0:
        totalMemory=extractMemoryValue(output);
      break;
case 1:
    freeMemory=extractMemoryValue(output);
  break;
case 2:
bufferedMemory=extractMemoryValue(output);
break;
case 3:
cachedMemory=extractMemoryValue(output);
break;
case 4:
cachedSwapMemory=extractMemoryValue(output);
break;
default :
break;
}
++count;
}
profilingData.setTotalMemory(totalMemory);
profilingData.setFreeMemory(freeMemory);
profilingData.setBufferedMemory(bufferedMemory);
profilingData.setCachedMemory(cachedMemory);
profilingData.setCachedSwapMemory(cachedSwapMemory);
}
 catch (IOException ioe) {
throw new ProfilingException("Error while reading network utilization: " + StringUtils.stringifyException(ioe));
}
}
