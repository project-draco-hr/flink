{
  physicalEdgesInOrder.add(edge);
  Integer downStreamvertexID=edge.getTargetID();
  AbstractJobVertex headVertex=jobVertices.get(headOfChain);
  AbstractJobVertex downStreamVertex=jobVertices.get(downStreamvertexID);
  StreamConfig downStreamConfig=new StreamConfig(downStreamVertex.getConfiguration());
  downStreamConfig.setNumberOfInputs(downStreamConfig.getNumberOfInputs() + 1);
  StreamPartitioner<?> partitioner=edge.getPartitioner();
  if (partitioner.getStrategy() == PartitioningStrategy.FORWARD) {
    downStreamVertex.connectNewDataSetAsInput(headVertex,DistributionPattern.POINTWISE);
  }
 else {
    downStreamVertex.connectNewDataSetAsInput(headVertex,DistributionPattern.ALL_TO_ALL);
  }
  if (LOG.isDebugEnabled()) {
    LOG.debug("CONNECTED: {} - {} -> {}",partitioner.getClass().getSimpleName(),headOfChain,downStreamvertexID);
  }
}
