{
  LogUtils.initializeDefaultConsoleLogger(Level.OFF,Level.OFF);
  expected.add("a");
  expected.add("b");
  expected.add("c");
  expected.add("d");
  expected.add("e");
  expected.add("f");
  expected.add("g");
  expected.add("h");
  expected.add("e");
  expected.add("1");
  expected.add("2");
  expected.add("3");
  expected.add("4");
  expected.add("5");
  result=new HashSet<String>();
  LocalStreamEnvironment env=StreamExecutionEnvironment.createLocalEnvironment(1);
  DataStream<Integer> ds1=env.fromElements(1,3,5);
  DataStream<Integer> ds2=env.fromElements(2,4).merge(ds1);
  try {
    ds1.forward().merge(ds2);
    fail();
  }
 catch (  RuntimeException e) {
  }
  @SuppressWarnings({"unused"}) DataStream<String> ds4=env.fromElements("abc","def","ghe").connect(ds2).flatMap(new MyCoFlatMap()).addSink(new EmptySink());
  env.executeTest(32);
  Assert.assertEquals(expected,result);
}
