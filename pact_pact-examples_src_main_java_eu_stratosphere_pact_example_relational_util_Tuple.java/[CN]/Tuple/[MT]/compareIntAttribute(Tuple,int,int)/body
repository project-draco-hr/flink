{
  int len=getColumnLength(thisColumn);
  int otherLen=other.getColumnLength(otherColumn);
  if (thisColumn < 0)   throw new IndexOutOfBoundsException();
  if (otherColumn < 0)   throw new IndexOutOfBoundsException();
  if (thisColumn >= numCols)   throw new IndexOutOfBoundsException();
  if (otherColumn >= other.numCols)   throw new IndexOutOfBoundsException();
  short thisNegative=1;
  short otherNegative=1;
  if (this.bytes[offsets[thisColumn]] == '-') {
    thisNegative=-1;
  }
  if (other.getBytes()[other.offsets[otherColumn]] == '-') {
    otherNegative=-1;
  }
  if (thisNegative != otherNegative) {
    return thisNegative;
  }
  if (len < otherLen) {
    return -1 * thisNegative;
  }
 else   if (len > otherLen) {
    return 1 * thisNegative;
  }
  int myStartPos=offsets[thisColumn];
  int compStartPos=other.offsets[otherColumn];
  for (int i=0; i < len; i++) {
    if (bytes[myStartPos + i] < other.bytes[compStartPos + i]) {
      return -1 * thisNegative;
    }
 else     if (bytes[myStartPos + i] > other.bytes[compStartPos + i]) {
      return 1 * thisNegative;
    }
  }
  return 0;
}
