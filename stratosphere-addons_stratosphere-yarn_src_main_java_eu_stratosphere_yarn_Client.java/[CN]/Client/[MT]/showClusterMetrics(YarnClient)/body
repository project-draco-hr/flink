{
  YarnClusterMetrics metrics=yarnClient.getYarnClusterMetrics();
  System.out.println("NodeManagers in Cluster " + metrics.getNumNodeManagers());
  List<NodeReport> nodes=yarnClient.getNodeReports();
  final String format="|%-16s |%-16s %n";
  System.out.printf("|Property         |Value          %n");
  System.out.println("+---------------------------------------+");
  int totalMemory=0;
  int totalCores=0;
  for (  NodeReport rep : nodes) {
    final Resource res=rep.getCapability();
    totalMemory+=res.getMemory();
    totalCores+=res.getVirtualCores();
    System.out.format(format,"NodeID",rep.getNodeId());
    System.out.format(format,"Memory",res.getMemory() + " MB");
    System.out.format(format,"vCores",res.getVirtualCores());
    System.out.format(format,"HealthReport",rep.getHealthReport());
    System.out.format(format,"Containers",rep.getNumContainers());
    System.out.println("+---------------------------------------+");
  }
  System.out.println("Summary: totalMemory " + totalMemory + " totalCores "+ totalCores);
  List<QueueInfo> qInfo=yarnClient.getAllQueues();
  for (  QueueInfo q : qInfo) {
    System.out.println("Queue: " + q.getQueueName() + ", Current Capacity: "+ q.getCurrentCapacity()+ " Max Capacity: "+ q.getMaximumCapacity()+ " Applications: "+ q.getApplications().size());
  }
  yarnClient.stop();
  System.exit(0);
}
