{
  if (n < 0) {
    throw new IllegalArgumentException();
  }
  int remaining=this.limitInSegment - this.positionInSegment;
  if (remaining >= n) {
    this.positionInSegment+=n;
    return n;
  }
 else {
    if (remaining == 0) {
      try {
        advance();
      }
 catch (      EOFException eofex) {
        return 0;
      }
      remaining=this.limitInSegment - this.positionInSegment;
    }
    int skipped=0;
    while (true) {
      int toSkip=Math.min(remaining,n);
      n-=toSkip;
      skipped+=toSkip;
      if (n > 0) {
        try {
          advance();
        }
 catch (        EOFException eofex) {
          return skipped;
        }
        remaining=this.limitInSegment - this.positionInSegment;
      }
 else {
        this.positionInSegment+=toSkip;
        break;
      }
    }
    return skipped;
  }
}
