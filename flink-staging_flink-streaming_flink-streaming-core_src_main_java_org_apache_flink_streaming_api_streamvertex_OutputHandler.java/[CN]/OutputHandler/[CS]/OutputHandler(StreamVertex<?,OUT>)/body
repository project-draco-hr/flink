{
  this.vertex=vertex;
  this.configuration=new StreamConfig(vertex.getTaskConfiguration());
  this.chainedInvokables=new ArrayList<ChainableInvokable<?,?>>();
  this.outputMap=new HashMap<StreamEdge,StreamOutput<?>>();
  this.cl=vertex.getUserCodeClassLoader();
  this.chainedConfigs=configuration.getTransitiveChainedTaskConfigs(cl);
  this.chainedConfigs.put(configuration.getVertexID(),configuration);
  this.outEdgesInOrder=configuration.getOutEdgesInOrder(cl);
  for (  StreamEdge outEdge : outEdgesInOrder) {
    StreamOutput<?> streamOutput=createStreamOutput(outEdge,outEdge.getTargetID(),chainedConfigs.get(outEdge.getSourceID()),outEdgesInOrder.indexOf(outEdge));
    outputMap.put(outEdge,streamOutput);
  }
  this.outerCollector=createChainedCollector(configuration);
}
