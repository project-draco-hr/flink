{
  StreamRecordSerializer<T> outSerializer=configuration.getTypeSerializerOut1(vertex.userClassLoader);
  SerializationDelegate<StreamRecord<T>> outSerializationDelegate=null;
  if (outSerializer != null) {
    outSerializationDelegate=new SerializationDelegate<StreamRecord<T>>(outSerializer);
    outSerializationDelegate.setInstance(outSerializer.createInstance());
  }
  StreamPartitioner<T> outputPartitioner=configuration.getPartitioner(cl,outputVertex);
  ResultPartitionWriter bufferWriter=vertex.getEnvironment().getWriter(outputIndex);
  RecordWriter<SerializationDelegate<StreamRecord<T>>> output=RecordWriterFactory.createRecordWriter(bufferWriter,outputPartitioner,configuration.getBufferTimeout());
  StreamOutput<T> streamOutput=new StreamOutput<T>(output,vertex.instanceID,outSerializationDelegate);
  if (LOG.isTraceEnabled()) {
    LOG.trace("Partitioner set: {} with {} outputs for {}",outputPartitioner.getClass().getSimpleName(),outputIndex,vertex.getClass().getSimpleName());
  }
  return streamOutput;
}
