{
  final String[] vocabulary="a b c d e f g h i j k l m n o".split(" ");
  final IArrayNode points=new ArrayNode();
  final int numPoints=100;
  final int numValues=10;
  final Set<Integer> chosenValueIndexes=new TreeSet<Integer>();
  TextNode idNode;
  IArrayNode valuesNode;
  final IntNode rowsumNode=new IntNode(0);
  final Random random=new Random();
  for (int pointIndex=0; pointIndex < numPoints; pointIndex++) {
    idNode=new TextNode(String.format("sample%03d",pointIndex));
    chosenValueIndexes.clear();
    while (chosenValueIndexes.size() < numValues)     chosenValueIndexes.add(random.nextInt(vocabulary.length));
    valuesNode=new ArrayNode();
    for (    final int valueIndex : chosenValueIndexes)     valuesNode.add(new TextNode(String.valueOf(vocabulary[valueIndex])));
    final ObjectNode pointNode=new ObjectNode();
    PointNodes.write(pointNode,idNode,valuesNode,rowsumNode);
    points.add(pointNode);
  }
  String jsonString=points.toString();
  if (ESCAPE_CHARS)   jsonString=jsonString.replaceAll("\\\"","\\\\\"");
  System.out.println(jsonString);
}
