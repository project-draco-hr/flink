{
  final Object2IntOpenHashMap<String> counts=new Object2IntOpenHashMap<String>();
  counts.defaultReturnValue(0);
  for (  final IJsonNode value : values) {
    final ObjectNode basket=(ObjectNode)AnnotatorNodes.getAnnotatee((ObjectNode)value);
    final IArrayNode items=BasketNodes.getItems(basket);
    for (    final IJsonNode item : items) {
      final String itemValue=((TextNode)item).getTextValue();
      final int count=counts.getInt(itemValue);
      counts.put(itemValue,count + 1);
    }
  }
  final List<FrequentItemset> fis=new ArrayList<FrequentItemset>();
  for (  final Entry<String> entry : counts.object2IntEntrySet()) {
    final int support=entry.getIntValue();
    if (support >= this.minSupport) {
      final String item=entry.getKey();
      fis.add(new FrequentItemset(new String[]{item},entry.getIntValue()));
    }
  }
  return fis;
}
