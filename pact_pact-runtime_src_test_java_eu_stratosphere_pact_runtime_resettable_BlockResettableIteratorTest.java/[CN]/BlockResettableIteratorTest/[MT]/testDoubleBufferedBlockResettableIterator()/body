{
  reader=new CollectionReader<PactInteger>(objects);
  BlockResettableIterator<PactInteger> iterator=new BlockResettableIterator<PactInteger>(memman,reader,1000,2,deserializer);
  iterator.open();
  int lower=0;
  int upper=0;
  do {
    lower=upper;
    upper=lower;
    while (iterator.hasNext())     Assert.assertEquals(upper++,iterator.next().getValue());
    for (int i=0; i < 5; ++i) {
      iterator.reset();
      int count=0;
      while (iterator.hasNext())       Assert.assertEquals(lower + (count++),iterator.next().getValue());
      Assert.assertEquals(upper - lower,count);
    }
  }
 while (iterator.nextBlock());
  Assert.assertEquals(1000,upper);
  iterator.close();
  try {
    MemorySegment test=memman.allocate(memoryCapacity);
    memman.release(test);
  }
 catch (  Exception e) {
    Assert.fail("Memory leak detected!");
  }
}
