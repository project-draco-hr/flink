{
  if (!(super.getType() instanceof TupleTypeInfoBase<?>)) {
    throw new InvalidProgramException("Field positions can only be specified on Tuple or " + "Case Class types.");
  }
 else {
    TypeInformation<?> sortKeyType=((TupleTypeInfoBase<?>)super.getType()).getTypeAt(field);
    if (!sortKeyType.isSortKeyType()) {
      throw new InvalidProgramException("Selected sort key is not a sortable type " + sortKeyType);
    }
  }
  Keys.ExpressionKeys<T> ek;
  try {
    ek=new Keys.ExpressionKeys<T>(new int[]{field},super.getType());
  }
 catch (  IllegalArgumentException iae) {
    throw new InvalidProgramException("Invalid specification of field position.",iae);
  }
  return ek.computeLogicalKeyPositions();
}
