{
  final UUID leaderSessionID=UUID.randomUUID();
  final UUID oldSessionID=UUID.randomUUID();
  TestActorRef<PlainFlinkUntypedActor> actor=null;
  try {
    actor=TestActorRef.create(actorSystem,Props.create(PlainFlinkUntypedActor.class,leaderSessionID));
    final PlainFlinkUntypedActor underlyingActor=actor.underlyingActor();
    actor.tell(new JobManagerMessages.LeaderSessionMessage(leaderSessionID,1),ActorRef.noSender());
    actor.tell(new JobManagerMessages.LeaderSessionMessage(oldSessionID,2),ActorRef.noSender());
    actor.tell(new JobManagerMessages.LeaderSessionMessage(leaderSessionID,2),ActorRef.noSender());
    actor.tell(1,ActorRef.noSender());
    assertEquals(3,underlyingActor.getMessageCounter());
  }
  finally {
    stopActor(actor);
  }
}
