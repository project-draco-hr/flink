{
  final String className="Tuple" + numFields;
  w.print(HEADER);
  w.println("package " + PACKAGE + ';');
  w.println();
  w.println("import " + VALUE_TYPE_FULL + ';');
  w.println();
  w.print("public final class " + className + "<");
  for (int i=1; i <= numFields; i++) {
    if (i > 1) {
      w.print(", ");
    }
    w.print(GEN_TYPE_PREFIX + i + " extends "+ VALUE_TYPE);
  }
  w.println("> extends Tuple {");
  w.println();
  for (int i=1; i <= numFields; i++) {
    w.println("\tpublic " + GEN_TYPE_PREFIX + i+ " _"+ i+ ';');
  }
  w.println();
  w.println("\tpublic " + className + "() {}");
  w.println();
  w.print("\tpublic " + className + "(");
  for (int i=1; i <= numFields; i++) {
    if (i > 1) {
      w.print(", ");
    }
    w.print(GEN_TYPE_PREFIX + i + " _"+ i);
  }
  w.println(") {");
  for (int i=1; i <= numFields; i++) {
    w.println("\t\tthis._" + i + " = _"+ i+ ';');
  }
  w.println("\t}");
  w.println();
  w.println("\t@Override");
  w.println("\t@SuppressWarnings(\"unchecked\")");
  w.println("\tpublic <T> T getField(int pos) {");
  w.println("\t\tswitch(pos) {");
  for (int i=1; i <= numFields; i++) {
    w.println("\t\t\tcase " + i + ": return (T) this._"+ i+ ';');
  }
  w.println("\t\t\tdefault: throw new IndexOutOfBoundsException(String.valueOf(pos));");
  w.println("\t\t}");
  w.println("\t}");
  w.println("\t@Override");
  w.println("\t@SuppressWarnings(\"unchecked\")");
  w.println("\tpublic <T> void setField(T value, int pos) {");
  w.println("\t\tswitch(pos) {");
  for (int i=1; i <= numFields; i++) {
    w.println("\t\t\tcase " + i + ':');
    w.println("\t\t\t\tthis._" + i + " = ("+ GEN_TYPE_PREFIX+ i+ ") value;");
    w.println("\t\t\t\tbreak;");
  }
  w.println("\t\t\tdefault: throw new IndexOutOfBoundsException(String.valueOf(pos));");
  w.println("\t\t}");
  w.println("\t}");
  w.println("}");
}
