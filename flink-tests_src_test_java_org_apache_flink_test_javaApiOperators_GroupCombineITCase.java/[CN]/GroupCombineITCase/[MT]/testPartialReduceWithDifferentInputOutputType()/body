{
  final ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
  DataSet<Tuple3<Integer,Long,String>> ds=CollectionDataSets.get3TupleDataSet(env);
  DataSet<Tuple2<Long,Tuple3<Integer,Long,String>>> dsWrapped=ds.map(new Tuple3KvWrapper());
  List<Tuple2<Integer,Long>> result=dsWrapped.groupBy(0).combineGroup(new Tuple3toTuple2GroupReduce()).groupBy(0).reduceGroup(new Tuple2toTuple2GroupReduce()).map(new MapFunction<Tuple2<Long,Tuple2<Integer,Long>>,Tuple2<Integer,Long>>(){
    @Override public Tuple2<Integer,Long> map(    Tuple2<Long,Tuple2<Integer,Long>> value) throws Exception {
      return value.f1;
    }
  }
).collect();
  String expected="1,3\n" + "5,20\n" + "15,58\n"+ "34,52\n"+ "65,70\n"+ "111,96\n";
  compareResultAsTuples(result,expected);
}
