{
  final ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
  DataSet<Tuple1<String>> ds=CollectionDataSets.getStringDataSet(env).map(new MapFunction<String,Tuple1<String>>(){
    @Override public Tuple1<String> map(    String value) throws Exception {
      return new Tuple1<>(value);
    }
  }
);
  ds.combineGroup(new GroupCombineFunctionExample()).output(new DiscardingOutputFormat<Tuple1<String>>());
  ds.groupBy(0).combineGroup(new GroupCombineFunctionExample()).output(new DiscardingOutputFormat<Tuple1<String>>());
  ds.groupBy(0).sortGroup(0,Order.ASCENDING).combineGroup(new GroupCombineFunctionExample()).output(new DiscardingOutputFormat<Tuple1<String>>());
  env.execute();
}
