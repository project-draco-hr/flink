{
  int numIterations=0;
  BlockingBackChannel backChannel=initBackChannel();
  Broker<SuperstepBarrier> superstepBarrierBroker=SuperstepBarrierBroker.instance();
  TypeSerializer serializer=getInputSerializer(ITERATION_INPUT);
  output=(Collector<OT>)iterationCollector();
  while (numIterations < 3) {
    log.info("Head: starting iteration [" + numIterations + "] ["+ System.currentTimeMillis()+ "]");
    if (numIterations > 0) {
      reinstantiateDriver();
    }
    SuperstepBarrier superstepBarrier=superstepBarrierBroker.get(identifier());
    super.invoke();
    sendEventToAllIterationOutputsAndSync(new EndOfSuperstepEvent());
    DataInputView superStepResult=backChannel.getReadEndAfterSuperstepEnded();
    log.info("finishing iteration [" + numIterations + "] ["+ System.currentTimeMillis()+ "]");
    log.info("waiting for other works in iteration [" + numIterations + "] ["+ System.currentTimeMillis()+ "]");
    superstepBarrier.waitForOthers();
    feedBackSuperstepResult(superStepResult,serializer);
    numIterations++;
  }
  sendEventToAllIterationOutputsAndSync(new TerminationEvent());
  log.info("streaming out final result [" + numIterations + "] ["+ System.currentTimeMillis()+ "]");
  streamOutFinalOutput();
}
