{
  TypeInformation<?> typeForClass=TypeExtractor.createTypeInfo(ComplexHierarchyTop.class);
  Assert.assertTrue(typeForClass instanceof PojoTypeInfo<?>);
  PojoTypeInfo<?> pojoTypeForClass=(PojoTypeInfo<?>)typeForClass;
  for (int i=0; i < pojoTypeForClass.getArity(); i++) {
    PojoField field=pojoTypeForClass.getPojoFieldAt(i);
    String name=field.field.getName();
    if (name.equals("field1")) {
      Assert.assertTrue(field.type instanceof PojoTypeInfo<?>);
    }
 else     if (name.equals("field2")) {
      Assert.assertTrue(field.type instanceof TupleTypeInfo<?>);
      Assert.assertTrue(((TupleTypeInfo<?>)field.type).getTypeAt(0).equals(BasicTypeInfo.STRING_TYPE_INFO));
    }
 else     if (name.equals("key")) {
      Assert.assertEquals(BasicTypeInfo.INT_TYPE_INFO,field.type);
    }
 else {
      Assert.fail("Unexpected field " + field);
    }
  }
}
