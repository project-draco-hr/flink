{
  CoGroupFunction<?,?,?> function=new CoGroupFunction<String[],String[],String[]>(){
    private static final long serialVersionUID=1L;
    @Override public void coGroup(    Iterator<String[]> first,    Iterator<String[]> second,    Collector<String[]> out) throws Exception {
    }
  }
;
  TypeInformation<?> ti=TypeExtractor.getCoGroupReturnTypes(function,(TypeInformation)TypeInfoParser.parse("String[]"),(TypeInformation)TypeInfoParser.parse("String[]"));
  Assert.assertFalse(ti.isBasicType());
  Assert.assertFalse(ti.isTupleType());
  Assert.assertTrue(ti instanceof BasicArrayTypeInfo<?,?> || ti instanceof ObjectArrayTypeInfo<?,?>);
  if (ti instanceof BasicArrayTypeInfo<?,?>) {
    Assert.assertEquals(BasicArrayTypeInfo.STRING_ARRAY_TYPE_INFO,ti);
  }
 else {
    Assert.assertEquals(BasicTypeInfo.STRING_TYPE_INFO,((ObjectArrayTypeInfo<?,?>)ti).getComponentInfo());
  }
}
