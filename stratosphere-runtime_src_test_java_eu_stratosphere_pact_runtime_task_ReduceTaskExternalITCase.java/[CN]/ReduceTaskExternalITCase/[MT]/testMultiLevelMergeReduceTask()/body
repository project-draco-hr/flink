{
  final int keyCnt=32768;
  final int valCnt=8;
  setNumFileHandlesForSort(2);
  addInputComparator(this.comparator);
  setOutput(this.outList);
  getTaskConfig().setDriverStrategy(DriverStrategy.SORTED_GROUP);
  try {
    addInputSorted(new UniformRecordGenerator(keyCnt,valCnt,false),this.comparator.duplicate());
    ReduceDriver<Record,Record> testTask=new ReduceDriver<Record,Record>();
    testDriver(testTask,MockReduceStub.class);
  }
 catch (  Exception e) {
    LOG.debug(e);
    Assert.fail("Exception in Test.");
  }
  Assert.assertTrue("Resultset size was " + this.outList.size() + ". Expected was "+ keyCnt,this.outList.size() == keyCnt);
  for (  Record record : this.outList) {
    Assert.assertTrue("Incorrect result",record.getField(1,IntValue.class).getValue() == valCnt - record.getField(0,IntValue.class).getValue());
  }
  this.outList.clear();
}
