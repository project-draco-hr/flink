{
  final List<ChannelAccess<?>> channelAccesses=new ArrayList<ChannelAccess<?>>(channelIDs.size());
  registerChannelsToBeRemovedAtShudown(channelAccesses);
  final Iterator<KeyValuePair<K,V>> mergeIterator=getMergingIterator(channelIDs,readBuffers,channelAccesses);
  final KeyGroupedIterator<K,V> groupedIter=new KeyGroupedIterator<K,V>(mergeIterator);
  final Channel.ID mergedChannelID=this.ioManager.createChannel();
  final ChannelWriter writer=this.ioManager.createChannelWriter(mergedChannelID,writeBuffers);
  channelAccesses.add(writer);
  final WriterCollector<K,V> collector=new WriterCollector<K,V>(writer);
  while (groupedIter.nextKey()) {
    this.combineStub.combine(groupedIter.getKey(),groupedIter.getValues(),collector);
  }
  unregisterChannelsToBeRemovedAtShudown(channelAccesses);
  return mergedChannelID;
}
