{
  if (args.length < 1) {
    CliFrontendParser.printHelp();
    System.out.println("Please specify an action.");
    return 1;
  }
  String action=args[0];
  final String[] params=Arrays.copyOfRange(args,1,args.length);
  if (action.equals(ACTION_RUN)) {
    if (SecurityUtils.isSecurityEnabled()) {
      String message="Secure Hadoop environment setup detected. Running in secure context.";
      LOG.info(message);
      if (!webFrontend) {
        System.out.println(message);
      }
      try {
        return SecurityUtils.runSecured(new SecurityUtils.FlinkSecuredRunner<Integer>(){
          @Override public Integer run() throws Exception {
            return CliFrontend.this.run(params);
          }
        }
);
      }
 catch (      Exception e) {
        handleError(e);
      }
    }
    return run(params);
  }
 else   if (action.equals(ACTION_LIST)) {
    return list(params);
  }
 else   if (action.equals(ACTION_INFO)) {
    return info(params);
  }
 else   if (action.equals(ACTION_CANCEL)) {
    return cancel(params);
  }
 else   if (action.equals("-h") || action.equals("--help")) {
    CliFrontendParser.printHelp();
    return 0;
  }
 else   if (action.equals("-v") || action.equals("--version")) {
    String version=EnvironmentInformation.getVersion();
    String commitID=EnvironmentInformation.getRevisionInformation().commitId;
    System.out.print("Version: " + version);
    System.out.println(!commitID.equals(EnvironmentInformation.UNKNOWN) ? ", Commit ID: " + commitID : "");
    return 0;
  }
 else {
    System.out.printf("\"%s\" is not a valid action.\n",action);
    System.out.println();
    System.out.println("Valid actions are \"run\", \"list\", \"info\", or \"cancel\".");
    System.out.println();
    System.out.println("Specify the version option (-v or --version) to print Flink version.");
    System.out.println();
    System.out.println("Specify the help option (-h or --help) to get help on the command.");
    return 1;
  }
}
