{
  InetSocketAddress jobManagerAddress;
  int maxSlots=-1;
  if (YARN_DEPLOY_JOBMANAGER.equals(options.getJobManagerAddress())) {
    logAndSysout("YARN cluster mode detected. Switching Log4j output to console");
    String applicationName="Flink Application: " + programName;
    CommandLine commandLine=options.getCommandLine();
    AbstractFlinkYarnClient flinkYarnClient=CliFrontendParser.getFlinkYarnSessionCli().withDefaultApplicationName(applicationName).createFlinkYarnClient(commandLine);
    if (flinkYarnClient == null) {
      throw new RuntimeException("Unable to create Flink YARN Client. Check previous log messages");
    }
    if (detachedMode) {
      flinkYarnClient.setDetachedMode(true);
    }
    int yarnTmSlots=flinkYarnClient.getTaskManagerSlots();
    if (yarnTmSlots == -1) {
      yarnTmSlots=1;
    }
    maxSlots=yarnTmSlots * flinkYarnClient.getTaskManagerCount();
    if (userParallelism != -1) {
      int slotsPerTM=userParallelism / flinkYarnClient.getTaskManagerCount();
      logAndSysout("The YARN cluster has " + maxSlots + " slots available, "+ "but the user requested a parallelism of "+ userParallelism+ " on YARN. "+ "Each of the "+ flinkYarnClient.getTaskManagerCount()+ " TaskManagers "+ "will get "+ slotsPerTM+ " slots.");
      flinkYarnClient.setTaskManagerSlots(slotsPerTM);
    }
    try {
      yarnCluster=flinkYarnClient.deploy();
      yarnCluster.connectToCluster();
    }
 catch (    Exception e) {
      throw new RuntimeException("Error deploying the YARN cluster",e);
    }
    jobManagerAddress=yarnCluster.getJobManagerAddress();
    writeJobManagerAddressToConfig(jobManagerAddress);
    logAndSysout("YARN cluster started");
    logAndSysout("JobManager web interface address " + yarnCluster.getWebInterfaceURL());
    logAndSysout("Waiting until all TaskManagers have connected");
    while (true) {
      FlinkYarnClusterStatus status=yarnCluster.getClusterStatus();
      if (status != null) {
        if (status.getNumberOfTaskManagers() < flinkYarnClient.getTaskManagerCount()) {
          logAndSysout("TaskManager status (" + status.getNumberOfTaskManagers() + "/"+ flinkYarnClient.getTaskManagerCount()+ ")");
        }
 else {
          logAndSysout("All TaskManagers are connected");
          break;
        }
      }
 else {
        logAndSysout("No status updates from the YARN cluster received so far. Waiting ...");
      }
      try {
        Thread.sleep(500);
      }
 catch (      InterruptedException e) {
        LOG.error("Interrupted while waiting for TaskManagers");
        System.err.println("Thread is interrupted");
        Thread.currentThread().interrupt();
      }
    }
  }
 else {
    if (options.getJobManagerAddress() != null) {
      jobManagerAddress=ClientUtils.parseHostPortAddress(options.getJobManagerAddress());
      writeJobManagerAddressToConfig(jobManagerAddress);
    }
  }
  return new Client(config,maxSlots);
}
