{
  Configuration configuration=getGlobalConfiguration();
  if (line.hasOption(ADDRESS_OPTION.getOpt())) {
    try {
      return line.getOptionValue(ADDRESS_OPTION.getOpt());
    }
 catch (    Exception e) {
      System.out.println("Error: The JobManager address has an invalid format. " + e.getMessage());
      return null;
    }
  }
 else {
    Properties yarnProps=getYarnProperties();
    if (yarnProps != null) {
      try {
        String address=yarnProps.getProperty(YARN_PROPERTIES_JOBMANAGER_KEY);
        System.out.println("Found a yarn properties file (" + YARN_PROPERTIES_FILE + ") file, "+ "using \""+ address+ "\" to connect to the JobManager");
        return address;
      }
 catch (      Exception e) {
        System.out.println("Found a yarn properties " + YARN_PROPERTIES_FILE + " file, but could not read the JobManager address from the file. "+ e.getMessage());
        return null;
      }
    }
 else {
      String jobManagerAddress=configuration.getString(ConfigConstants.JOB_MANAGER_IPC_ADDRESS_KEY,null);
      if (jobManagerAddress == null) {
        System.out.println("Error: Found no configuration in the config directory '" + getConfigurationDirectory() + "' that specifies the JobManager address.");
        return null;
      }
      int jobManagerPort;
      try {
        jobManagerPort=configuration.getInteger(ConfigConstants.JOB_MANAGER_IPC_PORT_KEY,-1);
      }
 catch (      NumberFormatException e) {
        System.out.println("Invalid value for the JobManager IPC port (" + ConfigConstants.JOB_MANAGER_IPC_PORT_KEY + ") in the configuration.");
        return null;
      }
      if (jobManagerPort == -1) {
        System.out.println("Error: Found no configuration in the config directory '" + getConfigurationDirectory() + "' that specifies the JobManager port.");
        return null;
      }
      return jobManagerAddress + ":" + jobManagerPort;
    }
  }
}
