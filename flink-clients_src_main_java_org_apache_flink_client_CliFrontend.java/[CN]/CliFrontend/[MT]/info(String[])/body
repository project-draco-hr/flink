{
  LOG.info("Running 'info' command.");
  InfoOptions options;
  try {
    options=CliFrontendParser.parseInfoCommand(args);
  }
 catch (  CliArgsException e) {
    return handleArgException(e);
  }
catch (  Throwable t) {
    return handleError(t);
  }
  if (options.isPrintHelp()) {
    CliFrontendParser.printHelpForInfo();
    return 0;
  }
  if (options.getJarFilePath() == null) {
    return handleArgException(new CliArgsException("The program JAR file was not specified."));
  }
  PackagedProgram program;
  try {
    LOG.info("Building program from JAR file");
    program=buildProgram(options);
  }
 catch (  Throwable t) {
    return handleError(t);
  }
  try {
    int parallelism=options.getParallelism();
    LOG.info("Creating program plan dump");
    Client client=getClient(options,program.getUserCodeClassLoader(),program.getMainClassName(),parallelism);
    String jsonPlan=client.getOptimizedPlanAsJson(program,parallelism);
    if (jsonPlan != null) {
      System.out.println("----------------------- Execution Plan -----------------------");
      System.out.println(jsonPlan);
      System.out.println("--------------------------------------------------------------");
    }
 else {
      System.out.println("JSON plan could not be generated.");
    }
    return 0;
  }
 catch (  Throwable t) {
    return handleError(t);
  }
 finally {
    program.deleteExtractedLibraries();
  }
}
