{
  KeySelector<Integer,Integer> keySelector=new KeySelector<Integer,Integer>(){
    @Override public Integer getKey(    Integer value){
      return value;
    }
  }
;
  StreamGroupedFold<Integer,String,Integer> operator=new StreamGroupedFold<>(new TestOpenCloseFoldFunction(),"init");
  operator.setOutputType(BasicTypeInfo.STRING_TYPE_INFO,new ExecutionConfig());
  OneInputStreamOperatorTestHarness<Integer,String> testHarness=new OneInputStreamOperatorTestHarness<>(operator);
  long initialTime=0L;
  testHarness.open();
  testHarness.processElement(new StreamRecord<>(1,initialTime));
  testHarness.processElement(new StreamRecord<>(2,initialTime));
  testHarness.close();
  Assert.assertTrue("RichFunction methods where not called.",TestOpenCloseFoldFunction.closeCalled);
  Assert.assertTrue("Output contains no elements.",testHarness.getOutput().size() > 0);
}
