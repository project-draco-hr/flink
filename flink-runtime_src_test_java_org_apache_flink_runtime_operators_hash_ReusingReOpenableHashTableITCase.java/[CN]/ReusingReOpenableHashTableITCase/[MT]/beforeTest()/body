{
  this.recordSerializer=RecordSerializer.get();
  this.record1Comparator=new RecordComparator(new int[]{0},new Class[]{TestData.Key.class});
  this.record2Comparator=new RecordComparator(new int[]{0},new Class[]{TestData.Key.class});
  this.recordPairComparator=new RecordPairComparator(new int[]{0},new int[]{0},new Class[]{TestData.Key.class});
  final int[] keyPos=new int[]{0};
  final Class<? extends Key>[] keyType=(Class<? extends Key>[])new Class[]{IntValue.class};
  this.recordBuildSideAccesssor=RecordSerializer.get();
  this.recordProbeSideAccesssor=RecordSerializer.get();
  this.recordBuildSideComparator=new RecordComparator(keyPos,keyType);
  this.recordProbeSideComparator=new RecordComparator(keyPos,keyType);
  this.pactRecordComparator=new HashTableITCase.RecordPairComparatorFirstInt();
  this.memoryManager=new DefaultMemoryManager(MEMORY_SIZE,1,PAGE_SIZE,true);
  this.ioManager=new IOManagerAsync();
}
