{
  ExecutionConfig config=new ExecutionConfig();
  config.setAutoWatermarkInterval(10);
  List<KafkaTopicPartition> originalPartitions=Arrays.asList(new KafkaTopicPartition("test topic name",7),new KafkaTopicPartition("test topic name",13),new KafkaTopicPartition("test topic name",21));
  TestSourceContext<Long> sourceContext=new TestSourceContext<>();
  final AtomicReference<Throwable> errorRef=new AtomicReference<>();
  final TimeServiceProvider timerService=new DefaultTimeServiceProvider(new ReferenceSettingExceptionHandler(errorRef),sourceContext.getCheckpointLock());
  try {
    TestFetcher<Long> fetcher=new TestFetcher<>(sourceContext,originalPartitions,new SerializedValue<AssignerWithPeriodicWatermarks<Long>>(new PeriodicTestExtractor()),null,new MockRuntimeContext(17,3,config,timerService));
    final KafkaTopicPartitionState<Object> part1=fetcher.subscribedPartitions()[0];
    final KafkaTopicPartitionState<Object> part2=fetcher.subscribedPartitions()[1];
    final KafkaTopicPartitionState<Object> part3=fetcher.subscribedPartitions()[2];
    fetcher.emitRecord(1L,part1,1L);
    fetcher.emitRecord(2L,part1,2L);
    fetcher.emitRecord(3L,part1,3L);
    assertEquals(3L,sourceContext.getLatestElement().getValue().longValue());
    assertEquals(3L,sourceContext.getLatestElement().getTimestamp());
    fetcher.emitRecord(12L,part2,1L);
    assertEquals(12L,sourceContext.getLatestElement().getValue().longValue());
    assertEquals(12L,sourceContext.getLatestElement().getTimestamp());
    fetcher.emitRecord(101L,part3,1L);
    fetcher.emitRecord(102L,part3,2L);
    assertEquals(102L,sourceContext.getLatestElement().getValue().longValue());
    assertEquals(102L,sourceContext.getLatestElement().getTimestamp());
    assertEquals(3L,sourceContext.getLatestWatermark().getTimestamp());
    fetcher.emitRecord(1003L,part3,3L);
    fetcher.emitRecord(1004L,part3,4L);
    fetcher.emitRecord(1005L,part3,5L);
    assertEquals(1005L,sourceContext.getLatestElement().getValue().longValue());
    assertEquals(1005L,sourceContext.getLatestElement().getTimestamp());
    fetcher.emitRecord(30L,part1,4L);
    assertEquals(30L,sourceContext.getLatestElement().getValue().longValue());
    assertEquals(30L,sourceContext.getLatestElement().getTimestamp());
    assertEquals(12L,sourceContext.getLatestWatermark().getTimestamp());
    fetcher.emitRecord(13L,part2,2L);
    fetcher.emitRecord(14L,part2,3L);
    fetcher.emitRecord(15L,part2,3L);
    long watermarkTs=sourceContext.getLatestWatermark().getTimestamp();
    assertTrue(watermarkTs >= 13L && watermarkTs <= 15L);
  }
  finally {
    timerService.shutdownService();
  }
}
