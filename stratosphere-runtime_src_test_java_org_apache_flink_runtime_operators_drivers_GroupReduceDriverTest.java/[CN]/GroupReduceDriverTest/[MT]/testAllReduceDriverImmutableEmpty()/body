{
  try {
    TestTaskContext<GenericGroupReduce<Tuple2<String,Integer>,Tuple2<String,Integer>>,Tuple2<String,Integer>> context=new TestTaskContext<GenericGroupReduce<Tuple2<String,Integer>,Tuple2<String,Integer>>,Tuple2<String,Integer>>();
    List<Tuple2<String,Integer>> data=DriverTestData.createReduceImmutableData();
    TupleTypeInfo<Tuple2<String,Integer>> typeInfo=(TupleTypeInfo<Tuple2<String,Integer>>)TypeExtractor.getForObject(data.get(0));
    MutableObjectIterator<Tuple2<String,Integer>> input=EmptyMutableObjectIterator.get();
    TypeComparator<Tuple2<String,Integer>> comparator=typeInfo.createComparator(new int[]{0},new boolean[]{true});
    context.setDriverStrategy(DriverStrategy.SORTED_GROUP_REDUCE);
    context.setInput1(input,typeInfo.createSerializer());
    context.setComparator1(comparator);
    context.setCollector(new DiscardingOutputCollector<Tuple2<String,Integer>>());
    GroupReduceDriver<Tuple2<String,Integer>,Tuple2<String,Integer>> driver=new GroupReduceDriver<Tuple2<String,Integer>,Tuple2<String,Integer>>();
    driver.setup(context);
    driver.prepare();
    driver.run();
  }
 catch (  Exception e) {
    System.err.println(e.getMessage());
    e.printStackTrace();
    Assert.fail(e.getMessage());
  }
}
