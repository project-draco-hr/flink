{
  if (in.getShipStrategy() == ShipStrategyType.FORWARD) {
    return new SingleInputPlanNode(node,"Reduce(" + node.getPactContract().getName() + ")",in,DriverStrategy.ALL_GROUP);
  }
 else {
    Channel toCombiner=new Channel(in.getSource());
    toCombiner.setShipStrategy(ShipStrategyType.FORWARD);
    SingleInputPlanNode combiner=new SingleInputPlanNode(node,"Combine(" + node.getPactContract().getName() + ")",toCombiner,DriverStrategy.ALL_GROUP);
    combiner.setCosts(new Costs(0,0));
    Channel toReducer=new Channel(combiner);
    toReducer.setShipStrategy(in.getShipStrategy(),in.getShipStrategyKeys(),in.getShipStrategySortOrder());
    toReducer.setLocalStrategy(in.getLocalStrategy(),in.getLocalStrategyKeys(),in.getLocalStrategySortOrder());
    return new SingleInputPlanNode(node,"Reduce(" + node.getPactContract().getName() + ")",toReducer,DriverStrategy.ALL_GROUP);
  }
}
