{
  int blockSize=Utils.readUnsignedIntLE(in);
  if (blockSize == 0) {
    finished=true;
    return;
  }
 else   if (blockSize > maxBlockSize) {
    throw new IOException(String.format("Block size %s exceeded max: %s",blockSize,maxBlockSize));
  }
  boolean compressed=(blockSize & LZ4_FRAME_INCOMPRESSIBLE_MASK) == 0;
  byte[] bufferToRead;
  if (compressed) {
    bufferToRead=compressedBuffer;
  }
 else {
    blockSize&=~LZ4_FRAME_INCOMPRESSIBLE_MASK;
    bufferToRead=buffer;
    bufferSize=blockSize;
  }
  if (in.read(bufferToRead,0,blockSize) != blockSize) {
    throw new IOException(PREMATURE_EOS);
  }
  if (flg.isBlockChecksumSet() && Utils.readUnsignedIntLE(in) != checksum.hash(bufferToRead,0,blockSize,0)) {
    throw new IOException(BLOCK_HASH_MISMATCH);
  }
  if (compressed) {
    try {
      bufferSize=decompressor.decompress(compressedBuffer,0,blockSize,buffer,0,maxBlockSize);
    }
 catch (    LZ4Exception e) {
      throw new IOException(e);
    }
  }
  bufferOffset=0;
}
