{
  this.localBufferPool=new LocalBufferPool(1,false,this);
  this.task=task;
  final RuntimeEnvironment environment=task.getRuntimeEnvironment();
  int nooc=0;
  for (int i=0; i < environment.getNumberOfOutputGates(); ++i) {
    final OutputGate<? extends Record> outputGate=environment.getOutputGate(i);
    if (outputGate.isBroadcast()) {
      ++nooc;
    }
 else {
      nooc+=outputGate.getNumberOfOutputChannels();
    }
  }
  this.numberOfOutputChannels=nooc;
  if (initialCheckpointState == CheckpointState.NONE) {
    this.ephemeralCheckpoint=null;
  }
 else {
    this.ephemeralCheckpoint=new EphemeralCheckpoint(task,this.numberOfOutputChannels,initialCheckpointState == CheckpointState.UNDECIDED);
    this.task.registerCheckpointDecisionRequester(this.ephemeralCheckpoint);
  }
  this.transferEnvelopeDispatcher=transferEnvelopeDispatcher;
  this.envelopeConsumptionLog=new EnvelopeConsumptionLog(task.getVertexID(),environment);
  this.startTime=System.currentTimeMillis();
}
