{
  if (!parseParameters(args)) {
    return;
  }
  ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
  DataSet<Edge<Long,Double>> edges=getEdgesDataSet(env);
  Graph<Long,Double,Double> graph=Graph.fromDataSet(edges,new MapFunction<Long,Double>(){
    public Double map(    Long value){
      return Double.MAX_VALUE;
    }
  }
,env);
  DataSet<Vertex<Long,Double>> singleSourceShortestPaths=graph.run(new SingleSourceShortestPathsAlgorithm<Long>(srcVertexId,maxIterations)).getVertices();
  if (fileOutput) {
    singleSourceShortestPaths.writeAsCsv(outputPath,"\n",",");
  }
 else {
    singleSourceShortestPaths.print();
  }
  env.execute("Single Source Shortest Paths Example");
}
