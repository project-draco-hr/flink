{
  parseParameters(args);
  final ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
  DataSet<Tuple2<String,String>> documents=getDocumentsDataSet(env);
  DataSet<Tuple3<Integer,String,Integer>> ranks=getRanksDataSet(env);
  DataSet<Tuple2<String,String>> visits=getVisitsDataSet(env);
  DataSet<Tuple1<String>> filterDocs=documents.filter(new FilterDocs()).project(0).types(String.class);
  DataSet<Tuple3<Integer,String,Integer>> filterRanks=ranks.filter(new FilterRanks());
  DataSet<Tuple1<String>> filterVisits=visits.filter(new FilterVisits()).project(0).types(String.class);
  DataSet<Tuple3<Integer,String,Integer>> joinDocsRanks=filterDocs.join(filterRanks).where(0).equalTo(1).projectSecond(0,1,2).types(Integer.class,String.class,Integer.class);
  DataSet<Tuple3<Integer,String,Integer>> result=joinDocsRanks.coGroup(filterVisits).where(1).equalTo(0).with(new AntiJoinVisits());
  if (fileOutput) {
    result.writeAsCsv(outputPath,"\n","|");
  }
 else {
    result.print();
  }
  env.execute("WebLogAnalysis Example");
}
