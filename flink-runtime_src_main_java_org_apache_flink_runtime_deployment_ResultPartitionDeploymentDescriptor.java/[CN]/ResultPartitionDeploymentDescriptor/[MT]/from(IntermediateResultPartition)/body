{
  final IntermediateDataSetID resultId=partition.getIntermediateResult().getId();
  final IntermediateResultPartitionID partitionId=partition.getPartitionId();
  final ResultPartitionType partitionType=partition.getIntermediateResult().getResultType();
  int numberOfSubpartitions=1;
  if (!partition.getConsumers().isEmpty() && !partition.getConsumers().get(0).isEmpty()) {
    if (partition.getConsumers().size() > 1) {
      new IllegalStateException("Currently, only a single consumer group per partition is supported.");
    }
    numberOfSubpartitions=partition.getConsumers().get(0).size();
  }
  return new ResultPartitionDeploymentDescriptor(resultId,partitionId,partitionType,numberOfSubpartitions,partition.getIntermediateResult().getEagerlyDeployConsumers());
}
