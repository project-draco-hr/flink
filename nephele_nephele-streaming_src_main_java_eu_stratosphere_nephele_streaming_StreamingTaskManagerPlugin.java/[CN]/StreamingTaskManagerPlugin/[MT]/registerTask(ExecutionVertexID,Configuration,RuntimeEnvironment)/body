{
  final int aggregationInterval=jobConfiguration.getInteger(AGGREGATION_INTERVAL_KEY,this.aggregationInterval);
  final int taggingInterval=jobConfiguration.getInteger(TAGGING_INTERVAL_KEY,this.taggingInterval);
  final String idAsString=id.toString();
  environment.getTaskConfiguration().setString(StreamListenerContext.CONTEXT_CONFIGURATION_KEY,idAsString);
  final JobID jobID=environment.getJobID();
  StreamListenerContext listenerContext=null;
  if (environment.getNumberOfInputGates() == 0) {
    listenerContext=StreamListenerContext.createForInputTask(jobID,id,this.communicationThread,aggregationInterval,taggingInterval);
  }
 else   if (environment.getNumberOfOutputGates() == 0) {
    listenerContext=StreamListenerContext.createForOutputTask(jobID,id,this.communicationThread,aggregationInterval);
  }
 else {
    listenerContext=StreamListenerContext.createForRegularTask(jobID,id,this.communicationThread,aggregationInterval);
  }
  this.listenerContexts.putIfAbsent(idAsString,listenerContext);
}
