{
  final Comparator<K> keyComparator=new Comparator<K>(){
    @Override public int compare(    K k1,    K k2){
      return k1.compareTo(k2);
    }
  }
;
{
    final SerializationFactory<K> keySerialization=new WritableSerializationFactory<K>(keyClass);
    final SerializationFactory<V1> valSerialization=new WritableSerializationFactory<V1>(valueClass1);
    this.sortMerger1=new UnilateralSortMerger<K,V1>(this.memoryManager,this.ioManager,this.memoryPerChannel,this.fileHandlesPerChannel,keySerialization,valSerialization,keyComparator,this.reader1,this.parentTask);
  }
{
    final SerializationFactory<K> keySerialization=new WritableSerializationFactory<K>(keyClass);
    final SerializationFactory<V2> valSerialization=new WritableSerializationFactory<V2>(valueClass2);
    this.sortMerger2=new UnilateralSortMerger<K,V2>(this.memoryManager,this.ioManager,this.memoryPerChannel,this.fileHandlesPerChannel,keySerialization,valSerialization,keyComparator,this.reader2,this.parentTask);
  }
  this.iterator1=new KeyValueIterator<V1>(sortMerger1.getIterator());
  this.iterator2=new KeyValueIterator<V2>(sortMerger2.getIterator());
}
