{
  val1.copyTo(this.copy1);
  final Environment env=this.environment;
  final OutputCollector oc=(OutputCollector)collector;
  long r1=firstValN.getBinaryLength();
  long r2=val1.getBinaryLength();
  matchFunction.match(firstValN,val1,collector);
  env.reportPACTDataStatistics(r1 + r2,oc.getCollectedPactRecordsInBytes());
  boolean more=true;
  do {
    PactRecord nRec=valsN.next();
    if (valsN.hasNext()) {
      this.copy1.copyToIfModified(val1);
      r1=nRec.getBinaryLength();
      r2=val1.getBinaryLength();
      matchFunction.match(nRec,val1,collector);
      env.reportPACTDataStatistics(r1 + r2,oc.getCollectedPactRecordsInBytes());
    }
 else {
      r1=nRec.getBinaryLength();
      r2=this.copy1.getBinaryLength();
      matchFunction.match(nRec,this.copy1,collector);
      env.reportPACTDataStatistics(r1 + r2,oc.getCollectedPactRecordsInBytes());
      more=false;
    }
  }
 while (more);
}
