{
  return new Iterator<V>(){
    boolean first=true;
    boolean last=false;
    boolean nextCalled=true;
    @Override public boolean hasNext(){
      if (first) {
        first=false;
        return true;
      }
 else       if (last) {
        return false;
      }
 else {
        if (nextCalled) {
          if (!iterator.hasNext()) {
            return false;
          }
          nextCalled=false;
          KeyValuePair<K,V> prev=next;
          next=iterator.next();
          if (next.getKey().compareTo(prev.getKey()) == 0) {
            return true;
          }
 else {
            last=true;
            nextKey=true;
            return false;
          }
        }
 else {
          return true;
        }
      }
    }
    @Override public V next(){
      if (first)       first=false;
      nextCalled=true;
      return next.getValue();
    }
    @Override public void remove(){
    }
  }
;
}
