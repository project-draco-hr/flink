{
  this.comp=pairComparator;
  this.serializer1=serializer1;
  this.serializer2=serializer2;
  this.comparator1=comparator1;
  this.comparator2=comparator2;
  this.copy1=serializer1.createInstance();
  this.spillHeadCopy=serializer1.createInstance();
  this.copy2=serializer2.createInstance();
  this.blockHeadCopy=serializer2.createInstance();
  this.memoryManager=memoryManager;
  this.ioManager=ioManager;
  this.reader1=reader1;
  this.reader2=reader2;
  final int pageSize=memoryManager.getPageSize();
  long memoryForBlockNestedLoops=Math.max((long)(memory * memPercentageForBlockNL),2 * pageSize);
  long pagesForBlockNL=memoryForBlockNestedLoops / pageSize;
  int numPagesForSpiller=pagesForBlockNL > 20 ? 2 : 1;
  this.memoryPerChannel=(memory - memoryForBlockNestedLoops) / 2;
  this.fileHandlesPerChannel=(maxNumFileHandles / 2) < 2 ? 2 : (maxNumFileHandles / 2);
  this.localStrategy=localStrategy;
  this.parentTask=parentTask;
  this.spillingThreshold=spillingThreshold;
  this.blockIt=new BlockResettableIterator<T2>(this.memoryManager,this.serializer2,memoryForBlockNestedLoops - (numPagesForSpiller * pageSize),parentTask);
  this.memoryForSpillingIterator=memoryManager.allocatePages(parentTask,numPagesForSpiller);
}
