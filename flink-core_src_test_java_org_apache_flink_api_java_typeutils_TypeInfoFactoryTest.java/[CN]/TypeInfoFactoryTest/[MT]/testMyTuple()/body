{
  TypeInformation<Tuple1<MyTuple<Double,String>>> inTypeInfo=new TupleTypeInfo<>(new MyTupleTypeInfo(DOUBLE_TYPE_INFO,STRING_TYPE_INFO));
  MapFunction<Tuple1<MyTuple<Double,String>>,Tuple1<MyTuple<Boolean,Double>>> f=new MyTupleMapperL2<>();
  TypeInformation<?> ti=TypeExtractor.getMapReturnTypes(f,inTypeInfo);
  assertTrue(ti instanceof TupleTypeInfo);
  TupleTypeInfo<?> tti=(TupleTypeInfo<?>)ti;
  assertTrue(tti.getTypeAt(0) instanceof MyTupleTypeInfo);
  MyTupleTypeInfo mtti=(MyTupleTypeInfo)tti.getTypeAt(0);
  assertEquals(BOOLEAN_TYPE_INFO,mtti.getField0());
  assertEquals(DOUBLE_TYPE_INFO,mtti.getField1());
}
