{
  TypeInformation<Tuple1<MyTuple3<Tuple1<Float>>>> inTypeInfo=new TupleTypeInfo<>(new MyTupleTypeInfo<>(new TupleTypeInfo<Tuple1<Float>>(FLOAT_TYPE_INFO),BOOLEAN_TYPE_INFO));
  MapFunction<Tuple1<MyTuple3<Tuple1<Float>>>,Tuple1<MyTuple3<Tuple2<Float,String>>>> f=new MyTuple3Mapper<>();
  TypeInformation ti=TypeExtractor.getMapReturnTypes(f,inTypeInfo);
  assertTrue(ti instanceof TupleTypeInfo);
  TupleTypeInfo<?> tti=(TupleTypeInfo)ti;
  assertTrue(tti.getTypeAt(0) instanceof MyTupleTypeInfo);
  MyTupleTypeInfo mtti=(MyTupleTypeInfo)tti.getTypeAt(0);
  assertEquals(new TupleTypeInfo<>(FLOAT_TYPE_INFO,STRING_TYPE_INFO),mtti.getField0());
  assertEquals(BOOLEAN_TYPE_INFO,mtti.getField1());
}
