{
  SingleInputSemanticProperties sprops=new SingleInputSemanticProperties();
  SemanticPropUtil.getSemanticPropsSingleFromString(sprops,new String[]{"0->1; 1->2; 4->3"},null,null,tupleInfo,tupleInfo);
  GlobalProperties gprops=new GlobalProperties();
  Partitioner<Tuple2<Long,Integer>> myP=new MockPartitioner();
  gprops.setCustomPartitioned(new FieldList(0,4),myP);
  GlobalProperties result=gprops.filterBySemanticProperties(sprops,0);
  assertEquals(PartitioningProperty.CUSTOM_PARTITIONING,result.getPartitioning());
  FieldList pFields=result.getPartitioningFields();
  assertEquals(2,pFields.size());
  assertTrue(pFields.contains(1));
  assertTrue(pFields.contains(3));
  assertEquals(myP,result.getCustomPartitioner());
}
