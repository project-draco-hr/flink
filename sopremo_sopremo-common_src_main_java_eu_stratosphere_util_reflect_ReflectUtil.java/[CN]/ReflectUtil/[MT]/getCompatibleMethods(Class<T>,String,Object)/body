{
  final Method[] methods=type.getDeclaredMethods();
  final Map<Method,Integer> candidateDistances=new HashMap<Method,Integer>();
  for (  final Method method : methods) {
    if (!method.getName().equals(name))     continue;
    int distance=0;
    final Class<?>[] parameterTypes=method.getParameterTypes();
    if (params.length != parameterTypes.length)     continue;
    for (int index=0; index < parameterTypes.length; index++) {
      if (!parameterTypes[index].isInstance(params[index])) {
        distance=Integer.MAX_VALUE;
        break;
      }
      if (params[index] != null)       distance+=getDistance(parameterTypes[index],params[index].getClass());
    }
    candidateDistances.put(method,distance);
  }
  if (type.getSuperclass() != null)   candidateDistances.putAll(getCompatibleMethods(type.getSuperclass(),name,params));
  return candidateDistances;
}
