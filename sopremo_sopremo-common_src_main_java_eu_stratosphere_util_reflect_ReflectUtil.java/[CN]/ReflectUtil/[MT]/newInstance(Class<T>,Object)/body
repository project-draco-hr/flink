{
  try {
    final Map<Constructor<?>,Integer> candidateDistances=getCompatibleConstructors(type,params);
    if (candidateDistances.isEmpty())     throw new IllegalArgumentException(String.format("no suitable constructor found in %s for %s",type,Arrays.toString(params)));
    if (candidateDistances.size() == 1)     return (T)candidateDistances.keySet().iterator().next().newInstance(params);
    final Constructor<?> bestConstructor=pickBest(candidateDistances);
    if (bestConstructor == null)     throw new IllegalArgumentException(String.format("more than one suitable constructor found in %s for %s",type,Arrays.toString(params)));
    return (T)bestConstructor.newInstance(params);
  }
 catch (  final Exception e) {
    throw new IllegalArgumentException("Could not create an instance of type " + type,e);
  }
}
