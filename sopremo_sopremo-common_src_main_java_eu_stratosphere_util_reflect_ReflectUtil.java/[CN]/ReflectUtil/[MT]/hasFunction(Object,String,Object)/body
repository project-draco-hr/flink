{
  final Class<? extends Object> type=object.getClass();
  try {
    final Map<Method,Integer> candidateDistances=getCompatibleMethods(type,function,params);
    if (candidateDistances.isEmpty())     return false;
    if (candidateDistances.size() == 1)     return true;
    return pickBest(candidateDistances) != null;
  }
 catch (  final Exception e) {
    throw new IllegalArgumentException(String.format("Could not find method %s for type %s with parameters %s",function,type,Arrays.toString(params)),e);
  }
}
