{
synchronized (this) {
    if (alive) {
      alive=false;
      requestQueue.close();
      interrupt();
    }
    try {
      join(1000);
    }
 catch (    InterruptedException ignored) {
    }
    IOException ioex=new IOException("IO-Manager has been closed.");
    while (!this.requestQueue.isEmpty()) {
      WriteRequest request=this.requestQueue.poll();
      if (request != null) {
        try {
          request.requestDone(ioex);
        }
 catch (        Throwable t) {
          IOManagerAsync.LOG.error("The handler of the request complete callback threw an exception" + (t.getMessage() == null ? "." : ": " + t.getMessage()),t);
        }
      }
    }
  }
}
