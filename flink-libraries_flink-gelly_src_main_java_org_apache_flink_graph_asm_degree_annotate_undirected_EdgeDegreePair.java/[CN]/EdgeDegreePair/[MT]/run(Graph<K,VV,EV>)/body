{
  DataSet<Edge<K,Tuple2<EV,LongValue>>> edgeSourceDegrees=input.run(new EdgeSourceDegree<K,VV,EV>().setReduceOnTargetId(reduceOnTargetId).setParallelism(parallelism));
  DataSet<Vertex<K,LongValue>> vertexDegrees;
  if (reduceOnTargetId) {
    vertexDegrees=input.run(new VertexDegree<K,VV,EV>().setReduceOnTargetId(true).setParallelism(parallelism));
  }
 else {
    vertexDegrees=input.run(new VertexDegree<K,VV,EV>().setParallelism(parallelism));
  }
  return edgeSourceDegrees.join(vertexDegrees,JoinHint.REPARTITION_HASH_SECOND).where(1).equalTo(0).with(new JoinEdgeDegreeWithVertexDegree<K,EV>()).setParallelism(parallelism).name("Edge target degree");
}
