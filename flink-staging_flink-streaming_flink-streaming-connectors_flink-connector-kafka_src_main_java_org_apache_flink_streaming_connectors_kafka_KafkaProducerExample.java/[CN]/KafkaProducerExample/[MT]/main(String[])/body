{
  if (args.length < 3) {
    System.err.println("Usage: KafkaProducerExample <host> <port> <topic>");
    return;
  }
  final String host=args[0];
  final int port=Integer.parseInt(args[1]);
  final String topic=args[2];
  StreamExecutionEnvironment env=StreamExecutionEnvironment.createLocalEnvironment().setParallelism(4);
  env.addSource(new SourceFunction<String>(){
    private volatile boolean running=true;
    @Override public void run(    SourceContext<String> ctx) throws Exception {
      for (int i=0; i < 20 && running; i++) {
        ctx.collect("message #" + i);
        Thread.sleep(100L);
      }
      ctx.collect("q");
    }
    @Override public void cancel(){
      running=false;
    }
  }
).addSink(new KafkaSink<String>(host + ":" + port,topic,new JavaDefaultStringSchema())).setParallelism(3);
  env.execute();
}
