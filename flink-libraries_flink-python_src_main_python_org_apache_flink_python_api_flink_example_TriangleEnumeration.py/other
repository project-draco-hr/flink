from flink.plan.Environment import get_environment
from flink.plan.Constants import Order
from flink.functions.FlatMapFunction import FlatMapFunction
from flink.functions.GroupReduceFunction import GroupReduceFunction
from flink.functions.ReduceFunction import ReduceFunction
from flink.functions.MapFunction import MapFunction
from flink.functions.JoinFunction import JoinFunction
if (__name__ == '__main__'):
    env = get_environment()
    edges = env.from_elements((1, 2), (1, 3), (1, 4), (1, 5), (2, 3), (2, 5), (3, 4), (3, 7), (3, 8), (5, 6), (7, 8))
    edges_with_degrees = edges.flat_map(EdgeDuplicator()).group_by(0).sort_group(1, Order.ASCENDING).reduce_group(DegreeCounter()).group_by(0, 2).reduce(DegreeJoiner())
    edges_by_degree = edges_with_degrees.map(EdgeByDegreeProjector())
    edges_by_id = edges_by_degree.map(EdgeByIdProjector())
    triangles = edges_by_degree.group_by(0).sort_group(1, Order.ASCENDING).reduce_group(TriadBuilder()).join(edges_by_id).where(1, 2).equal_to(0, 1).using(TriadFilter())
    triangles.output()
    env.set_parallelism(1)
    env.execute(local=True)
