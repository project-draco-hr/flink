{
  return this.getEdges().join(edges).where(0,1,2).equalTo(0,1,2).with(new JoinFunction<Edge<K,EV>,Edge<K,EV>,Edge<K,EV>>(){
    @Override public Edge<K,EV> join(    Edge<K,EV> first,    Edge<K,EV> second) throws Exception {
      return first;
    }
  }
).withForwardedFieldsFirst("*").distinct();
}
