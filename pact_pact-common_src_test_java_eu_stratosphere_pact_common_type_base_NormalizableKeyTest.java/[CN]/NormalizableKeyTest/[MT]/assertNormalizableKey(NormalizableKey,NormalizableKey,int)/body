{
  byte[] normalizedKeys=new byte[2 * len];
  key1.copyNormalizedKey(normalizedKeys,0,len);
  key2.copyNormalizedKey(normalizedKeys,len,len);
  for (int i=0; i < len; i++) {
    int comp;
    int normKey1=normalizedKeys[i] & 0xFF;
    int normKey2=normalizedKeys[len + i] & 0xFF;
    if ((comp=(normKey1 - normKey2)) != 0) {
      if (Math.signum(key1.compareTo(key2)) != Math.signum(comp)) {
        Assert.fail("Normalized key comparison differs from actual key comparision");
      }
      return;
    }
  }
  if (key1.compareTo(key2) != 0 && key1.getMaxNormalizedKeyLen() <= len) {
    Assert.fail("Normalized key was not able to distinguish keys, " + "although it should as the length of it sufficies to uniquely identify them");
  }
}
