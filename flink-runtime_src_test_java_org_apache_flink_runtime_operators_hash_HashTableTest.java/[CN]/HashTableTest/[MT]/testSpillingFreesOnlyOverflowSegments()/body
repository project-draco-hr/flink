{
  final IOManager ioMan=new IOManagerAsync();
  final TypeSerializer<ByteValue> serializer=ByteValueSerializer.INSTANCE;
  final TypeComparator<ByteValue> buildComparator=new ValueComparator<>(true,ByteValue.class);
  final TypeComparator<ByteValue> probeComparator=new ValueComparator<>(true,ByteValue.class);
  @SuppressWarnings("unchecked") final TypePairComparator<ByteValue,ByteValue> pairComparator=Mockito.mock(TypePairComparator.class);
  try {
    final int pageSize=32 * 1024;
    final int numSegments=34;
    List<MemorySegment> memory=getMemory(numSegments,pageSize);
    MutableHashTable<ByteValue,ByteValue> table=new MutableHashTable<>(serializer,serializer,buildComparator,probeComparator,pairComparator,memory,ioMan,1,false);
    table.open(new ByteValueIterator(100000000),new ByteValueIterator(1));
    table.close();
    checkNoTempFilesRemain(ioMan);
  }
 catch (  Exception e) {
    e.printStackTrace();
    fail(e.getMessage());
  }
 finally {
    ioMan.shutdown();
  }
}
