{
  PactRecord pathRec=null;
  if (inputRecords.hasNext()) {
    pathRec=inputRecords.next();
  }
 else {
    pathRec=concatRecords.next();
  }
  PactString fromNode=pathRec.getField(0,PactString.class);
  PactString toNode=pathRec.getField(1,PactString.class);
  minLength.setValue(pathRec.getField(2,PactInteger.class).getValue());
  shortestPaths.add(new PactString(pathRec.getField(3,PactString.class)));
  while (inputRecords.hasNext()) {
    pathRec=inputRecords.next();
    PactInteger length=pathRec.getField(2,PactInteger.class);
    if (length.getValue() == minLength.getValue()) {
      shortestPaths.add(new PactString(pathRec.getField(3,PactString.class)));
    }
 else     if (length.getValue() < minLength.getValue()) {
      minLength.setValue(length.getValue());
      shortestPaths.clear();
      shortestPaths.add(new PactString(pathRec.getField(3,PactString.class)));
    }
  }
  while (concatRecords.hasNext()) {
    pathRec=concatRecords.next();
    PactInteger length=pathRec.getField(2,PactInteger.class);
    if (length == minLength) {
      shortestPaths.add(new PactString(pathRec.getField(3,PactString.class)));
    }
 else     if (length.getValue() < minLength.getValue()) {
      minLength.setValue(length.getValue());
      shortestPaths.clear();
      shortestPaths.add(new PactString(pathRec.getField(3,PactString.class)));
    }
  }
  outputRecord.setField(0,fromNode);
  outputRecord.setField(1,toNode);
  outputRecord.setField(2,minLength);
  for (  PactString shortestPath : shortestPaths) {
    outputRecord.setField(3,shortestPath);
    out.collect(outputRecord);
  }
}
