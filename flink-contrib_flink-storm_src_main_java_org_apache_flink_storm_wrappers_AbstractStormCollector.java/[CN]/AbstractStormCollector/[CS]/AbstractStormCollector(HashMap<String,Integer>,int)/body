{
  assert(numberOfAttributes != null);
  this.numberOfAttributes=numberOfAttributes;
  this.split=this.numberOfAttributes.size() > 1;
  this.taskId=taskId;
  for (  Entry<String,Integer> outputStream : numberOfAttributes.entrySet()) {
    int numAtt=outputStream.getValue();
    if (this.taskId >= 0) {
      if (numAtt < 0) {
        throw new UnsupportedOperationException("Task ID transmission not supported for raw streams: " + outputStream.getKey());
      }
      ++numAtt;
    }
    if (numAtt > 25) {
      if (this.taskId >= 0) {
        throw new UnsupportedOperationException("Flink cannot handle more then 25 attributes, but 25 (24 plus 1 for produer task ID) " + " are declared for stream '" + outputStream.getKey() + "' by the given bolt.");
      }
 else {
        throw new UnsupportedOperationException("Flink cannot handle more then 25 attributes, but " + numAtt + " are declared for stream '"+ outputStream.getKey()+ "' by the given bolt.");
      }
    }
 else     if (numAtt >= 0) {
      try {
        this.outputTuple.put(outputStream.getKey(),org.apache.flink.api.java.tuple.Tuple.getTupleClass(numAtt).newInstance());
      }
 catch (      final InstantiationException e) {
        throw new RuntimeException(e);
      }
catch (      final IllegalAccessException e) {
        throw new RuntimeException(e);
      }
    }
  }
}
