{
  Costs hf1=new Costs();
  Costs hf5=new Costs();
  Costs hs1=new Costs();
  Costs hs5=new Costs();
  Costs mm1=new Costs();
  Costs mm5=new Costs();
  costEstimator.addHybridHashCosts(e1,e2,hf1,1);
  costEstimator.addHybridHashCosts(e1,e2,hf5,5);
  costEstimator.addHybridHashCosts(e2,e1,hs1,1);
  costEstimator.addHybridHashCosts(e2,e1,hs5,5);
  costEstimator.addLocalSortCost(e1,mm1);
  costEstimator.addLocalSortCost(e2,mm1);
  costEstimator.addLocalMergeCost(e1,e2,mm1,1);
  costEstimator.addLocalSortCost(e1,mm5);
  costEstimator.addLocalSortCost(e2,mm5);
  mm5.multiplyWith(5);
  costEstimator.addLocalMergeCost(e1,e2,mm5,5);
  assertTrue(hf1.compareTo(hf5) < 0);
  assertTrue(hs1.compareTo(hs5) < 0);
  assertTrue(mm1.compareTo(mm5) < 0);
  assertTrue(hf1.compareTo(mm1) < 0);
  assertTrue(hs1.compareTo(mm1) < 0);
  assertTrue(hf5.compareTo(mm5) < 0);
  assertTrue(hs5.compareTo(mm5) < 0);
}
