{
  TypeComparator<T> comparator;
  if (typeInfo instanceof CompositeType) {
    comparator=((CompositeType<T>)typeInfo).createComparator(keys.toArray(),sortOrder);
  }
 else   if (typeInfo instanceof AtomicType) {
    throw new UnsupportedOperationException("Grouping on atomic types is currently not implemented.");
  }
 else {
    throw new RuntimeException("Unrecognized type: " + typeInfo);
  }
  ReferenceWrappedComparator<T> wrappingComparator=new ReferenceWrappedComparator<T>(comparator);
  return new ReferenceWrappedComparator.ReferenceWrappedComparatorFactory<T>(wrappingComparator);
}
