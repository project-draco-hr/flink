{
  int maxParallelism=42;
  final StreamExecutionEnvironment env=StreamExecutionEnvironment.getExecutionEnvironment();
  env.getConfig().setMaxParallelism(maxParallelism);
  DataStream<Integer> input=env.fromElements(1,2,3);
  DataStream<Integer> keyedResult=input.keyBy(new KeySelector<Integer,Integer>(){
    private static final long serialVersionUID=350461576474507944L;
    @Override public Integer getKey(    Integer value) throws Exception {
      return value;
    }
  }
).map(new NoOpIntMap());
  keyedResult.addSink(new DiscardingSink<Integer>());
  JobGraph jobGraph=env.getStreamGraph().getJobGraph();
  List<JobVertex> jobVertices=jobGraph.getVerticesSortedTopologicallyFromSources();
  assertEquals(maxParallelism,jobVertices.get(1).getMaxParallelism());
  HashKeyGroupAssigner<Integer> hashKeyGroupAssigner=extractHashKeyGroupAssigner(jobVertices.get(1));
  assertEquals(maxParallelism,hashKeyGroupAssigner.getNumberKeyGroups());
}
