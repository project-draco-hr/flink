{
  try {
    final List<Tuple2<Long,Long>> result=new ArrayList<Tuple2<Long,Long>>();
    ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
    env.setDegreeOfParallelism(1);
    DataSet<Tuple2<Long,Long>> input=env.generateSequence(0,9).map(new Duplicator<Long>());
    DeltaIteration<Tuple2<Long,Long>,Tuple2<Long,Long>> iteration=input.iterateDelta(input,5,1);
    iteration.closeWith(iteration.getWorkset(),iteration.getWorkset().map(new TestMapper())).output(new LocalCollectionOutputFormat<Tuple2<Long,Long>>(result));
    env.execute();
    boolean[] present=new boolean[50];
    for (    Tuple2<Long,Long> t : result) {
      present[t.f0.intValue()]=true;
    }
    for (int i=0; i < present.length; i++) {
      assertTrue(String.format("Missing tuple (%d, %d)",i,i),present[i]);
    }
  }
 catch (  Exception e) {
    e.printStackTrace();
    fail(e.getMessage());
  }
}
