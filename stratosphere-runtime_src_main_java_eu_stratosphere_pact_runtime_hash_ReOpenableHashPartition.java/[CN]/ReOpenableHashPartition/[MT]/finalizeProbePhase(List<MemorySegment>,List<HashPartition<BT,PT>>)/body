{
  if (furtherPartitioning || recursionLevel != 0 || isRestored) {
    if (isInMemory() && initialBuildSideChannel != null && !isRestored) {
      for (int k=0; k < this.numOverflowSegments; k++) {
        freeMemory.add(this.overflowSegments[k]);
      }
      this.overflowSegments=null;
      this.numOverflowSegments=0;
      this.nextOverflowBucket=0;
      return 0;
    }
    return super.finalizeProbePhase(freeMemory,spilledPartitions);
  }
  if (!isInMemory() && this.probeSideRecordCounter == 0) {
    freeMemory.add(this.probeSideBuffer.getCurrentSegment());
    this.probeSideChannel.close();
    this.probeSideChannel.deleteChannel();
    return 0;
  }
  if (isInMemory()) {
    return 0;
  }
  this.probeSideBuffer.close();
  this.probeSideChannel.close();
  spilledPartitions.add(this);
  return 1;
}
