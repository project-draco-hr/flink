{
  this.memoryManager=memoryManager;
  this.ioManager=ioManager;
  this.recordReader=new Reader<T>(){
    @Override public boolean hasNext(){
      return it.hasNext();
    }
    @Override public T next() throws IOException, InterruptedException {
      T next=it.next();
      return next;
    }
  }
;
  this.deserializer=deserializer;
  this.memorySegments=this.memoryManager.allocate(parentTask,availableMemory,MINIMUM_NUMBER_OF_BUFFERS,MIN_BUFFER_SIZE);
  this.numBuffers=this.memorySegments.size();
  this.currentBuffer=0;
  LOG.debug("Iterator initalized using " + availableMemory + " bytes of IO buffer.");
}
