{
  int keyCnt1=20;
  int valCnt1=20;
  int keyCnt2=20;
  int valCnt2=20;
  setOutput(new DiscardingOutputCollector<Tuple2<Integer,Integer>>());
  addDriverComparator(this.comparator1);
  addDriverComparator(this.comparator2);
  getTaskConfig().setDriverPairComparator(new RuntimePairComparatorFactory());
  getTaskConfig().setDriverStrategy(DriverStrategy.RIGHT_HYBRIDHASH_BUILD_FIRST);
  getTaskConfig().setRelativeMemoryDriver(this.hash_frac);
  setNumFileHandlesForSort(4);
  final AbstractOuterJoinDriver<Tuple2<Integer,Integer>,Tuple2<Integer,Integer>,Tuple2<Integer,Integer>> testTask=getOuterJoinDriver();
  addInput(new UniformIntTupleGenerator(keyCnt1,valCnt1,true),this.serializer);
  addInput(new UniformIntTupleGenerator(keyCnt2,valCnt2,true),this.serializer);
  testDriver(testTask,MockFailingJoinStub.class);
}
