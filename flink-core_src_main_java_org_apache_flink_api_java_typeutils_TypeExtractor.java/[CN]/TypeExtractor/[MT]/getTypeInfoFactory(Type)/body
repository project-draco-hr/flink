{
  final Class<?> factoryClass;
  if (registeredTypeInfoFactories.containsKey(t)) {
    factoryClass=registeredTypeInfoFactories.get(t);
  }
 else {
    if (!isClassType(t) || !typeToClass(t).isAnnotationPresent(TypeInfo.class)) {
      return null;
    }
    final TypeInfo typeInfoAnnotation=typeToClass(t).getAnnotation(TypeInfo.class);
    factoryClass=typeInfoAnnotation.value();
    if (!TypeInfoFactory.class.isAssignableFrom(factoryClass)) {
      throw new InvalidTypesException("TypeInfo annotation does not specify a valid TypeInfoFactory.");
    }
  }
  return (TypeInfoFactory<OUT>)InstantiationUtil.instantiate(factoryClass);
}
