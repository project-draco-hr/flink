{
  WindowTransformation transformation=WindowTransformation.REDUCEWINDOW.with(clean(reduceFunction));
  WindowBuffer<OUT> windowBuffer=getWindowBuffer(transformation).emitEmpty().sequentialID();
  if (groupByKey != null) {
    dataStream=dataStream.groupBy(groupByKey);
  }
  DiscretizedStream<OUT> discretized=discretize(transformation,windowBuffer);
  if (!(windowBuffer instanceof PreAggregator)) {
    throw new RuntimeException("Error in preaggregator logic, parallel time reduce should always be preaggregated");
  }
  return discretized.timeReduce(reduceFunction);
}
