{
  TriggerPolicy<OUT> trigger=getTrigger();
  EvictionPolicy<OUT> eviction=getEviction();
  if (transformation == WindowTransformation.REDUCEWINDOW) {
    if (WindowUtils.isTumblingPolicy(trigger,eviction)) {
      if (groupByKey == null) {
        return new TumblingPreReducer<OUT>((ReduceFunction<OUT>)transformation.getUDF(),getType().createSerializer(getExecutionConfig()));
      }
 else {
        return new TumblingGroupedPreReducer<OUT>((ReduceFunction<OUT>)transformation.getUDF(),groupByKey,getType().createSerializer(getExecutionConfig()));
      }
    }
 else     if (WindowUtils.isSlidingCountPolicy(trigger,eviction)) {
      if (groupByKey == null) {
        return new SlidingCountPreReducer<OUT>(clean((ReduceFunction<OUT>)transformation.getUDF()),dataStream.getType().createSerializer(getExecutionConfig()),WindowUtils.getWindowSize(eviction),WindowUtils.getSlideSize(trigger),((CountTriggerPolicy<?>)trigger).getStart());
      }
 else {
        return new SlidingCountGroupedPreReducer<OUT>(clean((ReduceFunction<OUT>)transformation.getUDF()),dataStream.getType().createSerializer(getExecutionConfig()),groupByKey,WindowUtils.getWindowSize(eviction),WindowUtils.getSlideSize(trigger),((CountTriggerPolicy<?>)trigger).getStart());
      }
    }
 else     if (WindowUtils.isSlidingTimePolicy(trigger,eviction)) {
      if (groupByKey == null) {
        return new SlidingTimePreReducer<OUT>((ReduceFunction<OUT>)transformation.getUDF(),dataStream.getType().createSerializer(getExecutionConfig()),WindowUtils.getWindowSize(eviction),WindowUtils.getSlideSize(trigger),WindowUtils.getTimeStampWrapper(trigger));
      }
 else {
        return new SlidingTimeGroupedPreReducer<OUT>((ReduceFunction<OUT>)transformation.getUDF(),dataStream.getType().createSerializer(getExecutionConfig()),groupByKey,WindowUtils.getWindowSize(eviction),WindowUtils.getSlideSize(trigger),WindowUtils.getTimeStampWrapper(trigger));
      }
    }
 else     if (WindowUtils.isJumpingCountPolicy(trigger,eviction)) {
      if (groupByKey == null) {
        return new JumpingCountPreReducer<OUT>((ReduceFunction<OUT>)transformation.getUDF(),getType().createSerializer(getExecutionConfig()),WindowUtils.getSlideSize(trigger) - WindowUtils.getWindowSize(eviction));
      }
 else {
        return new JumpingCountGroupedPreReducer<OUT>((ReduceFunction<OUT>)transformation.getUDF(),groupByKey,getType().createSerializer(getExecutionConfig()),WindowUtils.getSlideSize(trigger) - WindowUtils.getWindowSize(eviction));
      }
    }
 else     if (WindowUtils.isJumpingTimePolicy(trigger,eviction)) {
      if (groupByKey == null) {
        return new JumpingTimePreReducer<OUT>((ReduceFunction<OUT>)transformation.getUDF(),getType().createSerializer(getExecutionConfig()),WindowUtils.getSlideSize(trigger),WindowUtils.getWindowSize(eviction),WindowUtils.getTimeStampWrapper(trigger));
      }
 else {
        return new JumpingTimeGroupedPreReducer<OUT>((ReduceFunction<OUT>)transformation.getUDF(),groupByKey,getType().createSerializer(getExecutionConfig()),WindowUtils.getSlideSize(trigger),WindowUtils.getWindowSize(eviction),WindowUtils.getTimeStampWrapper(trigger));
      }
    }
  }
  return new BasicWindowBuffer<OUT>();
}
