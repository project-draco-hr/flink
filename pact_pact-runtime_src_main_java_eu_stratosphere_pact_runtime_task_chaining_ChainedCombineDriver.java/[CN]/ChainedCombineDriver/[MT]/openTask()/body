{
  final Configuration stubConfig=this.config.getStubParameters();
  RegularPactTask.openUserCode(this.combiner,stubConfig);
  final long availableMemory=this.config.getMemoryDriver();
  final DriverStrategy ds=this.config.getDriverStrategy();
  final MemoryManager memoryManager=this.parent.getEnvironment().getMemoryManager();
  final TypeSerializerFactory<T> serializerFactory=this.config.getInputSerializer(0,this.userCodeClassLoader);
  final TypeComparatorFactory<T> comparatorFactory=this.config.getDriverComparator(0,this.userCodeClassLoader);
  final TypeSerializer<T> serializer=serializerFactory.getSerializer();
  final TypeComparator<T> comparator=comparatorFactory.createComparator();
switch (ds) {
case PARTIAL_GROUP:
    this.sorter=new AsynchronousPartialSorterCollector<T>(memoryManager,this.parent,serializer,comparator.duplicate(),availableMemory);
  this.inputCollector=this.sorter.getInputCollector();
break;
default :
throw new RuntimeException("Invalid local strategy provided for CombineTask.");
}
this.combinerThread=new CombinerThread(this.sorter,serializer,comparator,this.combiner,this.outputCollector);
this.combinerThread.start();
if (this.parent != null) {
this.parent.userThreadStarted(this.combinerThread);
}
}
