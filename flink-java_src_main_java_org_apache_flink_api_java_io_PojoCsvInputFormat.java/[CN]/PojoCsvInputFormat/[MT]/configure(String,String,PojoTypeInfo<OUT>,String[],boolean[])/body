{
  if (includedFieldsMask == null) {
    includedFieldsMask=createDefaultMask(fieldNames.length);
  }
  for (  String name : fieldNames) {
    if (name == null) {
      throw new NullPointerException("Field name must not be null.");
    }
    if (pojoTypeInfo.getFieldIndex(name) < 0) {
      throw new IllegalArgumentException("Field \"" + name + "\" not part of POJO type "+ pojoTypeInfo.getTypeClass().getCanonicalName());
    }
  }
  setDelimiter(lineDelimiter);
  setFieldDelimiter(fieldDelimiter);
  Class<?>[] classes=new Class<?>[fieldNames.length];
  for (int i=0; i < fieldNames.length; i++) {
    try {
      classes[i]=pojoTypeInfo.getTypeAt(pojoTypeInfo.getFieldIndex(fieldNames[i])).getTypeClass();
    }
 catch (    IndexOutOfBoundsException e) {
      throw new IllegalArgumentException("Invalid field name: " + fieldNames[i]);
    }
  }
  this.pojoTypeClass=pojoTypeInfo.getTypeClass();
  this.pojoTypeInfo=pojoTypeInfo;
  setFieldsGeneric(includedFieldsMask,classes);
  setOrderOfPOJOFields(fieldNames);
}
