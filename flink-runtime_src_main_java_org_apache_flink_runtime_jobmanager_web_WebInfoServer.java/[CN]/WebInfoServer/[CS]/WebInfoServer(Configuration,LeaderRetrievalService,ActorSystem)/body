{
  if (config == null) {
    throw new IllegalArgumentException("No Configuration has been passed to the web server");
  }
  this.config=config;
  this.leaderRetrievalService=Preconditions.checkNotNull(leaderRetrievalService);
  int port=config.getInteger(ConfigConstants.JOB_MANAGER_WEB_PORT_KEY,ConfigConstants.DEFAULT_JOB_MANAGER_WEB_FRONTEND_PORT);
  if (port < 0) {
    throw new IllegalArgumentException("Invalid port for the webserver: " + port);
  }
  timeout=AkkaUtils.getTimeout(config);
  lookupTimeout=AkkaUtils.getLookupTimeout(config);
  this.actorSystem=actorSystem;
  final String basePath=config.getString(ConfigConstants.FLINK_BASE_DIR_PATH_KEY,"");
  final String[] logDirPaths=config.getString(ConfigConstants.JOB_MANAGER_WEB_LOG_PATH_KEY,basePath + "/log").split(",");
  URL webRootDir=this.getClass().getClassLoader().getResource(WEB_ROOT_DIR);
  if (webRootDir == null) {
    throw new FileNotFoundException("Cannot start JobManager web info server. The " + "resource " + WEB_ROOT_DIR + " is not included in the jar.");
  }
  logDirFiles=new File[logDirPaths.length];
  int i=0;
  for (  String path : logDirPaths) {
    logDirFiles[i++]=new File(path);
  }
  if (LOG.isInfoEnabled()) {
    LOG.info("Setting up web info server, using web-root directory " + webRootDir.toExternalForm() + ".");
  }
  server=new Server(port);
  resourceHandler=new ResourceHandler();
  resourceHandler.setDirectoriesListed(false);
  resourceHandler.setResourceBase(webRootDir.toExternalForm());
  handlers=new HandlerCollection(true);
  handlers.addHandler(resourceHandler);
  server.setHandler(handlers);
}
