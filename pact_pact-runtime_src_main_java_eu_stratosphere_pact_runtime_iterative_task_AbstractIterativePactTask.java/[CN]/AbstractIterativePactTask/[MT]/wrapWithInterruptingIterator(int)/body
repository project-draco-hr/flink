{
  int numberOfEventsUntilInterrupt=getTaskConfig().getNumberOfEventsUntilInterruptInIterativeGate(inputIndex);
  InterruptingMutableObjectIterator<X> interruptingIterator=new InterruptingMutableObjectIterator<X>(super.<X>getInput(inputIndex),numberOfEventsUntilInterrupt,identifier(),this,inputIndex);
  MutableReader<?> inputReader=getReader(inputIndex);
  inputReader.subscribeToEvent(interruptingIterator,EndOfSuperstepEvent.class);
  inputReader.subscribeToEvent(interruptingIterator,TerminationEvent.class);
  if (log.isInfoEnabled()) {
    log.info(formatLogString("wrapping input [" + inputIndex + "] with an interrupting iterator that waits "+ "for ["+ numberOfEventsUntilInterrupt+ "] event(s)"));
  }
  this.wrappedInputs[inputIndex]=interruptingIterator;
  return interruptingIterator;
}
