{
  StreamingRuntimeContext context=(StreamingRuntimeContext)getRuntimeContext();
  final long stepSize=context.getNumberOfParallelSubtasks();
  final long congruence=context.getIndexOfThisSubtask();
  final long toCollect=(end % stepSize > congruence) ? (end / stepSize + 1) : (end / stepSize);
  final File proceedFile=new File(coordinateDir,PROCEED_MARKER_FILE);
  boolean checkForProceedFile=true;
  while (collected < toCollect) {
    if (checkForProceedFile) {
      if (proceedFile.exists()) {
        checkForProceedFile=false;
      }
 else {
        Thread.sleep(SLEEP_TIME);
      }
    }
    collector.collect(collected * stepSize + congruence);
    collected++;
  }
}
