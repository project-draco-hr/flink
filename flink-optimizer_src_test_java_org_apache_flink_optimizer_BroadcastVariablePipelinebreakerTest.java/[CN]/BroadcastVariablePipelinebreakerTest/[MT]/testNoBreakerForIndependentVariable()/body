{
  try {
    ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
    DataSet<String> source1=env.fromElements("test");
    DataSet<String> source2=env.fromElements("test");
    source1.map(new IdentityMapper<String>()).withBroadcastSet(source2,"some name").output(new DiscardingOutputFormat<String>());
    Plan p=env.createProgramPlan();
    OptimizedPlan op=compileNoStats(p);
    SinkPlanNode sink=op.getDataSinks().iterator().next();
    SingleInputPlanNode mapper=(SingleInputPlanNode)sink.getInput().getSource();
    assertEquals(TempMode.NONE,mapper.getInput().getTempMode());
    assertEquals(TempMode.NONE,mapper.getBroadcastInputs().get(0).getTempMode());
    assertEquals(DataExchangeMode.PIPELINED,mapper.getInput().getDataExchangeMode());
    assertEquals(DataExchangeMode.PIPELINED,mapper.getBroadcastInputs().get(0).getDataExchangeMode());
  }
 catch (  Exception e) {
    e.printStackTrace();
    fail(e.getMessage());
  }
}
