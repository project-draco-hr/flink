{
  super.restoreState(state,recoveryTimestamp);
  StateHandle<Serializable> stateHandle=state.getFunctionState();
  if (userFunction instanceof Checkpointed && stateHandle != null) {
    @SuppressWarnings("unchecked") Checkpointed<Serializable> chkFunction=(Checkpointed<Serializable>)userFunction;
    Serializable functionState=stateHandle.getState(getUserCodeClassloader());
    if (functionState != null) {
      try {
        chkFunction.restoreState(functionState);
      }
 catch (      Exception e) {
        throw new Exception("Failed to restore state to function: " + e.getMessage(),e);
      }
    }
  }
}
