{
  int numInputs=getNumberOfInputs();
  @SuppressWarnings("unchecked") final MutableObjectIterator<PactRecord>[] inputs=new MutableObjectIterator[numInputs];
  for (int i=0; i < numInputs; i++) {
    final ShipStrategy shipStrategy=config.getInputShipStrategy(i);
    DistributionPattern dp=null;
switch (shipStrategy) {
case FORWARD:
case PARTITION_LOCAL_HASH:
case PARTITION_LOCAL_RANGE:
      dp=new PointwiseDistributionPattern();
    break;
case PARTITION_HASH:
case PARTITION_RANGE:
case BROADCAST:
case SFR:
  dp=new BipartiteDistributionPattern();
break;
default :
throw new RuntimeException("Invalid input ship strategy provided for input " + i + ": "+ shipStrategy.name());
}
inputs[i]=new NepheleReaderIterator(new MutableRecordReader<PactRecord>(this,dp));
}
this.inputs=inputs;
}
