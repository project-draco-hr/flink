{
  TypeInformation<PojoWithMultiplePojos> t1=TypeExtractor.getForClass(PojoWithMultiplePojos.class);
  TypeInformation<Tuple3<Long,Pojo1,Integer>> t2=new TupleTypeInfo<>(BasicTypeInfo.LONG_TYPE_INFO,TypeExtractor.getForClass(Pojo1.class),BasicTypeInfo.INT_TYPE_INFO);
  TypeInformation<Tuple2<Integer,String>> kt=new TupleTypeInfo<>(BasicTypeInfo.INT_TYPE_INFO,BasicTypeInfo.STRING_TYPE_INFO);
  Keys<PojoWithMultiplePojos> k1=new Keys.SelectorFunctionKeys<>(new KeySelector3(),t1,kt);
  Keys<Tuple3<Long,Pojo1,Integer>> k2=new Keys.SelectorFunctionKeys<>(new KeySelector4(),t2,kt);
  Assert.assertTrue(k1.areCompatible(k2));
  Assert.assertTrue(k2.areCompatible(k1));
}
