{
  LOG.info("Running with args {}",Arrays.toString(args));
  outContent=new ByteArrayOutputStream();
  errContent=new ByteArrayOutputStream();
  System.setOut(new PrintStream(outContent));
  System.setErr(new PrintStream(errContent));
  final int START_TIMEOUT_SECONDS=60;
  Runner runner=new Runner(args,type);
  runner.start();
  boolean expectedStringSeen=false;
  for (int second=0; second < START_TIMEOUT_SECONDS; second++) {
    sleep(1000);
    String outContentString=outContent.toString();
    String errContentString=errContent.toString();
    if (failOnStrings != null) {
      for (      String failOnString : failOnStrings) {
        if (outContentString.contains(failOnString) || errContentString.contains(failOnString)) {
          LOG.warn("Failing test. Output contained illegal string '" + failOnString + "'");
          sendOutput();
          runner.sendStop();
          Assert.fail("Output contained illegal string '" + failOnString + "'");
        }
      }
    }
    if (outContentString.contains(terminateAfterString) || errContentString.contains(terminateAfterString)) {
      expectedStringSeen=true;
      LOG.info("Found expected output in redirected streams");
      LOG.info("RunWithArgs: request runner to stop");
      runner.sendStop();
      try {
        runner.join(10000);
      }
 catch (      InterruptedException e) {
        LOG.debug("Interrupted while stopping runner",e);
      }
      LOG.warn("RunWithArgs runner stopped.");
      break;
    }
    if (!runner.isAlive()) {
      sendOutput();
      if (runner.getReturnValue() != 0) {
        Assert.fail("Runner thread died before the test was finished. Return value = " + runner.getReturnValue());
      }
 else {
        LOG.info("Runner stopped earlier than expected with return value = 0");
      }
    }
  }
  sendOutput();
  Assert.assertTrue("During the timeout period of " + START_TIMEOUT_SECONDS + " seconds the "+ "expected string did not show up",expectedStringSeen);
  Assert.assertTrue("Expecting return value == " + returnCode,runner.getReturnValue() == returnCode);
  LOG.info("Test was successful");
}
