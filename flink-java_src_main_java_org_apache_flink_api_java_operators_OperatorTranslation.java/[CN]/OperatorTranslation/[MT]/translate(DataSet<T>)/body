{
  Operator<?> previous=(Operator<?>)this.translated.get(dataSet);
  if (previous != null) {
    @SuppressWarnings("unchecked") Operator<T> typedPrevious=(Operator<T>)previous;
    return typedPrevious;
  }
  Operator<T> dataFlowOp;
  if (dataSet instanceof DataSource) {
    dataFlowOp=((DataSource<T>)dataSet).translateToDataFlow();
  }
 else   if (dataSet instanceof SingleInputOperator) {
    dataFlowOp=translateSingleInputOperator((SingleInputOperator<?,?,?>)dataSet);
  }
 else   if (dataSet instanceof TwoInputOperator) {
    dataFlowOp=translateTwoInputOperator((TwoInputOperator<?,?,?,?>)dataSet);
  }
 else   if (dataSet instanceof BulkIterationResultSet) {
    dataFlowOp=translateBulkIteration((BulkIterationResultSet<?>)dataSet);
  }
 else   if (dataSet instanceof DeltaIterationResultSet) {
    dataFlowOp=translateDeltaIteration((DeltaIterationResultSet<?,?>)dataSet);
  }
 else {
    throw new RuntimeException("Error while creating the data flow plan for the program: Unknown operator or data set type: " + dataSet);
  }
  this.translated.put(dataSet,dataFlowOp);
  translateBcVariables(dataSet,dataFlowOp);
  return dataFlowOp;
}
