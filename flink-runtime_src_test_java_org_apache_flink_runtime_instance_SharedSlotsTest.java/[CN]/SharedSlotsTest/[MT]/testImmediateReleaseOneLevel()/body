{
  try {
    JobID jobId=new JobID();
    JobVertexID vid=new JobVertexID();
    SlotSharingGroup sharingGroup=new SlotSharingGroup(vid);
    SlotSharingGroupAssignment assignment=sharingGroup.getTaskAssignment();
    Instance instance=SchedulerTestUtils.getRandomInstance(1);
    SharedSlot sharedSlot=instance.allocateSharedSlot(jobId,assignment);
    SimpleSlot sub=assignment.addSharedSlotAndAllocateSubSlot(sharedSlot,Locality.UNCONSTRAINED,vid);
    sub.releaseSlot();
    assertTrue(sub.isReleased());
    assertTrue(sharedSlot.isReleased());
    assertEquals(1,instance.getNumberOfAvailableSlots());
    assertEquals(0,instance.getNumberOfAllocatedSlots());
  }
 catch (  Exception e) {
    e.printStackTrace();
    fail(e.getMessage());
  }
}
