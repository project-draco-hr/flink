{
  final String[] splitLocations=inputSplit.getHostNames();
  if (splitLocations.length == 0 && inputSplit.getLength() > 0) {
    throw new ExecutionFailureException("No known location for input splits " + inputSplit);
  }
  boolean added=false;
  final PriorityQueue<QueueElem> newVertexPrioQueue=new PriorityQueue<QueueElem>();
  while (this.vertexPrioQueue.size() > 0) {
    QueueElem topElem=this.vertexPrioQueue.poll();
    if (topElem.hostsSplit(splitLocations)) {
      topElem.assignInputSplit(inputSplit);
      added=true;
    }
    newVertexPrioQueue.add(topElem);
    if (added) {
      break;
    }
  }
  if (added) {
    newVertexPrioQueue.addAll(this.vertexPrioQueue);
  }
 else {
    final QueueElem topElem=newVertexPrioQueue.poll();
    topElem.assignInputSplit(inputSplit);
    newVertexPrioQueue.add(topElem);
  }
  this.vertexPrioQueue=newVertexPrioQueue;
}
