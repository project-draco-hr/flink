{
  Tuple2<Collection<Map<String,IN>>,Collection<Tuple2<Map<String,IN>,Long>>> patterns=nfa.process(event,timestamp);
  Collection<Map<String,IN>> matchedPatterns=patterns.f0;
  Collection<Tuple2<Map<String,IN>,Long>> partialPatterns=patterns.f1;
  StreamRecord<Either<Tuple2<Map<String,IN>,Long>,Map<String,IN>>> streamRecord=new StreamRecord<Either<Tuple2<Map<String,IN>,Long>,Map<String,IN>>>(null,timestamp);
  if (!matchedPatterns.isEmpty()) {
    for (    Map<String,IN> matchedPattern : matchedPatterns) {
      streamRecord.replace(Either.Right(matchedPattern));
      output.collect(streamRecord);
    }
  }
  if (!partialPatterns.isEmpty()) {
    for (    Tuple2<Map<String,IN>,Long> partialPattern : partialPatterns) {
      streamRecord.replace(Either.Left(partialPattern));
      output.collect(streamRecord);
    }
  }
}
