{
  Map<Long,Double> receivedLabelsWithScores=new TreeMap<>();
  Map<Long,Double> labelsWithHighestScore=new TreeMap<>();
  for (  Tuple2<Long,Double> message : inMessages) {
    long receivedLabel=message.f0;
    double receivedScore=message.f1;
    if (receivedLabelsWithScores.containsKey(receivedLabel)) {
      double newScore=receivedScore + receivedLabelsWithScores.get(receivedLabel);
      receivedLabelsWithScores.put(receivedLabel,newScore);
    }
 else {
      receivedLabelsWithScores.put(receivedLabel,receivedScore);
    }
    if (labelsWithHighestScore.containsKey(receivedLabel)) {
      double currentScore=labelsWithHighestScore.get(receivedLabel);
      if (currentScore < receivedScore) {
        labelsWithHighestScore.put(receivedLabel,receivedScore);
      }
    }
 else {
      labelsWithHighestScore.put(receivedLabel,receivedScore);
    }
  }
  if (receivedLabelsWithScores.size() > 0) {
    double maxScore=Double.MIN_VALUE;
    long maxScoreLabel=vertex.getValue().f0;
    for (    long curLabel : receivedLabelsWithScores.keySet()) {
      if (receivedLabelsWithScores.get(curLabel) > maxScore) {
        maxScore=receivedLabelsWithScores.get(curLabel);
        maxScoreLabel=curLabel;
      }
    }
    double highestScore=labelsWithHighestScore.get(maxScoreLabel);
    if (maxScoreLabel != vertex.getValue().f0) {
      highestScore-=delta / getSuperstepNumber();
    }
    setNewVertexValue(new Tuple2<>(maxScoreLabel,highestScore));
  }
}
