{
  List<Tuple2<Integer,Integer>> Tuple2List=new ArrayList<Tuple2<Integer,Integer>>();
  for (int i=0; i < 4; i++) {
    Tuple2<Integer,Integer> v=new Tuple2<Integer,Integer>(i,i);
    Tuple2List.add(v);
  }
  List<Tuple3<Integer,Integer,Integer>> edgeList=new ArrayList<>();
  edgeList.add(new Tuple3<Integer,Integer,Integer>(0,1,0));
  edgeList.add(new Tuple3<Integer,Integer,Integer>(1,3,0));
  edgeList.add(new Tuple3<Integer,Integer,Integer>(0,3,0));
  edgeList.add(new Tuple3<Integer,Integer,Integer>(1,2,0));
  DataSet<Tuple2<Integer,Integer>> vertices=env.fromCollection(Tuple2List);
  DataSet<Tuple3<Integer,Integer,Integer>> edges=env.fromCollection(edgeList);
  Graph<Integer,Integer,Integer> g=Graph.create(vertices,edges,env);
  g.getVertices().print();
  env.execute();
}
