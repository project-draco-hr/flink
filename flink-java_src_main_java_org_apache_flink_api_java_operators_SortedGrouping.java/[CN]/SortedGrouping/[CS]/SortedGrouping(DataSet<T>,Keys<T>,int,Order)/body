{
  super(set,keys);
  if (!dataSet.getType().isTupleType()) {
    throw new InvalidProgramException("Specifying order keys via field positions is only valid for tuple data types");
  }
  if (field >= dataSet.getType().getArity()) {
    throw new IllegalArgumentException("Order key out of tuple bounds.");
  }
  ExpressionKeys<T> ek=new ExpressionKeys<T>(new int[]{field},dataSet.getType());
  this.groupSortKeyPositions=ek.computeLogicalKeyPositions();
  this.groupSortOrders=new Order[groupSortKeyPositions.length];
  Arrays.fill(this.groupSortOrders,order);
}
