{
  if (!this.isAdhoc() && this.inputFormatClass != null) {
    final InputFileIterator<K,V> inputFileIterator;
    try {
      inputFileIterator=new InputFileIterator<K,V>(!this.needsSorting(),FormatUtil.createInputFormats(this.inputFormatClass,this.path,this.configuration));
    }
 catch (    final IOException e) {
      TestPlan.fail(e,"reading expected values");
      return null;
    }
catch (    final Exception e) {
      TestPlan.fail(e,"creating input format");
      return null;
    }
    if (!inputFileIterator.hasNext() || !this.needsSorting())     return inputFileIterator;
    return this.createSortedIterator(inputFileIterator);
  }
  Collections.sort(this.pairs,new Comparator<KeyValuePair<K,V>>(){
    @Override public int compare(    KeyValuePair<K,V> o1,    KeyValuePair<K,V> o2){
      return o1.getKey().compareTo(o2.getKey());
    }
  }
);
  return this.pairs.iterator();
}
