{
  StreamCounter<String> operator=new StreamCounter<String>();
  OneInputStreamOperatorTestHarness<String,Long> testHarness=new OneInputStreamOperatorTestHarness<String,Long>(operator);
  long initialTime=0L;
  ConcurrentLinkedQueue expectedOutput=new ConcurrentLinkedQueue();
  testHarness.open();
  testHarness.processElement(new StreamRecord<String>("eins",initialTime + 1));
  testHarness.processElement(new StreamRecord<String>("zwei",initialTime + 2));
  testHarness.processWatermark(new Watermark(initialTime + 2));
  testHarness.processElement(new StreamRecord<String>("drei",initialTime + 3));
  expectedOutput.add(new StreamRecord<Long>(1L,initialTime + 1));
  expectedOutput.add(new StreamRecord<Long>(2L,initialTime + 2));
  expectedOutput.add(new Watermark(initialTime + 2));
  expectedOutput.add(new StreamRecord<Long>(3L,initialTime + 3));
  TestHarnessUtil.assertOutputEquals("Output was not correct.",expectedOutput,testHarness.getOutput());
}
