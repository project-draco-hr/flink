{
switch (progId) {
case 1:
{
      final ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
      SequenceFileInputFormat<LongWritable,Text> sfif=new SequenceFileInputFormat<LongWritable,Text>();
      JobConf hdconf=new JobConf();
      SequenceFileInputFormat.addInputPath(hdconf,new Path(sequenceFileInPath));
      HadoopInputFormat<LongWritable,Text> hif=new HadoopInputFormat<LongWritable,Text>(sfif,LongWritable.class,Text.class,hdconf);
      DataSet<Tuple2<LongWritable,Text>> ds=env.createInput(hif);
      DataSet<Tuple2<Long,Text>> sumed=ds.map(new MapFunction<Tuple2<LongWritable,Text>,Tuple2<Long,Text>>(){
        @Override public Tuple2<Long,Text> map(        Tuple2<LongWritable,Text> value) throws Exception {
          return new Tuple2<Long,Text>(value.f0.get(),value.f1);
        }
      }
).sum(0);
      sumed.writeAsText(resultPath[0]);
      DataSet<String> res=ds.distinct(0).map(new MapFunction<Tuple2<LongWritable,Text>,String>(){
        @Override public String map(        Tuple2<LongWritable,Text> value) throws Exception {
          return value.f1 + " - " + value.f0.get();
        }
      }
);
      res.writeAsText(resultPath[1]);
      env.execute();
      return new String[]{"(21,3 - somestring)","0 - somestring - 0\n" + "1 - somestring - 1\n" + "2 - somestring - 2\n"+ "3 - somestring - 3\n"};
    }
case 2:
{
    final ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
    SequenceFileInputFormat<NullWritable,LongWritable> sfif=new SequenceFileInputFormat<NullWritable,LongWritable>();
    JobConf hdconf=new JobConf();
    SequenceFileInputFormat.addInputPath(hdconf,new Path(sequenceFileInPathNull));
    HadoopInputFormat<NullWritable,LongWritable> hif=new HadoopInputFormat<NullWritable,LongWritable>(sfif,NullWritable.class,LongWritable.class,hdconf);
    DataSet<Tuple2<NullWritable,LongWritable>> ds=env.createInput(hif);
    DataSet<Tuple2<Void,Long>> res=ds.map(new MapFunction<Tuple2<NullWritable,LongWritable>,Tuple2<Void,Long>>(){
      @Override public Tuple2<Void,Long> map(      Tuple2<NullWritable,LongWritable> value) throws Exception {
        return new Tuple2<Void,Long>(null,value.f1.get());
      }
    }
);
    DataSet<Tuple2<Void,Long>> res1=res.groupBy(1).sum(1);
    res1.writeAsText(resultPath[1]);
    res.writeAsText(resultPath[0]);
    env.execute();
    return new String[]{"(null,2)\n" + "(null,0)\n" + "(null,1)\n"+ "(null,3)","(null,0)\n" + "(null,1)\n" + "(null,2)\n"+ "(null,3)"};
  }
default :
throw new IllegalArgumentException("Invalid program id");
}
}
