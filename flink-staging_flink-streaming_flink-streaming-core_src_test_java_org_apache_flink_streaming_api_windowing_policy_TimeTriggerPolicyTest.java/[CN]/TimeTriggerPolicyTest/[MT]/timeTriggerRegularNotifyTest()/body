{
  Integer[] times={1,3,4,6,7,9,14,20,21,22,30};
  @SuppressWarnings("serial") Timestamp<Integer> timeStamp=new Timestamp<Integer>(){
    @Override public long getTimestamp(    Integer value){
      return value;
    }
  }
;
  for (long granularity=0; granularity < 31; granularity++) {
    TriggerPolicy<Integer> policy=new TimeTriggerPolicy<Integer>(granularity,new TimestampWrapper<Integer>(timeStamp,0));
    long currentTime=0;
    for (int i=0; i < times.length; i++) {
      boolean result=policy.notifyTrigger(times[i]);
      if (times[i] >= currentTime + granularity) {
        if (granularity != 0) {
          currentTime=times[i] - ((times[i] - currentTime) % granularity);
        }
        assertTrue("The policy did not trigger at pos " + i + " (current time border: "+ currentTime+ "; current granularity: "+ granularity+ "; data point time: "+ times[i]+ ")",result);
      }
 else {
        assertFalse("The policy triggered wrong at pos " + i + " (current time border: "+ currentTime+ "; current granularity: "+ granularity+ "; data point time: "+ times[i]+ ")",result);
      }
    }
  }
}
