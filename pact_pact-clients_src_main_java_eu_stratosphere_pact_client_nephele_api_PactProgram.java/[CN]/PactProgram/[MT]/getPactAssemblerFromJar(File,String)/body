{
  Class<? extends PlanAssembler> clazz=null;
  try {
    PlanWithJars.checkJarFile(jarFile);
    List<File> nestedJars=extractContainedLibaries(jarFile);
    URL[] urls=new URL[1 + nestedJars.size()];
    urls[0]=jarFile.getAbsoluteFile().toURI().toURL();
    for (int i=0; i < nestedJars.size(); i++) {
      urls[i + 1]=nestedJars.get(i).getAbsoluteFile().toURI().toURL();
    }
    ClassLoader loader=new URLClassLoader(urls,this.getClass().getClassLoader());
    clazz=Class.forName(className,true,loader).asSubclass(PlanAssembler.class);
  }
 catch (  MalformedURLException e) {
    throw new ProgramInvocationException("The given JAR file could not be translated to a valid URL for class access.",e);
  }
catch (  ClassNotFoundException e) {
    throw new ProgramInvocationException("The pact plan assembler class '" + className + "' was not found in the jar file '"+ jarFile.getPath()+ "'.",e);
  }
catch (  ClassCastException e) {
    throw new ProgramInvocationException("The pact plan assembler class '" + className + "' cannot be cast to PlanAssembler.",e);
  }
catch (  IOException ioex) {
    throw new ProgramInvocationException("The jar file could not be checked for nested jar files: " + ioex.getMessage(),ioex);
  }
catch (  Throwable t) {
    throw new ProgramInvocationException("An unknown problem ocurred during the instantiation of the " + "program assembler: " + t,t);
  }
  return clazz;
}
