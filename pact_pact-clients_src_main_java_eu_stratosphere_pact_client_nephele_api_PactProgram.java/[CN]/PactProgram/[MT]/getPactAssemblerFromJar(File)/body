{
  JarFile jar=null;
  Manifest manifest=null;
  String className=null;
  checkJarFile(jarFile);
  try {
    jar=new JarFile(jarFile);
  }
 catch (  IOException ioex) {
    throw new ProgramInvocationException("Error while opening jar file '" + jarFile.getPath() + "'. "+ ioex.getMessage(),ioex);
  }
  try {
    manifest=jar.getManifest();
  }
 catch (  IOException ioex) {
    throw new ProgramInvocationException("The Manifest in the JAR file could not be accessed '" + jarFile.getPath() + "'. "+ ioex.getMessage(),ioex);
  }
  if (manifest == null) {
    throw new ProgramInvocationException("No manifest found in jar '" + jarFile.getPath() + "'");
  }
  Attributes attributes=manifest.getMainAttributes();
  className=attributes.getValue(PactProgram.MANIFEST_ATTRIBUTE_ASSEMBLER_CLASS);
  if (className == null) {
    throw new ProgramInvocationException("No plan assembler class defined in manifest");
  }
  try {
    jar.close();
  }
 catch (  IOException ex) {
    throw new ProgramInvocationException("Could not close JAR. " + ex.getMessage(),ex);
  }
  return getPactAssemblerFromJar(jarFile,className);
}
