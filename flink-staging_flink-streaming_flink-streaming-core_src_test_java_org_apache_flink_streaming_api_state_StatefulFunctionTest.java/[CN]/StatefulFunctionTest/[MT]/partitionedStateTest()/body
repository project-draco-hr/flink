{
  StatefulMapper mapper=new StatefulMapper();
  MockContext context=new MockContext(true,mapper);
  mapper.setRuntimeContext(context);
  mapper.open(null);
  assertEquals(Arrays.asList("1","2","3","4","5"),applyOnSequence(mapper,1,5,context.state));
  assertEquals(ImmutableMap.of(0,2,1,3),context.state.getPartitionedState());
  byte[] serializedState=InstantiationUtil.serializeObject(context.state.snapshotState(1,1));
  StatefulMapper restoredMapper=new StatefulMapper();
  MockContext restoredContext=new MockContext(true,restoredMapper);
  restoredMapper.setRuntimeContext(context);
  restoredMapper.open(null);
  assertEquals(null,restoredContext.state.getState());
  Map<Serializable,StateHandle<Integer>> deserializedState=(Map<Serializable,StateHandle<Integer>>)InstantiationUtil.deserializeObject(serializedState,Thread.currentThread().getContextClassLoader());
  restoredContext.state.restoreState(deserializedState);
  assertEquals(ImmutableMap.of(0,2,1,3),restoredContext.state.getPartitionedState());
}
