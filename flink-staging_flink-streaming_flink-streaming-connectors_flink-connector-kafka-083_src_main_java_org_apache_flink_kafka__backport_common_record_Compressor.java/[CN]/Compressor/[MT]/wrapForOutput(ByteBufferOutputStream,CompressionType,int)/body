{
  try {
switch (type) {
case NONE:
      return new DataOutputStream(buffer);
case GZIP:
    return new DataOutputStream(new GZIPOutputStream(buffer,bufferSize));
case SNAPPY:
  try {
    Class<?> outputStreamClass=Class.forName("org.xerial.snappy.SnappyOutputStream");
    OutputStream stream=(OutputStream)outputStreamClass.getConstructor(OutputStream.class,Integer.TYPE).newInstance(buffer,bufferSize);
    return new DataOutputStream(stream);
  }
 catch (  Exception e) {
    throw new KafkaException(e);
  }
case LZ4:
try {
  Class<?> outputStreamClass=Class.forName("org.apache.KafkaLZ4BlockOutputStream");
  OutputStream stream=(OutputStream)outputStreamClass.getConstructor(OutputStream.class).newInstance(buffer);
  return new DataOutputStream(stream);
}
 catch (Exception e) {
  throw new KafkaException(e);
}
default :
throw new IllegalArgumentException("Unknown compression type: " + type);
}
}
 catch (IOException e) {
throw new KafkaException(e);
}
}
