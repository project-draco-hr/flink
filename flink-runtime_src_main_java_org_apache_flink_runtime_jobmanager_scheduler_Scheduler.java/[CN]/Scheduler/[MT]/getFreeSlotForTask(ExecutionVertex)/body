{
  while (true) {
    if (this.instancesWithAvailableResources.isEmpty()) {
      return null;
    }
    Iterable<Instance> locationsIterable=vertex.getPreferredLocations();
    Iterator<Instance> locations=locationsIterable == null ? null : locationsIterable.iterator();
    Instance instanceToUse=null;
    Locality locality=Locality.UNCONSTRAINED;
    if (locations != null && locations.hasNext()) {
      while (locations.hasNext()) {
        Instance location=locations.next();
        if (location != null && this.instancesWithAvailableResources.remove(location)) {
          instanceToUse=location;
          locality=Locality.LOCAL;
          if (LOG.isDebugEnabled()) {
            LOG.debug("Local assignment: " + vertex.getSimpleName() + " --> "+ location);
          }
          break;
        }
      }
      if (instanceToUse == null) {
        instanceToUse=this.instancesWithAvailableResources.poll();
        locality=Locality.NON_LOCAL;
        if (LOG.isDebugEnabled()) {
          LOG.debug("Non-local assignment: " + vertex.getSimpleName() + " --> "+ instanceToUse);
        }
      }
    }
 else {
      instanceToUse=this.instancesWithAvailableResources.poll();
      if (LOG.isDebugEnabled()) {
        LOG.debug("Unconstrained assignment: " + vertex.getSimpleName() + " --> "+ instanceToUse);
      }
    }
    try {
      AllocatedSlot slot=instanceToUse.allocateSlot(vertex.getJobId());
      if (instanceToUse.hasResourcesAvailable()) {
        this.instancesWithAvailableResources.add(instanceToUse);
      }
      if (slot != null) {
        slot.setLocality(locality);
        return slot;
      }
    }
 catch (    InstanceDiedException e) {
      this.allInstances.remove(instanceToUse);
      this.instancesWithAvailableResources.remove(instanceToUse);
    }
  }
}
