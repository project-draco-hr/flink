{
  TaskConfig config=this.taskContext.getTaskConfig();
  TypeSerializer<IT1> serializer1=this.taskContext.<IT1>getInputSerializer(0).getSerializer();
  TypeSerializer<IT2> serializer2=this.taskContext.<IT2>getInputSerializer(1).getSerializer();
  TypeComparator<IT1> comparator1=this.taskContext.getDriverComparator(0);
  TypeComparator<IT2> comparator2=this.taskContext.getDriverComparator(1);
  MutableObjectIterator<IT1> input1=this.taskContext.getInput(0);
  MutableObjectIterator<IT2> input2=this.taskContext.getInput(1);
  TypePairComparatorFactory<IT1,IT2> pairComparatorFactory=this.taskContext.getTaskConfig().getPairComparatorFactory(this.taskContext.getUserCodeClassLoader());
  double availableMemory=config.getRelativeMemoryDriver();
  ExecutionConfig executionConfig=taskContext.getExecutionConfig();
  objectReuseEnabled=executionConfig.isObjectReuseEnabled();
  if (objectReuseEnabled) {
    if (buildSideIndex == 0 && probeSideIndex == 1) {
      matchIterator=new ReusingBuildFirstReOpenableHashMatchIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator21(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getOwningNepheleTask(),availableMemory);
    }
 else     if (buildSideIndex == 1 && probeSideIndex == 0) {
      matchIterator=new ReusingBuildSecondReOpenableHashMatchIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator12(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getOwningNepheleTask(),availableMemory);
    }
 else {
      throw new Exception("Error: Inconsistent setup for repeatable hash join driver.");
    }
  }
 else {
    if (buildSideIndex == 0 && probeSideIndex == 1) {
      matchIterator=new NonReusingBuildFirstReOpenableHashMatchIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator21(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getOwningNepheleTask(),availableMemory);
    }
 else     if (buildSideIndex == 1 && probeSideIndex == 0) {
      matchIterator=new NonReusingBuildSecondReOpenableHashMatchIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator12(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getOwningNepheleTask(),availableMemory);
    }
 else {
      throw new Exception("Error: Inconsistent setup for repeatable hash join driver.");
    }
  }
  this.matchIterator.open();
}
