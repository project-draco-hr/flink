{
  name=value.f0;
  progress=value.f2;
  outputTuple.f0=name;
  outputTuple.f1=value.f1;
  if (salaryHashmap.containsKey(name)) {
    Iterator<SalaryProgress> iterator=salaryHashmap.get(name).iterator();
    while (iterator.hasNext()) {
      SalaryProgress entry=iterator.next();
      if (progress - entry.progress > windowSize) {
        iterator.remove();
      }
 else {
        outputTuple.f2=entry.salary;
        out.collect(outputTuple);
      }
    }
  }
  if (!gradeHashmap.containsKey(name)) {
    gradeHashmap.put(name,new LinkedList<GradeProgress>());
  }
  gradeHashmap.get(name).add(new GradeProgress(value.f1,progress));
}
