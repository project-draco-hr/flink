{
  this.methodName=StringRecord.readString(in);
  this.parameters=new IOReadableWritable[in.readInt()];
  this.parameterClasses=new Class[parameters.length];
  for (int i=0; i < parameters.length; i++) {
    final String className=StringRecord.readString(in);
    try {
      parameterClasses[i]=ClassUtils.getRecordByName(className);
    }
 catch (    ClassNotFoundException cnfe) {
      throw new IOException(cnfe.toString());
    }
    if (in.readBoolean()) {
      try {
        final String parameterClassName=StringRecord.readString(in);
        final Class<? extends IOReadableWritable> parameterClass=ClassUtils.getRecordByName(parameterClassName);
        parameters[i]=parameterClass.newInstance();
      }
 catch (      IllegalAccessException iae) {
        throw new IOException(iae.toString());
      }
catch (      InstantiationException ie) {
        throw new IOException(ie.toString());
      }
catch (      ClassNotFoundException cnfe) {
        throw new IOException(cnfe.toString());
      }
      parameters[i].read(in);
    }
 else {
      parameters[i]=null;
    }
  }
}
