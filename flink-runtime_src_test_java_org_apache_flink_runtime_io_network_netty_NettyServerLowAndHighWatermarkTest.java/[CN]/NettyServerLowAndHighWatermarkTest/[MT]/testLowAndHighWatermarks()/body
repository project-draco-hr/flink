{
  final AtomicReference<Throwable> error=new AtomicReference<Throwable>();
  final NettyProtocol protocol=new NettyProtocol(){
    @Override public ChannelHandler[] getServerChannelHandlers(){
      return new ChannelHandler[]{new TestLowAndHighWatermarkHandler(error)};
    }
    @Override public ChannelHandler[] getClientChannelHandlers(){
      return new ChannelHandler[0];
    }
  }
;
  final NettyConfig conf=createConfig(PageSize);
  final NettyServerAndClient serverAndClient=initServerAndClient(protocol,conf);
  try {
    final Channel ch=connect(serverAndClient);
    awaitClose(ch);
    final Throwable t=error.get();
    if (t != null) {
      throw t;
    }
  }
  finally {
    shutdown(serverAndClient);
  }
}
