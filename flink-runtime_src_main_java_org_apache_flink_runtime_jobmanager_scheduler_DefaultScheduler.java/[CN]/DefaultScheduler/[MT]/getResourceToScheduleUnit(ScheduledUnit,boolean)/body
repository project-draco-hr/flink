{
  AllocatedSlot slot=null;
  while (true) {
synchronized (this.lock) {
      Instance instanceToUse=this.instancesWithAvailableResources.poll();
      if (instanceToUse == null) {
        if (exceptionOnNoAvailability) {
          throw new NoResourceAvailableException(unit);
        }
 else {
          try {
            do {
              this.lock.wait(2000);
            }
 while (!shutdown.get() && (instanceToUse=this.instancesWithAvailableResources.poll()) == null);
          }
 catch (          InterruptedException e) {
            throw new NoResourceAvailableException("The scheduler was interrupted.");
          }
        }
      }
      try {
        slot=instanceToUse.allocateSlot(unit.getJobId(),unit.getSharedResourceId());
      }
 catch (      InstanceDiedException e) {
        this.allInstances.remove(instanceToUse);
      }
      if (instanceToUse.hasResourcesAvailable()) {
        this.instancesWithAvailableResources.add(instanceToUse);
      }
      if (slot != null) {
        return slot;
      }
    }
  }
}
