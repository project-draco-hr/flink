{
synchronized (this.lock) {
    Instance instanceToUse=this.instancesWithAvailableResources.poll();
    if (instanceToUse != null) {
      try {
        AllocatedSlot slot=instanceToUse.allocateSlot(unit.getJobId(),unit.getSharedResourceId());
        if (instanceToUse.hasResourcesAvailable()) {
          this.instancesWithAvailableResources.add(instanceToUse);
        }
        if (slot != null) {
          AllocatedSlot previous=this.allocatedSlots.putIfAbsent(unit.getSharedResourceId(),slot);
          if (previous != null) {
            slot.cancelResource();
            slot=previous;
          }
        }
      }
 catch (      InstanceDiedException e) {
        this.allInstances.remove(instanceToUse);
      }
    }
    if (queueIfNoResource) {
      this.taskQueue.add(unit);
    }
 else {
      throw new NoResourceAvailableException(unit);
    }
    if (instanceToUse.hasResourcesAvailable()) {
      this.instancesWithAvailableResources.add(instanceToUse);
    }
    if (slot != null) {
      AllocatedSlot previous=this.allocatedSlots.putIfAbsent(unit.getSharedResourceId(),slot);
      if (previous != null) {
        slot.cancelResource();
        slot=previous;
      }
    }
  }
}
