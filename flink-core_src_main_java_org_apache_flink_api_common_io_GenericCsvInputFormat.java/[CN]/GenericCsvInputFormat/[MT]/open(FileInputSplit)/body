{
  super.open(split);
  FieldParser<?>[] parsers=new FieldParser<?>[fieldTypes.length];
  for (int i=0; i < fieldTypes.length; i++) {
    if (fieldTypes[i] != null) {
      Class<? extends FieldParser<?>> parserType=FieldParser.getParserForType(fieldTypes[i]);
      if (parserType == null) {
        throw new RuntimeException("No parser available for type '" + fieldTypes[i].getName() + "'.");
      }
      FieldParser<?> p=InstantiationUtil.instantiate(parserType,FieldParser.class);
      if (this.quotedStringParsing) {
        if (p instanceof StringParser) {
          ((StringParser)p).enableQuotedStringParsing(this.quoteCharacter);
        }
 else         if (p instanceof StringValueParser) {
          ((StringValueParser)p).enableQuotedStringParsing(this.quoteCharacter);
        }
      }
      parsers[i]=p;
    }
  }
  this.fieldParsers=parsers;
  if (this.skipFirstLineAsHeader && this.splitStart == 0) {
    readLine();
  }
}
