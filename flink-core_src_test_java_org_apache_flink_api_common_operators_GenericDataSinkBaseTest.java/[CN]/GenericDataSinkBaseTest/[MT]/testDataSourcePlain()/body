{
  try {
    TestNonRichOutputFormat out=new TestNonRichOutputFormat();
    GenericDataSinkBase<String> sink=new GenericDataSinkBase<String>(out,new UnaryOperatorInformation<String,Nothing>(BasicTypeInfo.STRING_TYPE_INFO,BasicTypeInfo.getInfoFor(Nothing.class)),"test_sink");
    sink.setInput(source);
    ExecutionConfig executionConfig=new ExecutionConfig();
    executionConfig.disableObjectReuse();
    in.reset();
    sink.executeOnCollections(asList(TestIOData.NAMES),null,executionConfig);
    assertEquals(out.output,asList(TestIOData.NAMES));
    executionConfig.enableObjectReuse();
    out.clear();
    in.reset();
    sink.executeOnCollections(asList(TestIOData.NAMES),null,executionConfig);
    assertEquals(out.output,asList(TestIOData.NAMES));
  }
 catch (  Exception e) {
    e.printStackTrace();
    fail(e.getMessage());
  }
}
