{
  if (function == null) {
    throw new NullPointerException("Join function must not be null.");
  }
  if (FunctionUtils.isLambdaFunction(function)) {
    throw new UnsupportedLambdaExpressionException();
  }
  FlatJoinFunction<I1,I2,R> generatedFunction=new WrappingFlatJoinFunction<I1,I2,R>(function);
  TypeInformation<R> returnType=TypeExtractor.getJoinReturnTypes(function,getInput1Type(),getInput2Type());
  return new EquiJoin<I1,I2,R>(getInput1(),getInput2(),getKeys1(),getKeys2(),generatedFunction,function,returnType,getJoinHint());
}
