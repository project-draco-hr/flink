{
  StreamExecutionEnvironment env=StreamExecutionEnvironment.getExecutionEnvironment();
  env.setParallelism(1);
  DataStream<String> source=env.addSource(new InfiniteTestSource());
  source.transform("Custom Operator",BasicTypeInfo.STRING_TYPE_INFO,new TimerOperator(ChainingStrategy.NEVER));
  boolean testSuccess=false;
  try {
    env.execute("Timer test");
  }
 catch (  JobExecutionException e) {
    if (e.getCause() instanceof TimerException) {
      TimerException te=(TimerException)e.getCause();
      if (te.getCause() instanceof RuntimeException) {
        RuntimeException re=(RuntimeException)te.getCause();
        if (re.getMessage().equals("TEST SUCCESS")) {
          testSuccess=true;
        }
 else {
          throw e;
        }
      }
 else {
        throw e;
      }
    }
 else {
      throw e;
    }
  }
  Assert.assertTrue(testSuccess);
}
