{
  DataStream<R> returnStream=new DataStreamSink<R>(environment,"iterationSink",null);
  jobGraphBuilder.addIterationSink(returnStream.getId(),iterationTail.getId(),iterationID.toString(),iterationTail.getParallelism(),waitTime);
  jobGraphBuilder.setIterationSourceSettings(iterationID.toString(),iterationTail.getId());
  List<String> name=Arrays.asList(new String[]{iterationName});
  for (  DataStream<IN> stream : iterationTail.mergedStreams) {
    String inputID=stream.getId();
    jobGraphBuilder.setEdge(inputID,returnStream.getId(),new ForwardPartitioner<IN>(),0,name,false);
  }
  return iterationTail;
}
