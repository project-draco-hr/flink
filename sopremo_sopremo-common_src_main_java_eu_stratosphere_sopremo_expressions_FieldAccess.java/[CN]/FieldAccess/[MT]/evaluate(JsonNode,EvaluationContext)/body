{
  if (node.isArray()) {
    if (node instanceof StreamArray)     return new StreamArray(new AbstractIterator<JsonNode>(){
      Iterator<JsonNode> children=node.iterator();
      @Override protected JsonNode loadNext(){
        if (!this.children.hasNext())         return this.noMoreElements();
        return this.children.next().get(FieldAccess.this.field);
      }
    }
);
    ArrayNode arrayNode=new ArrayNode(NODE_FACTORY);
    for (int index=0, size=node.size(); index < size; index++)     arrayNode.add(node.get(index).get(this.field));
    return arrayNode;
  }
  return node.get(this.field);
}
