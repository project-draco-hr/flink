{
  Class<?>[] types={type0,type1,type2,type3,type4,type5,type6,type7,type8,type9,type10,type11,type12,type13,type14,type15};
  if (types.length != this.fieldIndexes.length) {
    throw new IllegalArgumentException("Numbers of projected fields and types do not match.");
  }
  TypeInformation<?>[] fTypes=extractFieldTypes(fieldIndexes,types);
  TupleTypeInfo<Tuple16<T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15>> tType=new TupleTypeInfo<Tuple16<T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15>>(fTypes);
  return new ProjectJoin<I1,I2,Tuple16<T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15>>(this.ds1,this.ds2,this.keys1,this.keys2,this.hint,this.fieldIndexes,this.isFieldInFirst,tType);
}
