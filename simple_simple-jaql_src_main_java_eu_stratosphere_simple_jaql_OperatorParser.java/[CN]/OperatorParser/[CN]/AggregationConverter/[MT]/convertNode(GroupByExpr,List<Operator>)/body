{
  int n=expr.numInputs();
  List<EvaluableExpression> groupStatements=new ArrayList<EvaluableExpression>();
  for (int index=0; index < n; index++) {
    OperatorParser.this.queryParser.bindings.set("$",new Binding(null,new Input(index)));
    EvaluableExpression groupStatement=OperatorParser.this.queryParser.parsePath(expr.byBinding().child(index));
    if (groupStatement != null) {
      OperatorParser.this.queryParser.bindings.set(expr.getAsVar(index).taggedName(),new Binding(null,new Input(index)));
      groupStatements.add(groupStatement);
    }
    if (index > 0)     childOperators.add(OperatorParser.this.queryParser.parseOperator(expr.inBinding().child(index)));
  }
  EvaluableExpression collectTransformation=OperatorParser.this.queryParser.parseObjectCreation(((ArrayExpr)expr.collectExpr()).child(0));
  return new Aggregation(collectTransformation,groupStatements.isEmpty() ? Aggregation.NO_GROUPING : groupStatements,childOperators);
}
