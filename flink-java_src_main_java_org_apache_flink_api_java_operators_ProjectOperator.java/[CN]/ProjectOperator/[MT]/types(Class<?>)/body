{
  TupleTypeInfo<R> typeInfo=(TupleTypeInfo<R>)this.getResultType();
  if (types.length != typeInfo.getArity()) {
    throw new InvalidProgramException("Provided types do not match projection.");
  }
  for (int i=0; i < types.length; i++) {
    Class<?> typeClass=types[i];
    if (!typeClass.equals(typeInfo.getTypeAt(i).getTypeClass())) {
      throw new InvalidProgramException("Provided type " + typeClass.getSimpleName() + " at position "+ i+ " does not match projection");
    }
  }
  return (ProjectOperator<IN,R>)this;
}
