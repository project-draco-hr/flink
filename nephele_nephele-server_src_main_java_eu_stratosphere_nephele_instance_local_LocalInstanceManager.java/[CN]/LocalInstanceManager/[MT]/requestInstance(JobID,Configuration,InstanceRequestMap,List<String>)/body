{
  final Iterator<Map.Entry<InstanceType,Integer>> it=instanceRequestMap.getMinimumIterator();
  while (it.hasNext()) {
    final Map.Entry<InstanceType,Integer> entry=it.next();
    for (int i=0; i < entry.getValue().intValue(); i++) {
      boolean assignmentSuccessful=false;
      AllocatedResource allocatedResource=null;
synchronized (this.synchronizationObject) {
        if (this.localInstance != null) {
          if (this.allocatedResource == null) {
            allocatedResource=new AllocatedResource(this.localInstance,entry.getKey(),AllocationID.generate());
            this.allocatedResource=allocatedResource;
            assignmentSuccessful=true;
          }
        }
      }
      final List<AllocatedResource> allocatedResources=new ArrayList<AllocatedResource>(1);
      allocatedResources.add(this.allocatedResource);
      if (assignmentSuccessful) {
        new LocalInstanceNotifier(this.instanceListener,jobID,allocatedResources).start();
      }
 else {
        throw new InstanceException("No instance of type " + entry.getKey() + " available");
      }
    }
  }
}
