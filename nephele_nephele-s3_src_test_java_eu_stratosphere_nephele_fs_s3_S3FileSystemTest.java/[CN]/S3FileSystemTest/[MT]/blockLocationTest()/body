{
  if (!testActivated()) {
    return;
  }
  final String dirName=getRandomName();
  final String fileName=getRandomName();
  final Path dir=new Path(S3_BASE_URI + dirName + Path.SEPARATOR);
  final Path file=new Path(S3_BASE_URI + dirName + Path.SEPARATOR+ fileName);
  try {
    final FileSystem fs=dir.getFileSystem();
    fs.mkdirs(dir);
    final OutputStream os=fs.create(file,true);
    generateTestData(os,SMALL_FILE_SIZE);
    os.close();
    final FileStatus fileStatus=fs.getFileStatus(file);
    assertNotNull(fileStatus);
    BlockLocation[] blockLocations=fs.getFileBlockLocations(fileStatus,0,SMALL_FILE_SIZE + 1);
    assertNull(blockLocations);
    blockLocations=fs.getFileBlockLocations(fileStatus,0,SMALL_FILE_SIZE);
    assertEquals(1,blockLocations.length);
    final BlockLocation bl=blockLocations[0];
    assertNotNull(bl.getHosts());
    assertEquals(1,bl.getHosts().length);
    assertEquals(SMALL_FILE_SIZE,bl.getLength());
    assertEquals(0,bl.getOffset());
    final URI s3Uri=fs.getUri();
    assertNotNull(s3Uri);
    assertEquals(s3Uri.getHost(),bl.getHosts()[0]);
    fs.delete(dir,true);
  }
 catch (  IOException ioe) {
    fail(ioe.getMessage());
  }
}
