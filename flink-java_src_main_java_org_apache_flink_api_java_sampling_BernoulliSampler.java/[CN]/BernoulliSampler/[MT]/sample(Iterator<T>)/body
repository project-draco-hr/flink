{
  if (fraction == 0) {
    return EMPTY_ITERABLE;
  }
  return new SampledIterator<T>(){
    T current=null;
    @Override public boolean hasNext(){
      if (current == null) {
        current=getNextSampledElement();
      }
      return current != null;
    }
    @Override public T next(){
      if (current == null) {
        return getNextSampledElement();
      }
 else {
        T result=current;
        current=null;
        return result;
      }
    }
    private T getNextSampledElement(){
      while (input.hasNext()) {
        T element=input.next();
        if (random.nextDouble() <= fraction) {
          return element;
        }
      }
      return null;
    }
  }
;
}
