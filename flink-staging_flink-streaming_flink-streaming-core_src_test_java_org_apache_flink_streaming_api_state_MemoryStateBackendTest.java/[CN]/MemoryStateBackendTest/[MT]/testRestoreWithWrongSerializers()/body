{
  try {
    MemoryStateBackend backend=new MemoryStateBackend();
    KvState<Integer,String,MemoryStateBackend> kv=backend.createKvState(IntSerializer.INSTANCE,StringSerializer.INSTANCE,null);
    kv.setCurrentKey(1);
    kv.update("1");
    kv.setCurrentKey(2);
    kv.update("2");
    KvStateSnapshot<Integer,String,MemoryStateBackend> snapshot=kv.shapshot(682375462378L,System.currentTimeMillis());
    @SuppressWarnings("unchecked") TypeSerializer<Integer> fakeIntSerializer=(TypeSerializer<Integer>)(TypeSerializer<?>)FloatSerializer.INSTANCE;
    @SuppressWarnings("unchecked") TypeSerializer<String> fakeStringSerializer=(TypeSerializer<String>)(TypeSerializer<?>)new ValueSerializer<StringValue>(StringValue.class);
    try {
      snapshot.restoreState(backend,fakeIntSerializer,StringSerializer.INSTANCE,null,getClass().getClassLoader());
      fail("should recognize wrong serializers");
    }
 catch (    IllegalArgumentException e) {
    }
catch (    Exception e) {
      fail("wrong exception");
    }
    try {
      snapshot.restoreState(backend,IntSerializer.INSTANCE,fakeStringSerializer,null,getClass().getClassLoader());
      fail("should recognize wrong serializers");
    }
 catch (    IllegalArgumentException e) {
    }
catch (    Exception e) {
      fail("wrong exception");
    }
    try {
      snapshot.restoreState(backend,fakeIntSerializer,fakeStringSerializer,null,getClass().getClassLoader());
      fail("should recognize wrong serializers");
    }
 catch (    IllegalArgumentException e) {
    }
catch (    Exception e) {
      fail("wrong exception");
    }
  }
 catch (  Exception e) {
    e.printStackTrace();
    fail(e.getMessage());
  }
}
