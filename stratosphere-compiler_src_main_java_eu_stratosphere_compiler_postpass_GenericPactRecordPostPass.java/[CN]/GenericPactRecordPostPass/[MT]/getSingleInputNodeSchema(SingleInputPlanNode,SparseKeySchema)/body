{
  SingleInputContract<?> contract=(SingleInputContract<?>)node.getSingleInputNode().getPactContract();
  if (!(contract instanceof RecordOperator)) {
    throw new CompilerPostPassException("Error: Contract is not a PactRecord based contract. Wrong compiler invokation.");
  }
  RecordOperator recContract=(RecordOperator)contract;
  int[] localPositions=contract.getKeyColumns(0);
  Class<? extends Key>[] types=recContract.getKeyClasses();
  for (int i=0; i < localPositions.length; i++) {
    schema.addType(localPositions[i],types[i]);
  }
  if (contract instanceof ReduceOperator) {
    Ordering groupOrder=((ReduceOperator)contract).getGroupOrder();
    if (groupOrder != null) {
      addOrderingToSchema(groupOrder,schema);
    }
  }
}
