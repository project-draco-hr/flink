{
  DataSet<Tuple3<K,K,ByteValue>> edgesWithOrder=input.getEdges().flatMap(new EmitAndFlipEdge<K,EV>()).setParallelism(parallelism).name("Emit and flip edge").groupBy(0,1).reduce(new ReduceBitmask<K>()).setParallelism(parallelism).name("Reduce bitmask");
  DataSet<Vertex<K,Degrees>> vertexDegrees=edgesWithOrder.groupBy(0).sortGroup(1,Order.ASCENDING).reduceGroup(new DegreeCount<K>()).setParallelism(parallelism).name("Degree count");
  if (includeZeroDegreeVertices.get()) {
    vertexDegrees=input.getVertices().leftOuterJoin(vertexDegrees).where(0).equalTo(0).with(new JoinVertexWithVertexDegrees<K,VV>()).setParallelism(parallelism).name("Join zero degree vertices");
  }
  return vertexDegrees;
}
