{
  resp.setStatus(HttpServletResponse.SC_OK);
  resp.setContentType("application/json");
  try {
    if ("archive".equals(req.getParameter("get"))) {
      writeJsonForArchive(resp.getWriter(),jobmanager.getOldJobs());
    }
 else     if ("job".equals(req.getParameter("get"))) {
      String jobId=req.getParameter("job");
      writeJsonForArchivedJob(resp.getWriter(),jobmanager.getArchive().getJob(JobID.fromHexString(jobId)));
    }
 else     if ("groupvertex".equals(req.getParameter("get"))) {
      String jobId=req.getParameter("job");
      String groupvertexId=req.getParameter("groupvertex");
      writeJsonForArchivedJobGroupvertex(resp.getWriter(),jobmanager.getArchive().getJob(JobID.fromHexString(jobId)),ManagementGroupVertexID.fromHexString(groupvertexId));
    }
 else     if ("taskmanagers".equals(req.getParameter("get"))) {
      resp.getWriter().write("{\"taskmanagers\": " + jobmanager.getNumberOfTaskTrackers() + "}");
    }
 else     if ("cancel".equals(req.getParameter("get"))) {
      String jobId=req.getParameter("job");
      jobmanager.cancelJob(JobID.fromHexString(jobId));
    }
 else     if ("updates".equals(req.getParameter("get"))) {
      String jobId=req.getParameter("job");
      writeJsonUpdatesForJob(resp.getWriter(),JobID.fromHexString(jobId));
    }
 else {
      writeJsonForJobs(resp.getWriter(),jobmanager.getRecentJobs());
    }
  }
 catch (  Exception e) {
    resp.setStatus(HttpServletResponse.SC_BAD_REQUEST);
    resp.getWriter().print(e.getMessage());
    if (LOG.isWarnEnabled()) {
      LOG.warn(StringUtils.stringifyException(e));
    }
  }
}
