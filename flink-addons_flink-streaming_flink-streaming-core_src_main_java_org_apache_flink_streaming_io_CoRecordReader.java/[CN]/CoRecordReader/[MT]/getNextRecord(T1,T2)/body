{
  int out;
  while (true) {
    if (this.nextInputGateToReadFrom == null) {
      if (this.remainingInputGates.isEmpty()) {
        return 0;
      }
      this.nextInputGateToReadFrom=getNextAvailableInputGate();
    }
    InputChannelResult result;
    if (inputGates1.contains(this.nextInputGateToReadFrom)) {
      result=this.nextInputGateToReadFrom.readRecord(target1);
      out=1;
    }
 else {
      result=this.nextInputGateToReadFrom.readRecord(target2);
      out=2;
    }
switch (result) {
case INTERMEDIATE_RECORD_FROM_BUFFER:
      return out;
case LAST_RECORD_FROM_BUFFER:
    this.nextInputGateToReadFrom=null;
  return out;
case END_OF_SUPERSTEP:
this.nextInputGateToReadFrom=null;
if (incrementEndOfSuperstepEventAndCheck()) {
return 0;
}
 else {
break;
}
case TASK_EVENT:
handleEvent(this.nextInputGateToReadFrom.getCurrentEvent());
this.nextInputGateToReadFrom=null;
break;
case END_OF_STREAM:
this.remainingInputGates.remove(this.nextInputGateToReadFrom);
this.nextInputGateToReadFrom=null;
break;
case NONE:
this.nextInputGateToReadFrom=null;
break;
}
}
}
