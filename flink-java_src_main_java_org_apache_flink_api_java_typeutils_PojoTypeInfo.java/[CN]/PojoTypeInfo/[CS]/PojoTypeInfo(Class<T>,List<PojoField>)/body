{
  super(typeClass);
  this.typeClass=typeClass;
  List<PojoField> tempFields=new ArrayList<PojoField>(fields);
  Collections.sort(tempFields,new Comparator<PojoField>(){
    @Override public int compare(    PojoField o1,    PojoField o2){
      return o1.field.getName().compareTo(o2.field.getName());
    }
  }
);
  this.fields=tempFields.toArray(new PojoField[tempFields.size()]);
  if (!Modifier.isPublic(typeClass.getModifiers())) {
    throw new RuntimeException("POJO " + typeClass + " is not public");
  }
  for (  PojoField field : fields) {
    totalFields+=field.type.getTotalFields();
  }
}
