{
  final TaskConfig config=this.taskContext.getTaskConfig();
  final DriverStrategy ls=config.getDriverStrategy();
switch (ls) {
case NESTEDLOOP_BLOCKED_OUTER_FIRST:
    this.blocked=true;
  this.firstIsOuter=true;
break;
case NESTEDLOOP_BLOCKED_OUTER_SECOND:
this.blocked=true;
this.firstIsOuter=false;
break;
case NESTEDLOOP_STREAMED_OUTER_FIRST:
this.blocked=false;
this.firstIsOuter=true;
break;
case NESTEDLOOP_STREAMED_OUTER_SECOND:
this.blocked=false;
this.firstIsOuter=false;
break;
default :
throw new RuntimeException("Invalid local strategy for CROSS: " + ls);
}
this.memManager=this.taskContext.getMemoryManager();
final int numPages=this.memManager.computeNumberOfPages(config.getRelativeMemoryDriver());
if (numPages < 2) {
throw new RuntimeException("The Cross task was initialized with too little memory. " + "Cross requires at least 2 memory pages.");
}
if (ls == DriverStrategy.NESTEDLOOP_STREAMED_OUTER_FIRST || ls == DriverStrategy.NESTEDLOOP_STREAMED_OUTER_SECOND) {
this.memPagesForSpillingSide=numPages;
this.memPagesForBlockSide=0;
}
 else {
if (numPages > 32) {
this.memPagesForSpillingSide=2;
}
 else {
this.memPagesForSpillingSide=1;
}
this.memPagesForBlockSide=numPages - this.memPagesForSpillingSide;
}
ExecutionConfig executionConfig=taskContext.getExecutionConfig();
this.objectReuseEnabled=executionConfig.isObjectReuseEnabled();
if (LOG.isDebugEnabled()) {
LOG.debug("CrossDriver object reuse: " + (this.objectReuseEnabled ? "ENABLED" : "DISABLED") + ".");
}
}
