{
  LOG.info("-------------------------------------------------------------------------");
  LOG.info("    Starting KafkaShortRetentionTestBase ");
  LOG.info("-------------------------------------------------------------------------");
  Configuration flinkConfig=new Configuration();
  Class<?> clazz=Class.forName("org.apache.flink.streaming.connectors.kafka.KafkaTestEnvironmentImpl");
  kafkaServer=(KafkaTestEnvironment)InstantiationUtil.instantiate(clazz);
  LOG.info("Starting KafkaTestBase.prepare() for Kafka " + kafkaServer.getVersion());
  if (kafkaServer.isSecureRunSupported()) {
    secureProps=kafkaServer.getSecureProperties();
  }
  Properties specificProperties=new Properties();
  specificProperties.setProperty("log.retention.hours","0");
  specificProperties.setProperty("log.retention.minutes","0");
  specificProperties.setProperty("log.retention.ms","250");
  specificProperties.setProperty("log.retention.check.interval.ms","100");
  kafkaServer.prepare(1,specificProperties,false);
  standardProps=kafkaServer.getStandardProperties();
  flinkConfig.setInteger(ConfigConstants.LOCAL_NUMBER_TASK_MANAGER,1);
  flinkConfig.setInteger(ConfigConstants.TASK_MANAGER_NUM_TASK_SLOTS,8);
  flinkConfig.setInteger(ConfigConstants.TASK_MANAGER_MEMORY_SIZE_KEY,16);
  flinkConfig.setString(ConfigConstants.RESTART_STRATEGY_FIXED_DELAY_DELAY,"0 s");
  flink=new LocalFlinkMiniCluster(flinkConfig,false);
  flink.start();
}
