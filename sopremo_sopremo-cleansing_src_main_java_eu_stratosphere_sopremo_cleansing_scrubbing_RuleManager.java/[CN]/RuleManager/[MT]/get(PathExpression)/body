{
  return new AbstractIterable<Map.Entry<PathExpression,EvaluationExpression>,EvaluationExpression>(rules){
    @Override protected Iterator<EvaluationExpression> wrap(    final Iterator<Map.Entry<PathExpression,EvaluationExpression>> iterator){
      return new AbstractIterator<EvaluationExpression>(){
        @Override protected EvaluationExpression loadNext(){
          while (iterator.hasNext()) {
            Map.Entry<PathExpression,EvaluationExpression> next=iterator.next();
            if (next.getKey().equals(currentPath))             return next.getValue();
          }
          return noMoreElements();
        }
      }
;
    }
  }
;
}
