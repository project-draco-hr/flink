{
  TypeInformation<?> ti=TypeInfoParser.parse("Tuple2<Integer, Double>[][]");
  Assert.assertEquals("ObjectArrayTypeInfo<ObjectArrayTypeInfo<Java Tuple2<Integer, Double>>>",ti.toString());
  ti=TypeInfoParser.parse("org.apache.flink.api.java.typeutils.TypeInfoParserTest$MyPojo<basic=String>[][][]");
  Assert.assertEquals("ObjectArrayTypeInfo<ObjectArrayTypeInfo<ObjectArrayTypeInfo<" + "PojoType<org.apache.flink.api.java.typeutils.TypeInfoParserTest$MyPojo, fields = [basic: String]>" + ">>>",ti.toString());
  ti=TypeInfoParser.parse("Float[][][]");
  Assert.assertEquals("ObjectArrayTypeInfo<ObjectArrayTypeInfo<BasicArrayTypeInfo<Float>>>",ti.toString());
  ti=TypeInfoParser.parse("String[][][]");
  Assert.assertEquals("ObjectArrayTypeInfo<ObjectArrayTypeInfo<BasicArrayTypeInfo<String>>>",ti.toString());
  ti=TypeInfoParser.parse("Date[][][]");
  Assert.assertEquals("ObjectArrayTypeInfo<ObjectArrayTypeInfo<ObjectArrayTypeInfo<Date>>>",ti.toString());
  ti=TypeInfoParser.parse("int[][][]");
  Assert.assertEquals("ObjectArrayTypeInfo<ObjectArrayTypeInfo<int[]>>",ti.toString());
  ti=TypeInfoParser.parse("boolean[][][]");
  Assert.assertEquals("ObjectArrayTypeInfo<ObjectArrayTypeInfo<boolean[]>>",ti.toString());
  ti=TypeInfoParser.parse("IntValue[][][]");
  Assert.assertEquals("ObjectArrayTypeInfo<ObjectArrayTypeInfo<ObjectArrayTypeInfo<ValueType<IntValue>>>>",ti.toString());
  ti=TypeInfoParser.parse("org.apache.flink.api.java.typeutils.TypeInfoParserTest$MyValue[][][]");
  ti=TypeInfoParser.parse("Enum<org.apache.flink.api.java.typeutils.TypeInfoParserTest$MyEnum>[][][]");
  Assert.assertEquals("ObjectArrayTypeInfo<ObjectArrayTypeInfo<ObjectArrayTypeInfo<" + "EnumTypeInfo<org.apache.flink.api.java.typeutils.TypeInfoParserTest$MyEnum>" + ">>>",ti.toString());
}
