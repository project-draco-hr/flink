{
  Assert.assertEquals(BasicTypeInfo.INT_TYPE_INFO,TypeInfoParser.parse("Integer"));
  Assert.assertEquals(BasicTypeInfo.DOUBLE_TYPE_INFO,TypeInfoParser.parse("Double"));
  Assert.assertEquals(BasicTypeInfo.BYTE_TYPE_INFO,TypeInfoParser.parse("Byte"));
  Assert.assertEquals(BasicTypeInfo.FLOAT_TYPE_INFO,TypeInfoParser.parse("Float"));
  Assert.assertEquals(BasicTypeInfo.SHORT_TYPE_INFO,TypeInfoParser.parse("Short"));
  Assert.assertEquals(BasicTypeInfo.LONG_TYPE_INFO,TypeInfoParser.parse("Long"));
  Assert.assertEquals(BasicTypeInfo.CHAR_TYPE_INFO,TypeInfoParser.parse("Character"));
  Assert.assertEquals(BasicTypeInfo.STRING_TYPE_INFO,TypeInfoParser.parse("String"));
  Assert.assertEquals(BasicTypeInfo.BOOLEAN_TYPE_INFO,TypeInfoParser.parse("Boolean"));
  Assert.assertEquals(BasicTypeInfo.VOID_TYPE_INFO,TypeInfoParser.parse("Void"));
  Assert.assertEquals(BasicTypeInfo.DATE_TYPE_INFO,TypeInfoParser.parse("Date"));
  Assert.assertEquals(BasicTypeInfo.BIG_INT_TYPE_INFO,TypeInfoParser.parse("BigInteger"));
  Assert.assertEquals(BasicTypeInfo.BIG_DEC_TYPE_INFO,TypeInfoParser.parse("BigDecimal"));
  Assert.assertEquals(BasicTypeInfo.INT_TYPE_INFO,TypeInfoParser.parse("java.lang.Integer"));
  Assert.assertEquals(BasicTypeInfo.DOUBLE_TYPE_INFO,TypeInfoParser.parse("java.lang.Double"));
  Assert.assertEquals(BasicTypeInfo.BYTE_TYPE_INFO,TypeInfoParser.parse("java.lang.Byte"));
  Assert.assertEquals(BasicTypeInfo.FLOAT_TYPE_INFO,TypeInfoParser.parse("java.lang.Float"));
  Assert.assertEquals(BasicTypeInfo.SHORT_TYPE_INFO,TypeInfoParser.parse("java.lang.Short"));
  Assert.assertEquals(BasicTypeInfo.LONG_TYPE_INFO,TypeInfoParser.parse("java.lang.Long"));
  Assert.assertEquals(BasicTypeInfo.CHAR_TYPE_INFO,TypeInfoParser.parse("java.lang.Character"));
  Assert.assertEquals(BasicTypeInfo.STRING_TYPE_INFO,TypeInfoParser.parse("java.lang.String"));
  Assert.assertEquals(BasicTypeInfo.BOOLEAN_TYPE_INFO,TypeInfoParser.parse("java.lang.Boolean"));
  Assert.assertEquals(BasicTypeInfo.VOID_TYPE_INFO,TypeInfoParser.parse("java.lang.Void"));
  Assert.assertEquals(BasicTypeInfo.DATE_TYPE_INFO,TypeInfoParser.parse("java.util.Date"));
  Assert.assertEquals(BasicTypeInfo.BIG_INT_TYPE_INFO,TypeInfoParser.parse("java.math.BigInteger"));
  Assert.assertEquals(BasicTypeInfo.BIG_DEC_TYPE_INFO,TypeInfoParser.parse("java.math.BigDecimal"));
  Assert.assertEquals(BasicTypeInfo.INT_TYPE_INFO,TypeInfoParser.parse("int"));
  Assert.assertEquals(BasicTypeInfo.DOUBLE_TYPE_INFO,TypeInfoParser.parse("double"));
  Assert.assertEquals(BasicTypeInfo.BYTE_TYPE_INFO,TypeInfoParser.parse("byte"));
  Assert.assertEquals(BasicTypeInfo.FLOAT_TYPE_INFO,TypeInfoParser.parse("float"));
  Assert.assertEquals(BasicTypeInfo.SHORT_TYPE_INFO,TypeInfoParser.parse("short"));
  Assert.assertEquals(BasicTypeInfo.LONG_TYPE_INFO,TypeInfoParser.parse("long"));
  Assert.assertEquals(BasicTypeInfo.CHAR_TYPE_INFO,TypeInfoParser.parse("char"));
  Assert.assertEquals(BasicTypeInfo.BOOLEAN_TYPE_INFO,TypeInfoParser.parse("boolean"));
  Assert.assertEquals(BasicTypeInfo.VOID_TYPE_INFO,TypeInfoParser.parse("void"));
}
