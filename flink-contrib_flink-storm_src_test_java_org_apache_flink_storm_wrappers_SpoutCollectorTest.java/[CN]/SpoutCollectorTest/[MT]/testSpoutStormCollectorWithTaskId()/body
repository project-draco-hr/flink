{
  for (int numberOfAttributes=0; numberOfAttributes < 25; ++numberOfAttributes) {
    final SourceContext flinkCollector=mock(SourceContext.class);
    final int taskId=42;
    final String streamId="streamId";
    HashMap<String,Integer> attributes=new HashMap<String,Integer>();
    attributes.put(streamId,numberOfAttributes);
    SpoutCollector<?> collector=new SpoutCollector(attributes,taskId,flinkCollector);
    final Values tuple=new Values();
    final Tuple flinkTuple=Tuple.getTupleClass(numberOfAttributes + 1).newInstance();
    for (int i=0; i < numberOfAttributes; ++i) {
      tuple.add(new Integer(this.r.nextInt()));
      flinkTuple.setField(tuple.get(i),i);
    }
    flinkTuple.setField(taskId,numberOfAttributes);
    final List<Integer> taskIds;
    final Object messageId=new Integer(this.r.nextInt());
    taskIds=collector.emit(streamId,tuple,messageId);
    Assert.assertNull(taskIds);
    verify(flinkCollector).collect(flinkTuple);
  }
}
