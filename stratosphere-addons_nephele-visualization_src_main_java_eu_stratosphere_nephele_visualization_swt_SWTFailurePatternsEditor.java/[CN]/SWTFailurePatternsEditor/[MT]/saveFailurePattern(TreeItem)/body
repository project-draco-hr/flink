{
  final JobFailurePattern failurePattern=(JobFailurePattern)selectedItem.getData();
  if (failurePattern == null) {
    return;
  }
  final FileDialog fileDialog=new FileDialog(this.shell,SWT.SAVE);
  fileDialog.setText("Save Failure Pattern");
  final String[] filterExts={"*.xml","*.*"};
  fileDialog.setFilterExtensions(filterExts);
  final String selectedFile=fileDialog.open();
  if (selectedFile == null) {
    return;
  }
  final DocumentBuilderFactory docBuilderFactory=DocumentBuilderFactory.newInstance();
  try {
    final DocumentBuilder builder=docBuilderFactory.newDocumentBuilder();
    final Document doc=builder.newDocument();
    final Element root=doc.createElement("pattern");
    doc.appendChild(root);
    final Element name=doc.createElement("name");
    root.appendChild(name);
    name.appendChild(doc.createTextNode(failurePattern.getName()));
    final Element failures=doc.createElement("failures");
    root.appendChild(failures);
    final Iterator<AbstractFailureEvent> it=failurePattern.iterator();
    while (it.hasNext()) {
      final AbstractFailureEvent event=it.next();
      final Element failure=doc.createElement("failure");
      failure.setAttribute("type",(event instanceof VertexFailureEvent) ? "task" : "instance");
      final Element failureName=doc.createElement("name");
      failureName.appendChild(doc.createTextNode(event.getName()));
      failure.appendChild(failureName);
      final Element interval=doc.createElement("interval");
      interval.appendChild(doc.createTextNode(Integer.toString(event.getInterval())));
      failure.appendChild(interval);
      failures.appendChild(failure);
    }
    final DOMSource domSource=new DOMSource(doc);
    final TransformerFactory transformerFactory=TransformerFactory.newInstance();
    final FileOutputStream fos=new FileOutputStream(selectedFile);
    final Transformer transformer=transformerFactory.newTransformer();
    transformer.setOutputProperty(OutputKeys.INDENT,"yes");
    transformer.setOutputProperty(OutputKeys.ENCODING,"UTF-8");
    transformer.transform(domSource,new StreamResult(fos));
  }
 catch (  Exception e) {
    final MessageBox messageBox=new MessageBox(this.shell,SWT.ICON_ERROR);
    messageBox.setText("Cannot Save Failure Pattern");
    messageBox.setMessage(e.getMessage());
    messageBox.open();
  }
}
