{
  if (CheckpointUtils.isCheckpointingDisabled()) {
    return false;
  }
  if (rus.getForced() != null) {
    System.out.println("Checkpoint decision was forced to " + rus.getForced());
    return rus.getForced();
  }
  final double CPlower=CheckpointUtils.getCPLower();
  final double CPupper=CheckpointUtils.getCPUpper();
  if (rus.getPactRatio() >= 0.0 && !CheckpointUtils.useAVG()) {
    System.out.println("Ratio = " + rus.getPactRatio());
    if (rus.getPactRatio() >= CPlower) {
      return true;
    }
    if (rus.getPactRatio() <= CPupper) {
      return false;
    }
  }
 else {
    if (rus.isDam()) {
      System.out.println("is Dam");
      if (rus.getAverageOutputRecordSize() != 0) {
        System.out.println("avg ratio " + rus.getAverageInputRecordSize() / rus.getAverageOutputRecordSize());
      }
      if (rus.getAverageOutputRecordSize() != 0 && rus.getAverageInputRecordSize() / rus.getAverageOutputRecordSize() >= CPlower) {
        return true;
      }
      if (rus.getAverageOutputRecordSize() != 0 && rus.getAverageInputRecordSize() / rus.getAverageOutputRecordSize() <= CPupper) {
        return false;
      }
    }
 else {
      System.out.println("out " + rus.getTotalOutputAmount() + " in "+ rus.getTotalInputAmount());
      if (rus.getTotalInputAmount() != 0) {
        System.out.println("selektivity is " + (double)rus.getTotalOutputAmount() / rus.getTotalInputAmount());
      }
      if (rus.getTotalOutputAmount() != 0 && ((double)rus.getTotalInputAmount() / rus.getTotalOutputAmount() >= CPlower)) {
        System.out.println(task.getEnvironment().getTaskName() + " Checkpoint to large selektivity " + ((double)rus.getTotalInputAmount() / rus.getTotalOutputAmount()));
        return false;
      }
      if (rus.getTotalOutputAmount() != 0 && ((double)rus.getTotalInputAmount() / rus.getTotalOutputAmount() <= CPupper)) {
        System.out.println(task.getEnvironment().getTaskName() + " Checkpoint small selektivity " + ((double)rus.getTotalInputAmount() / rus.getTotalOutputAmount()));
        return true;
      }
    }
  }
  if (rus.getUserCPU() >= 90) {
    System.out.println(task.getEnvironment().getTaskName() + "CPU-Bottleneck");
    return true;
  }
  System.out.println("Checkpoint decision false by default");
  return false;
}
