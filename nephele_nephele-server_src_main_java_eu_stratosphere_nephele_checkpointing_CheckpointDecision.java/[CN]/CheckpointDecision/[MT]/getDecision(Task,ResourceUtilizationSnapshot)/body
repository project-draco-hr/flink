{
  if (CheckpointUtils.isCheckpointingDisabled()) {
    return false;
  }
  final double CPlower=CheckpointUtils.getCPLower();
  final double CPupper=CheckpointUtils.getCPUpper();
  if (rus.getForced() == null) {
    if (rus.getPactRatio() != -1 && CheckpointUtils.usePACT()) {
      System.out.println("Ratio = " + rus.getPactRatio());
      if (rus.getPactRatio() >= CPlower) {
        return true;
      }
      if (rus.getPactRatio() <= CPupper) {
        return false;
      }
    }
 else {
      if (rus.isDam() && CheckpointUtils.useAVG()) {
        System.out.println("is Dam");
        if (rus.getAverageOutputRecordSize() != 0) {
          System.out.println("avg ratio" + rus.getAverageInputRecordSize() / rus.getAverageOutputRecordSize());
        }
        if (rus.getAverageOutputRecordSize() != 0 && rus.getAverageInputRecordSize() / rus.getAverageOutputRecordSize() >= CPlower) {
          return true;
        }
        if (rus.getAverageOutputRecordSize() != 0 && rus.getAverageInputRecordSize() / rus.getAverageOutputRecordSize() <= CPupper) {
          return false;
        }
      }
 else {
        System.out.println("out " + rus.getTotalOutputAmount() + " in "+ rus.getTotalInputAmount());
        if (rus.getTotalInputAmount() != 0) {
          System.out.println("selektivity is " + (double)rus.getTotalOutputAmount() / rus.getTotalInputAmount());
        }
        if (rus.getTotalOutputAmount() != 0 && ((double)rus.getTotalInputAmount() / rus.getTotalOutputAmount() >= CPlower)) {
          LOG.info(task.getEnvironment().getTaskName() + "Checkpoint to large selektivity " + ((double)rus.getTotalInputAmount() / rus.getTotalOutputAmount() > 2.0));
          return false;
        }
        if (rus.getTotalOutputAmount() != 0 && ((double)rus.getTotalInputAmount() / rus.getTotalOutputAmount() <= CPupper)) {
          LOG.info(task.getEnvironment().getTaskName() + "Checkpoint to large selektivity " + ((double)rus.getTotalInputAmount() / rus.getTotalOutputAmount() > 2.0));
          return true;
        }
      }
    }
    if (rus.getUserCPU() >= 90) {
      System.out.println(task.getEnvironment().getTaskName() + "CPU-Bottleneck");
      return true;
    }
  }
 else {
    System.out.println("Checkpoint decision was forced too " + rus.getForced());
    return rus.getForced();
  }
  return false;
}
