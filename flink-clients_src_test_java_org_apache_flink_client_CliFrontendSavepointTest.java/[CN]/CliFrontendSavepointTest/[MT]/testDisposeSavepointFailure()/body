{
  replaceStdOutAndStdErr();
  try {
    String savepointPath="expectedSavepointPath";
    ActorGateway jobManager=mock(ActorGateway.class);
    Promise<Object> triggerResponse=new scala.concurrent.impl.Promise.DefaultPromise<>();
    when(jobManager.ask(Mockito.eq(new DisposeSavepoint(savepointPath)),any(FiniteDuration.class))).thenReturn(triggerResponse.future());
    Exception testException=new Exception("expectedTestException");
    triggerResponse.success(new DisposeSavepointFailure(testException));
    CliFrontend frontend=new MockCliFrontend(CliFrontendTestUtils.getConfigDir(),jobManager);
    String[] parameters={"-d",savepointPath};
    int returnCode=frontend.savepoint(parameters);
    assertTrue(returnCode != 0);
    verify(jobManager,times(1)).ask(Mockito.eq(new DisposeSavepoint(savepointPath)),any(FiniteDuration.class));
    assertTrue(buffer.toString().contains("expectedTestException"));
  }
  finally {
    restoreStdOutAndStdErr();
  }
}
