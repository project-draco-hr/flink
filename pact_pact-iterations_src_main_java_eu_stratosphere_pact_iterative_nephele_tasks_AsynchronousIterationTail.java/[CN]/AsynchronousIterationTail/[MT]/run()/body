{
  MutableObjectIterator<Value> input=inputs[DATA_INPUT];
  SerializedPassthroughUpdateBuffer buffer=null;
  DataOutputView writeOutput=null;
  PactRecord rec=new PactRecord();
  while (true) {
    try {
      boolean success=input.next(rec);
      if (success) {
synchronized (buffer) {
          rec.write(writeOutput);
          buffer.incCount();
          buffer.notifyAll();
        }
      }
      if (!success) {
        break;
      }
    }
 catch (    StateChangeException ex) {
      if (stateListeners[DATA_INPUT].isChanged()) {
        if (stateListeners[DATA_INPUT].getState() == ChannelState.CLOSED) {
          buffer.flush();
          buffer.close();
          buffer=null;
          writeOutput=null;
          publishState(ChannelState.CLOSED,getEnvironment().getOutputGate(0));
        }
        if (stateListeners[DATA_INPUT].getState() == ChannelState.OPEN && buffer == null) {
          buffer=(SerializedPassthroughUpdateBuffer)BackTrafficQueueStore.getInstance().receiveUpdateBuffer(getEnvironment().getJobID(),getEnvironment().getIndexInSubtaskGroup());
          BackTrafficQueueStore.getInstance().publishIterationEnd(getEnvironment().getJobID(),getEnvironment().getIndexInSubtaskGroup(),buffer);
          writeOutput=buffer.getWriteEnd();
        }
      }
    }
  }
  inputs[PLACEMENT_INPUT].next(new PactRecord());
  output.close();
}
