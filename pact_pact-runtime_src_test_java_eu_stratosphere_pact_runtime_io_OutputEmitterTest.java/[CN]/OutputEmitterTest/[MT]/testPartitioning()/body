{
  OutputEmitter<PactInteger,PactInteger> oe=new OutputEmitter<PactInteger,PactInteger>(ShipStrategy.PARTITION_HASH);
  int[] hit=new int[100];
  boolean[] channelFlags=new boolean[100];
  for (int i=0; i < 100; ++i) {
    hit[i]=0;
    channelFlags[i]=false;
  }
  for (int i=0; i < 1000000; ++i) {
    PactInteger k=new PactInteger(i);
    oe.selectChannels(new KeyValuePair<PactInteger,PactInteger>(k,k),channelFlags);
    for (int j=0; j < channelFlags.length; ++j) {
      if (channelFlags[j]) {
        hit[j]++;
        channelFlags[j]=false;
      }
    }
  }
  for (int i=0; i < hit.length; i++) {
    assertTrue(hit[i] > 0);
  }
  OutputEmitter<PactString,PactString> oes=new OutputEmitter<PactString,PactString>(ShipStrategy.PARTITION_HASH);
  hit=new int[10];
  channelFlags=new boolean[10];
  for (int i=0; i < 10; ++i) {
    hit[i]=0;
    channelFlags[i]=false;
  }
  for (int i=0; i < 1000; i++) {
    PactString k=new PactString(i + "");
    oes.selectChannels(new KeyValuePair<PactString,PactString>(k,k),channelFlags);
    for (int j=0; j < channelFlags.length; ++j) {
      if (channelFlags[j]) {
        hit[j]++;
        channelFlags[j]=false;
      }
    }
  }
  for (int i=0; i < hit.length; i++) {
    assertTrue(hit[i] > 0);
  }
}
