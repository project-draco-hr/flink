{
  int highestDistance=-1;
  Point point1=null;
  Point point2=null;
  final Set<Point> possiblePoints=new HashSet<Point>(this.furthestPoints.toList());
  if (possiblePoints.size() < 2)   possiblePoints.addAll(this.nearestPoints.toList());
  if (possiblePoints.size() < 2)   possiblePoints.add(this.clustroid);
  if (possiblePoints.size() < 2)   throw new IllegalStateException("Not enough points available for splitting!" + possiblePoints.size() + " vs "+ this.size);
  final Set<Point> otherPoints=new HashSet<Point>(possiblePoints);
  for (  final Point point : possiblePoints) {
    otherPoints.remove(point);
    for (    final Point otherPoint : otherPoints) {
      final int distance=point.getDistance(otherPoint);
      if (distance > highestDistance) {
        highestDistance=distance;
        point1=point;
        point2=otherPoint;
      }
    }
  }
  return new Point[]{point1,point2};
}
