{
  List<FetchPartition> partitionsToGetOffsetsFor=new ArrayList<>();
  for (  FetchPartition fp : partitions) {
    if (fp.nextOffsetToRead == FlinkKafkaConsumerBase.OFFSET_NOT_SET) {
      partitionsToGetOffsetsFor.add(fp);
    }
  }
  if (partitionsToGetOffsetsFor.size() > 0) {
    getLastOffset(consumer,partitionsToGetOffsetsFor,getInvalidOffsetBehavior(config));
    LOG.info("No prior offsets found for some partitions. Fetched the following start offsets {}",partitionsToGetOffsetsFor);
synchronized (sourceContext.getCheckpointLock()) {
      for (      FetchPartition fp : partitionsToGetOffsetsFor) {
        owner.flinkKafkaConsumer.updateOffsetForPartition(new KafkaTopicPartition(fp.topic,fp.partition),fp.nextOffsetToRead - 1L);
      }
    }
  }
}
