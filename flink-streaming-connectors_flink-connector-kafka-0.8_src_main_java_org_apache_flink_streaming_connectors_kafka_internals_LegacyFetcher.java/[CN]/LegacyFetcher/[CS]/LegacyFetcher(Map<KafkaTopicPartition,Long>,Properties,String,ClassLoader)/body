{
  this.config=requireNonNull(props,"The config properties cannot be null");
  this.userCodeClassloader=requireNonNull(userCodeClassloader);
  if (initialPartitionsToRead.size() == 0) {
    throw new IllegalArgumentException("List of initial partitions is empty");
  }
  try {
    for (    Map.Entry<KafkaTopicPartition,Long> partitionToRead : initialPartitionsToRead.entrySet()) {
      KafkaTopicPartition ktp=partitionToRead.getKey();
      long offset=partitionToRead.getValue();
      if (offset >= 0 && offset != FlinkKafkaConsumer08.OFFSET_NOT_SET) {
        offset+=1L;
      }
      unassignedPartitions.addIfOpen(new FetchPartition(ktp.getTopic(),ktp.getPartition(),offset));
    }
  }
 catch (  IllegalStateException e) {
    throw new RuntimeException("Fetcher initialization got interrupted",e);
  }
  this.taskName=taskName;
  this.error=new AtomicReference<>();
}
