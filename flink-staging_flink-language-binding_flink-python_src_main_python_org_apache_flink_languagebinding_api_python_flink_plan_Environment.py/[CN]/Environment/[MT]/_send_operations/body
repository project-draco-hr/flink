def _send_operations(self):
    collect = self._collector.collect
    for set in self._sets:
        identifier = set.get(_Fields.IDENTIFIER)
        collect(set[_Fields.IDENTIFIER])
        collect(set[_Fields.ID])
        collect(set[_Fields.PARENT][_Fields.ID])
        for case in Switch(identifier):
            if case(_Identifier.SORT):
                collect(set[_Fields.FIELD])
                collect(set[_Fields.ORDER])
                break
            if case(_Identifier.GROUP):
                collect(set[_Fields.KEYS])
                break
            if case(_Identifier.COGROUP):
                collect(set[_Fields.OTHER][_Fields.ID])
                collect(set[_Fields.KEY1])
                collect(set[_Fields.KEY2])
                collect(set[_Fields.TYPES])
                collect(set[_Fields.NAME])
                break
            if case(_Identifier.CROSS, _Identifier.CROSSH, _Identifier.CROSST):
                collect(set[_Fields.OTHER][_Fields.ID])
                collect(set[_Fields.TYPES])
                collect(len(set[_Fields.PROJECTIONS]))
                for p in set[_Fields.PROJECTIONS]:
                    collect(p[0])
                    collect(p[1])
                collect(set[_Fields.NAME])
                break
            if case(_Identifier.REDUCE, _Identifier.GROUPREDUCE):
                collect(set[_Fields.TYPES])
                collect(set[_Fields.COMBINE])
                collect(set[_Fields.NAME])
                break
            if case(_Identifier.JOIN, _Identifier.JOINH, _Identifier.JOINT):
                collect(set[_Fields.KEY1])
                collect(set[_Fields.KEY2])
                collect(set[_Fields.OTHER][_Fields.ID])
                collect(set[_Fields.TYPES])
                collect(len(set[_Fields.PROJECTIONS]))
                for p in set[_Fields.PROJECTIONS]:
                    collect(p[0])
                    collect(p[1])
                collect(set[_Fields.NAME])
                break
            if case(_Identifier.MAP, _Identifier.MAPPARTITION, _Identifier.FLATMAP, _Identifier.FILTER):
                collect(set[_Fields.TYPES])
                collect(set[_Fields.NAME])
                break
            if case(_Identifier.UNION):
                collect(set[_Fields.OTHER][_Fields.ID])
                break
            if case(_Identifier.PROJECTION):
                collect(set[_Fields.KEYS])
                break
            if case():
                raise KeyError(('Environment._send_child_sets(): Invalid operation identifier: ' + str(identifier)))
