{
  if (this.stream == null || this.overLimit) {
    return false;
  }
  int countInWrapBuffer=0;
  int i=0;
  while (true) {
    if (this.readPos >= this.limit) {
      if (!fillBuffer()) {
        if (countInWrapBuffer > 0) {
          setResult(this.wrapBuffer,0,countInWrapBuffer);
          return true;
        }
 else {
          return false;
        }
      }
    }
    int startPos=this.readPos;
    int count=0;
    while (this.readPos < this.limit && i < this.delimiter.length) {
      if ((this.readBuffer[this.readPos++]) == this.delimiter[i]) {
        i++;
      }
 else {
        i=0;
      }
    }
    if (i == this.delimiter.length) {
      count=this.readPos - startPos - this.delimiter.length;
      if (countInWrapBuffer > 0) {
        if (this.wrapBuffer.length < countInWrapBuffer + count) {
          final byte[] nb=new byte[countInWrapBuffer + count];
          System.arraycopy(this.wrapBuffer,0,nb,0,countInWrapBuffer);
          this.wrapBuffer=nb;
        }
        if (count >= 0) {
          System.arraycopy(this.readBuffer,0,this.wrapBuffer,countInWrapBuffer,count);
        }
        setResult(this.wrapBuffer,0,countInWrapBuffer + count);
        return true;
      }
 else {
        setResult(this.readBuffer,startPos,count);
        return true;
      }
    }
 else {
      count=this.limit - startPos;
      if (((long)countInWrapBuffer) + count > this.lineLengthLimit) {
        throw new IOException("The record length exceeded the maximum record length (" + this.lineLengthLimit + ").");
      }
      if (this.wrapBuffer.length - countInWrapBuffer < count) {
        byte[] tmp=new byte[Math.max(this.wrapBuffer.length * 2,countInWrapBuffer + count)];
        System.arraycopy(this.wrapBuffer,0,tmp,0,countInWrapBuffer);
        this.wrapBuffer=tmp;
      }
      System.arraycopy(this.readBuffer,startPos,this.wrapBuffer,countInWrapBuffer,count);
      countInWrapBuffer+=count;
    }
  }
}
