{
  final int type=dis.readByte();
  if (NULL_HANDLE == type) {
    return null;
  }
 else   if (PARTITIONABLE_OPERATOR_STATE_HANDLE == type) {
    int mapSize=dis.readInt();
    Map<String,long[]> offsetsMap=new HashMap<>(mapSize);
    for (int i=0; i < mapSize; ++i) {
      String key=dis.readUTF();
      long[] offsets=new long[dis.readInt()];
      for (int j=0; j < offsets.length; ++j) {
        offsets[j]=dis.readLong();
      }
      offsetsMap.put(key,offsets);
    }
    StreamStateHandle stateHandle=deserializeStreamStateHandle(dis);
    return new OperatorStateHandle(stateHandle,offsetsMap);
  }
 else {
    throw new IllegalStateException("Reading invalid OperatorStateHandle, type: " + type);
  }
}
