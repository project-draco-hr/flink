{
  Configuration cfg=new Configuration();
  cfg.setString(ConfigConstants.METRICS_REPORTERS_LIST,"test1,test2");
  cfg.setString(ConfigConstants.METRICS_REPORTER_PREFIX + "test1." + ConfigConstants.METRICS_REPORTER_CLASS_SUFFIX,JMXReporter.class.getName());
  cfg.setString(ConfigConstants.METRICS_REPORTER_PREFIX + "test1.port","9020-9035");
  cfg.setString(ConfigConstants.METRICS_REPORTER_PREFIX + "test2." + ConfigConstants.METRICS_REPORTER_CLASS_SUFFIX,JMXReporter.class.getName());
  cfg.setString(ConfigConstants.METRICS_REPORTER_PREFIX + "test2.port","9020-9035");
  MetricRegistry reg=new MetricRegistry(MetricRegistryConfiguration.fromConfiguration(cfg));
  TaskManagerMetricGroup mg=new TaskManagerMetricGroup(reg,"host","tm");
  List<MetricReporter> reporters=reg.getReporters();
  assertTrue(reporters.size() == 2);
  MetricReporter rep1=reporters.get(0);
  MetricReporter rep2=reporters.get(1);
  rep1.notifyOfAddedMetric(new Gauge<Integer>(){
    @Override public Integer getValue(){
      return 1;
    }
  }
,"rep1",new TaskManagerMetricGroup(reg,"host","tm"));
  rep2.notifyOfAddedMetric(new Gauge<Integer>(){
    @Override public Integer getValue(){
      return 2;
    }
  }
,"rep2",new TaskManagerMetricGroup(reg,"host","tm"));
  MBeanServer mBeanServer=ManagementFactory.getPlatformMBeanServer();
  ObjectName objectName1=new ObjectName(JMXReporter.generateJmxName("rep1",mg.getScopeComponents()));
  ObjectName objectName2=new ObjectName(JMXReporter.generateJmxName("rep2",mg.getScopeComponents()));
  assertEquals(1,mBeanServer.getAttribute(objectName1,"Value"));
  assertEquals(2,mBeanServer.getAttribute(objectName2,"Value"));
  reg.shutdown();
}
