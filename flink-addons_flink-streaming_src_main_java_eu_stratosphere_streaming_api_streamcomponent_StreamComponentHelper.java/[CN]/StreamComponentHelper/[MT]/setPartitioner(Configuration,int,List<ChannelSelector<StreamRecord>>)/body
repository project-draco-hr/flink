{
  Class<? extends ChannelSelector<StreamRecord>> partitioner=taskConfiguration.getClass("partitionerClass_" + nrOutput,DefaultPartitioner.class,ChannelSelector.class);
  Integer batchSize=taskConfiguration.getInteger("batchSize_" + nrOutput,1);
  try {
    if (partitioner.equals(FieldsPartitioner.class)) {
      batchsizes_f.add(batchSize);
      keyPosition=taskConfiguration.getInteger("partitionerIntParam_" + nrOutput,1);
      partitioners.add(partitioner.getConstructor(int.class).newInstance(keyPosition));
    }
 else {
      batchsizes_s.add(batchSize);
      partitioners.add(partitioner.newInstance());
    }
    if (log.isTraceEnabled()) {
      log.trace("Partitioner set: " + partitioner.getSimpleName() + " with "+ nrOutput+ " outputs");
    }
  }
 catch (  Exception e) {
    if (log.isErrorEnabled()) {
      log.error("Error while setting partitioner: " + partitioner.getSimpleName() + " with "+ nrOutput+ " outputs",e);
    }
  }
}
