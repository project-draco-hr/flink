{
  Class<? extends ChannelSelector<StreamRecord>> partitioner=config.getClass("partitionerClass_" + numberOfOutputs,DefaultPartitioner.class,ChannelSelector.class);
  Integer batchSize=config.getInteger("batchSize_" + numberOfOutputs,1);
  try {
    if (partitioner.equals(FieldsPartitioner.class)) {
      batchSizesPartitioned.add(batchSize);
      numOfOutputsPartitioned.add(config.getInteger("numOfOutputs_" + numberOfOutputs,-1));
      keyPosition=config.getInteger("partitionerIntParam_" + numberOfOutputs,1);
      partitioners.add(partitioner.getConstructor(int.class).newInstance(keyPosition));
    }
 else {
      batchSizesNotPartitioned.add(batchSize);
      partitioners.add(partitioner.newInstance());
    }
    if (log.isTraceEnabled()) {
      log.trace("Partitioner set: " + partitioner.getSimpleName() + " with "+ numberOfOutputs+ " outputs");
    }
  }
 catch (  Exception e) {
    if (log.isErrorEnabled()) {
      log.error("Error while setting partitioner: " + partitioner.getSimpleName() + " with "+ numberOfOutputs+ " outputs",e);
    }
  }
}
