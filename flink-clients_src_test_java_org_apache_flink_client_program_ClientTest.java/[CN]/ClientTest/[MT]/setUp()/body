{
  initMocks(this);
  when(configMock.getString(ConfigConstants.JOB_MANAGER_IPC_ADDRESS_KEY,null)).thenReturn("localhost");
  when(configMock.getInteger(ConfigConstants.JOB_MANAGER_IPC_PORT_KEY,ConfigConstants.DEFAULT_JOB_MANAGER_IPC_PORT)).thenReturn(6123);
  when(configMock.getString(ConfigConstants.AKKA_ASK_TIMEOUT,ConfigConstants.DEFAULT_AKKA_ASK_TIMEOUT)).thenReturn(ConfigConstants.DEFAULT_AKKA_ASK_TIMEOUT);
  when(planMock.getJobName()).thenReturn("MockPlan");
  when(program.getPlanWithJars()).thenReturn(planWithJarsMock);
  when(planWithJarsMock.getPlan()).thenReturn(planMock);
  whenNew(PactCompiler.class).withArguments(any(DataStatistics.class),any(CostEstimator.class)).thenReturn(this.compilerMock);
  when(compilerMock.compile(planMock)).thenReturn(optimizedPlanMock);
  whenNew(NepheleJobGraphGenerator.class).withNoArguments().thenReturn(generatorMock);
  when(generatorMock.compileJobGraph(optimizedPlanMock)).thenReturn(jobGraphMock);
  Whitebox.setInternalState(JobClient$.class,mockJobClient);
  when(mockJobClient.startActorSystemAndActor(configMock,false)).thenReturn(new Tuple2<ActorSystem,ActorRef>(mockSystem,mockJobClientActor));
}
