{
  BlobServer server=null;
  BlobClient client=null;
  try {
    Configuration config=new Configuration();
    server=new BlobServer(config);
    InetSocketAddress serverAddress=new InetSocketAddress("localhost",server.getPort());
    client=new BlobClient(serverAddress);
    byte[] data=new byte[2000000];
    rnd.nextBytes(data);
    BlobKey key1=client.put(data);
    assertNotNull(key1);
    BlobKey key2=client.put(data,10,44);
    assertNotNull(key2);
    JobID jid=new JobID();
    String stringKey="my test key";
    client.put(jid,stringKey,data);
    InputStream is1=client.get(key2);
    byte[] result1=new byte[44];
    BlobUtils.readFully(is1,result1,0,result1.length,null);
    is1.close();
    for (int i=0, j=10; i < result1.length; i++, j++) {
      assertEquals(data[j],result1[i]);
    }
    client.close();
    client=new BlobClient(serverAddress);
    InputStream is2=client.get(key1);
    byte[] result2=new byte[data.length];
    BlobUtils.readFully(is2,result2,0,result2.length,null);
    is2.close();
    assertArrayEquals(data,result2);
    InputStream is3=client.get(jid,stringKey);
    byte[] result3=new byte[data.length];
    BlobUtils.readFully(is3,result3,0,result3.length,null);
    is3.close();
    assertArrayEquals(data,result3);
  }
 catch (  Exception e) {
    e.printStackTrace();
    fail(e.getMessage());
  }
 finally {
    if (client != null) {
      try {
        client.close();
      }
 catch (      Throwable t) {
        t.printStackTrace();
      }
    }
    if (server != null) {
      server.shutdown();
    }
  }
}
