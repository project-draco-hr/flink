{
  final TypeSerializerFactory<?> serializer=RecordSerializerFactory.get();
  JobGraph jobGraph=new JobGraph("Distance Builder");
  InputFormatInputVertex points=createPointsInput(jobGraph,pointsPath,numSubTasks,serializer);
  InputFormatInputVertex models=createModelsInput(jobGraph,centersPath,numSubTasks,serializer);
  JobTaskVertex mapper=createMapper(jobGraph,numSubTasks,serializer);
  OutputFormatOutputVertex output=createOutput(jobGraph,resultPath,numSubTasks,serializer);
  JobGraphUtils.connect(points,mapper,ChannelType.NETWORK,DistributionPattern.POINTWISE);
  JobGraphUtils.connect(models,mapper,ChannelType.NETWORK,DistributionPattern.BIPARTITE);
  JobGraphUtils.connect(mapper,output,ChannelType.NETWORK,DistributionPattern.POINTWISE);
  points.setVertexToShareInstancesWith(output);
  models.setVertexToShareInstancesWith(output);
  mapper.setVertexToShareInstancesWith(output);
  return jobGraph;
}
