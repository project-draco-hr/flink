{
  final TypeSerializerFactory<?> serializer=RecordSerializerFactory.get();
  JobGraph jobGraph=new JobGraph("Distance Builder");
  InputFormatVertex points=createPointsInput(jobGraph,pointsPath,numSubTasks,serializer);
  InputFormatVertex models=createModelsInput(jobGraph,centersPath,numSubTasks,serializer);
  JobVertex mapper=createMapper(jobGraph,numSubTasks,serializer);
  OutputFormatVertex output=createOutput(jobGraph,resultPath,numSubTasks,serializer);
  JobGraphUtils.connect(points,mapper,DistributionPattern.POINTWISE);
  JobGraphUtils.connect(models,mapper,DistributionPattern.ALL_TO_ALL);
  JobGraphUtils.connect(mapper,output,DistributionPattern.POINTWISE);
  SlotSharingGroup sharing=new SlotSharingGroup();
  points.setSlotSharingGroup(sharing);
  models.setSlotSharingGroup(sharing);
  mapper.setSlotSharingGroup(sharing);
  output.setSlotSharingGroup(sharing);
  return jobGraph;
}
