{
  final AbstractInvokable memOwner=new DummyInvokable();
  reader=new MutableObjectIteratorWrapper(objects.iterator());
  SpillingResettableMutableObjectIterator iterator=new SpillingResettableMutableObjectIterator(memman,ioman,reader,SpillingResettableIterator.MIN_BUFFER_SIZE * SpillingResettableIterator.MINIMUM_NUMBER_OF_BUFFERS * 10,memOwner);
  try {
    iterator.open();
  }
 catch (  IOException e) {
    Assert.fail("Could not open resettable iterator:" + e.getMessage());
  }
  PactInteger tmp=new PactInteger();
  PactRecord target=new PactRecord();
  PactRecord repeated=new PactRecord();
  PactRecord compare=new PactRecord();
  int cnt=0;
  while (iterator.next(target)) {
    iterator.repeatLast(repeated);
    compare=objects.get(cnt);
    target.getField(0,tmp);
    int targetValue=tmp.getValue();
    repeated.getField(0,tmp);
    int repeatedValue=tmp.getValue();
    compare.getField(0,tmp);
    int compareValue=tmp.getValue();
    Assert.assertTrue("Record read with next() does not equal expected value",targetValue == compareValue);
    Assert.assertTrue("Record read with next() does not equal record read with lastReturned()",targetValue == repeatedValue);
    cnt++;
  }
  Assert.assertTrue(cnt + " elements read from iterator, but " + NUM_TESTRECORDS+ " expected",cnt == NUM_TESTRECORDS);
  iterator.close();
}
