{
  final AbstractInvokable memOwner=new DummyInvokable();
  reader=new MutableObjectIteratorWrapper(objects.iterator());
  SpillingResettableMutableObjectIterator iterator=new SpillingResettableMutableObjectIterator(memman,ioman,reader,SpillingResettableIterator.MIN_BUFFER_SIZE * SpillingResettableIterator.MINIMUM_NUMBER_OF_BUFFERS * 10,memOwner);
  try {
    iterator.open();
  }
 catch (  IOException e) {
    Assert.fail("Could not open resettable iterator:" + e.getMessage());
  }
  int count=0;
  PactRecord target=new PactRecord();
  while (iterator.next(target))   Assert.assertEquals("In initial run, element " + count + " does not match expected value!",count++,target.getField(0,PactInteger.class).getValue());
  Assert.assertEquals("Too few elements were deserialzied in initial run!",NUM_TESTRECORDS,count);
  for (int j=0; j < 10; ++j) {
    count=0;
    iterator.reset();
    while (iterator.next(target))     Assert.assertEquals("After reset nr. " + j + 1+ " element "+ count+ " does not match expected value!",count++,target.getField(0,PactInteger.class).getValue());
    Assert.assertEquals("Too few elements were deserialzied after reset nr. " + j + 1+ "!",NUM_TESTRECORDS,count);
  }
  iterator.close();
}
