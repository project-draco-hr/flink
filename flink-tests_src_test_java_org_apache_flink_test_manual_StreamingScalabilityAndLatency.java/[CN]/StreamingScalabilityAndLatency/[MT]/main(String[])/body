{
  if ((Runtime.getRuntime().maxMemory() >>> 20) < 5000) {
    throw new RuntimeException("This test program needs to run with at least 5GB of heap space.");
  }
  final int TASK_MANAGERS=1;
  final int SLOTS_PER_TASK_MANAGER=80;
  final int PARALLELISM=TASK_MANAGERS * SLOTS_PER_TASK_MANAGER;
  LocalFlinkMiniCluster cluster=null;
  try {
    Configuration config=new Configuration();
    config.setInteger(ConfigConstants.LOCAL_INSTANCE_MANAGER_NUMBER_TASK_MANAGER,TASK_MANAGERS);
    config.setInteger(ConfigConstants.TASK_MANAGER_MEMORY_SIZE_KEY,80);
    config.setInteger(ConfigConstants.TASK_MANAGER_NUM_TASK_SLOTS,SLOTS_PER_TASK_MANAGER);
    config.setInteger(ConfigConstants.TASK_MANAGER_NETWORK_NUM_BUFFERS_KEY,20000);
    config.setInteger("taskmanager.net.server.numThreads",1);
    config.setInteger("taskmanager.net.client.numThreads",1);
    cluster=new LocalFlinkMiniCluster(config,false,StreamingMode.STREAMING);
    runPartitioningProgram(cluster.getJobManagerRPCPort(),PARALLELISM);
  }
 catch (  Exception e) {
    e.printStackTrace();
    fail(e.getMessage());
  }
 finally {
    if (cluster != null) {
      cluster.shutdown();
    }
  }
}
