{
  final ParameterTool params=ParameterTool.fromArgs(args);
  ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
  env.getConfig().setGlobalJobParameters(params);
  DataSet<Point> points=getPointDataSet(params,env);
  DataSet<Centroid> centroids=getCentroidDataSet(params,env);
  IterativeDataSet<Centroid> loop=centroids.iterate(params.getInt("iterations",10));
  DataSet<Centroid> newCentroids=points.map(new SelectNearestCenter()).withBroadcastSet(loop,"centroids").map(new CountAppender()).groupBy(0).reduce(new CentroidAccumulator()).map(new CentroidAverager());
  DataSet<Centroid> finalCentroids=loop.closeWith(newCentroids);
  DataSet<Tuple2<Integer,Point>> clusteredPoints=points.map(new SelectNearestCenter()).withBroadcastSet(finalCentroids,"centroids");
  if (params.has("output")) {
    clusteredPoints.writeAsCsv(params.get("output"),"\n"," ");
    env.execute("KMeans Example");
  }
 else {
    System.out.println("Printing result to stdout. Use --output to specify output path.");
    clusteredPoints.print();
  }
}
