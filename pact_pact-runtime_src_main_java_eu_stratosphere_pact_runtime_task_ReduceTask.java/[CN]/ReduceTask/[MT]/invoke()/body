{
  LOG.info("Start PACT code: " + this.getEnvironment().getTaskName() + " ("+ (this.getEnvironment().getIndexInSubtaskGroup() + 1)+ "/"+ this.getEnvironment().getCurrentNumberOfSubtasks()+ ")");
  LOG.debug("Start obtaining iterator: " + this.getEnvironment().getTaskName() + " ("+ (this.getEnvironment().getIndexInSubtaskGroup() + 1)+ "/"+ this.getEnvironment().getCurrentNumberOfSubtasks()+ ")");
  CloseableInputProvider<KeyValuePair<Key,Value>> sortedInputProvider=null;
  try {
    sortedInputProvider=obtainInput();
    LOG.debug("Iterator obtained: " + this.getEnvironment().getTaskName() + " ("+ (this.getEnvironment().getIndexInSubtaskGroup() + 1)+ "/"+ this.getEnvironment().getCurrentNumberOfSubtasks()+ ")");
    stub.open();
    this.callStubWithGroups(sortedInputProvider.getIterator(),output);
    if (this.taskCanceled) {
      return;
    }
    LOG.info("Finished PACT code: " + this.getEnvironment().getTaskName() + " ("+ (this.getEnvironment().getIndexInSubtaskGroup() + 1)+ "/"+ this.getEnvironment().getCurrentNumberOfSubtasks()+ ")");
  }
 catch (  Exception ex) {
    if (!this.taskCanceled) {
      LOG.error("Unexpected ERROR in PACT user code: " + this.getEnvironment().getTaskName() + " ("+ (this.getEnvironment().getIndexInSubtaskGroup() + 1)+ "/"+ this.getEnvironment().getCurrentNumberOfSubtasks()+ ")");
      throw ex;
    }
  }
 finally {
    if (sortedInputProvider != null) {
      sortedInputProvider.close();
    }
    try {
      stub.close();
    }
 catch (    Throwable t) {
      LOG.error("Error while closing the Reduce user function " + this.getEnvironment().getTaskName() + " ("+ (this.getEnvironment().getIndexInSubtaskGroup() + 1)+ "/"+ this.getEnvironment().getCurrentNumberOfSubtasks()+ ")",t);
    }
    output.close();
  }
}
