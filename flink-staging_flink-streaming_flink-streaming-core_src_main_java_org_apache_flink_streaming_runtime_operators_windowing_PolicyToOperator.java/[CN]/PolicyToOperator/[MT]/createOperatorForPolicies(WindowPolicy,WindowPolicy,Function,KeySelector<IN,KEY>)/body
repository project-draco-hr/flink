{
  if (window == null || function == null) {
    throw new NullPointerException();
  }
  if (window instanceof ProcessingTime && (slide == null || slide instanceof ProcessingTime)) {
    final long windowLength=((ProcessingTime)window).toMilliseconds();
    final long windowSlide=slide == null ? windowLength : ((ProcessingTime)slide).toMilliseconds();
    if (function instanceof ReduceFunction) {
      @SuppressWarnings("unchecked") ReduceFunction<IN> reducer=(ReduceFunction<IN>)function;
      @SuppressWarnings("unchecked") OneInputStreamOperator<IN,OUT> op=(OneInputStreamOperator<IN,OUT>)new AggregatingProcessingTimeWindowOperator<KEY,IN>(reducer,keySelector,windowLength,windowSlide);
      return op;
    }
 else     if (function instanceof KeyedWindowFunction) {
      @SuppressWarnings("unchecked") KeyedWindowFunction<IN,OUT,KEY,Window> wf=(KeyedWindowFunction<IN,OUT,KEY,Window>)function;
      return new AccumulatingProcessingTimeWindowOperator<KEY,IN,OUT>(wf,keySelector,windowLength,windowSlide);
    }
  }
  if (window instanceof EventTime && (slide == null || slide instanceof EventTime)) {
  }
  throw new UnsupportedOperationException("The windowing mechanism does not yet support " + window.toString(slide));
}
