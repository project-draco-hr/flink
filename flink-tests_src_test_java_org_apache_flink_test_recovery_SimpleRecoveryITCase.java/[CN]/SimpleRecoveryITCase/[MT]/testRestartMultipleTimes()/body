{
  try {
    List<Long> resultCollection=new ArrayList<Long>();
    ExecutionEnvironment env=ExecutionEnvironment.createRemoteEnvironment("localhost",cluster.getJobManagerRPCPort());
    env.setParallelism(4);
    env.setNumberOfExecutionRetries(5);
    env.generateSequence(1,10).rebalance().map(new FailingMapper3<Long>()).reduce(new ReduceFunction<Long>(){
      @Override public Long reduce(      Long value1,      Long value2){
        return value1 + value2;
      }
    }
).output(new LocalCollectionOutputFormat<Long>(resultCollection));
    try {
      JobExecutionResult result=env.execute();
      assertTrue(result.getNetRuntime() >= 0);
      assertNotNull(result.getAllAccumulatorResults());
      assertTrue(result.getAllAccumulatorResults().isEmpty());
    }
 catch (    JobExecutionException e) {
      fail("The program should have succeeded on the second run");
    }
    long sum=0;
    for (    long l : resultCollection) {
      sum+=l;
    }
    assertEquals(55,sum);
  }
 catch (  Exception e) {
    e.printStackTrace();
    fail(e.getMessage());
  }
}
