{
  final Configuration config=new Configuration();
  config.setString(ConfigConstants.JOB_MANAGER_IPC_ADDRESS_KEY,HOSTNAME);
  config.setInteger(ConfigConstants.JOB_MANAGER_IPC_PORT_KEY,ConfigConstants.DEFAULT_JOB_MANAGER_IPC_PORT);
  config.setInteger(ConfigConstants.TASK_MANAGER_IPC_PORT_KEY,ConfigConstants.DEFAULT_TASK_MANAGER_IPC_PORT);
  config.setInteger(ConfigConstants.TASK_MANAGER_DATA_PORT_KEY,ConfigConstants.DEFAULT_TASK_MANAGER_DATA_PORT);
  config.setBoolean(ConfigConstants.TASK_MANAGER_MEMORY_LAZY_ALLOCATION_KEY,ConfigConstants.DEFAULT_TASK_MANAGER_MEMORY_LAZY_ALLOCATION);
  config.setInteger(ConfigConstants.JOBCLIENT_POLLING_INTERVAL_KEY,ConfigConstants.DEFAULT_JOBCLIENT_POLLING_INTERVAL);
  config.setBoolean(ConfigConstants.FILESYSTEM_DEFAULT_OVERWRITE_KEY,ConfigConstants.DEFAULT_FILESYSTEM_OVERWRITE);
  config.setBoolean(ConfigConstants.FILESYSTEM_OUTPUT_ALWAYS_CREATE_DIRECTORY_KEY,ConfigConstants.DEFAULT_FILESYSTEM_ALWAYS_CREATE_DIRECTORY);
  long memorySize=EnvironmentInformation.getSizeOfFreeHeapMemoryWithDefrag();
  long bufferMem=ConfigConstants.DEFAULT_TASK_MANAGER_NETWORK_NUM_BUFFERS * ConfigConstants.DEFAULT_TASK_MANAGER_NETWORK_BUFFER_SIZE;
  int numTaskManager=userConfiguration.getInteger(ConfigConstants.LOCAL_INSTANCE_MANAGER_NUMBER_TASK_MANAGER,1);
  int taskManagerNumSlots=userConfiguration.getInteger(ConfigConstants.TASK_MANAGER_NUM_TASK_SLOTS,ConfigConstants.DEFAULT_TASK_MANAGER_NUM_TASK_SLOTS);
  memorySize=memorySize - (bufferMem * numTaskManager);
  memorySize=(long)(memorySize * ConfigConstants.DEFAULT_MEMORY_MANAGER_MEMORY_FRACTION);
  memorySize>>>=20;
  memorySize/=numTaskManager;
  config.setLong(ConfigConstants.TASK_MANAGER_MEMORY_SIZE_KEY,memorySize);
  config.setInteger(ConfigConstants.LOCAL_INSTANCE_MANAGER_NUMBER_TASK_MANAGER,numTaskManager);
  config.setInteger(ConfigConstants.TASK_MANAGER_NUM_TASK_SLOTS,taskManagerNumSlots);
  return config;
}
