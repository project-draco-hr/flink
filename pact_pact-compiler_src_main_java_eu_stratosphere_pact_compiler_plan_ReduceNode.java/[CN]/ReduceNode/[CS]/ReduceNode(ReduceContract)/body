{
  super(pactContract);
  Configuration conf=getPactContract().getParameters();
  String localStrategy=conf.getString(PactCompiler.HINT_LOCAL_STRATEGY,null);
  if (localStrategy != null) {
    if (PactCompiler.HINT_LOCAL_STRATEGY_SORT.equals(localStrategy)) {
      this.shouldUseCombiner=false;
    }
 else     if (PactCompiler.HINT_LOCAL_STRATEGY_COMBINING_SORT.equals(localStrategy)) {
      if (!isCombineable()) {
        PactCompiler.LOG.warn("Strategy hint for Reduce Pact '" + pactContract.getName() + "' desires combinable reduce, but user function is not marked combinable.");
      }
      this.shouldUseCombiner=true;
    }
 else {
      throw new CompilerException("Invalid local strategy hint for match contract: " + localStrategy);
    }
  }
 else {
    this.shouldUseCombiner=isCombineable();
  }
}
