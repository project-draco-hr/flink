{
  if (!isCombineable())   return;
  long numRecords=0;
  if (this.getPredNode() != null && this.getPredNode().estimatedNumRecords != -1)   numRecords=this.getPredNode().estimatedNumRecords;
 else   return;
  long numKeys=computeNumberOfProcessedKeys();
  if (numKeys == -1)   return;
  int parallelism=getDegreeOfParallelism();
  if (parallelism < 1)   parallelism=32;
  float inValsPerKey=numRecords / (float)numKeys;
  float valsPerNode=inValsPerKey / parallelism;
  if (valsPerNode < 1)   valsPerNode=1;
  this.combinerReducingFactor=1 / valsPerNode;
}
