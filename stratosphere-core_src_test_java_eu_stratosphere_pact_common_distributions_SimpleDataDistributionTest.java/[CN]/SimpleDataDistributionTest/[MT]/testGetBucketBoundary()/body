{
  SimpleDistribution dd=new SimpleDistribution(new Key[][]{{new PactInteger(1),new PactString("A")},{new PactInteger(2),new PactString("B")},{new PactInteger(3),new PactString("C")},{new PactInteger(4),new PactString("D")},{new PactInteger(5),new PactString("E")},{new PactInteger(6),new PactString("F")},{new PactInteger(7),new PactString("G")}});
  Key[] boundRec=dd.getBucketBoundary(0,8);
  Assert.assertEquals(((PactInteger)boundRec[0]).getValue(),1);
  Assert.assertTrue(((PactString)boundRec[1]).getValue().equals("A"));
  boundRec=dd.getBucketBoundary(1,8);
  Assert.assertEquals(((PactInteger)boundRec[0]).getValue(),2);
  Assert.assertTrue(((PactString)boundRec[1]).getValue().equals("B"));
  boundRec=dd.getBucketBoundary(2,8);
  Assert.assertEquals(((PactInteger)boundRec[0]).getValue(),3);
  Assert.assertTrue(((PactString)boundRec[1]).getValue().equals("C"));
  boundRec=dd.getBucketBoundary(3,8);
  Assert.assertEquals(((PactInteger)boundRec[0]).getValue(),4);
  Assert.assertTrue(((PactString)boundRec[1]).getValue().equals("D"));
  boundRec=dd.getBucketBoundary(4,8);
  Assert.assertEquals(((PactInteger)boundRec[0]).getValue(),5);
  Assert.assertTrue(((PactString)boundRec[1]).getValue().equals("E"));
  boundRec=dd.getBucketBoundary(5,8);
  Assert.assertEquals(((PactInteger)boundRec[0]).getValue(),6);
  Assert.assertTrue(((PactString)boundRec[1]).getValue().equals("F"));
  boundRec=dd.getBucketBoundary(6,8);
  Assert.assertEquals(((PactInteger)boundRec[0]).getValue(),7);
  Assert.assertTrue(((PactString)boundRec[1]).getValue().equals("G"));
  boundRec=dd.getBucketBoundary(0,4);
  Assert.assertEquals(((PactInteger)boundRec[0]).getValue(),2);
  Assert.assertTrue(((PactString)boundRec[1]).getValue().equals("B"));
  boundRec=dd.getBucketBoundary(1,4);
  Assert.assertEquals(((PactInteger)boundRec[0]).getValue(),4);
  Assert.assertTrue(((PactString)boundRec[1]).getValue().equals("D"));
  boundRec=dd.getBucketBoundary(2,4);
  Assert.assertEquals(((PactInteger)boundRec[0]).getValue(),6);
  Assert.assertTrue(((PactString)boundRec[1]).getValue().equals("F"));
  boundRec=dd.getBucketBoundary(0,2);
  Assert.assertEquals(((PactInteger)boundRec[0]).getValue(),4);
  Assert.assertTrue(((PactString)boundRec[1]).getValue().equals("D"));
  try {
    boundRec=dd.getBucketBoundary(0,7);
    Assert.fail();
  }
 catch (  IllegalArgumentException iae) {
  }
  try {
    boundRec=dd.getBucketBoundary(3,4);
    Assert.fail();
  }
 catch (  IllegalArgumentException iae) {
  }
  try {
    boundRec=dd.getBucketBoundary(-1,4);
    Assert.fail();
  }
 catch (  IllegalArgumentException iae) {
  }
  try {
    boundRec=dd.getBucketBoundary(0,0);
    Assert.fail();
  }
 catch (  IllegalArgumentException iae) {
  }
}
