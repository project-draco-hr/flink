{
  final ExecutionGraph eg=MockTaskManager.INSTANCE.jobGraphs.get(this.environment.getJobID());
  if (eg == null) {
    LOG.error("Cannot find execution graph for ID " + this.environment.getJobID() + " to change state to "+ executionState);
    return;
  }
  final ExecutionVertex vertex=eg.getVertexByID(this.id);
  if (vertex == null) {
    LOG.error("Cannot find vertex with ID " + this.id + " of job "+ eg.getJobID()+ " to change state to "+ executionState);
    return;
  }
  if (executionState == ExecutionState.FINISHED || executionState == ExecutionState.CANCELED || executionState == ExecutionState.FAILED)   MockTaskManager.this.channelManager.unregisterChannels(this.environment);
  if (executionState == ExecutionState.CANCELED)   isCanceled=true;
  final Runnable taskStateChangeRunnable=new Runnable(){
    @Override public void run(){
      vertex.updateExecutionState(executionState,optionalMessage);
    }
  }
;
  ConcurrentUtil.invokeLater(taskStateChangeRunnable);
  eg.checkAndUpdateJobStatus(executionState);
}
