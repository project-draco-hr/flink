{
  String forkNumberString=System.getProperty("forkNumber");
  int forkNumber=-1;
  try {
    forkNumber=Integer.parseInt(forkNumberString);
  }
 catch (  NumberFormatException e) {
  }
  if (forkNumber != -1) {
    jobManagerRpcPort=1024 + forkNumber * 300;
    taskManagerRpcPort=1024 + forkNumber * 300 + 100;
    taskManagerDataPort=1024 + forkNumber * 300 + 200;
  }
synchronized (startStopLock) {
    if (this.configDir != null) {
      GlobalConfiguration.loadConfiguration(configDir);
    }
 else {
      Configuration conf=getMiniclusterDefaultConfig(jobManagerRpcPort,taskManagerRpcPort,taskManagerDataPort,memorySize,hdfsConfigFile,lazyMemoryAllocation,defaultOverwriteFiles,defaultAlwaysCreateDirectory,taskManagerNumSlots,numTaskManager);
      GlobalConfiguration.includeConfiguration(conf);
    }
    initializeIOFormatClasses();
    Configuration configuration=GlobalConfiguration.getConfiguration();
    jobManagerActorSystem=JobManager.startActorSystemAndActor(HOSTNAME,jobManagerRpcPort,configuration);
    int tmRPCPort=GlobalConfiguration.getInteger(ConfigConstants.TASK_MANAGER_IPC_PORT_KEY,ConfigConstants.DEFAULT_TASK_MANAGER_IPC_PORT);
    int tmDataPort=GlobalConfiguration.getInteger(ConfigConstants.TASK_MANAGER_DATA_PORT_KEY,ConfigConstants.DEFAULT_TASK_MANAGER_DATA_PORT);
    for (int i=0; i < numTaskTracker; i++) {
      Configuration tmConfiguration=GlobalConfiguration.getConfiguration();
      tmConfiguration.setInteger(ConfigConstants.TASK_MANAGER_IPC_PORT_KEY,tmRPCPort + i);
      tmConfiguration.setInteger(ConfigConstants.TASK_MANAGER_DATA_PORT_KEY,tmDataPort + i);
      ActorSystem taskManager=TaskManager.startActorSystemAndActor(HOSTNAME,tmRPCPort + i,configuration);
      taskManagersActorSystems.add(taskManager);
    }
    waitForJobManagerToBecomeReady(taskManagerNumSlots * numTaskManager);
  }
}
