{
  final CoGroupContract coGroupContract=((CoGroupNode)coGroupNode).getPactContract();
  final JobTaskVertex coGroupVertex=new JobTaskVertex(coGroupNode.getPactContract().getName(),this.jobGraph);
  final TaskConfig coGroupConfig=new TaskConfig(coGroupVertex.getConfiguration());
  coGroupVertex.setTaskClass(RegularPactTask.class);
  coGroupConfig.setDriver(CoGroupDriver.class);
  coGroupConfig.setStubClass(coGroupNode.getPactContract().getUserCodeClass());
  final Ordering secondaryOrder1=coGroupContract.getGroupOrder(0);
  if (secondaryOrder1 == null) {
    PactRecordComparatorFactory.writeComparatorSetupToConfig(coGroupConfig.getConfigForInputParameters(0),coGroupContract.getKeyColumnNumbers(0),coGroupContract.getKeyClasses(),getTrueArrayOfSize(coGroupContract.getKeyClasses().length));
  }
 else {
    PactRecordComparatorFactory.writeComparatorSetupToConfig(coGroupConfig.getConfigForInputParameters(0),coGroupContract.getKeyColumnNumbers(0),coGroupContract.getKeyClasses(),getTrueArrayOfSize(coGroupContract.getKeyClasses().length),secondaryOrder1.getFieldPositions(),secondaryOrder1.getTypes(),secondaryOrder1.getFieldSortDirections());
  }
  final Ordering secondaryOrder2=coGroupContract.getGroupOrder(1);
  if (secondaryOrder2 == null) {
    PactRecordComparatorFactory.writeComparatorSetupToConfig(coGroupConfig.getConfigForInputParameters(1),coGroupContract.getKeyColumnNumbers(1),coGroupContract.getKeyClasses(),getTrueArrayOfSize(coGroupContract.getKeyClasses().length));
  }
 else {
    PactRecordComparatorFactory.writeComparatorSetupToConfig(coGroupConfig.getConfigForInputParameters(1),coGroupContract.getKeyColumnNumbers(1),coGroupContract.getKeyClasses(),getTrueArrayOfSize(coGroupContract.getKeyClasses().length),secondaryOrder2.getFieldPositions(),secondaryOrder2.getTypes(),secondaryOrder2.getFieldSortDirections());
  }
switch (coGroupNode.getLocalStrategy()) {
case SORT_BOTH_MERGE:
    coGroupConfig.setLocalStrategy(LocalStrategy.SORT_BOTH_MERGE);
  break;
case SORT_FIRST_MERGE:
coGroupConfig.setLocalStrategy(LocalStrategy.SORT_FIRST_MERGE);
break;
case SORT_SECOND_MERGE:
coGroupConfig.setLocalStrategy(LocalStrategy.SORT_SECOND_MERGE);
break;
case MERGE:
coGroupConfig.setLocalStrategy(LocalStrategy.MERGE);
break;
default :
throw new CompilerException("Invalid local strategy for 'CoGroup' (" + coGroupNode.getName() + "): "+ coGroupNode.getLocalStrategy());
}
coGroupConfig.setStubParameters(coGroupNode.getPactContract().getParameters());
return coGroupVertex;
}
