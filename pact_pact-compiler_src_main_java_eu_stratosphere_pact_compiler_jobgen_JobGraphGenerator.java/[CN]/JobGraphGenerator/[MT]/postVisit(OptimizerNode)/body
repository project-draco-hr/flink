{
  try {
    AbstractJobVertex inputVertex=this.vertices.get(node);
    List<PactConnection> incomingConns=node.getIncomingConnections();
    if (incomingConns == null) {
      return;
    }
    for (    PactConnection connection : node.getIncomingConnections()) {
      AbstractJobVertex outputVertex=this.vertices.get(connection.getSourcePact());
      if (outputVertex == null) {
        throw new Exception("Parent vertex was not initialized");
      }
switch (connection.getShipStrategy()) {
case FORWARD:
        connectWithForwardStrategy(connection,outputVertex,inputVertex);
      break;
case PARTITION_LOCAL_HASH:
case PARTITION_HASH:
    connectWithPartitionStrategy(connection,outputVertex,inputVertex);
  break;
case BROADCAST:
connectWithBroadcastStrategy(connection,outputVertex,inputVertex);
break;
case SFR:
connectWithSFRStrategy(connection,outputVertex,inputVertex);
default :
throw new Exception("Invalid ship strategy: " + connection.getShipStrategy());
}
}
}
 catch (Exception e) {
throw new CompilerException("An error occurred while translating the optimized plan to a nephele JobGraph: " + e.getMessage(),e);
}
}
