{
  final Map<Class<? extends IJsonNode>,TypeCoercer.Coercer> toBooleanCoercers=new IdentityHashMap<Class<? extends IJsonNode>,TypeCoercer.Coercer>();
  toBooleanCoercers.put(NumericNode.class,new Coercer(){
    @Override public IJsonNode coerce(    final IJsonNode node){
      return BooleanNode.valueOf(((INumericNode)node).getDoubleValue() != 0);
    }
  }
);
  toBooleanCoercers.put(TextNode.class,new Coercer(){
    @Override public IJsonNode coerce(    final IJsonNode node){
      return BooleanNode.valueOf(((TextNode)node).getTextValue().length() > 0);
    }
  }
);
  toBooleanCoercers.put(NullNode.class,new Coercer(){
    @Override public IJsonNode coerce(    final IJsonNode node){
      return BooleanNode.FALSE;
    }
  }
);
  final Coercer containerToBoolean=new Coercer(){
    @Override public IJsonNode coerce(    final IJsonNode node){
      return BooleanNode.valueOf(((IArrayNode)node).size() > 0);
    }
  }
;
  for (  final Class<? extends IJsonNode> arrayType : ARRAY_TYPES)   toBooleanCoercers.put(arrayType,containerToBoolean);
  toBooleanCoercers.put(ObjectNode.class,containerToBoolean);
  return toBooleanCoercers;
}
