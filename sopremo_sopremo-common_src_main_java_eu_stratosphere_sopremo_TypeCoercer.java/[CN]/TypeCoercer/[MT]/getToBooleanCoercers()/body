{
  Map<Class<? extends JsonNode>,TypeCoercer.Coercer> toBooleanCoercers=new IdentityHashMap<Class<? extends JsonNode>,TypeCoercer.Coercer>();
  toBooleanCoercers.put(NumericNode.class,new Coercer(){
    @Override public JsonNode coerce(    JsonNode node){
      return BooleanNode.valueOf(node.getValueAsDouble() != 0);
    }
  }
);
  toBooleanCoercers.put(TextNode.class,new Coercer(){
    @Override public JsonNode coerce(    JsonNode node){
      return BooleanNode.valueOf(node.getTextValue().length() > 0);
    }
  }
);
  Coercer containerToBoolean=new Coercer(){
    @Override public JsonNode coerce(    JsonNode node){
      return BooleanNode.valueOf(node.size() > 0);
    }
  }
;
  for (  Class<? extends JsonNode> arrayType : ARRAY_TYPES)   toBooleanCoercers.put(arrayType,containerToBoolean);
  toBooleanCoercers.put(ObjectNode.class,containerToBoolean);
  return toBooleanCoercers;
}
