{
  final Map<Class<? extends IJsonNode>,Coercer> toCoercer=this.coercers.get(class1);
  if (toCoercer == null)   return defaultValue;
  Coercer fromCoercer=toCoercer.get(node.getClass());
  if (fromCoercer == null) {
    for (Class<?> superType=node.getClass(); superType != AbstractJsonNode.class.getSuperclass() && fromCoercer == null; superType=superType.getSuperclass())     fromCoercer=toCoercer.get(superType);
    if (fromCoercer == null)     fromCoercer=NULL_COERCER;
    toCoercer.put(node.getClass(),fromCoercer);
  }
  final T result=(T)fromCoercer.coerce(node);
  if (result == null)   return defaultValue;
  return result;
}
