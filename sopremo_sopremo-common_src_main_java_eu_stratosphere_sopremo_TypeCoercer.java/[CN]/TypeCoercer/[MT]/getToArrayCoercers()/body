{
  Map<Class<? extends JsonNode>,Coercer> toArrayCoercers=new IdentityHashMap<Class<? extends JsonNode>,TypeCoercer.Coercer>();
  toArrayCoercers.put(JsonNode.class,new Coercer(){
    @Override public JsonNode coerce(    JsonNode node){
      ArrayNode arrayNode=new ArrayNode(null);
      arrayNode.add(node);
      return arrayNode;
    }
  }
);
  Coercer containerToArray=new Coercer(){
    @Override public JsonNode coerce(    JsonNode node){
      ArrayNode arrayNode=new ArrayNode(null);
      Iterator<JsonNode> iterator=node.iterator();
      while (iterator.hasNext())       arrayNode.add(iterator.next());
      return arrayNode;
    }
  }
;
  for (  Class<? extends JsonNode> arrayType : ARRAY_TYPES)   toArrayCoercers.put(arrayType,containerToArray);
  toArrayCoercers.put(ObjectNode.class,containerToArray);
  return toArrayCoercers;
}
