{
  final Map<Class<? extends IJsonNode>,Coercer<?,IArrayNode>> toArrayCoercers=new IdentityHashMap<Class<? extends IJsonNode>,Coercer<?,IArrayNode>>();
  toArrayCoercers.put(IJsonNode.class,new Coercer<IJsonNode,IArrayNode>(ArrayNode.class){
    @Override public IArrayNode coerce(    final IJsonNode from,    final IArrayNode target){
      target.clear();
      target.add(from);
      return target;
    }
  }
);
  toArrayCoercers.put(IArrayNode.class,new Coercer<IArrayNode,IArrayNode>(ArrayNode.class){
    @Override public IArrayNode coerce(    final IArrayNode from,    final IArrayNode target){
      target.clear();
      target.addAll(from);
      return target;
    }
  }
);
  toArrayCoercers.put(IObjectNode.class,new Coercer<IObjectNode,IArrayNode>(ArrayNode.class){
    @Override public IArrayNode coerce(    final IObjectNode from,    final IArrayNode target){
      target.clear();
      for (      final Entry<String,IJsonNode> entry : from)       target.add(entry.getValue());
      return target;
    }
  }
);
  return toArrayCoercers;
}
