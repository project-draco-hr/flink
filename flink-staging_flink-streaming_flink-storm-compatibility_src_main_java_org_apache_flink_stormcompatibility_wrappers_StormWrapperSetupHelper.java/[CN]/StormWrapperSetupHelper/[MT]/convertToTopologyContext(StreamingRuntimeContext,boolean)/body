{
  final Integer taskId=1 + context.getIndexOfThisSubtask();
  final Map<Integer,String> taskToComponents=new HashMap<Integer,String>();
  taskToComponents.put(taskId,context.getTaskName());
  final ComponentCommon common=new ComponentCommon();
  common.set_parallelism_hint(context.getNumberOfParallelSubtasks());
  final Map<String,Bolt> bolts=new HashMap<String,Bolt>();
  final Map<String,SpoutSpec> spoutSpecs=new HashMap<String,SpoutSpec>();
  if (spoutOrBolt) {
    spoutSpecs.put(context.getTaskName(),new SpoutSpec(null,common));
  }
 else {
    bolts.put(context.getTaskName(),new Bolt(null,common));
  }
  return new FlinkTopologyContext(new StormTopology(spoutSpecs,bolts,null),taskToComponents,taskId);
}
