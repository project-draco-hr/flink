{
  Map<TopicPartition,FetchResponse.PartitionData> responseData=new HashMap<TopicPartition,FetchResponse.PartitionData>();
  for (  Map.Entry<TopicPartition,PartitionData> entry : fetchData.entrySet()) {
    FetchResponse.PartitionData partitionResponse=new FetchResponse.PartitionData(Errors.forException(e).code(),FetchResponse.INVALID_HIGHWATERMARK,FetchResponse.EMPTY_RECORD_SET);
    responseData.put(entry.getKey(),partitionResponse);
  }
switch (versionId) {
case 0:
    return new FetchResponse(responseData);
default :
  throw new IllegalArgumentException(String.format("Version %d is not valid. Valid versions for %s are 0 to %d",versionId,this.getClass().getSimpleName(),ProtoUtils.latestVersion(ApiKeys.FETCH.id)));
}
}
