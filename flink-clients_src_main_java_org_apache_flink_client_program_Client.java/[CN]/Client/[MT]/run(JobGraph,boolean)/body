{
  Tuple2<ActorSystem,ActorRef> pair=JobClient.startActorSystemAndActor(configuration,false);
  ActorRef client=pair._2();
  String hostname=configuration.getString(ConfigConstants.JOB_MANAGER_IPC_ADDRESS_KEY,null);
  FiniteDuration timeout=AkkaUtils.getTimeout(configuration);
  if (hostname == null) {
    throw new ProgramInvocationException("Could not find hostname of job manager.");
  }
  try {
    JobClient.uploadJarFiles(jobGraph,hostname,client,timeout);
  }
 catch (  IOException e) {
    throw new ProgramInvocationException("Could not upload blobs.",e);
  }
  try {
    if (wait) {
      return JobClient.submitJobAndWait(jobGraph,printStatusDuringExecution,client,timeout);
    }
 else {
      SubmissionResponse response=JobClient.submitJobDetached(jobGraph,client,timeout);
      if (response instanceof SubmissionFailure) {
        SubmissionFailure failure=(SubmissionFailure)response;
        throw new ProgramInvocationException("The job was not successfully submitted " + "to the flink job manager",failure.cause());
      }
    }
  }
 catch (  JobExecutionException jex) {
    if (jex.isJobCanceledByUser()) {
      throw new ProgramInvocationException("The program has been canceled");
    }
 else {
      throw new ProgramInvocationException("The program execution failed: " + jex.getMessage());
    }
  }
 finally {
    pair._1().shutdown();
    pair._1().awaitTermination();
  }
  return new JobExecutionResult(-1,null);
}
