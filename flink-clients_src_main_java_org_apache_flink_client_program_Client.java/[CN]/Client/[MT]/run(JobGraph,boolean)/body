{
  final String hostname=configuration.getString(ConfigConstants.JOB_MANAGER_IPC_ADDRESS_KEY,null);
  if (hostname == null) {
    throw new ProgramInvocationException("Could not find hostname of job manager.");
  }
  FiniteDuration timeout=AkkaUtils.getTimeout(configuration);
  final ActorSystem actorSystem;
  final ActorRef client;
  try {
    Tuple2<ActorSystem,ActorRef> pair=JobClient.startActorSystemAndActor(configuration,false);
    actorSystem=pair._1();
    client=pair._2();
  }
 catch (  Exception e) {
    throw new ProgramInvocationException("Could not build up connection to JobManager.",e);
  }
  try {
    JobClient.uploadJarFiles(jobGraph,hostname,client,timeout);
  }
 catch (  IOException e) {
    throw new ProgramInvocationException("Could not upload the programs JAR files to the JobManager.",e);
  }
  try {
    if (wait) {
      return JobClient.submitJobAndWait(jobGraph,printStatusDuringExecution,client,timeout);
    }
 else {
      SubmissionResponse response=JobClient.submitJobDetached(jobGraph,client,timeout);
      if (response instanceof SubmissionFailure) {
        SubmissionFailure failure=(SubmissionFailure)response;
        throw new ProgramInvocationException("Failed to submit the job to the JobManager.",failure.cause());
      }
    }
  }
 catch (  JobExecutionException e) {
    throw new ProgramInvocationException("The program execution failed.",e);
  }
catch (  JobTimeoutException e) {
    throw new ProgramInvocationException("Lost connection to the JobManager.",e);
  }
catch (  JobCancellationException e) {
    throw new ProgramInvocationException("The program has been canceled.",e);
  }
catch (  ProgramInvocationException e) {
    throw e;
  }
catch (  Exception e) {
    throw new ProgramInvocationException("Exception occurred during job execution.",e);
  }
 finally {
    actorSystem.shutdown();
    actorSystem.awaitTermination();
  }
  return new JobExecutionResult(-1,null);
}
