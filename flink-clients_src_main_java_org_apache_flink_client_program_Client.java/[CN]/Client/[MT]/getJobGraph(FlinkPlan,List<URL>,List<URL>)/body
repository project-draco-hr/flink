{
  JobGraph job;
  if (optPlan instanceof StreamingPlan) {
    job=((StreamingPlan)optPlan).getJobGraph();
  }
 else {
    JobGraphGenerator gen=new JobGraphGenerator();
    job=gen.compileJobGraph((OptimizedPlan)optPlan);
  }
  for (  URL jar : jarFiles) {
    try {
      job.addJar(new Path(jar.toURI()));
    }
 catch (    URISyntaxException e) {
      throw new RuntimeException("URL is invalid. This should not happen.",e);
    }
  }
  job.setClasspaths(classpaths);
  return job;
}
