{
  List<Integer> inputs=new ArrayList<Integer>();
  inputs.add(1);
  inputs.add(2);
  inputs.add(2);
  inputs.add(3);
  inputs.add(4);
  List<StreamWindow<Integer>> expected=new ArrayList<StreamWindow<Integer>>();
  expected.add(StreamWindow.fromElements(1,2));
  expected.add(StreamWindow.fromElements(2,3));
  expected.add(StreamWindow.fromElements(4));
  TriggerPolicy<Integer> trigger=new CountTriggerPolicy<Integer>(2);
  EvictionPolicy<Integer> eviction=new TumblingEvictionPolicy<Integer>();
  StreamDiscretizer<Integer> discretizer=new StreamDiscretizer<Integer>(trigger,eviction);
  StreamWindowBuffer<Integer> buffer=new StreamWindowBuffer<Integer>(new BasicWindowBuffer<Integer>());
  List<WindowEvent<Integer>> bufferEvents=MockContext.createAndExecute(discretizer,inputs);
  List<StreamWindow<Integer>> result=MockContext.createAndExecute(buffer,bufferEvents);
  assertEquals(expected,result);
}
