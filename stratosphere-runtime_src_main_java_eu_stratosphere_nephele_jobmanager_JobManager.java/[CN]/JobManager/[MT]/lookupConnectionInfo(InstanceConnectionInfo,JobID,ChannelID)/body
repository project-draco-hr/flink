{
  final ExecutionGraph eg=this.scheduler.getExecutionGraphByID(jobID);
  if (eg == null) {
    LOG.error("Cannot find execution graph to job ID " + jobID);
    return ConnectionInfoLookupResponse.createReceiverNotFound();
  }
  final InternalJobStatus jobStatus=eg.getJobStatus();
  if (jobStatus == InternalJobStatus.FAILING || jobStatus == InternalJobStatus.CANCELING) {
    return ConnectionInfoLookupResponse.createJobIsAborting();
  }
  final ExecutionEdge edge=eg.getEdgeByID(sourceChannelID);
  if (edge == null) {
    LOG.error("Cannot find execution edge associated with ID " + sourceChannelID);
    return ConnectionInfoLookupResponse.createReceiverNotFound();
  }
  if (sourceChannelID.equals(edge.getInputChannelID())) {
    final ExecutionVertex connectedVertex=edge.getOutputGate().getVertex();
    final AbstractInstance assignedInstance=connectedVertex.getAllocatedResource().getInstance();
    if (assignedInstance == null) {
      LOG.error("Cannot resolve lookup: vertex found for channel ID " + edge.getOutputGateIndex() + " but no instance assigned");
      return ConnectionInfoLookupResponse.createReceiverNotReady();
    }
    final ExecutionState executionState=connectedVertex.getExecutionState();
    if (executionState == ExecutionState.FINISHED) {
      return ConnectionInfoLookupResponse.createReceiverNotFound();
    }
    if (executionState != ExecutionState.RUNNING && executionState != ExecutionState.FINISHING) {
      return ConnectionInfoLookupResponse.createReceiverNotReady();
    }
    if (assignedInstance.getInstanceConnectionInfo().equals(caller)) {
      return ConnectionInfoLookupResponse.createReceiverFoundAndReady(edge.getOutputChannelID());
    }
 else {
      final InstanceConnectionInfo ici=assignedInstance.getInstanceConnectionInfo();
      final InetSocketAddress isa=new InetSocketAddress(ici.address(),ici.dataPort());
      return ConnectionInfoLookupResponse.createReceiverFoundAndReady(new RemoteReceiver(isa,edge.getConnectionID()));
    }
  }
  final ExecutionVertex targetVertex=edge.getInputGate().getVertex();
  final ExecutionState executionState=targetVertex.getExecutionState();
  if (executionState != ExecutionState.RUNNING && executionState != ExecutionState.FINISHING && executionState != ExecutionState.FINISHED) {
    if (executionState == ExecutionState.ASSIGNED) {
      final Runnable command=new Runnable(){
        @Override public void run(){
          scheduler.deployAssignedVertices(targetVertex);
        }
      }
;
      eg.executeCommand(command);
    }
    return ConnectionInfoLookupResponse.createReceiverNotReady();
  }
  final AbstractInstance assignedInstance=targetVertex.getAllocatedResource().getInstance();
  if (assignedInstance == null) {
    LOG.error("Cannot resolve lookup: vertex found for channel ID " + edge.getInputChannelID() + " but no instance assigned");
    return ConnectionInfoLookupResponse.createReceiverNotReady();
  }
  if (assignedInstance.getInstanceConnectionInfo().equals(caller)) {
    return ConnectionInfoLookupResponse.createReceiverFoundAndReady(edge.getInputChannelID());
  }
 else {
    final InstanceConnectionInfo ici=assignedInstance.getInstanceConnectionInfo();
    final InetSocketAddress isa=new InetSocketAddress(ici.address(),ici.dataPort());
    return ConnectionInfoLookupResponse.createReceiverFoundAndReady(new RemoteReceiver(isa,edge.getConnectionID()));
  }
}
