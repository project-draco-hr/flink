{
  super.read(in);
  boolean isNotNull=in.readBoolean();
  if (isNotNull) {
    final ClassLoader cl=LibraryCacheManager.getClassLoader(this.getJobGraph().getJobID());
    if (cl == null) {
      throw new IOException("Cannot find class loader for vertex " + getID());
    }
    final String className=StringRecord.readString(in);
    try {
      this.inputClass=(Class<? extends AbstractInputTask<?>>)Class.forName(className,true,cl).asSubclass(AbstractInputTask.class);
    }
 catch (    ClassNotFoundException cnfe) {
      throw new IOException("Class " + className + " not found in one of the supplied jar files: "+ StringUtils.stringifyException(cnfe));
    }
catch (    ClassCastException ccex) {
      throw new IOException("Class " + className + " is not a subclass of "+ AbstractInputTask.class.getName()+ ": "+ StringUtils.stringifyException(ccex));
    }
  }
}
