{
  PlanNode source=channel.getSource();
  Operator<?> javaOp=source.getPactContract();
  TypeInformation<?> type=javaOp.getOperatorInfo().getOutputType();
  if (javaOp instanceof GroupReduceOperatorBase && (source.getDriverStrategy() == DriverStrategy.SORTED_GROUP_COMBINE || source.getDriverStrategy() == DriverStrategy.ALL_GROUP_REDUCE_COMBINE)) {
    GroupReduceOperatorBase<?,?,?> groupNode=(GroupReduceOperatorBase<?,?,?>)javaOp;
    type=groupNode.getInput().getOperatorInfo().getOutputType();
  }
 else   if (javaOp instanceof PlanUnwrappingReduceGroupOperator && source.getDriverStrategy().equals(DriverStrategy.SORTED_GROUP_COMBINE)) {
    PlanUnwrappingReduceGroupOperator<?,?,?> groupNode=(PlanUnwrappingReduceGroupOperator<?,?,?>)javaOp;
    type=groupNode.getInput().getOperatorInfo().getOutputType();
  }
  channel.setSerializer(createSerializer(type));
  if (channel.getShipStrategy().requiresComparator()) {
    channel.setShipStrategyComparator(createComparator(type,channel.getShipStrategyKeys(),getSortOrders(channel.getShipStrategyKeys(),channel.getShipStrategySortOrder())));
  }
  if (channel.getLocalStrategy().requiresComparator()) {
    channel.setLocalStrategyComparator(createComparator(type,channel.getLocalStrategyKeys(),getSortOrders(channel.getLocalStrategyKeys(),channel.getLocalStrategySortOrder())));
  }
  traverse(channel.getSource());
}
