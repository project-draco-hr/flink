{
  if (this.traversalStack.isEmpty()) {
    final TraversalEntry newentry=new TraversalEntry(this.entryVertices.get(this.numVisitedEntryVertices),0);
    this.traversalStack.push(newentry);
    this.alreadyVisited.add(newentry.getGroupVertex());
  }
  final ExecutionGroupVertex returnVertex=this.traversalStack.peek().getGroupVertex();
  do {
    final TraversalEntry te=this.traversalStack.peek();
    final ExecutionGroupVertex candidateVertex=getCandidateVertex(te,forward);
    if (candidateVertex == null) {
      traversalStack.pop();
    }
 else {
      final TraversalEntry newte=new TraversalEntry(candidateVertex,0);
      this.traversalStack.push(newte);
      this.alreadyVisited.add(newte.getGroupVertex());
      break;
    }
  }
 while (!this.traversalStack.isEmpty());
  return returnVertex;
}
