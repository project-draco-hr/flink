{
  int val=0;
  boolean neg=false;
  if (bytes[startPos] == '-') {
    neg=true;
    startPos++;
    if (startPos == limit || bytes[startPos] == delimiter) {
      setErrorState(ParseErrorState.NUMERIC_VALUE_ORPHAN_SIGN);
      return -1;
    }
  }
  for (int i=startPos; i < limit; i++) {
    if (bytes[i] == delimiter) {
      this.result=(short)(neg ? -val : val);
      return i + 1;
    }
    if (bytes[i] < 48 || bytes[i] > 57) {
      setErrorState(ParseErrorState.NUMERIC_VALUE_ILLEGAL_CHARACTER);
      return -1;
    }
    val*=10;
    val+=bytes[i] - 48;
    if (val > OVERFLOW_BOUND && (!neg || val > UNDERFLOW_BOUND)) {
      setErrorState(ParseErrorState.NUMERIC_VALUE_OVERFLOW_UNDERFLOW);
      return -1;
    }
  }
  this.result=(short)(neg ? -val : val);
  return limit;
}
