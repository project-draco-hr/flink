{
  try {
    UnionIterator<Integer> iter=new UnionIterator<>();
    iter.iterator();
    try {
      iter.iterator();
      fail("should fail with an exception");
    }
 catch (    TraversableOnceException e) {
    }
    try {
      iter.iterator();
      fail("should fail with an exception");
    }
 catch (    TraversableOnceException e) {
    }
    iter.clear();
    iter.iterator();
    try {
      iter.iterator();
      fail("should fail with an exception");
    }
 catch (    TraversableOnceException e) {
    }
    try {
      iter.iterator();
      fail("should fail with an exception");
    }
 catch (    TraversableOnceException e) {
    }
    iter.clear();
    iter.addList(Arrays.asList(1,2,3,4,5,6,7));
    Iterator<Integer> ints=iter.iterator();
    assertNotNull(ints.next());
    assertNotNull(ints.next());
    assertNotNull(ints.next());
    try {
      iter.iterator();
      fail("should fail with an exception");
    }
 catch (    TraversableOnceException e) {
    }
    iter.clear();
    assertFalse(iter.iterator().hasNext());
  }
 catch (  Exception e) {
    e.printStackTrace();
    fail(e.getMessage());
  }
}
