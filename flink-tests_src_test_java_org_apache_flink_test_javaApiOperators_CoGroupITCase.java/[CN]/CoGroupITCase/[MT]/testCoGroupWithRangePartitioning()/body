{
  final ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
  DataSet<Tuple5<Integer,Long,Integer,String,Long>> ds1=CollectionDataSets.get5TupleDataSet(env);
  DataSet<Tuple3<Integer,Long,String>> ds2=CollectionDataSets.get3TupleDataSet(env);
  env.setParallelism(4);
  TestDistribution testDis=new TestDistribution();
  DataSet<Tuple3<Integer,Long,String>> coGrouped=DataSetUtils.partitionByRange(ds1,testDis,0,4).coGroup(DataSetUtils.partitionByRange(ds2,testDis,0,1)).where(0,4).equalTo(0,1).with(new Tuple5Tuple3CoGroup());
  List<Tuple3<Integer,Long,String>> result=coGrouped.collect();
  String expected="1,1,Hallo\n" + "2,2,Hallo Welt\n" + "3,2,Hallo Welt wie gehts?\n"+ "3,2,ABC\n"+ "5,3,HIJ\n"+ "5,3,IJK\n";
  compareResultAsTuples(result,expected);
}
