{
  TypeInformation<PojoWithMultiplePojos> ti=TypeExtractor.getForClass(PojoWithMultiplePojos.class);
  ExpressionKeys<PojoWithMultiplePojos> ek;
  ek=new ExpressionKeys<>("*",ti);
  Assert.assertArrayEquals(new int[]{0,1,2,3,4},ek.computeLogicalKeyPositions());
  ek=new ExpressionKeys<>("p1.*",ti);
  Assert.assertArrayEquals(new int[]{1,2},ek.computeLogicalKeyPositions());
  ek=new ExpressionKeys<>("p2.*",ti);
  Assert.assertArrayEquals(new int[]{3,4},ek.computeLogicalKeyPositions());
  ek=new ExpressionKeys<>("p1",ti);
  Assert.assertArrayEquals(new int[]{1,2},ek.computeLogicalKeyPositions());
  ek=new ExpressionKeys<>("p2",ti);
  Assert.assertArrayEquals(new int[]{3,4},ek.computeLogicalKeyPositions());
  ek=new ExpressionKeys<>("i0",ti);
  Assert.assertArrayEquals(new int[]{0},ek.computeLogicalKeyPositions());
}
