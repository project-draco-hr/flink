{
  File fileIn=new File("data/restaurant.csv");
  Source source=new Source(CsvInputFormat.class,"file://" + fileIn.getAbsolutePath());
  source.setParameter(CsvInputFormat.COLUMN_NAMES,new String[]{"id","name","address","city","phone","type"});
  EvaluationExpression firstTwoLettersEqual=new ComparativeExpression(new MethodCall("substring",createPath("0","name"),new ConstantExpression(IntNode.valueOf(0)),new ConstantExpression(IntNode.valueOf(2))),BinaryOperator.EQUAL,new MethodCall("substring",createPath("1","name"),new ConstantExpression(IntNode.valueOf(0)),new ConstantExpression(IntNode.valueOf(2))));
  EvaluationExpression condition=new AndExpression(firstTwoLettersEqual);
  Join blockJoin=new Join().withInputs(source,source).withJoinCondition(condition);
  Selection select=new Selection().withInputs(blockJoin).withCondition(new ComparativeExpression(createPath("0","id"),BinaryOperator.LESS,createPath("1","id")));
  Selection sim=new Selection().withInputs(select).withCondition(new ComparativeExpression(createPath("0","name"),BinaryOperator.EQUAL,createPath("1","name")));
  EvaluationExpression phone1=new MethodCall("replaceAll",createPath("0","phone"),new ConstantExpression(new TextNode("\\W")),new ConstantExpression(new TextNode("")));
  EvaluationExpression phone2=new MethodCall("replaceAll",createPath("1","phone"),new ConstantExpression(new TextNode("\\W")),new ConstantExpression(new TextNode("")));
  Selection phoneSimilarity=new Selection().withInputs(sim).withCondition(new ComparativeExpression(phone1,BinaryOperator.EQUAL,phone2));
  Projection proj=new Projection().withInputs(phoneSimilarity).withValueTransformation(new ArrayCreation(createPath("0","id"),createPath("1","id")));
  File fileOut=new File("data/restaurant_out.json");
  final SopremoPlan sopremoPlan=new SopremoPlan();
  sopremoPlan.setSinks(new Sink("file://" + fileOut.getAbsolutePath()).withInputs(proj));
  sopremoPlan.getContext().getFunctionRegistry().register(DuplicateDetectionFunctions.class);
  new TestPlan(sopremoPlan.assemblePact()).run();
}
