{
  try {
    Map<FileID,ReadableSpillingFile> map=null;
synchronized (this.readableSpillingFileMap) {
      map=this.readableSpillingFileMap.get(ownerID);
      if (map == null) {
        throw new IOException("Cannot find readable spilling file queue for owner ID " + ownerID);
      }
      ReadableSpillingFile readableSpillingFile=null;
synchronized (map) {
        readableSpillingFile=map.get(fileID);
        if (readableSpillingFile == null) {
          throw new IOException("Cannot find readable spilling file for owner ID " + ownerID);
        }
        if (readableSpillingFile.checkForEndOfFile()) {
          map.remove(fileID);
          if (map.isEmpty()) {
            this.readableSpillingFileMap.remove(ownerID);
          }
        }
      }
    }
  }
 catch (  IOException ioe) {
    LOG.error(StringUtils.stringifyException(ioe));
  }
}
