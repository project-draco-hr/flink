{
  try {
    final Object groupObject=getGroupObject(sourceChannelID);
    Queue<ReadableSpillingFile> queue=null;
synchronized (this.readableSpillingFileMap) {
      queue=this.readableSpillingFileMap.get(groupObject);
      if (queue == null) {
        throw new IOException("Cannot find readable spilling file queue for group object " + groupObject);
      }
      ReadableSpillingFile readableSpillingFile=null;
synchronized (queue) {
        readableSpillingFile=queue.peek();
        readableSpillingFile.unlockReadableFileChannel(sourceChannelID);
        if (readableSpillingFile.checkForEndOfFile()) {
          queue.poll();
          if (queue.isEmpty()) {
            this.readableSpillingFileMap.remove(groupObject);
          }
        }
      }
    }
  }
 catch (  IOException ioe) {
    LOG.error(StringUtils.stringifyException(ioe));
  }
}
