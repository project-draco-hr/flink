{
  if (this.fileChannelForReading != null) {
    return this.fileChannelForReading;
  }
  this.readAttemptInProgress=true;
  try {
    while (this.filesForReading.isEmpty()) {
      if (!this.writeAttemptInProgress && this.fileChannelForWriting != null) {
        closeCurrentWriteFile();
      }
 else {
        this.wait();
      }
    }
    final File file=this.filesForReading.peek();
    this.fileSizeForReading=file.length();
    final FileInputStream fis=new FileInputStream(file);
    this.fileChannelForReading=fis.getChannel();
  }
 catch (  InterruptedException e) {
    e.printStackTrace();
  }
 finally {
    this.readAttemptInProgress=false;
  }
  return this.fileChannelForReading;
}
