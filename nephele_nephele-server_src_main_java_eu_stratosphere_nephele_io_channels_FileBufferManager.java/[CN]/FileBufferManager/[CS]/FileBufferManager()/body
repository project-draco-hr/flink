{
  this.tmpDirs=GlobalConfiguration.getString(ConfigConstants.TASK_MANAGER_TMP_DIR_KEY,ConfigConstants.DEFAULT_TASK_MANAGER_TMP_PATH).split(":");
  for (int i=0; i < this.tmpDirs.length; i++) {
    File f=new File(this.tmpDirs[i]);
    if (!(f.exists() && f.isDirectory() && f.canWrite())) {
      LOG.error("Temp directory '" + f.getAbsolutePath() + "' is not a writable directory. "+ "Replacing path with default temp directory: "+ ConfigConstants.DEFAULT_TASK_MANAGER_TMP_PATH);
      this.tmpDirs[i]=ConfigConstants.DEFAULT_TASK_MANAGER_TMP_PATH;
    }
    this.tmpDirs[i]=this.tmpDirs[i] + File.separator + FILE_BUFFER_PREFIX;
  }
  this.bufferSize=GlobalConfiguration.getInteger("channel.network.bufferSizeInBytes",64 * 1024);
  this.fileMap=new ConcurrentHashMap<AbstractID,ChannelWithAccessInfo>(2048,0.8f,64);
  this.distributedTempPath=GlobalConfiguration.getString("taskmanager.tmp.distdir","hdfs://master:9000/checkpoints");
  FileSystem distFS=null;
  if (this.distributedTempPath != null) {
    try {
      final Path p=new Path(this.distributedTempPath);
      distFS=FileSystem.get(p.toUri());
      if (!distFS.exists(p)) {
        distFS.mkdirs(p);
      }
    }
 catch (    IOException e) {
      LOG.error(StringUtils.stringifyException(e));
    }
  }
  this.distributedFileSystem=distFS;
}
