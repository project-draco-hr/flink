{
switch (compressionLevel) {
case 0:
    insertValueComputeExpSmoothing(noCompressionSeries,compressionTime);
  lightCompressionSeries[2]++;
mediumCompressionSeries[2]++;
mediumHeavyCompressionSeries[2]++;
heavyCompressionSeries[2]++;
currentSeries=noCompressionSeries;
break;
case 1:
insertValueComputeExpSmoothing(lightCompressionSeries,compressionTime);
noCompressionSeries[2]++;
mediumCompressionSeries[2]++;
mediumHeavyCompressionSeries[2]++;
heavyCompressionSeries[2]++;
currentSeries=lightCompressionSeries;
break;
case 2:
insertValueComputeExpSmoothing(mediumCompressionSeries,compressionTime);
noCompressionSeries[2]++;
lightCompressionSeries[2]++;
mediumHeavyCompressionSeries[2]++;
heavyCompressionSeries[2]++;
currentSeries=mediumCompressionSeries;
break;
case 3:
insertValueComputeExpSmoothing(mediumHeavyCompressionSeries,compressionTime);
noCompressionSeries[2]++;
lightCompressionSeries[2]++;
mediumCompressionSeries[2]++;
heavyCompressionSeries[2]++;
currentSeries=mediumHeavyCompressionSeries;
break;
case 4:
insertValueComputeExpSmoothing(heavyCompressionSeries,compressionTime);
noCompressionSeries[2]++;
lightCompressionSeries[2]++;
mediumCompressionSeries[2]++;
mediumHeavyCompressionSeries[2]++;
currentSeries=heavyCompressionSeries;
break;
}
insertValueComputeExpSmoothing(byteTimeSeries,scaledTime);
currentSeries[2]=0;
}
