{
  if (!parseParameters(args)) {
    return;
  }
  StreamExecutionEnvironment env=StreamExecutionEnvironment.getExecutionEnvironment();
  env.setBufferTimeout(1000);
  DataStream<String> streamSource=getTextDataStream(env);
  DataStream<Tuple2<String,Integer>> dataStream=streamSource.flatMap(new SelectEnglishAndTokenizeFlatMap()).partitionBy(0).map(new MapFunction<String,Tuple2<String,Integer>>(){
    private static final long serialVersionUID=1L;
    @Override public Tuple2<String,Integer> map(    String value) throws Exception {
      return new Tuple2<String,Integer>(value,1);
    }
  }
).groupBy(0).sum(1).flatMap(new SelectMaxOccurence());
  dataStream.print();
  env.execute();
}
