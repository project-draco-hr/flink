{
  long filterSum=0;
  for (  long l : StringRichFilterFunction.counts) {
    filterSum+=l;
  }
  long coMapSum=0;
  for (  long l : LeftIdentityCoRichFlatMapFunction.counts) {
    coMapSum+=l;
  }
  long mapSum=0;
  for (  long l : StringPrefixCountRichMapFunction.counts) {
    mapSum+=l;
  }
  long countSum=0;
  for (  long l : StatefulCounterFunction.counts) {
    countSum+=l;
  }
  if (!StringPrefixCountRichMapFunction.restoreCalledAtLeastOnce) {
    Assert.fail("Restore was never called on counting Map function.");
  }
  if (!LeftIdentityCoRichFlatMapFunction.restoreCalledAtLeastOnce) {
    Assert.fail("Restore was never called on counting CoMap function.");
  }
  assertEquals(NUM_STRINGS,filterSum);
  assertEquals(NUM_STRINGS,coMapSum);
  assertEquals(NUM_STRINGS,mapSum);
  assertEquals(NUM_STRINGS,countSum);
}
