{
  final InterestingProperties props=getInterestingProperties().filterByCodeAnnotations(this,0);
  final OptimizerNode pred=getPredecessorNode();
  for (  DriverPropertiesSingle dps : this.possibleProperties) {
    for (    RequestedGlobalProperties gp : dps.getPossibleGlobalProperties()) {
      Costs max=new Costs();
      gp.addMinimalRequiredCosts(max,estimator,pred,this);
      props.addGlobalProperties(gp,max);
    }
    for (    RequestedLocalProperties lp : dps.getPossibleLocalProperties()) {
      Costs max=new Costs();
      lp.addMinimalRequiredCosts(max,estimator,pred,getMinimalMemoryAcrossAllSubTasks());
      props.addLocalProperties(lp,max);
    }
  }
  this.inConn.setInterestingProperties(props);
}
