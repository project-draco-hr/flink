{
  List<Contract> children=((SingleInputContract<?>)getPactContract()).getInputs();
  for (  Contract child : children) {
    OptimizerNode predNode=contractToNode.get(child);
    PactConnection conn=new PactConnection(predNode,this);
    this.setInConn(conn);
    predNode.addOutConn(conn);
    Configuration conf=getPactContract().getParameters();
    String shipStrategy=conf.getString(PactCompiler.HINT_SHIP_STRATEGY,null);
    if (shipStrategy != null) {
      if (PactCompiler.HINT_SHIP_STRATEGY_FORWARD.equals(shipStrategy)) {
        conn.setShipStrategy(ShipStrategy.FORWARD);
      }
 else       if (PactCompiler.HINT_SHIP_STRATEGY_REPARTITION.equals(shipStrategy)) {
        conn.setShipStrategy(ShipStrategy.PARTITION_HASH);
      }
 else {
        throw new CompilerException("Invalid hint for the shipping strategy of a single input connection: " + shipStrategy);
      }
    }
  }
}
