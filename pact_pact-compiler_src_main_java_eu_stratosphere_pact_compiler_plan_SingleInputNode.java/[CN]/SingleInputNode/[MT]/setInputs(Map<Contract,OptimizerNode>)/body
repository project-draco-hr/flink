{
  Contract child=((SingleInputContract<?,?,?,?>)getPactContract()).getInput();
  OptimizerNode pred=contractToNode.get(child);
  PactConnection conn=new PactConnection(pred,this);
  setInputConnection(conn);
  pred.addOutgoingConnection(conn);
  Configuration conf=getPactContract().getStubParameters();
  String shipStrategy=conf.getString(PactCompiler.HINT_SHIP_STRATEGY,null);
  if (shipStrategy != null) {
    if (PactCompiler.HINT_SHIP_STRATEGY_FORWARD.equals(shipStrategy)) {
      conn.setShipStrategy(ShipStrategy.FORWARD);
    }
 else     if (PactCompiler.HINT_SHIP_STRATEGY_REPARTITION.equals(shipStrategy)) {
      conn.setShipStrategy(ShipStrategy.PARTITION_HASH);
    }
 else {
      throw new CompilerException("Invalid hint for the shipping strategy of a single input connection: " + shipStrategy);
    }
  }
}
