{
  hashJoin.open(buildSide,EmptyMutableObjectIterator.<IT1>get());
  if (isFirstIteration()) {
    TaskConfig config=taskContext.getTaskConfig();
    TypeSerializer<IT1> probeSideSerializer=taskContext.getInputSerializer(0);
    MemoryManager memoryManager=taskContext.getMemoryManager();
    IOManager ioManager=taskContext.getIOManager();
    AbstractInvokable owningNepheleTask=taskContext.getOwningNepheleTask();
    ClassLoader userCodeClassLoader=taskContext.getUserCodeClassLoader();
    long completeMemorySize=config.getMemorySize();
    long sorterMemorySize=(long)(completeMemorySize * 0.25);
    config.setMemorySize(completeMemorySize - sorterMemorySize);
    TypeComparator<IT1> probesideComparator=TypeUtils.instantiateTypeComparator(config.getConfiguration(),userCodeClassLoader,config.getCachedHashJoinProbeSideComparatorFactoryClass(userCodeClassLoader),config.getCachedHashjoinProbesideComparatorPrefix());
    Sorter<IT1> sorter=new UnilateralSortMerger(memoryManager,ioManager,probeSide,owningNepheleTask,probeSideSerializer,probesideComparator,sorterMemorySize,config.getNumFilehandles(),config.getSortSpillingTreshold());
    cachedProbeSide=new SpillingResettableMutableObjectIterator<IT1>(sorter.getIterator(),probeSideSerializer,memoryManager,ioManager,config.getMemorySize(),owningNepheleTask);
  }
 else {
    cachedProbeSide.reset();
  }
}
