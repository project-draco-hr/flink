{
  try {
    TypeInformation<Integer> typeInfo=BasicTypeInfo.INT_TYPE_INFO;
    StreamExecutionEnvironment env=new TestStreamEnvironment(PARALLELISM,MEMORYSIZE);
    DataStreamSource<Integer> dataStream1=env.fromCollection(new DummySplittableIterator<Integer>(),typeInfo);
    try {
      dataStream1.setParallelism(4);
      fail("should throw an exception");
    }
 catch (    IllegalArgumentException e) {
    }
    env.fromParallelCollection(new DummySplittableIterator<Integer>(),typeInfo).setParallelism(4);
    String plan=env.getExecutionPlan();
    assertTrue("Parallelism for dataStream1 is not right.",plan.contains("\"contents\":\"Collection Source\",\"parallelism\":1"));
    assertTrue("Parallelism for dataStream2 is not right.",plan.contains("\"contents\":\"Parallel Collection Source\",\"parallelism\":4"));
  }
 catch (  Exception e) {
    e.printStackTrace();
    fail(e.getMessage());
  }
}
