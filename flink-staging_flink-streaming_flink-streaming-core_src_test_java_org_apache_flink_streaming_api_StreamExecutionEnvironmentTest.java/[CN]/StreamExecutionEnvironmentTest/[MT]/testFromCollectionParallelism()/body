{
  TypeInformation<Object> typeInfo=TypeExtractor.getForClass(Object.class);
  StreamExecutionEnvironment env=new TestStreamEnvironment(PARALLELISM,MEMORYSIZE);
  boolean seenExpectedException=false;
  try {
    DataStream<Object> dataStream1=env.fromCollection(new DummySplittableIterator(),typeInfo).setParallelism(4);
  }
 catch (  IllegalArgumentException e) {
    seenExpectedException=true;
  }
  DataStream<Object> dataStream2=env.fromParallelCollection(new DummySplittableIterator(),typeInfo).setParallelism(4);
  String plan=env.getExecutionPlan();
  assertTrue("Expected Exception for setting parallelism was not thrown.",seenExpectedException);
  assertTrue("Parallelism for dataStream1 is not right.",plan.contains("\"contents\":\"Collection Source\",\"parallelism\":1"));
  assertTrue("Parallelism for dataStream2 is not right.",plan.contains("\"contents\":\"Parallel Collection Source\",\"parallelism\":4"));
}
