{
  StreamExecutionEnvironment env=new TestStreamEnvironment(PARALLELISM,MEMORYSIZE);
  SourceFunction<Integer> srcFun=new SourceFunction<Integer>(){
    private static final long serialVersionUID=1L;
    @Override public void run(    SourceContext<Integer> ctx) throws Exception {
    }
    @Override public void cancel(){
    }
  }
;
  DataStreamSource<Integer> src1=env.addSource(srcFun);
  assertEquals(srcFun,getFunctionFromDataSource(src1));
  List<Long> list=Arrays.asList(0L,1L,2L);
  DataStreamSource<Long> src2=env.generateSequence(0,2);
  assertTrue(getFunctionFromDataSource(src2) instanceof StatefulSequenceSource);
  DataStreamSource<Long> src3=env.fromElements(0L,1L,2L);
  assertTrue(getFunctionFromDataSource(src3) instanceof FromElementsFunction);
  DataStreamSource<Long> src4=env.fromCollection(list);
  assertTrue(getFunctionFromDataSource(src4) instanceof FromElementsFunction);
}
