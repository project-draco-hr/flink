{
  try {
    final JobID jid=new JobID();
    final JobVertexID vid=new JobVertexID();
    final ExecutionAttemptID eid=new ExecutionAttemptID();
    final RuntimeEnvironment env=mock(RuntimeEnvironment.class);
    Task task=spy(new Task(jid,vid,2,7,eid,"TestTask",ActorRef.noSender()));
    doNothing().when(task).notifyExecutionStateChange(any(ExecutionState.class),any(Throwable.class));
    task.setEnvironment(env);
    assertEquals(ExecutionState.DEPLOYING,task.getExecutionState());
    task.cancelExecution();
    assertEquals(ExecutionState.CANCELED,task.getExecutionState());
    assertFalse(task.startExecution());
    assertEquals(ExecutionState.CANCELED,task.getExecutionState());
    assertFalse(task.markAsFinished());
    assertEquals(ExecutionState.CANCELED,task.getExecutionState());
    task.markFailed(new Exception("test"));
    assertTrue(ExecutionState.CANCELED == task.getExecutionState());
    verify(task,times(1)).notifyExecutionStateChange(ExecutionState.CANCELED,null);
  }
 catch (  Exception e) {
    e.printStackTrace();
    fail(e.getMessage());
  }
}
