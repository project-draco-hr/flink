{
  TokenStream input=(TokenStream)_input;
  int _s=s;
switch (s) {
case 0:
    int LA22_1=input.LA(1);
  int index22_1=input.index();
input.rewind();
s=-1;
if ((synpred33_SJaql())) {
s=14;
}
 else if ((true)) {
s=15;
}
input.seek(index22_1);
if (s >= 0) return s;
break;
case 1:
int LA22_2=input.LA(1);
int index22_2=input.index();
input.rewind();
s=-1;
if ((synpred33_SJaql())) {
s=14;
}
 else if ((true)) {
s=15;
}
input.seek(index22_2);
if (s >= 0) return s;
break;
case 2:
int LA22_3=input.LA(1);
int index22_3=input.index();
input.rewind();
s=-1;
if ((synpred33_SJaql())) {
s=14;
}
 else if ((true)) {
s=15;
}
input.seek(index22_3);
if (s >= 0) return s;
break;
case 3:
int LA22_4=input.LA(1);
int index22_4=input.index();
input.rewind();
s=-1;
if ((synpred33_SJaql())) {
s=14;
}
 else if ((true)) {
s=15;
}
input.seek(index22_4);
if (s >= 0) return s;
break;
case 4:
int LA22_5=input.LA(1);
int index22_5=input.index();
input.rewind();
s=-1;
if ((synpred33_SJaql())) {
s=14;
}
 else if ((true)) {
s=15;
}
input.seek(index22_5);
if (s >= 0) return s;
break;
case 5:
int LA22_6=input.LA(1);
int index22_6=input.index();
input.rewind();
s=-1;
if ((synpred33_SJaql())) {
s=14;
}
 else if ((true)) {
s=15;
}
input.seek(index22_6);
if (s >= 0) return s;
break;
case 6:
int LA22_7=input.LA(1);
int index22_7=input.index();
input.rewind();
s=-1;
if ((synpred33_SJaql())) {
s=14;
}
 else if ((true)) {
s=15;
}
input.seek(index22_7);
if (s >= 0) return s;
break;
case 7:
int LA22_8=input.LA(1);
int index22_8=input.index();
input.rewind();
s=-1;
if ((synpred33_SJaql())) {
s=14;
}
 else if ((true)) {
s=15;
}
input.seek(index22_8);
if (s >= 0) return s;
break;
case 8:
int LA22_9=input.LA(1);
int index22_9=input.index();
input.rewind();
s=-1;
if ((synpred33_SJaql())) {
s=14;
}
 else if ((true)) {
s=15;
}
input.seek(index22_9);
if (s >= 0) return s;
break;
case 9:
int LA22_10=input.LA(1);
int index22_10=input.index();
input.rewind();
s=-1;
if ((synpred33_SJaql())) {
s=14;
}
 else if ((true)) {
s=15;
}
input.seek(index22_10);
if (s >= 0) return s;
break;
case 10:
int LA22_11=input.LA(1);
int index22_11=input.index();
input.rewind();
s=-1;
if ((synpred33_SJaql())) {
s=14;
}
 else if ((true)) {
s=15;
}
input.seek(index22_11);
if (s >= 0) return s;
break;
case 11:
int LA22_12=input.LA(1);
int index22_12=input.index();
input.rewind();
s=-1;
if ((synpred33_SJaql())) {
s=14;
}
 else if ((true)) {
s=15;
}
input.seek(index22_12);
if (s >= 0) return s;
break;
case 12:
int LA22_13=input.LA(1);
int index22_13=input.index();
input.rewind();
s=-1;
if ((synpred33_SJaql())) {
s=14;
}
 else if ((true)) {
s=15;
}
input.seek(index22_13);
if (s >= 0) return s;
break;
}
if (state.backtracking > 0) {
state.failed=true;
return -1;
}
NoViableAltException nvae=new NoViableAltException(getDescription(),22,_s,input);
error(nvae);
throw nvae;
}
