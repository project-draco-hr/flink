{
  TokenStream input=(TokenStream)_input;
  int _s=s;
switch (s) {
case 0:
    int LA20_1=input.LA(1);
  int index20_1=input.index();
input.rewind();
s=-1;
if ((synpred29_SJaql())) {
s=14;
}
 else if ((true)) {
s=15;
}
input.seek(index20_1);
if (s >= 0) return s;
break;
case 1:
int LA20_2=input.LA(1);
int index20_2=input.index();
input.rewind();
s=-1;
if ((synpred29_SJaql())) {
s=14;
}
 else if ((true)) {
s=15;
}
input.seek(index20_2);
if (s >= 0) return s;
break;
case 2:
int LA20_3=input.LA(1);
int index20_3=input.index();
input.rewind();
s=-1;
if ((synpred29_SJaql())) {
s=14;
}
 else if ((true)) {
s=15;
}
input.seek(index20_3);
if (s >= 0) return s;
break;
case 3:
int LA20_4=input.LA(1);
int index20_4=input.index();
input.rewind();
s=-1;
if ((synpred29_SJaql())) {
s=14;
}
 else if ((true)) {
s=15;
}
input.seek(index20_4);
if (s >= 0) return s;
break;
case 4:
int LA20_5=input.LA(1);
int index20_5=input.index();
input.rewind();
s=-1;
if ((synpred29_SJaql())) {
s=14;
}
 else if ((true)) {
s=15;
}
input.seek(index20_5);
if (s >= 0) return s;
break;
case 5:
int LA20_6=input.LA(1);
int index20_6=input.index();
input.rewind();
s=-1;
if ((synpred29_SJaql())) {
s=14;
}
 else if ((true)) {
s=15;
}
input.seek(index20_6);
if (s >= 0) return s;
break;
case 6:
int LA20_7=input.LA(1);
int index20_7=input.index();
input.rewind();
s=-1;
if ((synpred29_SJaql())) {
s=14;
}
 else if ((true)) {
s=15;
}
input.seek(index20_7);
if (s >= 0) return s;
break;
case 7:
int LA20_8=input.LA(1);
int index20_8=input.index();
input.rewind();
s=-1;
if ((synpred29_SJaql())) {
s=14;
}
 else if ((true)) {
s=15;
}
input.seek(index20_8);
if (s >= 0) return s;
break;
case 8:
int LA20_9=input.LA(1);
int index20_9=input.index();
input.rewind();
s=-1;
if ((synpred29_SJaql())) {
s=14;
}
 else if ((true)) {
s=15;
}
input.seek(index20_9);
if (s >= 0) return s;
break;
case 9:
int LA20_10=input.LA(1);
int index20_10=input.index();
input.rewind();
s=-1;
if ((synpred29_SJaql())) {
s=14;
}
 else if ((true)) {
s=15;
}
input.seek(index20_10);
if (s >= 0) return s;
break;
case 10:
int LA20_11=input.LA(1);
int index20_11=input.index();
input.rewind();
s=-1;
if ((synpred29_SJaql())) {
s=14;
}
 else if ((true)) {
s=15;
}
input.seek(index20_11);
if (s >= 0) return s;
break;
case 11:
int LA20_12=input.LA(1);
int index20_12=input.index();
input.rewind();
s=-1;
if ((synpred29_SJaql())) {
s=14;
}
 else if ((true)) {
s=15;
}
input.seek(index20_12);
if (s >= 0) return s;
break;
case 12:
int LA20_13=input.LA(1);
int index20_13=input.index();
input.rewind();
s=-1;
if ((synpred29_SJaql())) {
s=14;
}
 else if ((true)) {
s=15;
}
input.seek(index20_13);
if (s >= 0) return s;
break;
}
if (state.backtracking > 0) {
state.failed=true;
return -1;
}
NoViableAltException nvae=new NoViableAltException(getDescription(),20,_s,input);
error(nvae);
throw nvae;
}
