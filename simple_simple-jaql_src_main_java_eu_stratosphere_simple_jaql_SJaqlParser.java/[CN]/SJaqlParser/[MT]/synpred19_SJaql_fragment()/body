{
  Token s=null;
  SJaqlParser.arithmeticExpression_return e2=null;
{
    int alt52=6;
switch (input.LA(1)) {
case 40:
{
        alt52=1;
      }
    break;
case 41:
{
    alt52=2;
  }
break;
case 42:
{
alt52=3;
}
break;
case 43:
{
alt52=4;
}
break;
case 44:
{
alt52=5;
}
break;
case 45:
{
alt52=6;
}
break;
default :
if (state.backtracking > 0) {
state.failed=true;
return;
}
NoViableAltException nvae=new NoViableAltException("",52,0,input);
throw nvae;
}
switch (alt52) {
case 1:
{
s=(Token)match(input,40,FOLLOW_40_in_synpred19_SJaql514);
if (state.failed) return;
}
break;
case 2:
{
s=(Token)match(input,41,FOLLOW_41_in_synpred19_SJaql520);
if (state.failed) return;
}
break;
case 3:
{
s=(Token)match(input,42,FOLLOW_42_in_synpred19_SJaql526);
if (state.failed) return;
}
break;
case 4:
{
s=(Token)match(input,43,FOLLOW_43_in_synpred19_SJaql532);
if (state.failed) return;
}
break;
case 5:
{
s=(Token)match(input,44,FOLLOW_44_in_synpred19_SJaql538);
if (state.failed) return;
}
break;
case 6:
{
s=(Token)match(input,45,FOLLOW_45_in_synpred19_SJaql544);
if (state.failed) return;
}
break;
}
pushFollow(FOLLOW_arithmeticExpression_in_synpred19_SJaql549);
e2=arithmeticExpression();
state._fsp--;
if (state.failed) return;
}
}
