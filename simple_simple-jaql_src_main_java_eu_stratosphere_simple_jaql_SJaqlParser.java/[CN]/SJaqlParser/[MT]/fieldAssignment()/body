{
  SJaqlParser.fieldAssignment_return retval=new SJaqlParser.fieldAssignment_return();
  retval.start=input.LT(1);
  int fieldAssignment_StartIndex=input.index();
  EvaluationExpression root_0=null;
  Token VAR57=null;
  Token char_literal58=null;
  Token STAR59=null;
  Token VAR60=null;
  Token char_literal61=null;
  Token ID62=null;
  Token ID63=null;
  Token char_literal64=null;
  SJaqlParser.expression_return expression65=null;
  EvaluationExpression VAR57_tree=null;
  EvaluationExpression char_literal58_tree=null;
  EvaluationExpression STAR59_tree=null;
  EvaluationExpression VAR60_tree=null;
  EvaluationExpression char_literal61_tree=null;
  EvaluationExpression ID62_tree=null;
  EvaluationExpression ID63_tree=null;
  EvaluationExpression char_literal64_tree=null;
  RewriteRuleTokenStream stream_VAR=new RewriteRuleTokenStream(adaptor,"token VAR");
  RewriteRuleTokenStream stream_STAR=new RewriteRuleTokenStream(adaptor,"token STAR");
  RewriteRuleTokenStream stream_ID=new RewriteRuleTokenStream(adaptor,"token ID");
  RewriteRuleTokenStream stream_53=new RewriteRuleTokenStream(adaptor,"token 53");
  RewriteRuleTokenStream stream_54=new RewriteRuleTokenStream(adaptor,"token 54");
  RewriteRuleSubtreeStream stream_expression=new RewriteRuleSubtreeStream(adaptor,"rule expression");
  try {
    if (state.backtracking > 0 && alreadyParsedRule(input,23)) {
      return retval;
    }
    int alt26=3;
    int LA26_0=input.LA(1);
    if ((LA26_0 == VAR)) {
      int LA26_1=input.LA(2);
      if ((LA26_1 == 53)) {
        int LA26_3=input.LA(3);
        if ((LA26_3 == STAR)) {
          alt26=1;
        }
 else         if ((LA26_3 == ID)) {
          alt26=2;
        }
 else {
          if (state.backtracking > 0) {
            state.failed=true;
            return retval;
          }
          NoViableAltException nvae=new NoViableAltException("",26,3,input);
          throw nvae;
        }
      }
 else {
        if (state.backtracking > 0) {
          state.failed=true;
          return retval;
        }
        NoViableAltException nvae=new NoViableAltException("",26,1,input);
        throw nvae;
      }
    }
 else     if ((LA26_0 == ID)) {
      alt26=3;
    }
 else {
      if (state.backtracking > 0) {
        state.failed=true;
        return retval;
      }
      NoViableAltException nvae=new NoViableAltException("",26,0,input);
      throw nvae;
    }
switch (alt26) {
case 1:
{
        VAR57=(Token)match(input,VAR,FOLLOW_VAR_in_fieldAssignment1118);
        if (state.failed)         return retval;
        if (state.backtracking == 0)         stream_VAR.add(VAR57);
        char_literal58=(Token)match(input,53,FOLLOW_53_in_fieldAssignment1120);
        if (state.failed)         return retval;
        if (state.backtracking == 0)         stream_53.add(char_literal58);
        STAR59=(Token)match(input,STAR,FOLLOW_STAR_in_fieldAssignment1122);
        if (state.failed)         return retval;
        if (state.backtracking == 0)         stream_STAR.add(STAR59);
        if (state.backtracking == 0) {
          ((objectCreation_scope)objectCreation_stack.peek()).mappings.add(new ObjectCreation.CopyFields(makePath(VAR57)));
        }
        if (state.backtracking == 0) {
          retval.tree=root_0;
          RewriteRuleSubtreeStream stream_retval=new RewriteRuleSubtreeStream(adaptor,"rule retval",retval != null ? retval.tree : null);
          root_0=(EvaluationExpression)adaptor.nil();
{
            root_0=null;
          }
          retval.tree=root_0;
        }
      }
    break;
case 2:
{
    VAR60=(Token)match(input,VAR,FOLLOW_VAR_in_fieldAssignment1131);
    if (state.failed)     return retval;
    if (state.backtracking == 0)     stream_VAR.add(VAR60);
    char_literal61=(Token)match(input,53,FOLLOW_53_in_fieldAssignment1133);
    if (state.failed)     return retval;
    if (state.backtracking == 0)     stream_53.add(char_literal61);
    ID62=(Token)match(input,ID,FOLLOW_ID_in_fieldAssignment1135);
    if (state.failed)     return retval;
    if (state.backtracking == 0)     stream_ID.add(ID62);
    if (state.backtracking == 0) {
      ((objectCreation_scope)objectCreation_stack.peek()).mappings.add(new ObjectCreation.Mapping((ID62 != null ? ID62.getText() : null),makePath(VAR60,(ID62 != null ? ID62.getText() : null))));
    }
    if (state.backtracking == 0) {
      retval.tree=root_0;
      RewriteRuleSubtreeStream stream_retval=new RewriteRuleSubtreeStream(adaptor,"rule retval",retval != null ? retval.tree : null);
      root_0=(EvaluationExpression)adaptor.nil();
{
        root_0=null;
      }
      retval.tree=root_0;
    }
  }
break;
case 3:
{
ID63=(Token)match(input,ID,FOLLOW_ID_in_fieldAssignment1144);
if (state.failed) return retval;
if (state.backtracking == 0) stream_ID.add(ID63);
char_literal64=(Token)match(input,54,FOLLOW_54_in_fieldAssignment1146);
if (state.failed) return retval;
if (state.backtracking == 0) stream_54.add(char_literal64);
pushFollow(FOLLOW_expression_in_fieldAssignment1148);
expression65=expression();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) stream_expression.add(expression65.getTree());
if (state.backtracking == 0) {
  ((objectCreation_scope)objectCreation_stack.peek()).mappings.add(new ObjectCreation.Mapping((ID63 != null ? ID63.getText() : null),(expression65 != null ? ((EvaluationExpression)expression65.tree) : null)));
}
if (state.backtracking == 0) {
  retval.tree=root_0;
  RewriteRuleSubtreeStream stream_retval=new RewriteRuleSubtreeStream(adaptor,"rule retval",retval != null ? retval.tree : null);
  root_0=(EvaluationExpression)adaptor.nil();
{
    root_0=null;
  }
  retval.tree=root_0;
}
}
break;
}
retval.stop=input.LT(-1);
if (state.backtracking == 0) {
retval.tree=(EvaluationExpression)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
  finally {
if (state.backtracking > 0) {
memoize(input,23,fieldAssignment_StartIndex);
}
}
return retval;
}
