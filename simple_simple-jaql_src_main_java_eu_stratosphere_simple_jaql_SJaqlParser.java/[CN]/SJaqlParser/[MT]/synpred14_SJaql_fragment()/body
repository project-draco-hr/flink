{
  Token s=null;
  SJaqlParser.arithmeticExpression_return e2=null;
{
    int alt48=6;
switch (input.LA(1)) {
case 33:
{
        alt48=1;
      }
    break;
case 34:
{
    alt48=2;
  }
break;
case 35:
{
alt48=3;
}
break;
case 36:
{
alt48=4;
}
break;
case 37:
{
alt48=5;
}
break;
case 38:
{
alt48=6;
}
break;
default :
if (state.backtracking > 0) {
state.failed=true;
return;
}
NoViableAltException nvae=new NoViableAltException("",48,0,input);
throw nvae;
}
switch (alt48) {
case 1:
{
s=(Token)match(input,33,FOLLOW_33_in_synpred14_SJaql395);
if (state.failed) return;
}
break;
case 2:
{
s=(Token)match(input,34,FOLLOW_34_in_synpred14_SJaql401);
if (state.failed) return;
}
break;
case 3:
{
s=(Token)match(input,35,FOLLOW_35_in_synpred14_SJaql407);
if (state.failed) return;
}
break;
case 4:
{
s=(Token)match(input,36,FOLLOW_36_in_synpred14_SJaql413);
if (state.failed) return;
}
break;
case 5:
{
s=(Token)match(input,37,FOLLOW_37_in_synpred14_SJaql419);
if (state.failed) return;
}
break;
case 6:
{
s=(Token)match(input,38,FOLLOW_38_in_synpred14_SJaql425);
if (state.failed) return;
}
break;
}
pushFollow(FOLLOW_arithmeticExpression_in_synpred14_SJaql430);
e2=arithmeticExpression();
state._fsp--;
if (state.failed) return;
}
}
