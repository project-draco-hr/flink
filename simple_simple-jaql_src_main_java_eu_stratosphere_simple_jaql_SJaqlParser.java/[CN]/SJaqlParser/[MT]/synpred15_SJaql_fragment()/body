{
  Token s=null;
  SJaqlParser.arithmeticExpression_return e2=null;
{
    int alt49=6;
switch (input.LA(1)) {
case 34:
{
        alt49=1;
      }
    break;
case 35:
{
    alt49=2;
  }
break;
case 36:
{
alt49=3;
}
break;
case 37:
{
alt49=4;
}
break;
case 38:
{
alt49=5;
}
break;
case 39:
{
alt49=6;
}
break;
default :
if (state.backtracking > 0) {
state.failed=true;
return;
}
NoViableAltException nvae=new NoViableAltException("",49,0,input);
throw nvae;
}
switch (alt49) {
case 1:
{
s=(Token)match(input,34,FOLLOW_34_in_synpred15_SJaql403);
if (state.failed) return;
}
break;
case 2:
{
s=(Token)match(input,35,FOLLOW_35_in_synpred15_SJaql409);
if (state.failed) return;
}
break;
case 3:
{
s=(Token)match(input,36,FOLLOW_36_in_synpred15_SJaql415);
if (state.failed) return;
}
break;
case 4:
{
s=(Token)match(input,37,FOLLOW_37_in_synpred15_SJaql421);
if (state.failed) return;
}
break;
case 5:
{
s=(Token)match(input,38,FOLLOW_38_in_synpred15_SJaql427);
if (state.failed) return;
}
break;
case 6:
{
s=(Token)match(input,39,FOLLOW_39_in_synpred15_SJaql433);
if (state.failed) return;
}
break;
}
pushFollow(FOLLOW_arithmeticExpression_in_synpred15_SJaql438);
e2=arithmeticExpression();
state._fsp--;
if (state.failed) return;
}
}
