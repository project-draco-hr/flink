{
  Token s=null;
  SJaqlParser.arithmeticExpression_return e2=null;
{
    int alt56=6;
switch (input.LA(1)) {
case 43:
{
        alt56=1;
      }
    break;
case 44:
{
    alt56=2;
  }
break;
case 45:
{
alt56=3;
}
break;
case 46:
{
alt56=4;
}
break;
case 47:
{
alt56=5;
}
break;
case 48:
{
alt56=6;
}
break;
default :
if (state.backtracking > 0) {
state.failed=true;
return;
}
NoViableAltException nvae=new NoViableAltException("",56,0,input);
throw nvae;
}
switch (alt56) {
case 1:
{
s=(Token)match(input,43,FOLLOW_43_in_synpred22_SJaql580);
if (state.failed) return;
}
break;
case 2:
{
s=(Token)match(input,44,FOLLOW_44_in_synpred22_SJaql586);
if (state.failed) return;
}
break;
case 3:
{
s=(Token)match(input,45,FOLLOW_45_in_synpred22_SJaql592);
if (state.failed) return;
}
break;
case 4:
{
s=(Token)match(input,46,FOLLOW_46_in_synpred22_SJaql598);
if (state.failed) return;
}
break;
case 5:
{
s=(Token)match(input,47,FOLLOW_47_in_synpred22_SJaql604);
if (state.failed) return;
}
break;
case 6:
{
s=(Token)match(input,48,FOLLOW_48_in_synpred22_SJaql610);
if (state.failed) return;
}
break;
}
pushFollow(FOLLOW_arithmeticExpression_in_synpred22_SJaql615);
e2=arithmeticExpression();
state._fsp--;
if (state.failed) return;
}
}
