{
  if (traversalStack.isEmpty()) {
    final TraversalEntry newentry=new TraversalEntry(this.entryVertices.get(numVisitedEntryVertices),0);
    traversalStack.push(newentry);
  }
  final ManagementGroupVertex returnVertex=traversalStack.peek().getGroupVertex();
  do {
    final TraversalEntry te=traversalStack.peek();
    final ManagementGroupVertex candidateVertex=getCandidateVertex(te,forward);
    if (candidateVertex == null) {
      traversalStack.pop();
    }
 else {
      final TraversalEntry newte=new TraversalEntry(candidateVertex,0);
      traversalStack.add(newte);
      break;
    }
  }
 while (!traversalStack.isEmpty());
  alreadyVisited.add(returnVertex);
  return returnVertex;
}
