{
  super.initEnvironment(1024 * 1024 * 1);
  super.addInput(new DelayingInfinitiveInputIterator(100));
  super.addOutput(new NirvanaOutputList());
  final TempTask testTask=new TempTask();
  super.getTaskConfig().setIOBufferSize(1);
  super.registerTask(testTask,PrevStub.class);
  Thread taskRunner=new Thread(){
    public void run(){
      try {
        testTask.invoke();
      }
 catch (      Exception ie) {
        ie.printStackTrace();
        Assert.fail("Task threw exception although it was properly canceled");
      }
    }
  }
;
  taskRunner.start();
  TaskCancelThread tct=new TaskCancelThread(1,taskRunner,testTask);
  tct.start();
  try {
    tct.join();
    taskRunner.join();
  }
 catch (  InterruptedException ie) {
    Assert.fail("Joining threads failed");
  }
}
