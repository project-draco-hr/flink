{
  ZKGroupTopicDirs topicDirs=new ZKGroupTopicDirs(groupId,topic);
  String path=topicDirs.consumerOffsetDir() + "/" + partition;
  curatorClient.newNamespaceAwareEnsurePath(path).ensure(curatorClient.getZookeeperClient());
  byte[] data=curatorClient.getData().forPath(path);
  if (data == null) {
    return OFFSET_NOT_SET;
  }
 else {
    String asString=new String(data);
    if (asString.length() == 0) {
      return OFFSET_NOT_SET;
    }
 else {
      try {
        return Long.parseLong(asString);
      }
 catch (      NumberFormatException e) {
        throw new Exception(String.format("The offset in ZooKeeper for group '%s', topic '%s', partition %d is a malformed string: %s",groupId,topic,partition,asString));
      }
    }
  }
}
