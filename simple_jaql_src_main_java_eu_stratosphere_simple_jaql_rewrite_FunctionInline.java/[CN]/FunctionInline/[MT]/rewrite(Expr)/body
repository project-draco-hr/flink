{
  FunctionCallExpr call=(FunctionCallExpr)expr;
  Expr inlined=call.inlineIfPossible();
  if (inlined != call) {
    call.replaceInParent(inlined);
    return true;
  }
  Expr callFn=call.fnExpr();
  if (callFn instanceof DoExpr) {
    DoExpr de=(DoExpr)callFn;
    call.replaceInParent(de);
    Expr ret=de.returnExpr();
    ret.replaceInParent(call);
    call.setChild(0,ret);
    return true;
  }
  return false;
}
