{
  final ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
  DataSet<CustomType> ds1=env.fromCollection(customTypeData);
  DataSet<CustomType> ds2=env.fromCollection(customTypeData);
  try {
    ds1.join(ds2).where(new KeySelector<CustomType,Long>(){
      @Override public Long getKey(      CustomType value){
        return value.myLong;
      }
    }
).equalTo(new KeySelector<CustomType,Long>(){
      @Override public Long getKey(      CustomType value){
        return value.myLong;
      }
    }
).projectFirst().projectSecond().types(CustomType.class,CustomType.class);
  }
 catch (  Exception e) {
    Assert.fail();
  }
}
