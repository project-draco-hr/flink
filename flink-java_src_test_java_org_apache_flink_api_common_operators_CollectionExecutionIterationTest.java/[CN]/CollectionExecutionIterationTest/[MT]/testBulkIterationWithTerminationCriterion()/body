{
  try {
    ExecutionEnvironment env=ExecutionEnvironment.createCollectionsEnvironment();
    IterativeDataSet<Integer> iteration=env.fromElements(1).iterate(100);
    DataSet<Integer> iterationResult=iteration.map(new AddSuperstepNumberMapper());
    DataSet<Integer> terminationCriterion=iterationResult.filter(new FilterFunction<Integer>(){
      public boolean filter(      Integer value){
        return value < 50;
      }
    }
);
    List<Integer> collected=new ArrayList<Integer>();
    iteration.closeWith(iterationResult,terminationCriterion).output(new LocalCollectionOutputFormat<Integer>(collected));
    env.execute();
    assertEquals(1,collected.size());
    assertEquals(56,collected.get(0).intValue());
  }
 catch (  Exception e) {
    e.printStackTrace();
    fail(e.getMessage());
  }
}
