{
  RocksDB.loadLibrary();
  try (BackupEngine backupEngine=BackupEngine.open(Env.getDefault(),new BackupableDBOptions(restorePath + "/"))){
    backupEngine.restoreDbFromLatestBackup(new File(dbPath,"db").getAbsolutePath(),new File(dbPath,"db").getAbsolutePath(),new RestoreOptions(true));
    FileUtils.deleteDirectory(new File(restorePath));
  }
 catch (  RocksDBException|IOException|IllegalArgumentException e) {
    throw new RuntimeException("Error while restoring RocksDB state from " + restorePath,e);
  }
  this.keySerializer=requireNonNull(keySerializer);
  this.namespaceSerializer=namespaceSerializer;
  this.dbPath=dbPath;
  this.checkpointPath=checkpointPath;
  if (!dbPath.exists()) {
    if (!dbPath.mkdirs()) {
      throw new RuntimeException("Could not create RocksDB data directory.");
    }
  }
  try {
    db=RocksDB.open(options,new File(dbPath,"db").getAbsolutePath());
  }
 catch (  RocksDBException e) {
    throw new RuntimeException("Error while opening RocksDB instance.",e);
  }
}
