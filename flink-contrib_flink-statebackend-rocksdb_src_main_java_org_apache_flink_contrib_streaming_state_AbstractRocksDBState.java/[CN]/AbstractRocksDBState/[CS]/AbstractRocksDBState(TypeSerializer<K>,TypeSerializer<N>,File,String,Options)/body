{
  rocksDbPath=new File(basePath,"db" + UUID.randomUUID().toString());
  this.keySerializer=requireNonNull(keySerializer);
  this.namespaceSerializer=namespaceSerializer;
  this.basePath=basePath;
  this.checkpointPath=checkpointPath;
  RocksDB.loadLibrary();
  if (!basePath.exists()) {
    if (!basePath.mkdirs()) {
      throw new RuntimeException("Could not create RocksDB data directory.");
    }
  }
  try {
    if (rocksDbPath.exists()) {
      LOG.warn("Deleting already existing db directory {}.",rocksDbPath);
      FileUtils.deleteDirectory(rocksDbPath);
    }
  }
 catch (  IOException e) {
    throw new RuntimeException("Error cleaning RocksDB data directory.",e);
  }
  try {
    db=RocksDB.open(options,rocksDbPath.getAbsolutePath());
  }
 catch (  RocksDBException e) {
    throw new RuntimeException("Error while opening RocksDB instance.",e);
  }
}
