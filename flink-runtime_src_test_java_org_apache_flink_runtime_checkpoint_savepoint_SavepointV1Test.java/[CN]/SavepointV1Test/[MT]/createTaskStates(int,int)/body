{
  List<TaskState> taskStates=new ArrayList<>(numTaskStates);
  for (int i=0; i < numTaskStates; i++) {
    TaskState taskState=new TaskState(new JobVertexID(),numSubtaskStates,numSubtaskStates,1);
    for (int j=0; j < numSubtaskStates; j++) {
      StreamStateHandle stateHandle=new ByteStreamStateHandle("Hello".getBytes());
      taskState.putState(i,new SubtaskState(new ChainedStateHandle<>(Collections.singletonList(stateHandle)),0));
      stateHandle=new ByteStreamStateHandle("Beautiful".getBytes());
      Map<String,long[]> offsetsMap=new HashMap<>();
      offsetsMap.put("A",new long[]{0,10,20});
      offsetsMap.put("B",new long[]{30,40,50});
      OperatorStateHandle operatorStateHandle=new OperatorStateHandle(stateHandle,offsetsMap);
      taskState.putPartitionableState(i,new ChainedStateHandle<OperatorStateHandle>(Collections.singletonList(operatorStateHandle)));
    }
    taskState.putKeyedState(0,new KeyGroupsStateHandle(new KeyGroupRangeOffsets(1,1,new long[]{42}),new ByteStreamStateHandle("World".getBytes())));
    taskStates.add(taskState);
  }
  return taskStates;
}
