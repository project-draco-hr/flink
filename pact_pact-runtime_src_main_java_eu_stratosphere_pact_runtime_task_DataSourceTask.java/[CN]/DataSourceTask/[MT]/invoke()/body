{
  if (LOG.isInfoEnabled())   LOG.info(getLogString("Start PACT code"));
  try {
    RegularPactTask.openChainedTasks(this.chainedTasks,this);
    final Iterator<InputSplit> splitIterator=getInputSplits();
    while (!this.taskCanceled && splitIterator.hasNext()) {
      final InputSplit split=splitIterator.next();
      if (LOG.isDebugEnabled())       LOG.debug(getLogString("Opening input split " + split.toString()));
      final InputFormat<OT,InputSplit> format=this.format;
      format.open(split);
      if (LOG.isDebugEnabled())       LOG.debug(getLogString("Starting to read input from split " + split.toString()));
      final OT record=this.serializer.createInstance();
      if (record.getClass() == PactRecord.class) {
        final PactRecord pactRecord=(PactRecord)record;
        @SuppressWarnings("unchecked") final InputFormat<PactRecord,InputSplit> inFormat=(InputFormat<PactRecord,InputSplit>)format;
        if (this.output instanceof PactRecordOutputCollector) {
          final PactRecordOutputCollector output=(PactRecordOutputCollector)this.output;
          while (!this.taskCanceled && !inFormat.reachedEnd()) {
            if (inFormat.nextRecord(pactRecord)) {
              output.collect(pactRecord);
            }
          }
        }
 else         if (this.output instanceof ChainedMapDriver) {
          @SuppressWarnings("unchecked") final ChainedMapDriver<PactRecord,?> output=(ChainedMapDriver<PactRecord,?>)this.output;
          while (!this.taskCanceled && !inFormat.reachedEnd()) {
            if (inFormat.nextRecord(pactRecord)) {
              output.collect(pactRecord);
            }
          }
        }
 else {
          @SuppressWarnings("unchecked") final Collector<PactRecord> output=(Collector<PactRecord>)this.output;
          while (!this.taskCanceled && !inFormat.reachedEnd()) {
            if (inFormat.nextRecord(pactRecord)) {
              output.collect(pactRecord);
            }
          }
        }
      }
 else {
        if (this.output instanceof OutputCollector) {
          final OutputCollector<OT> output=(OutputCollector<OT>)this.output;
          while (!this.taskCanceled && !format.reachedEnd()) {
            if (format.nextRecord(record)) {
              output.collect(record);
            }
          }
        }
 else         if (this.output instanceof ChainedMapDriver) {
          @SuppressWarnings("unchecked") final ChainedMapDriver<OT,?> output=(ChainedMapDriver<OT,?>)this.output;
          while (!this.taskCanceled && !format.reachedEnd()) {
            if (format.nextRecord(record)) {
              output.collect(record);
            }
          }
        }
 else {
          final Collector<OT> output=this.output;
          while (!this.taskCanceled && !format.reachedEnd()) {
            if (format.nextRecord(record)) {
              output.collect(record);
            }
          }
        }
      }
      if (!this.taskCanceled) {
        if (LOG.isDebugEnabled())         LOG.debug(getLogString("Closing input split " + split.toString()));
        format.close();
      }
    }
    this.output.close();
    RegularPactTask.closeChainedTasks(this.chainedTasks,this);
  }
 catch (  Exception ex) {
    try {
      this.format.close();
    }
 catch (    Throwable t) {
    }
    RegularPactTask.cancelChainedTasks(this.chainedTasks);
    if (!this.taskCanceled) {
      RegularPactTask.logAndThrowException(ex,this);
    }
  }
  if (!this.taskCanceled) {
    if (LOG.isInfoEnabled())     LOG.info(getLogString("Finished PACT code"));
  }
 else {
    if (LOG.isWarnEnabled())     LOG.warn(getLogString("PACT code cancelled"));
  }
}
