{
  LocalProperties lpDefaults=new LocalProperties();
  GlobalProperties gp=null;
  LocalProperties lp=null;
  boolean isFirst=false;
  gp=new GlobalProperties();
  lp=new LocalProperties();
  gp.setKeyUnique(false);
  lp.setKeyUnique(false);
  GlobalProperties gpNoOrder=gp.createCopy();
  gpNoOrder.setKeyOrder(Order.NONE);
  LocalStrategy ls=getLocalStrategy();
  if (ls != LocalStrategy.NONE) {
    if (ls == LocalStrategy.NESTEDLOOP_STREAMED_OUTER_FIRST) {
      gp=isFirst ? gp : gpNoOrder;
      lp=isFirst ? lp : lpDefaults;
    }
 else     if (ls == LocalStrategy.NESTEDLOOP_STREAMED_OUTER_SECOND) {
      gp=isFirst ? gpNoOrder : gp;
      lp=isFirst ? lpDefaults : lp;
    }
 else     if (ls == LocalStrategy.NESTEDLOOP_BLOCKED_OUTER_FIRST || ls == LocalStrategy.NESTEDLOOP_BLOCKED_OUTER_SECOND) {
      gp=gpNoOrder;
      lp=lpDefaults;
    }
 else {
      return;
    }
    createCrossAlternative(target,allPreds1,allPreds2,ss1,ss2,ls,gp,lp,estimator);
  }
 else {
    if (haveValidOutputEstimates(allPreds1) && haveValidOutputEstimates(allPreds2)) {
      if (isFirst) {
        createCrossAlternative(target,allPreds1,allPreds2,ss1,ss2,LocalStrategy.NESTEDLOOP_STREAMED_OUTER_FIRST,gp,lp,estimator);
        createCrossAlternative(target,allPreds1,allPreds2,ss1,ss2,LocalStrategy.NESTEDLOOP_STREAMED_OUTER_SECOND,gpNoOrder.createCopy(),lpDefaults.createCopy(),estimator);
      }
 else {
        createCrossAlternative(target,allPreds1,allPreds2,ss1,ss2,LocalStrategy.NESTEDLOOP_STREAMED_OUTER_SECOND,gp,lp,estimator);
        createCrossAlternative(target,allPreds1,allPreds2,ss1,ss2,LocalStrategy.NESTEDLOOP_STREAMED_OUTER_FIRST,gpNoOrder.createCopy(),lpDefaults.createCopy(),estimator);
      }
    }
    createCrossAlternative(target,allPreds1,allPreds2,ss1,ss2,LocalStrategy.NESTEDLOOP_BLOCKED_OUTER_FIRST,gpNoOrder.createCopy(),lpDefaults.createCopy(),estimator);
    createCrossAlternative(target,allPreds1,allPreds2,ss1,ss2,LocalStrategy.NESTEDLOOP_BLOCKED_OUTER_SECOND,gpNoOrder,lpDefaults,estimator);
  }
}
