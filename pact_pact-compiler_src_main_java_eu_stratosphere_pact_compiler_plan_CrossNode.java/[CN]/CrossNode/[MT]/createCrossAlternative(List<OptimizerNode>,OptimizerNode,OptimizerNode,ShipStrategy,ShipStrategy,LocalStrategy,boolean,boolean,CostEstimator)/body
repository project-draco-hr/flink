{
  GlobalProperties gp;
  LocalProperties lp;
  gp=PactConnection.getGlobalPropertiesAfterConnection(subPlan1,this,ss1);
  lp=PactConnection.getLocalPropertiesAfterConnection(subPlan1,this,ss1);
  if (keepFirstOrder == false) {
    gp.setOrdering(null);
    lp.setOrdering(null);
  }
  CrossNode n=new CrossNode(this,subPlan1,subPlan2,input1,input2,gp,lp);
  n.input1.setShipStrategy(ss1);
  n.input2.setShipStrategy(ss2);
  n.setLocalStrategy(ls);
  n.getGlobalProperties().filterByNodesConstantSet(this,0);
  n.getLocalProperties().filterByNodesConstantSet(this,0);
  estimator.costOperator(n);
  target.add(n);
  gp=PactConnection.getGlobalPropertiesAfterConnection(subPlan2,this,ss2);
  lp=PactConnection.getLocalPropertiesAfterConnection(subPlan2,this,ss2);
  if (keepSecondOrder == false) {
    gp.setOrdering(null);
    lp.setOrdering(null);
  }
  n=new CrossNode(this,subPlan1,subPlan2,input1,input2,gp,lp);
  n.input1.setShipStrategy(ss1);
  n.input2.setShipStrategy(ss2);
  n.setLocalStrategy(ls);
  n.getGlobalProperties().filterByNodesConstantSet(this,1);
  n.getLocalProperties().filterByNodesConstantSet(this,1);
  estimator.costOperator(n);
  target.add(n);
}
