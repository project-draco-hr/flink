{
  boolean keepFirstOrder=false;
  boolean keepSecondOrder=false;
  LocalStrategy ls=getLocalStrategy();
  if (ls != LocalStrategy.NONE) {
    if (ls == LocalStrategy.NESTEDLOOP_STREAMED_OUTER_FIRST) {
      keepFirstOrder=true;
    }
 else     if (ls == LocalStrategy.NESTEDLOOP_STREAMED_OUTER_SECOND) {
      keepSecondOrder=true;
    }
 else     if (ls == LocalStrategy.NESTEDLOOP_BLOCKED_OUTER_FIRST || ls == LocalStrategy.NESTEDLOOP_BLOCKED_OUTER_SECOND) {
    }
 else {
      return;
    }
    createCrossAlternative(target,pred1,pred2,ss1,ss2,ls,keepFirstOrder,keepSecondOrder,estimator);
  }
 else {
    if (pred1.getEstimatedOutputSize() > 0 && pred2.getEstimatedOutputSize() > 0) {
      createCrossAlternative(target,pred1,pred2,ss1,ss2,LocalStrategy.NESTEDLOOP_STREAMED_OUTER_FIRST,true,false,estimator);
      createCrossAlternative(target,pred1,pred2,ss1,ss2,LocalStrategy.NESTEDLOOP_STREAMED_OUTER_SECOND,false,true,estimator);
    }
    createCrossAlternative(target,pred1,pred2,ss1,ss2,LocalStrategy.NESTEDLOOP_BLOCKED_OUTER_FIRST,false,false,estimator);
    createCrossAlternative(target,pred1,pred2,ss1,ss2,LocalStrategy.NESTEDLOOP_BLOCKED_OUTER_SECOND,false,false,estimator);
  }
}
