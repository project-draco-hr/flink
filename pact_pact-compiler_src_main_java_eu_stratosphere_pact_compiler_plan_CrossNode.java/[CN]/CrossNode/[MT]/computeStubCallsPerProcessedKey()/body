{
  long numRecords1=0;
  for (  PactConnection c : this.input1) {
    long recs=c.getSourcePact().estimatedNumRecords;
    if (recs == -1) {
      return -1;
    }
    numRecords1+=recs;
  }
  long numRecords2=0;
  for (  PactConnection c : this.input2) {
    long recs=c.getSourcePact().estimatedNumRecords;
    if (recs == -1) {
      return -1;
    }
    numRecords2+=recs;
  }
  long carthesianCard=numRecords1 * numRecords2;
  long numKey1=0;
  for (  PactConnection c : this.input1) {
    long keys=c.getSourcePact().estimatedKeyCardinality;
    if (keys == -1) {
      numKey1=-1;
      break;
    }
    numKey1+=keys;
  }
  long numKey2=0;
  for (  PactConnection c : this.input2) {
    long keys=c.getSourcePact().estimatedKeyCardinality;
    if (keys == -1) {
      numKey2=-1;
      break;
    }
    numKey2+=keys;
  }
switch (this.getOutputContract()) {
case SameKeyFirst:
    if (numKey1 == -1)     return -1;
  return carthesianCard / numKey1;
case SameKeySecond:
if (numKey2 == -1) return -1;
return carthesianCard / numKey2;
}
if (numKey1 == -1 || numKey2 == -1) return -1;
return carthesianCard / numKey1 / numKey2;
}
