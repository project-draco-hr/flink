{
  OptimizerNode pred1=input1 == null ? null : input1.getSourcePact();
  OptimizerNode pred2=input2 == null ? null : input2.getSourcePact();
  if (pred1 != null && pred2 != null && pred1.getEstimatedNumRecords() != -1 && pred2.getEstimatedNumRecords() != -1) {
    long carthesianCard=pred1.getEstimatedNumRecords() * pred2.getEstimatedNumRecords();
switch (this.getOutputContract()) {
case SameKeyFirst:
      if (pred1.getEstimatedKeyCardinality() != -1) {
        return carthesianCard / pred1.getEstimatedKeyCardinality();
      }
 else {
        return -1;
      }
case SameKeySecond:
    if (pred2.getEstimatedKeyCardinality() != -1) {
      return carthesianCard / pred2.getEstimatedKeyCardinality();
    }
 else {
      return -1;
    }
default :
  if (pred1.getEstimatedKeyCardinality() != -1 && pred2.getEstimatedKeyCardinality() != -1) {
    return carthesianCard / (pred1.getEstimatedKeyCardinality() * pred2.getEstimatedKeyCardinality());
  }
 else {
    return -1;
  }
}
}
 else {
return -1;
}
}
