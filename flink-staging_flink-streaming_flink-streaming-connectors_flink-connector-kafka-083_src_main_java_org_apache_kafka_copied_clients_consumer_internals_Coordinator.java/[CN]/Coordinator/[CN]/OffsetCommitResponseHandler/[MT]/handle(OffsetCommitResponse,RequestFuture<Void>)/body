{
  sensors.commitLatency.record(response.requestLatencyMs());
  for (  Map.Entry<TopicPartition,Short> entry : commitResponse.responseData().entrySet()) {
    TopicPartition tp=entry.getKey();
    long offset=this.offsets.get(tp);
    short errorCode=entry.getValue();
    if (errorCode == Errors.NONE.code()) {
      log.debug("Committed offset {} for partition {}",offset,tp);
      subscriptions.committed(tp,offset);
    }
 else     if (errorCode == Errors.CONSUMER_COORDINATOR_NOT_AVAILABLE.code() || errorCode == Errors.NOT_COORDINATOR_FOR_CONSUMER.code()) {
      coordinatorDead();
      future.raise(Errors.forCode(errorCode));
      return;
    }
 else     if (errorCode == Errors.OFFSET_METADATA_TOO_LARGE.code() || errorCode == Errors.INVALID_COMMIT_OFFSET_SIZE.code()) {
      log.error("Error committing partition {} at offset {}: {}",tp,offset,Errors.forCode(errorCode).exception().getMessage());
    }
 else     if (errorCode == Errors.UNKNOWN_CONSUMER_ID.code() || errorCode == Errors.ILLEGAL_GENERATION.code()) {
      subscriptions.needReassignment();
      future.raise(Errors.forCode(errorCode));
      return;
    }
 else {
      future.raise(Errors.forCode(errorCode));
      log.error("Error committing partition {} at offset {}: {}",tp,offset,Errors.forCode(errorCode).exception().getMessage());
    }
  }
  future.complete(null);
}
