{
  verticesInput.clear();
  verticesInput.add(new Tuple2<Long,Long>(1l,1l));
  verticesInput.add(new Tuple2<Long,Long>(2l,2l));
  verticesInput.add(new Tuple2<Long,Long>(3l,3l));
  verticesInput.add(new Tuple2<Long,Long>(4l,4l));
  verticesInput.add(new Tuple2<Long,Long>(5l,5l));
  verticesInput.add(new Tuple2<Long,Long>(6l,6l));
  verticesInput.add(new Tuple2<Long,Long>(7l,7l));
  verticesInput.add(new Tuple2<Long,Long>(8l,8l));
  verticesInput.add(new Tuple2<Long,Long>(9l,9l));
  edgesInput.clear();
  edgesInput.add(new Tuple2<Long,Long>(1l,2l));
  edgesInput.add(new Tuple2<Long,Long>(1l,3l));
  edgesInput.add(new Tuple2<Long,Long>(2l,3l));
  edgesInput.add(new Tuple2<Long,Long>(2l,4l));
  edgesInput.add(new Tuple2<Long,Long>(2l,1l));
  edgesInput.add(new Tuple2<Long,Long>(3l,1l));
  edgesInput.add(new Tuple2<Long,Long>(3l,2l));
  edgesInput.add(new Tuple2<Long,Long>(4l,2l));
  edgesInput.add(new Tuple2<Long,Long>(4l,6l));
  edgesInput.add(new Tuple2<Long,Long>(5l,6l));
  edgesInput.add(new Tuple2<Long,Long>(6l,4l));
  edgesInput.add(new Tuple2<Long,Long>(6l,5l));
  edgesInput.add(new Tuple2<Long,Long>(7l,8l));
  edgesInput.add(new Tuple2<Long,Long>(7l,9l));
  edgesInput.add(new Tuple2<Long,Long>(8l,7l));
  edgesInput.add(new Tuple2<Long,Long>(8l,9l));
  edgesInput.add(new Tuple2<Long,Long>(9l,7l));
  edgesInput.add(new Tuple2<Long,Long>(9l,8l));
  resultPath=getTempDirPath("result");
  expectedResult="(1,1)\n" + "(2,1)\n" + "(3,1)\n"+ "(4,1)\n"+ "(5,1)\n"+ "(6,1)\n"+ "(7,7)\n"+ "(8,7)\n"+ "(9,7)\n";
}
