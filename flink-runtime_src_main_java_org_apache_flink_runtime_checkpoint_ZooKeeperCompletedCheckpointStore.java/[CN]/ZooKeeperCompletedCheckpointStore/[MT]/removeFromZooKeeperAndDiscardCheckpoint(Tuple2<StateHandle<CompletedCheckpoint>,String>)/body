{
  final BackgroundCallback callback=new BackgroundCallback(){
    @Override public void processResult(    CuratorFramework client,    CuratorEvent event) throws Exception {
      try {
        if (event.getType() == CuratorEventType.DELETE) {
          if (event.getResultCode() == 0) {
            CompletedCheckpoint checkpoint=stateHandleAndPath.f0.getState(userClassLoader);
            checkpoint.discard(userClassLoader);
            stateHandleAndPath.f0.discardState();
            LOG.debug("Discarded " + checkpoint);
          }
 else {
            throw new IllegalStateException("Unexpected result code " + event.getResultCode() + " in '"+ event+ "' callback.");
          }
        }
 else {
          throw new IllegalStateException("Unexpected event type " + event.getType() + " in '"+ event+ "' callback.");
        }
      }
 catch (      Exception e) {
        LOG.error("Failed to discard checkpoint.",e);
      }
    }
  }
;
  checkpointsInZooKeeper.remove(stateHandleAndPath.f1,callback);
}
