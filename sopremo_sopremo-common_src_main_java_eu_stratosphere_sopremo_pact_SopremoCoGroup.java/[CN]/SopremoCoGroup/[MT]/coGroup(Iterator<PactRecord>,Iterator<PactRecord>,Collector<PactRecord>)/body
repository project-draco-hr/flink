{
  this.context.increaseInputCounter();
  this.collector.configure(out,this.context);
  this.cachedIterator1.setIterator(records1);
  this.cachedIterator2.setIterator(records2);
  try {
    if (SopremoUtil.DEBUG && SopremoUtil.LOG.isTraceEnabled()) {
      ArrayNode leftArray=new ArrayNode(this.leftArray);
      ArrayNode rightArray=new ArrayNode(this.rightArray);
      SopremoUtil.LOG.trace(String.format("%s %s/%s",this.getContext().operatorTrace(),leftArray,rightArray));
      this.coGroup(leftArray,rightArray,this.collector);
    }
 else {
      this.coGroup(this.leftArray,this.rightArray,this.collector);
    }
  }
 catch (  final RuntimeException e) {
    SopremoUtil.LOG.error(String.format("Error occurred @ %s with %s/%s: %s",this.getContext().operatorTrace(),this.leftArray,this.rightArray,e));
    throw e;
  }
}
