{
  this.context.increaseInputCounter();
  this.collector.configure(out,this.context);
  this.cachedIterator1.setIterator(records1);
  this.cachedIterator2.setIterator(records2);
  IArrayNode leftArray=this.needsResettableIteratorLeft ? new ArrayNode(this.leftArray) : this.leftArray;
  IArrayNode rightArray=this.needsResettableIteratorRight ? new ArrayNode(this.rightArray) : this.rightArray;
  if (SopremoUtil.LOG.isTraceEnabled()) {
    if (!this.needsResettableIteratorLeft)     leftArray=new ArrayNode(leftArray);
    if (!this.needsResettableIteratorRight)     rightArray=new ArrayNode(rightArray);
    SopremoUtil.LOG.trace(String.format("%s %s/%s",this.getContext().operatorTrace(),leftArray,rightArray));
  }
  try {
    this.coGroup(leftArray,rightArray,this.collector);
  }
 catch (  final RuntimeException e) {
    SopremoUtil.LOG.error(String.format("Error occurred @ %s with %s/%s: %s",this.getContext().operatorTrace(),leftArray,rightArray,e));
    throw e;
  }
}
