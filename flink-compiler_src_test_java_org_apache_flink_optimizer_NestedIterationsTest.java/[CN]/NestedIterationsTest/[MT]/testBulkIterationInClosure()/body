{
  try {
    ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
    DataSet<Long> data1=env.generateSequence(1,100);
    DataSet<Long> data2=env.generateSequence(1,100);
    IterativeDataSet<Long> firstIteration=data1.iterate(100);
    DataSet<Long> firstResult=firstIteration.closeWith(firstIteration.map(new IdentityMapper<Long>()));
    IterativeDataSet<Long> mainIteration=data2.map(new IdentityMapper<Long>()).iterate(100);
    DataSet<Long> joined=mainIteration.join(firstResult).where(new IdentityKeyExtractor<Long>()).equalTo(new IdentityKeyExtractor<Long>()).with(new DummyFlatJoinFunction<Long>());
    DataSet<Long> mainResult=mainIteration.closeWith(joined);
    mainResult.print();
    Plan p=env.createProgramPlan();
    OptimizedPlan op=compileNoStats(p);
    new JobGraphGenerator().compileJobGraph(op);
  }
 catch (  Exception e) {
    e.printStackTrace();
    fail(e.getMessage());
  }
}
