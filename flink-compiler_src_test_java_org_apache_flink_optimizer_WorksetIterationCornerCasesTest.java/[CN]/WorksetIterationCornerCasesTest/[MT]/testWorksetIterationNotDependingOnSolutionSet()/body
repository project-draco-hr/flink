{
  try {
    ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
    DataSet<Tuple2<Long,Long>> input=env.generateSequence(1,100).map(new Duplicator<Long>());
    DeltaIteration<Tuple2<Long,Long>,Tuple2<Long,Long>> iteration=input.iterateDelta(input,100,1);
    DataSet<Tuple2<Long,Long>> iterEnd=iteration.getWorkset().map(new TestMapper<Tuple2<Long,Long>>());
    iteration.closeWith(iterEnd,iterEnd).print();
    Plan p=env.createProgramPlan();
    OptimizedPlan op=compileNoStats(p);
    WorksetIterationPlanNode wipn=(WorksetIterationPlanNode)op.getDataSinks().iterator().next().getInput().getSource();
    assertTrue(wipn.getSolutionSetPlanNode().getOutgoingChannels().isEmpty());
    NepheleJobGraphGenerator jgg=new NepheleJobGraphGenerator();
    jgg.compileJobGraph(op);
  }
 catch (  Exception e) {
    e.printStackTrace();
    fail(e.getMessage());
  }
}
