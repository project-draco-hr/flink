{
  MeteorParser.unaryExpression_return retval=new MeteorParser.unaryExpression_return();
  retval.start=input.LT(1);
  EvaluationExpression root_0=null;
  Token set37=null;
  MeteorParser.castExpression_return castExpression38=null;
  EvaluationExpression set37_tree=null;
  try {
{
      root_0=(EvaluationExpression)adaptor.nil();
      int alt21=2;
      int LA21_0=input.LA(1);
      if ((LA21_0 == 35 || LA21_0 == 70)) {
        alt21=1;
      }
switch (alt21) {
case 1:
{
          set37=(Token)input.LT(1);
          if (input.LA(1) == 35 || input.LA(1) == 70) {
            input.consume();
            if (state.backtracking == 0)             adaptor.addChild(root_0,(EvaluationExpression)adaptor.create(set37));
            state.errorRecovery=false;
            state.failed=false;
          }
 else {
            if (state.backtracking > 0) {
              state.failed=true;
              return retval;
            }
            MismatchedSetException mse=new MismatchedSetException(null,input);
            throw mse;
          }
        }
      break;
  }
  pushFollow(FOLLOW_castExpression_in_unaryExpression870);
  castExpression38=castExpression();
  state._fsp--;
  if (state.failed)   return retval;
  if (state.backtracking == 0)   adaptor.addChild(root_0,castExpression38.getTree());
}
retval.stop=input.LT(-1);
if (state.backtracking == 0) {
  retval.tree=(EvaluationExpression)adaptor.rulePostProcessing(root_0);
  adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
  finally {
}
return retval;
}
