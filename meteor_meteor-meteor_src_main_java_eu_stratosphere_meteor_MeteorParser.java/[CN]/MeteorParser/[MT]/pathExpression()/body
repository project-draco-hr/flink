{
  pathExpression_stack.push(new pathExpression_scope());
  MeteorParser.pathExpression_return retval=new MeteorParser.pathExpression_return();
  retval.start=input.LT(1);
  EvaluationExpression root_0=null;
  Token field=null;
  Token string_literal43=null;
  Token char_literal44=null;
  MeteorParser.arrayAccess_return arrayAccess45=null;
  EvaluationExpression field_tree=null;
  EvaluationExpression string_literal43_tree=null;
  EvaluationExpression char_literal44_tree=null;
  RewriteRuleTokenStream stream_45=new RewriteRuleTokenStream(adaptor,"token 45");
  RewriteRuleTokenStream stream_56=new RewriteRuleTokenStream(adaptor,"token 56");
  RewriteRuleTokenStream stream_ID=new RewriteRuleTokenStream(adaptor,"token ID");
  RewriteRuleSubtreeStream stream_arrayAccess=new RewriteRuleSubtreeStream(adaptor,"rule arrayAccess");
  ((pathExpression_scope)pathExpression_stack.peek()).fragments=new ArrayList<EvaluationExpression>();
  paraphrase.push("a path expression");
  try {
{
      int cnt24=0;
      loop24:       do {
        int alt24=4;
switch (input.LA(1)) {
case 56:
{
            int LA24_2=input.LA(2);
            if ((synpred7_Meteor())) {
              alt24=1;
            }
          }
        break;
case 45:
{
        int LA24_3=input.LA(2);
        if ((synpred8_Meteor())) {
          alt24=2;
        }
      }
    break;
case 57:
{
    int LA24_4=input.LA(2);
    if ((synpred9_Meteor())) {
      alt24=3;
    }
  }
break;
}
switch (alt24) {
case 1:
{
{
  string_literal43=(Token)match(input,56,FOLLOW_56_in_pathExpression1036);
  if (state.failed)   return retval;
  if (state.backtracking == 0)   stream_56.add(string_literal43);
{
    field=(Token)match(input,ID,FOLLOW_ID_in_pathExpression1041);
    if (state.failed)     return retval;
    if (state.backtracking == 0)     stream_ID.add(field);
    if (state.backtracking == 0) {
      ((pathExpression_scope)pathExpression_stack.peek()).fragments.add(new ObjectAccess((field != null ? field.getText() : null),true));
    }
  }
}
}
break;
case 2:
{
{
char_literal44=(Token)match(input,45,FOLLOW_45_in_pathExpression1065);
if (state.failed) return retval;
if (state.backtracking == 0) stream_45.add(char_literal44);
{
field=(Token)match(input,ID,FOLLOW_ID_in_pathExpression1070);
if (state.failed) return retval;
if (state.backtracking == 0) stream_ID.add(field);
if (state.backtracking == 0) {
  ((pathExpression_scope)pathExpression_stack.peek()).fragments.add(new ObjectAccess((field != null ? field.getText() : null)));
}
}
}
}
break;
case 3:
{
pushFollow(FOLLOW_arrayAccess_in_pathExpression1093);
arrayAccess45=arrayAccess();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) stream_arrayAccess.add(arrayAccess45.getTree());
if (state.backtracking == 0) {
((pathExpression_scope)pathExpression_stack.peek()).fragments.add((arrayAccess45 != null ? ((EvaluationExpression)arrayAccess45.tree) : null));
}
}
break;
default :
if (cnt24 >= 1) break loop24;
if (state.backtracking > 0) {
state.failed=true;
return retval;
}
EarlyExitException eee=new EarlyExitException(24,input);
throw eee;
}
cnt24++;
}
 while (true);
if (state.backtracking == 0) {
retval.tree=root_0;
RewriteRuleSubtreeStream stream_retval=new RewriteRuleSubtreeStream(adaptor,"rule retval",retval != null ? retval.tree : null);
root_0=(EvaluationExpression)adaptor.nil();
{
adaptor.addChild(root_0,PathExpression.wrapIfNecessary(((pathExpression_scope)pathExpression_stack.peek()).fragments));
}
retval.tree=root_0;
}
}
retval.stop=input.LT(-1);
if (state.backtracking == 0) {
retval.tree=(EvaluationExpression)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
if (state.backtracking == 0) {
paraphrase.pop();
}
}
 catch (RecognitionException e) {
throw e;
}
 finally {
pathExpression_stack.pop();
}
return retval;
}
