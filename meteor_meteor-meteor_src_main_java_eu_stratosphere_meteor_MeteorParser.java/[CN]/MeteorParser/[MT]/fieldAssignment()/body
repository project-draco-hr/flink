{
  MeteorParser.fieldAssignment_return retval=new MeteorParser.fieldAssignment_return();
  retval.start=input.LT(1);
  EvaluationExpression root_0=null;
  Token ID61=null;
  Token char_literal62=null;
  Token VAR64=null;
  Token char_literal65=null;
  Token STAR66=null;
  Token char_literal67=null;
  Token char_literal68=null;
  MeteorParser.operator_return op=null;
  MeteorParser.contextAwarePathExpression_return p=null;
  MeteorParser.expression_return e2=null;
  MeteorParser.expression_return expression63=null;
  EvaluationExpression ID61_tree=null;
  EvaluationExpression char_literal62_tree=null;
  EvaluationExpression VAR64_tree=null;
  EvaluationExpression char_literal65_tree=null;
  EvaluationExpression STAR66_tree=null;
  EvaluationExpression char_literal67_tree=null;
  EvaluationExpression char_literal68_tree=null;
  RewriteRuleTokenStream stream_45=new RewriteRuleTokenStream(adaptor,"token 45");
  RewriteRuleTokenStream stream_VAR=new RewriteRuleTokenStream(adaptor,"token VAR");
  RewriteRuleTokenStream stream_STAR=new RewriteRuleTokenStream(adaptor,"token STAR");
  RewriteRuleTokenStream stream_47=new RewriteRuleTokenStream(adaptor,"token 47");
  RewriteRuleTokenStream stream_51=new RewriteRuleTokenStream(adaptor,"token 51");
  RewriteRuleTokenStream stream_ID=new RewriteRuleTokenStream(adaptor,"token ID");
  RewriteRuleSubtreeStream stream_expression=new RewriteRuleSubtreeStream(adaptor,"rule expression");
  RewriteRuleSubtreeStream stream_contextAwarePathExpression=new RewriteRuleSubtreeStream(adaptor,"rule contextAwarePathExpression");
  RewriteRuleSubtreeStream stream_operator=new RewriteRuleSubtreeStream(adaptor,"rule operator");
  try {
    int alt32=2;
    int LA32_0=input.LA(1);
    if ((LA32_0 == ID)) {
      alt32=1;
    }
 else     if ((LA32_0 == VAR)) {
      alt32=2;
    }
 else {
      if (state.backtracking > 0) {
        state.failed=true;
        return retval;
      }
      NoViableAltException nvae=new NoViableAltException("",32,0,input);
      throw nvae;
    }
switch (alt32) {
case 1:
{
        ID61=(Token)match(input,ID,FOLLOW_ID_in_fieldAssignment1312);
        if (state.failed)         return retval;
        if (state.backtracking == 0)         stream_ID.add(ID61);
        char_literal62=(Token)match(input,47,FOLLOW_47_in_fieldAssignment1314);
        if (state.failed)         return retval;
        if (state.backtracking == 0)         stream_47.add(char_literal62);
        pushFollow(FOLLOW_expression_in_fieldAssignment1316);
        expression63=expression();
        state._fsp--;
        if (state.failed)         return retval;
        if (state.backtracking == 0)         stream_expression.add(expression63.getTree());
        if (state.backtracking == 0) {
          ((objectCreation_scope)objectCreation_stack.peek()).mappings.add(new ObjectCreation.FieldAssignment((ID61 != null ? ID61.getText() : null),(expression63 != null ? ((EvaluationExpression)expression63.tree) : null)));
        }
        if (state.backtracking == 0) {
          retval.tree=root_0;
          RewriteRuleSubtreeStream stream_retval=new RewriteRuleSubtreeStream(adaptor,"rule retval",retval != null ? retval.tree : null);
          root_0=(EvaluationExpression)adaptor.nil();
{
            root_0=null;
          }
          retval.tree=root_0;
        }
      }
    break;
case 2:
{
    VAR64=(Token)match(input,VAR,FOLLOW_VAR_in_fieldAssignment1331);
    if (state.failed)     return retval;
    if (state.backtracking == 0)     stream_VAR.add(VAR64);
    int alt31=3;
switch (input.LA(1)) {
case 45:
{
        int LA31_1=input.LA(2);
        if ((LA31_1 == STAR)) {
          alt31=1;
        }
 else         if ((LA31_1 == ID)) {
          alt31=3;
        }
 else {
          if (state.backtracking > 0) {
            state.failed=true;
            return retval;
          }
          NoViableAltException nvae=new NoViableAltException("",31,1,input);
          throw nvae;
        }
      }
    break;
case 51:
{
    alt31=2;
  }
break;
case 56:
case 57:
{
alt31=3;
}
break;
default :
if (state.backtracking > 0) {
state.failed=true;
return retval;
}
NoViableAltException nvae=new NoViableAltException("",31,0,input);
throw nvae;
}
switch (alt31) {
case 1:
{
char_literal65=(Token)match(input,45,FOLLOW_45_in_fieldAssignment1340);
if (state.failed) return retval;
if (state.backtracking == 0) stream_45.add(char_literal65);
STAR66=(Token)match(input,STAR,FOLLOW_STAR_in_fieldAssignment1342);
if (state.failed) return retval;
if (state.backtracking == 0) stream_STAR.add(STAR66);
if (state.backtracking == 0) {
((objectCreation_scope)objectCreation_stack.peek()).mappings.add(new ObjectCreation.CopyFields(makePath(VAR64)));
}
if (state.backtracking == 0) {
retval.tree=root_0;
RewriteRuleSubtreeStream stream_retval=new RewriteRuleSubtreeStream(adaptor,"rule retval",retval != null ? retval.tree : null);
root_0=(EvaluationExpression)adaptor.nil();
{
root_0=null;
}
retval.tree=root_0;
}
}
break;
case 2:
{
char_literal67=(Token)match(input,51,FOLLOW_51_in_fieldAssignment1356);
if (state.failed) return retval;
if (state.backtracking == 0) stream_51.add(char_literal67);
pushFollow(FOLLOW_operator_in_fieldAssignment1360);
op=operator();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) stream_operator.add(op.getTree());
if (!((setInnerOutput(VAR64,(op != null ? op.op : null))))) {
if (state.backtracking > 0) {
state.failed=true;
return retval;
}
throw new FailedPredicateException(input,"fieldAssignment"," setInnerOutput($VAR, $op.op) ");
}
}
break;
case 3:
{
pushFollow(FOLLOW_contextAwarePathExpression_in_fieldAssignment1375);
p=contextAwarePathExpression(getVariable(VAR64).toInputSelection(((operator_scope)operator_stack.peek()).result));
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) stream_contextAwarePathExpression.add(p.getTree());
int alt30=2;
int LA30_0=input.LA(1);
if ((LA30_0 == 47)) {
alt30=1;
}
 else if ((LA30_0 == 42 || LA30_0 == 69)) {
alt30=2;
}
 else {
if (state.backtracking > 0) {
state.failed=true;
return retval;
}
NoViableAltException nvae=new NoViableAltException("",30,0,input);
throw nvae;
}
switch (alt30) {
case 1:
{
char_literal68=(Token)match(input,47,FOLLOW_47_in_fieldAssignment1386);
if (state.failed) return retval;
if (state.backtracking == 0) stream_47.add(char_literal68);
pushFollow(FOLLOW_expression_in_fieldAssignment1390);
e2=expression();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) stream_expression.add(e2.getTree());
if (state.backtracking == 0) {
((objectCreation_scope)objectCreation_stack.peek()).mappings.add(new ObjectCreation.TagMapping((p != null ? ((EvaluationExpression)p.tree) : null),(e2 != null ? ((EvaluationExpression)e2.tree) : null)));
}
if (state.backtracking == 0) {
retval.tree=root_0;
RewriteRuleSubtreeStream stream_retval=new RewriteRuleSubtreeStream(adaptor,"rule retval",retval != null ? retval.tree : null);
root_0=(EvaluationExpression)adaptor.nil();
{
root_0=null;
}
retval.tree=root_0;
}
}
break;
case 2:
{
if (state.backtracking == 0) {
((objectCreation_scope)objectCreation_stack.peek()).mappings.add(new ObjectCreation.FieldAssignment(getAssignmentName((p != null ? ((EvaluationExpression)p.tree) : null)),(p != null ? ((EvaluationExpression)p.tree) : null)));
}
if (state.backtracking == 0) {
retval.tree=root_0;
RewriteRuleSubtreeStream stream_retval=new RewriteRuleSubtreeStream(adaptor,"rule retval",retval != null ? retval.tree : null);
root_0=(EvaluationExpression)adaptor.nil();
{
root_0=null;
}
retval.tree=root_0;
}
}
break;
}
}
break;
}
}
break;
}
retval.stop=input.LT(-1);
if (state.backtracking == 0) {
retval.tree=(EvaluationExpression)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
  finally {
}
return retval;
}
