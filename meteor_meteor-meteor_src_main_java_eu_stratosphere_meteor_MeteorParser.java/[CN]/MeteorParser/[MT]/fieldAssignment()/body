{
  MeteorParser.fieldAssignment_return retval=new MeteorParser.fieldAssignment_return();
  retval.start=input.LT(1);
  int fieldAssignment_StartIndex=input.index();
  EvaluationExpression root_0=null;
  Token ID58=null;
  Token char_literal59=null;
  Token VAR61=null;
  Token char_literal62=null;
  Token STAR63=null;
  Token char_literal64=null;
  Token char_literal65=null;
  MeteorParser.operator_return op=null;
  MeteorParser.contextAwarePathExpression_return p=null;
  MeteorParser.expression_return e2=null;
  MeteorParser.expression_return expression60=null;
  EvaluationExpression ID58_tree=null;
  EvaluationExpression char_literal59_tree=null;
  EvaluationExpression VAR61_tree=null;
  EvaluationExpression char_literal62_tree=null;
  EvaluationExpression STAR63_tree=null;
  EvaluationExpression char_literal64_tree=null;
  EvaluationExpression char_literal65_tree=null;
  RewriteRuleTokenStream stream_VAR=new RewriteRuleTokenStream(adaptor,"token VAR");
  RewriteRuleTokenStream stream_STAR=new RewriteRuleTokenStream(adaptor,"token STAR");
  RewriteRuleTokenStream stream_57=new RewriteRuleTokenStream(adaptor,"token 57");
  RewriteRuleTokenStream stream_ID=new RewriteRuleTokenStream(adaptor,"token ID");
  RewriteRuleTokenStream stream_35=new RewriteRuleTokenStream(adaptor,"token 35");
  RewriteRuleTokenStream stream_28=new RewriteRuleTokenStream(adaptor,"token 28");
  RewriteRuleSubtreeStream stream_expression=new RewriteRuleSubtreeStream(adaptor,"rule expression");
  RewriteRuleSubtreeStream stream_contextAwarePathExpression=new RewriteRuleSubtreeStream(adaptor,"rule contextAwarePathExpression");
  RewriteRuleSubtreeStream stream_operator=new RewriteRuleSubtreeStream(adaptor,"rule operator");
  try {
    if (state.backtracking > 0 && alreadyParsedRule(input,26)) {
      return retval;
    }
    int alt30=2;
    int LA30_0=input.LA(1);
    if ((LA30_0 == ID)) {
      alt30=1;
    }
 else     if ((LA30_0 == VAR)) {
      alt30=2;
    }
 else {
      if (state.backtracking > 0) {
        state.failed=true;
        return retval;
      }
      NoViableAltException nvae=new NoViableAltException("",30,0,input);
      throw nvae;
    }
switch (alt30) {
case 1:
{
        ID58=(Token)match(input,ID,FOLLOW_ID_in_fieldAssignment1167);
        if (state.failed)         return retval;
        if (state.backtracking == 0)         stream_ID.add(ID58);
        char_literal59=(Token)match(input,35,FOLLOW_35_in_fieldAssignment1169);
        if (state.failed)         return retval;
        if (state.backtracking == 0)         stream_35.add(char_literal59);
        pushFollow(FOLLOW_expression_in_fieldAssignment1171);
        expression60=expression();
        state._fsp--;
        if (state.failed)         return retval;
        if (state.backtracking == 0)         stream_expression.add(expression60.getTree());
        if (state.backtracking == 0) {
          ((objectCreation_scope)objectCreation_stack.peek()).mappings.add(new ObjectCreation.FieldAssignment((ID58 != null ? ID58.getText() : null),(expression60 != null ? ((EvaluationExpression)expression60.tree) : null)));
        }
        if (state.backtracking == 0) {
          retval.tree=root_0;
          RewriteRuleSubtreeStream stream_retval=new RewriteRuleSubtreeStream(adaptor,"rule retval",retval != null ? retval.tree : null);
          root_0=(EvaluationExpression)adaptor.nil();
{
            root_0=null;
          }
          retval.tree=root_0;
        }
      }
    break;
case 2:
{
    VAR61=(Token)match(input,VAR,FOLLOW_VAR_in_fieldAssignment1186);
    if (state.failed)     return retval;
    if (state.backtracking == 0)     stream_VAR.add(VAR61);
    int alt29=3;
switch (input.LA(1)) {
case 57:
{
        int LA29_1=input.LA(2);
        if ((LA29_1 == STAR)) {
          alt29=1;
        }
 else         if ((LA29_1 == ID)) {
          alt29=3;
        }
 else {
          if (state.backtracking > 0) {
            state.failed=true;
            return retval;
          }
          NoViableAltException nvae=new NoViableAltException("",29,1,input);
          throw nvae;
        }
      }
    break;
case 28:
{
    alt29=2;
  }
break;
case 63:
{
alt29=3;
}
break;
default :
if (state.backtracking > 0) {
state.failed=true;
return retval;
}
NoViableAltException nvae=new NoViableAltException("",29,0,input);
throw nvae;
}
switch (alt29) {
case 1:
{
char_literal62=(Token)match(input,57,FOLLOW_57_in_fieldAssignment1195);
if (state.failed) return retval;
if (state.backtracking == 0) stream_57.add(char_literal62);
STAR63=(Token)match(input,STAR,FOLLOW_STAR_in_fieldAssignment1197);
if (state.failed) return retval;
if (state.backtracking == 0) stream_STAR.add(STAR63);
if (state.backtracking == 0) {
((objectCreation_scope)objectCreation_stack.peek()).mappings.add(new ObjectCreation.CopyFields(makePath(VAR61)));
}
if (state.backtracking == 0) {
retval.tree=root_0;
RewriteRuleSubtreeStream stream_retval=new RewriteRuleSubtreeStream(adaptor,"rule retval",retval != null ? retval.tree : null);
root_0=(EvaluationExpression)adaptor.nil();
{
root_0=null;
}
retval.tree=root_0;
}
}
break;
case 2:
{
char_literal64=(Token)match(input,28,FOLLOW_28_in_fieldAssignment1211);
if (state.failed) return retval;
if (state.backtracking == 0) stream_28.add(char_literal64);
pushFollow(FOLLOW_operator_in_fieldAssignment1215);
op=operator();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) stream_operator.add(op.getTree());
if (!((setInnerOutput(VAR61,(op != null ? op.op : null))))) {
if (state.backtracking > 0) {
state.failed=true;
return retval;
}
throw new FailedPredicateException(input,"fieldAssignment"," setInnerOutput($VAR, $op.op) ");
}
}
break;
case 3:
{
pushFollow(FOLLOW_contextAwarePathExpression_in_fieldAssignment1230);
p=contextAwarePathExpression(getBinding(VAR61,JsonStreamExpression.class).toInputSelection(((operator_scope)operator_stack.peek()).result));
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) stream_contextAwarePathExpression.add(p.getTree());
int alt28=2;
int LA28_0=input.LA(1);
if ((LA28_0 == 35)) {
alt28=1;
}
 else if ((LA28_0 == EOF || LA28_0 == 31 || LA28_0 == 59)) {
alt28=2;
}
 else {
if (state.backtracking > 0) {
state.failed=true;
return retval;
}
NoViableAltException nvae=new NoViableAltException("",28,0,input);
throw nvae;
}
switch (alt28) {
case 1:
{
char_literal65=(Token)match(input,35,FOLLOW_35_in_fieldAssignment1241);
if (state.failed) return retval;
if (state.backtracking == 0) stream_35.add(char_literal65);
pushFollow(FOLLOW_expression_in_fieldAssignment1245);
e2=expression();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) stream_expression.add(e2.getTree());
if (state.backtracking == 0) {
((objectCreation_scope)objectCreation_stack.peek()).mappings.add(new ObjectCreation.TagMapping((p != null ? ((EvaluationExpression)p.tree) : null),(e2 != null ? ((EvaluationExpression)e2.tree) : null)));
}
if (state.backtracking == 0) {
retval.tree=root_0;
RewriteRuleSubtreeStream stream_retval=new RewriteRuleSubtreeStream(adaptor,"rule retval",retval != null ? retval.tree : null);
root_0=(EvaluationExpression)adaptor.nil();
{
root_0=null;
}
retval.tree=root_0;
}
}
break;
case 2:
{
if (state.backtracking == 0) {
((objectCreation_scope)objectCreation_stack.peek()).mappings.add(new ObjectCreation.FieldAssignment(getAssignmentName((p != null ? ((EvaluationExpression)p.tree) : null)),(p != null ? ((EvaluationExpression)p.tree) : null)));
}
if (state.backtracking == 0) {
retval.tree=root_0;
RewriteRuleSubtreeStream stream_retval=new RewriteRuleSubtreeStream(adaptor,"rule retval",retval != null ? retval.tree : null);
root_0=(EvaluationExpression)adaptor.nil();
{
root_0=null;
}
retval.tree=root_0;
}
}
break;
}
}
break;
}
}
break;
}
retval.stop=input.LT(-1);
if (state.backtracking == 0) {
retval.tree=(EvaluationExpression)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
  finally {
if (state.backtracking > 0) {
memoize(input,26,fieldAssignment_StartIndex);
}
}
return retval;
}
