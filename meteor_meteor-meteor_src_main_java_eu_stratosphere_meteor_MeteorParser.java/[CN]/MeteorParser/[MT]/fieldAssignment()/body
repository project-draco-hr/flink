{
  MeteorParser.fieldAssignment_return retval=new MeteorParser.fieldAssignment_return();
  retval.start=input.LT(1);
  int fieldAssignment_StartIndex=input.index();
  EvaluationExpression root_0=null;
  Token ID60=null;
  Token char_literal61=null;
  Token VAR63=null;
  Token char_literal64=null;
  Token STAR65=null;
  Token char_literal66=null;
  Token char_literal67=null;
  MeteorParser.operator_return op=null;
  MeteorParser.contextAwarePathExpression_return p=null;
  MeteorParser.expression_return e2=null;
  MeteorParser.expression_return expression62=null;
  EvaluationExpression ID60_tree=null;
  EvaluationExpression char_literal61_tree=null;
  EvaluationExpression VAR63_tree=null;
  EvaluationExpression char_literal64_tree=null;
  EvaluationExpression STAR65_tree=null;
  EvaluationExpression char_literal66_tree=null;
  EvaluationExpression char_literal67_tree=null;
  RewriteRuleTokenStream stream_VAR=new RewriteRuleTokenStream(adaptor,"token VAR");
  RewriteRuleTokenStream stream_STAR=new RewriteRuleTokenStream(adaptor,"token STAR");
  RewriteRuleTokenStream stream_57=new RewriteRuleTokenStream(adaptor,"token 57");
  RewriteRuleTokenStream stream_ID=new RewriteRuleTokenStream(adaptor,"token ID");
  RewriteRuleTokenStream stream_35=new RewriteRuleTokenStream(adaptor,"token 35");
  RewriteRuleTokenStream stream_29=new RewriteRuleTokenStream(adaptor,"token 29");
  RewriteRuleSubtreeStream stream_expression=new RewriteRuleSubtreeStream(adaptor,"rule expression");
  RewriteRuleSubtreeStream stream_contextAwarePathExpression=new RewriteRuleSubtreeStream(adaptor,"rule contextAwarePathExpression");
  RewriteRuleSubtreeStream stream_operator=new RewriteRuleSubtreeStream(adaptor,"rule operator");
  try {
    if (state.backtracking > 0 && alreadyParsedRule(input,26)) {
      return retval;
    }
    int alt33=2;
    int LA33_0=input.LA(1);
    if ((LA33_0 == ID)) {
      alt33=1;
    }
 else     if ((LA33_0 == VAR)) {
      alt33=2;
    }
 else {
      if (state.backtracking > 0) {
        state.failed=true;
        return retval;
      }
      NoViableAltException nvae=new NoViableAltException("",33,0,input);
      throw nvae;
    }
switch (alt33) {
case 1:
{
        ID60=(Token)match(input,ID,FOLLOW_ID_in_fieldAssignment1214);
        if (state.failed)         return retval;
        if (state.backtracking == 0)         stream_ID.add(ID60);
        char_literal61=(Token)match(input,35,FOLLOW_35_in_fieldAssignment1216);
        if (state.failed)         return retval;
        if (state.backtracking == 0)         stream_35.add(char_literal61);
        pushFollow(FOLLOW_expression_in_fieldAssignment1218);
        expression62=expression();
        state._fsp--;
        if (state.failed)         return retval;
        if (state.backtracking == 0)         stream_expression.add(expression62.getTree());
        if (state.backtracking == 0) {
          ((objectCreation_scope)objectCreation_stack.peek()).mappings.add(new ObjectCreation.FieldAssignment((ID60 != null ? ID60.getText() : null),(expression62 != null ? ((EvaluationExpression)expression62.tree) : null)));
        }
        if (state.backtracking == 0) {
          retval.tree=root_0;
          RewriteRuleSubtreeStream stream_retval=new RewriteRuleSubtreeStream(adaptor,"rule retval",retval != null ? retval.tree : null);
          root_0=(EvaluationExpression)adaptor.nil();
{
            root_0=null;
          }
          retval.tree=root_0;
        }
      }
    break;
case 2:
{
    VAR63=(Token)match(input,VAR,FOLLOW_VAR_in_fieldAssignment1233);
    if (state.failed)     return retval;
    if (state.backtracking == 0)     stream_VAR.add(VAR63);
    int alt32=3;
switch (input.LA(1)) {
case 57:
{
        int LA32_1=input.LA(2);
        if ((LA32_1 == STAR)) {
          alt32=1;
        }
 else         if ((LA32_1 == ID)) {
          alt32=3;
        }
 else {
          if (state.backtracking > 0) {
            state.failed=true;
            return retval;
          }
          NoViableAltException nvae=new NoViableAltException("",32,1,input);
          throw nvae;
        }
      }
    break;
case 29:
{
    alt32=2;
  }
break;
case 63:
{
alt32=3;
}
break;
default :
if (state.backtracking > 0) {
state.failed=true;
return retval;
}
NoViableAltException nvae=new NoViableAltException("",32,0,input);
throw nvae;
}
switch (alt32) {
case 1:
{
char_literal64=(Token)match(input,57,FOLLOW_57_in_fieldAssignment1242);
if (state.failed) return retval;
if (state.backtracking == 0) stream_57.add(char_literal64);
STAR65=(Token)match(input,STAR,FOLLOW_STAR_in_fieldAssignment1244);
if (state.failed) return retval;
if (state.backtracking == 0) stream_STAR.add(STAR65);
if (state.backtracking == 0) {
((objectCreation_scope)objectCreation_stack.peek()).mappings.add(new ObjectCreation.CopyFields(makePath(VAR63)));
}
if (state.backtracking == 0) {
retval.tree=root_0;
RewriteRuleSubtreeStream stream_retval=new RewriteRuleSubtreeStream(adaptor,"rule retval",retval != null ? retval.tree : null);
root_0=(EvaluationExpression)adaptor.nil();
{
root_0=null;
}
retval.tree=root_0;
}
}
break;
case 2:
{
char_literal66=(Token)match(input,29,FOLLOW_29_in_fieldAssignment1258);
if (state.failed) return retval;
if (state.backtracking == 0) stream_29.add(char_literal66);
pushFollow(FOLLOW_operator_in_fieldAssignment1262);
op=operator();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) stream_operator.add(op.getTree());
if (!((setInnerOutput(VAR63,(op != null ? op.op : null))))) {
if (state.backtracking > 0) {
state.failed=true;
return retval;
}
throw new FailedPredicateException(input,"fieldAssignment"," setInnerOutput($VAR, $op.op) ");
}
}
break;
case 3:
{
pushFollow(FOLLOW_contextAwarePathExpression_in_fieldAssignment1277);
p=contextAwarePathExpression(getVariable(VAR63).toInputSelection(((operator_scope)operator_stack.peek()).result));
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) stream_contextAwarePathExpression.add(p.getTree());
int alt31=2;
int LA31_0=input.LA(1);
if ((LA31_0 == 35)) {
alt31=1;
}
 else if ((LA31_0 == EOF || LA31_0 == 28 || LA31_0 == 59)) {
alt31=2;
}
 else {
if (state.backtracking > 0) {
state.failed=true;
return retval;
}
NoViableAltException nvae=new NoViableAltException("",31,0,input);
throw nvae;
}
switch (alt31) {
case 1:
{
char_literal67=(Token)match(input,35,FOLLOW_35_in_fieldAssignment1288);
if (state.failed) return retval;
if (state.backtracking == 0) stream_35.add(char_literal67);
pushFollow(FOLLOW_expression_in_fieldAssignment1292);
e2=expression();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) stream_expression.add(e2.getTree());
if (state.backtracking == 0) {
((objectCreation_scope)objectCreation_stack.peek()).mappings.add(new ObjectCreation.TagMapping((p != null ? ((EvaluationExpression)p.tree) : null),(e2 != null ? ((EvaluationExpression)e2.tree) : null)));
}
if (state.backtracking == 0) {
retval.tree=root_0;
RewriteRuleSubtreeStream stream_retval=new RewriteRuleSubtreeStream(adaptor,"rule retval",retval != null ? retval.tree : null);
root_0=(EvaluationExpression)adaptor.nil();
{
root_0=null;
}
retval.tree=root_0;
}
}
break;
case 2:
{
if (state.backtracking == 0) {
((objectCreation_scope)objectCreation_stack.peek()).mappings.add(new ObjectCreation.FieldAssignment(getAssignmentName((p != null ? ((EvaluationExpression)p.tree) : null)),(p != null ? ((EvaluationExpression)p.tree) : null)));
}
if (state.backtracking == 0) {
retval.tree=root_0;
RewriteRuleSubtreeStream stream_retval=new RewriteRuleSubtreeStream(adaptor,"rule retval",retval != null ? retval.tree : null);
root_0=(EvaluationExpression)adaptor.nil();
{
root_0=null;
}
retval.tree=root_0;
}
}
break;
}
}
break;
}
}
break;
}
retval.stop=input.LT(-1);
if (state.backtracking == 0) {
retval.tree=(EvaluationExpression)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
  finally {
if (state.backtracking > 0) {
memoize(input,26,fieldAssignment_StartIndex);
}
}
return retval;
}
