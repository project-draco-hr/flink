{
  MeteorParser.expression_return retval=new MeteorParser.expression_return();
  retval.start=input.LT(1);
  EvaluationExpression root_0=null;
  MeteorParser.operatorExpression_return operatorExpression21=null;
  MeteorParser.ternaryExpression_return ternaryExpression22=null;
  try {
    int alt6=2;
    int LA6_0=input.LA(1);
    if ((LA6_0 == 61) && (synpred1_Meteor())) {
      alt6=1;
    }
 else     if ((LA6_0 == 65) && (synpred1_Meteor())) {
      alt6=1;
    }
 else     if ((LA6_0 == ID)) {
      int LA6_3=input.LA(2);
      if ((LA6_3 == 47)) {
        int LA6_5=input.LA(3);
        if ((LA6_5 == ID)) {
          int LA6_9=input.LA(4);
          if ((LA6_9 == AND || LA6_9 == AS || (LA6_9 >= IF && LA6_9 <= IN) || LA6_9 == NOT || LA6_9 == OR || LA6_9 == STAR || (LA6_9 >= 36 && LA6_9 <= 40) || (LA6_9 >= 42 && LA6_9 <= 43) || (LA6_9 >= 45 && LA6_9 <= 46) || (LA6_9 >= 49 && LA6_9 <= 50) || (LA6_9 >= 52 && LA6_9 <= 55) || LA6_9 == 57 || (LA6_9 >= 67 && LA6_9 <= 68))) {
            alt6=2;
          }
 else           if ((LA6_9 == ID) && (synpred1_Meteor())) {
            alt6=1;
          }
 else           if ((LA6_9 == 56)) {
            int LA6_7=input.LA(5);
            if ((LA6_7 == VAR) && (synpred1_Meteor())) {
              alt6=1;
            }
 else             if ((LA6_7 == INTEGER || LA6_7 == STAR || LA6_7 == UINT)) {
              alt6=2;
            }
 else {
              if (state.backtracking > 0) {
                state.failed=true;
                return retval;
              }
              NoViableAltException nvae=new NoViableAltException("",6,7,input);
              throw nvae;
            }
          }
 else           if ((LA6_9 == VAR) && (synpred1_Meteor())) {
            alt6=1;
          }
 else {
            if (state.backtracking > 0) {
              state.failed=true;
              return retval;
            }
            NoViableAltException nvae=new NoViableAltException("",6,9,input);
            throw nvae;
          }
        }
 else {
          if (state.backtracking > 0) {
            state.failed=true;
            return retval;
          }
          NoViableAltException nvae=new NoViableAltException("",6,5,input);
          throw nvae;
        }
      }
 else       if ((LA6_3 == AND || LA6_3 == AS || (LA6_3 >= IF && LA6_3 <= IN) || LA6_3 == NOT || LA6_3 == OR || LA6_3 == STAR || (LA6_3 >= 36 && LA6_3 <= 40) || (LA6_3 >= 42 && LA6_3 <= 43) || (LA6_3 >= 45 && LA6_3 <= 46) || (LA6_3 >= 49 && LA6_3 <= 50) || (LA6_3 >= 52 && LA6_3 <= 55) || LA6_3 == 57 || (LA6_3 >= 67 && LA6_3 <= 68))) {
        alt6=2;
      }
 else       if ((LA6_3 == ID) && (synpred1_Meteor())) {
        alt6=1;
      }
 else       if ((LA6_3 == 56)) {
        int LA6_7=input.LA(3);
        if ((LA6_7 == VAR) && (synpred1_Meteor())) {
          alt6=1;
        }
 else         if ((LA6_7 == INTEGER || LA6_7 == STAR || LA6_7 == UINT)) {
          alt6=2;
        }
 else {
          if (state.backtracking > 0) {
            state.failed=true;
            return retval;
          }
          NoViableAltException nvae=new NoViableAltException("",6,7,input);
          throw nvae;
        }
      }
 else       if ((LA6_3 == VAR) && (synpred1_Meteor())) {
        alt6=1;
      }
 else {
        if (state.backtracking > 0) {
          state.failed=true;
          return retval;
        }
        NoViableAltException nvae=new NoViableAltException("",6,3,input);
        throw nvae;
      }
    }
 else     if ((LA6_0 == DECIMAL || LA6_0 == INTEGER || (LA6_0 >= STRING && LA6_0 <= UINT) || LA6_0 == VAR || LA6_0 == 35 || LA6_0 == 38 || LA6_0 == 41 || LA6_0 == 44 || LA6_0 == 56 || LA6_0 == 58 || LA6_0 == 60 || LA6_0 == 63 || LA6_0 == 66 || LA6_0 == 69)) {
      alt6=2;
    }
 else {
      if (state.backtracking > 0) {
        state.failed=true;
        return retval;
      }
      NoViableAltException nvae=new NoViableAltException("",6,0,input);
      throw nvae;
    }
switch (alt6) {
case 1:
{
        root_0=(EvaluationExpression)adaptor.nil();
        pushFollow(FOLLOW_operatorExpression_in_expression354);
        operatorExpression21=operatorExpression();
        state._fsp--;
        if (state.failed)         return retval;
        if (state.backtracking == 0)         adaptor.addChild(root_0,operatorExpression21.getTree());
      }
    break;
case 2:
{
    root_0=(EvaluationExpression)adaptor.nil();
    pushFollow(FOLLOW_ternaryExpression_in_expression360);
    ternaryExpression22=ternaryExpression();
    state._fsp--;
    if (state.failed)     return retval;
    if (state.backtracking == 0)     adaptor.addChild(root_0,ternaryExpression22.getTree());
  }
break;
}
retval.stop=input.LT(-1);
if (state.backtracking == 0) {
retval.tree=(EvaluationExpression)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
  finally {
}
return retval;
}
