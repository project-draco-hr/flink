{
  MeteorParser.castExpression_return retval=new MeteorParser.castExpression_return();
  retval.start=input.LT(1);
  EvaluationExpression root_0=null;
  Token type=null;
  Token char_literal39=null;
  Token char_literal40=null;
  Token AS41=null;
  MeteorParser.generalPathExpression_return expr=null;
  MeteorParser.generalPathExpression_return generalPathExpression42=null;
  EvaluationExpression type_tree=null;
  EvaluationExpression char_literal39_tree=null;
  EvaluationExpression char_literal40_tree=null;
  EvaluationExpression AS41_tree=null;
  RewriteRuleTokenStream stream_AS=new RewriteRuleTokenStream(adaptor,"token AS");
  RewriteRuleTokenStream stream_ID=new RewriteRuleTokenStream(adaptor,"token ID");
  RewriteRuleTokenStream stream_39=new RewriteRuleTokenStream(adaptor,"token 39");
  RewriteRuleTokenStream stream_38=new RewriteRuleTokenStream(adaptor,"token 38");
  RewriteRuleSubtreeStream stream_generalPathExpression=new RewriteRuleSubtreeStream(adaptor,"rule generalPathExpression");
  try {
    int alt22=3;
switch (input.LA(1)) {
case 38:
{
        int LA22_1=input.LA(2);
        if ((synpred4_Meteor())) {
          alt22=1;
        }
 else         if ((synpred5_Meteor())) {
          alt22=2;
        }
 else         if ((true)) {
          alt22=3;
        }
 else {
          if (state.backtracking > 0) {
            state.failed=true;
            return retval;
          }
          NoViableAltException nvae=new NoViableAltException("",22,1,input);
          throw nvae;
        }
      }
    break;
case ID:
{
    int LA22_2=input.LA(2);
    if ((synpred5_Meteor())) {
      alt22=2;
    }
 else     if ((true)) {
      alt22=3;
    }
 else {
      if (state.backtracking > 0) {
        state.failed=true;
        return retval;
      }
      NoViableAltException nvae=new NoViableAltException("",22,2,input);
      throw nvae;
    }
  }
break;
case 63:
{
int LA22_3=input.LA(2);
if ((synpred5_Meteor())) {
  alt22=2;
}
 else if ((true)) {
  alt22=3;
}
 else {
  if (state.backtracking > 0) {
    state.failed=true;
    return retval;
  }
  NoViableAltException nvae=new NoViableAltException("",22,3,input);
  throw nvae;
}
}
break;
case 58:
{
int LA22_4=input.LA(2);
if ((synpred5_Meteor())) {
alt22=2;
}
 else if ((true)) {
alt22=3;
}
 else {
if (state.backtracking > 0) {
state.failed=true;
return retval;
}
NoViableAltException nvae=new NoViableAltException("",22,4,input);
throw nvae;
}
}
break;
case DECIMAL:
{
int LA22_5=input.LA(2);
if ((synpred5_Meteor())) {
alt22=2;
}
 else if ((true)) {
alt22=3;
}
 else {
if (state.backtracking > 0) {
state.failed=true;
return retval;
}
NoViableAltException nvae=new NoViableAltException("",22,5,input);
throw nvae;
}
}
break;
case STRING:
{
int LA22_6=input.LA(2);
if ((synpred5_Meteor())) {
alt22=2;
}
 else if ((true)) {
alt22=3;
}
 else {
if (state.backtracking > 0) {
state.failed=true;
return retval;
}
NoViableAltException nvae=new NoViableAltException("",22,6,input);
throw nvae;
}
}
break;
case UINT:
{
int LA22_7=input.LA(2);
if ((synpred5_Meteor())) {
alt22=2;
}
 else if ((true)) {
alt22=3;
}
 else {
if (state.backtracking > 0) {
state.failed=true;
return retval;
}
NoViableAltException nvae=new NoViableAltException("",22,7,input);
throw nvae;
}
}
break;
case INTEGER:
{
int LA22_8=input.LA(2);
if ((synpred5_Meteor())) {
alt22=2;
}
 else if ((true)) {
alt22=3;
}
 else {
if (state.backtracking > 0) {
state.failed=true;
return retval;
}
NoViableAltException nvae=new NoViableAltException("",22,8,input);
throw nvae;
}
}
break;
case 60:
{
int LA22_9=input.LA(2);
if ((synpred5_Meteor())) {
alt22=2;
}
 else if ((true)) {
alt22=3;
}
 else {
if (state.backtracking > 0) {
state.failed=true;
return retval;
}
NoViableAltException nvae=new NoViableAltException("",22,9,input);
throw nvae;
}
}
break;
case VAR:
{
int LA22_10=input.LA(2);
if ((synpred5_Meteor())) {
alt22=2;
}
 else if ((true)) {
alt22=3;
}
 else {
if (state.backtracking > 0) {
state.failed=true;
return retval;
}
NoViableAltException nvae=new NoViableAltException("",22,10,input);
throw nvae;
}
}
break;
case 56:
{
int LA22_11=input.LA(2);
if ((synpred5_Meteor())) {
alt22=2;
}
 else if ((true)) {
alt22=3;
}
 else {
if (state.backtracking > 0) {
state.failed=true;
return retval;
}
NoViableAltException nvae=new NoViableAltException("",22,11,input);
throw nvae;
}
}
break;
case 66:
{
int LA22_12=input.LA(2);
if ((synpred5_Meteor())) {
alt22=2;
}
 else if ((true)) {
alt22=3;
}
 else {
if (state.backtracking > 0) {
state.failed=true;
return retval;
}
NoViableAltException nvae=new NoViableAltException("",22,12,input);
throw nvae;
}
}
break;
default :
if (state.backtracking > 0) {
state.failed=true;
return retval;
}
NoViableAltException nvae=new NoViableAltException("",22,0,input);
throw nvae;
}
switch (alt22) {
case 1:
{
char_literal39=(Token)match(input,38,FOLLOW_38_in_castExpression888);
if (state.failed) return retval;
if (state.backtracking == 0) stream_38.add(char_literal39);
type=(Token)match(input,ID,FOLLOW_ID_in_castExpression892);
if (state.failed) return retval;
if (state.backtracking == 0) stream_ID.add(type);
char_literal40=(Token)match(input,39,FOLLOW_39_in_castExpression894);
if (state.failed) return retval;
if (state.backtracking == 0) stream_39.add(char_literal40);
pushFollow(FOLLOW_generalPathExpression_in_castExpression898);
expr=generalPathExpression();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) stream_generalPathExpression.add(expr.getTree());
if (state.backtracking == 0) {
retval.tree=root_0;
RewriteRuleSubtreeStream stream_retval=new RewriteRuleSubtreeStream(adaptor,"rule retval",retval != null ? retval.tree : null);
root_0=(EvaluationExpression)adaptor.nil();
{
adaptor.addChild(root_0,coerce((type != null ? type.getText() : null),(expr != null ? ((EvaluationExpression)expr.tree) : null)));
}
retval.tree=root_0;
}
}
break;
case 2:
{
pushFollow(FOLLOW_generalPathExpression_in_castExpression918);
expr=generalPathExpression();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) stream_generalPathExpression.add(expr.getTree());
AS41=(Token)match(input,AS,FOLLOW_AS_in_castExpression920);
if (state.failed) return retval;
if (state.backtracking == 0) stream_AS.add(AS41);
type=(Token)match(input,ID,FOLLOW_ID_in_castExpression924);
if (state.failed) return retval;
if (state.backtracking == 0) stream_ID.add(type);
if (state.backtracking == 0) {
retval.tree=root_0;
RewriteRuleSubtreeStream stream_retval=new RewriteRuleSubtreeStream(adaptor,"rule retval",retval != null ? retval.tree : null);
root_0=(EvaluationExpression)adaptor.nil();
{
adaptor.addChild(root_0,coerce((type != null ? type.getText() : null),(expr != null ? ((EvaluationExpression)expr.tree) : null)));
}
retval.tree=root_0;
}
}
break;
case 3:
{
root_0=(EvaluationExpression)adaptor.nil();
pushFollow(FOLLOW_generalPathExpression_in_castExpression935);
generalPathExpression42=generalPathExpression();
state._fsp--;
if (state.failed) return retval;
if (state.backtracking == 0) adaptor.addChild(root_0,generalPathExpression42.getTree());
}
break;
}
retval.stop=input.LT(-1);
if (state.backtracking == 0) {
retval.tree=(EvaluationExpression)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
  finally {
}
return retval;
}
