{
switch (progId) {
case 1:
{
      final ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
      Graph<Long,Long,Long> graph=Graph.create(TestGraphUtils.getLongLongVertexData(env),TestGraphUtils.getLongLongEdgeData(env),env);
      graph.isWeaklyConnected(10).writeAsText(resultPath);
      env.execute();
      return "true\n";
    }
case 2:
{
    final ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
    Graph<Long,Long,Long> graph=Graph.create(TestGraphUtils.getLongLongVertexData(env),TestGraphUtils.getDisconnectedLongLongEdgeData(env),env);
    graph.isWeaklyConnected(10).writeAsText(resultPath);
    env.execute();
    return "false\n";
  }
case 3:
{
  final ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
  Graph<Long,Long,Long> graph=Graph.create(TestGraphUtils.getLongLongVertexData(env),TestGraphUtils.getLongLongEdgeData(env),env).getUndirected();
  graph.isWeaklyConnected(10).writeAsText(resultPath);
  env.execute();
  return "true\n";
}
case 4:
{
final ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
Graph<Long,Long,Long> graph=Graph.create(TestGraphUtils.getLongLongVertexData(env),TestGraphUtils.getDisconnectedLongLongEdgeData(env),env).getUndirected();
graph.isWeaklyConnected(10).writeAsText(resultPath);
env.execute();
return "false\n";
}
default :
throw new IllegalArgumentException("Invalid program id");
}
}
