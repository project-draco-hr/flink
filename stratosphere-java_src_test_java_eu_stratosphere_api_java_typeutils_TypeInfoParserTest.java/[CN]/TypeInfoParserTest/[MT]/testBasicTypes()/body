{
  Assert.assertEquals(BasicTypeInfo.INT_TYPE_INFO,TypeInformation.parse("Integer"));
  Assert.assertEquals(BasicTypeInfo.DOUBLE_TYPE_INFO,TypeInformation.parse("Double"));
  Assert.assertEquals(BasicTypeInfo.BYTE_TYPE_INFO,TypeInformation.parse("Byte"));
  Assert.assertEquals(BasicTypeInfo.FLOAT_TYPE_INFO,TypeInformation.parse("Float"));
  Assert.assertEquals(BasicTypeInfo.SHORT_TYPE_INFO,TypeInformation.parse("Short"));
  Assert.assertEquals(BasicTypeInfo.LONG_TYPE_INFO,TypeInformation.parse("Long"));
  Assert.assertEquals(BasicTypeInfo.CHAR_TYPE_INFO,TypeInformation.parse("Character"));
  Assert.assertEquals(BasicTypeInfo.STRING_TYPE_INFO,TypeInformation.parse("String"));
  Assert.assertEquals(BasicTypeInfo.BOOLEAN_TYPE_INFO,TypeInformation.parse("Boolean"));
  Assert.assertEquals(BasicTypeInfo.INT_TYPE_INFO,TypeInformation.parse("java.lang.Integer"));
  Assert.assertEquals(BasicTypeInfo.DOUBLE_TYPE_INFO,TypeInformation.parse("java.lang.Double"));
  Assert.assertEquals(BasicTypeInfo.BYTE_TYPE_INFO,TypeInformation.parse("java.lang.Byte"));
  Assert.assertEquals(BasicTypeInfo.FLOAT_TYPE_INFO,TypeInformation.parse("java.lang.Float"));
  Assert.assertEquals(BasicTypeInfo.SHORT_TYPE_INFO,TypeInformation.parse("java.lang.Short"));
  Assert.assertEquals(BasicTypeInfo.LONG_TYPE_INFO,TypeInformation.parse("java.lang.Long"));
  Assert.assertEquals(BasicTypeInfo.CHAR_TYPE_INFO,TypeInformation.parse("java.lang.Character"));
  Assert.assertEquals(BasicTypeInfo.STRING_TYPE_INFO,TypeInformation.parse("java.lang.String"));
  Assert.assertEquals(BasicTypeInfo.BOOLEAN_TYPE_INFO,TypeInformation.parse("java.lang.Boolean"));
  Assert.assertEquals(BasicTypeInfo.INT_TYPE_INFO,TypeInformation.parse("int"));
  Assert.assertEquals(BasicTypeInfo.DOUBLE_TYPE_INFO,TypeInformation.parse("double"));
  Assert.assertEquals(BasicTypeInfo.BYTE_TYPE_INFO,TypeInformation.parse("byte"));
  Assert.assertEquals(BasicTypeInfo.FLOAT_TYPE_INFO,TypeInformation.parse("float"));
  Assert.assertEquals(BasicTypeInfo.SHORT_TYPE_INFO,TypeInformation.parse("short"));
  Assert.assertEquals(BasicTypeInfo.LONG_TYPE_INFO,TypeInformation.parse("long"));
  Assert.assertEquals(BasicTypeInfo.CHAR_TYPE_INFO,TypeInformation.parse("char"));
  Assert.assertEquals(BasicTypeInfo.BOOLEAN_TYPE_INFO,TypeInformation.parse("boolean"));
}
