{
  if (cl == null) {
    throw new NullPointerException("The classloader must not be null.");
  }
  if (invokableClassName == null) {
    return null;
  }
  try {
    return Class.forName(invokableClassName,true,cl).asSubclass(AbstractInvokable.class);
  }
 catch (  ClassNotFoundException e) {
    throw new RuntimeException("The user-code class could not be resolved.",e);
  }
catch (  ClassCastException e) {
    throw new RuntimeException("The user-code class is no subclass of " + AbstractInvokable.class.getName(),e);
  }
}
