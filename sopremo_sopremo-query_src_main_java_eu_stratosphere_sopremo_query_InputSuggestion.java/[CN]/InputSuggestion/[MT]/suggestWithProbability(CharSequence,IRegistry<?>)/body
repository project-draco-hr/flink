{
  final List<Object2DoubleMap.Entry<String>> list=new ArrayList<Object2DoubleMap.Entry<String>>();
  for (  final String possibleValue : possibleValues.keySet()) {
    final double similarity=this.similarityMeasure.getSimilarity(input,possibleValue,this.minSimilarity);
    if (similarity >= this.minSimilarity)     list.add(new AbstractObject2DoubleMap.BasicEntry<String>(possibleValue,similarity));
  }
  Collections.sort(list,new Comparator<Object2DoubleMap.Entry<String>>(){
    @Override public int compare(    final Object2DoubleMap.Entry<String> o1,    final Object2DoubleMap.Entry<String> o2){
      return Double.compare(o2.getDoubleValue(),o1.getDoubleValue());
    }
  }
);
  return list.size() > this.maxSuggestions ? list.subList(0,this.maxSuggestions) : list;
}
