{
  if (value.equals("null"))   return NullNode.getInstance();
  if (value.equals("true"))   return BooleanNode.TRUE;
  if (value.equals("false"))   return BooleanNode.FALSE;
  if (value.matches("^[-+]?[0-9]*\\.?[0-9]+([eE][-+]?[0-9]+)?$")) {
    final BigDecimal bigDec=new BigDecimal(value);
    if (bigDec.scale() == 0) {
      final BigInteger bigInt=bigDec.unscaledValue();
      if (bigInt.bitLength() <= 31)       return IntNode.valueOf(bigInt.intValue());
      if (bigInt.bitLength() <= 63)       return LongNode.valueOf(bigInt.longValue());
      return BigIntegerNode.valueOf(bigInt);
    }
 else     return DecimalNode.valueOf(bigDec);
  }
  return TextNode.valueOf(value);
}
