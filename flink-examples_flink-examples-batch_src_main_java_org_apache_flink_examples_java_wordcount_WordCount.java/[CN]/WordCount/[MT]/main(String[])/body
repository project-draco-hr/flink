{
  final ParameterTool params=ParameterTool.fromArgs(args);
  final ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
  env.getConfig().setGlobalJobParameters(params);
  DataSet<String> text;
  if (params.has("input")) {
    text=env.readTextFile(params.get("input"));
  }
 else {
    System.out.println("Executing WordCount example with default input data set.");
    System.out.println("Use --input to specify file input.");
    text=WordCountData.getDefaultTextLineDataSet(env);
  }
  DataSet<Tuple2<String,Integer>> counts=text.flatMap(new Tokenizer()).groupBy(0).sum(1);
  if (params.has("output")) {
    counts.writeAsCsv(params.get("output"),"\n"," ");
    env.execute("WordCount Example");
  }
 else {
    System.out.println("Printing result to stdout. Use --output to specify output path.");
    counts.print();
  }
}
