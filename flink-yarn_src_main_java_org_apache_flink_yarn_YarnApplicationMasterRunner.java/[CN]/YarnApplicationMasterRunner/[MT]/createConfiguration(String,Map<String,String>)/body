{
  LOG.info("Loading config from directory " + baseDirectory);
  GlobalConfiguration.loadConfiguration(baseDirectory);
  Configuration configuration=GlobalConfiguration.getConfiguration();
  configuration.setString(ConfigConstants.FLINK_BASE_DIR_PATH_KEY,baseDirectory);
  for (  Map.Entry<String,String> property : additional.entrySet()) {
    configuration.setString(property.getKey(),property.getValue());
  }
  if (configuration.getInteger(ConfigConstants.JOB_MANAGER_WEB_PORT_KEY,0) >= 0) {
    configuration.setInteger(ConfigConstants.JOB_MANAGER_WEB_PORT_KEY,0);
  }
  BootstrapTools.substituteDeprecatedConfigKey(configuration,ConfigConstants.YARN_HEAP_CUTOFF_RATIO,ConfigConstants.CONTAINERIZED_HEAP_CUTOFF_RATIO);
  BootstrapTools.substituteDeprecatedConfigKey(configuration,ConfigConstants.YARN_HEAP_CUTOFF_MIN,ConfigConstants.CONTAINERIZED_HEAP_CUTOFF_MIN);
  BootstrapTools.substituteDeprecatedConfigPrefix(configuration,ConfigConstants.YARN_APPLICATION_MASTER_ENV_PREFIX,ConfigConstants.CONTAINERIZED_MASTER_ENV_PREFIX);
  BootstrapTools.substituteDeprecatedConfigPrefix(configuration,ConfigConstants.YARN_TASK_MANAGER_ENV_PREFIX,ConfigConstants.CONTAINERIZED_TASK_MANAGER_ENV_PREFIX);
  return configuration;
}
