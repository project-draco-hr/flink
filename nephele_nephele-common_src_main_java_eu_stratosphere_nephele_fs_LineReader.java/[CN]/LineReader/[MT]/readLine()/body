{
  if (stream == null || overLimit) {
    return null;
  }
  int curr=0;
  int countInWrapBuffer=0;
  while (true) {
    if (readPos >= limit) {
      if (!fillBuffer()) {
        if (countInWrapBuffer > 0) {
          byte[] tmp=new byte[countInWrapBuffer];
          System.arraycopy(wrapBuffer,0,tmp,0,countInWrapBuffer);
          return tmp;
        }
 else {
          return null;
        }
      }
    }
    int startPos=readPos;
    int count=0;
    while (readPos < limit && (curr=readBuffer[readPos++]) != LF)     ;
    if (curr == LF) {
      count=readPos - startPos - 1;
      if (readPos == 1 && countInWrapBuffer > 0 && wrapBuffer[countInWrapBuffer - 1] == CR) {
        countInWrapBuffer--;
      }
 else       if (readPos > startPos + 1 && readBuffer[readPos - 2] == CR) {
        count--;
      }
      if (countInWrapBuffer > 0) {
        byte[] end=new byte[countInWrapBuffer + count];
        System.arraycopy(wrapBuffer,0,end,0,countInWrapBuffer);
        System.arraycopy(readBuffer,0,end,countInWrapBuffer,count);
        return end;
      }
 else {
        byte[] end=new byte[count];
        System.arraycopy(readBuffer,startPos,end,0,count);
        return end;
      }
    }
 else {
      count=limit - startPos;
      while (wrapBuffer.length - countInWrapBuffer < count) {
        byte[] tmp=new byte[wrapBuffer.length * 2];
        System.arraycopy(wrapBuffer,0,tmp,0,countInWrapBuffer);
        wrapBuffer=tmp;
      }
      System.arraycopy(readBuffer,startPos,wrapBuffer,countInWrapBuffer,count);
      countInWrapBuffer+=count;
    }
  }
}
