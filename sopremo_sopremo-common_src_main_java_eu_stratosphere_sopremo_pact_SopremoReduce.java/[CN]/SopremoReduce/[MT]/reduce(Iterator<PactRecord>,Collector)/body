{
  this.context.increaseInputCounter();
  this.collector.setCollector(out);
  this.cachedIterator.setIterator(records);
  Iterator<JsonNode> values=this.cachedIterator;
  if (SopremoUtil.LOG.isTraceEnabled()) {
    final ArrayList<JsonNode> cached=new ArrayList<JsonNode>();
    while (this.cachedIterator.hasNext())     cached.add(this.cachedIterator.next());
    values=cached.iterator();
    SopremoUtil.LOG.trace(String.format("%s %s",this.getContext().operatorTrace(),values));
  }
  ArrayNode array=JsonUtil.wrapWithNode(this.needsResettableIterator(values),values);
  try {
    this.reduce(array,this.collector);
  }
 catch (  final RuntimeException e) {
    SopremoUtil.LOG.error(String.format("Error occurred @ %s with %s: %s",this.getContext().operatorTrace(),array,e));
    throw e;
  }
}
