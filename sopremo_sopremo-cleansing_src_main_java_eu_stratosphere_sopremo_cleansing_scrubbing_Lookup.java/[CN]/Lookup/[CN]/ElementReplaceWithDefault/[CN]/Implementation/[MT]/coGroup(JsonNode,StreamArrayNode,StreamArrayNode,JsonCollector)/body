{
  final Iterator<JsonNode> replaceValueIterator=values2.iterator();
  JsonNode replaceValue=replaceValueIterator.hasNext() ? replaceValueIterator.next() : null;
  final Iterator<JsonNode> valueIterator=values1.iterator();
  final EvaluationContext context=this.getContext();
  while (valueIterator.hasNext()) {
    JsonNode value=valueIterator.next();
    final JsonNode index=value.get(0);
    JsonNode replacement=replaceValue != null ? replaceValue : this.defaultExpression.evaluate(value.get(1).get(index.getIntValue()),context);
    out.collect(value.get(1),JsonUtil.asArray(index,replacement));
  }
}
