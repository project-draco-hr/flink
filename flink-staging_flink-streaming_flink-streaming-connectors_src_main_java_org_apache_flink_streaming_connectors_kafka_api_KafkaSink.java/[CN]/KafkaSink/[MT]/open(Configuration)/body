{
  KafkaTopicUtils kafkaTopicUtils=new KafkaTopicUtils(zookeeperAddress);
  String brokerAddress=kafkaTopicUtils.getLeaderBrokerAddressForTopic(topicId);
  props=new Properties();
  props.put("metadata.broker.list",brokerAddress);
  props.put("request.required.acks","1");
  props.put("serializer.class",DefaultEncoder.class.getCanonicalName());
  props.put("key.serializer.class",DefaultEncoder.class.getCanonicalName());
  if (partitioner != null) {
    props.put("partitioner.class",PartitionerWrapper.class.getCanonicalName());
    props.put(PartitionerWrapper.SERIALIZED_WRAPPER_NAME,partitioner);
  }
  if (partitionerClass != null) {
    props.put("partitioner.class",partitionerClass);
  }
  ProducerConfig config=new ProducerConfig(props);
  try {
    producer=new Producer<IN,byte[]>(config);
  }
 catch (  NullPointerException e) {
    throw new RuntimeException("Cannot connect to Kafka broker " + brokerAddress,e);
  }
}
