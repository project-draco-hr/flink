{
  final CheckpointDeserializer deserializer=new CheckpointDeserializer(this.vertexID);
  int metaDataIndex=0;
  while (true) {
    final File metaDataFile=new File(this.checkpointDirectory + File.separator + CheckpointReplayManager.METADATA_PREFIX+ "_"+ this.vertexID+ "_"+ metaDataIndex);
    while (!metaDataFile.exists()) {
      final File finalMetaDataFile=new File(this.checkpointDirectory + File.separator + CheckpointReplayManager.METADATA_PREFIX+ "_"+ this.vertexID+ "_final");
      if (finalMetaDataFile.exists()) {
        return;
      }
      if (this.isCheckpointComplete) {
        throw new FileNotFoundException("Cannot find meta data file " + metaDataIndex + " for checkpoint of vertex "+ this.vertexID);
      }
      try {
        Thread.sleep(100);
      }
 catch (      InterruptedException e) {
      }
      if (this.isCanceled) {
        return;
      }
    }
    FileInputStream fis=null;
    try {
      fis=new FileInputStream(metaDataFile);
      final FileChannel fileChannel=fis.getChannel();
      while (!this.isCanceled) {
        try {
          deserializer.read(fileChannel);
          final TransferEnvelope transferEnvelope=deserializer.getFullyDeserializedTransferEnvelope();
          if (transferEnvelope != null) {
            this.transferEnvelopeDispatcher.processEnvelopeFromOutputChannel(transferEnvelope);
          }
        }
 catch (        EOFException eof) {
          fileChannel.close();
          ++metaDataIndex;
          break;
        }
      }
    }
  finally {
      if (fis != null) {
        fis.close();
      }
    }
  }
}
