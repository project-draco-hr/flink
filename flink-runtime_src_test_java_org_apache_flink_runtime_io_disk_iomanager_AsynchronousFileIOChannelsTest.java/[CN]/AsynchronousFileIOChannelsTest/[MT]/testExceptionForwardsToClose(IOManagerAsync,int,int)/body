{
  try {
    MemorySegment seg=new MemorySegment(new byte[32 * 1024]);
    FileIOChannel.ID channelId=ioMan.createChannel();
    BlockChannelWriterWithCallback writer=new AsynchronousBlockWriterWithCallback(channelId,ioMan.getWriteRequestQueue(channelId),new NoOpCallback()){
      private int numBlocks;
      @Override public void writeBlock(      MemorySegment segment) throws IOException {
        numBlocks++;
        if (numBlocks == failingBlock) {
          this.requestsNotReturned.incrementAndGet();
          this.requestQueue.add(new FailingWriteRequest(this,segment));
        }
 else {
          super.writeBlock(segment);
        }
      }
    }
;
    try {
      for (int i=0; i < numBlocks; i++) {
        writer.writeBlock(seg);
      }
      writer.close();
      fail("did not forward exception");
    }
 catch (    IOException e) {
    }
 finally {
      try {
        writer.closeAndDelete();
      }
 catch (      Throwable t) {
      }
    }
  }
 catch (  Exception e) {
    e.printStackTrace();
    fail(e.getMessage());
  }
}
