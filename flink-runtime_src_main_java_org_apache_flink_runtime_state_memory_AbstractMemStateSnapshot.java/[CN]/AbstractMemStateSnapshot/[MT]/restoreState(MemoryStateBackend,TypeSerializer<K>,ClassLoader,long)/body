{
  if (!this.keySerializer.equals(keySerializer)) {
    throw new IllegalArgumentException("Cannot restore the state from the snapshot with the given serializers. " + "State (K/V) was serialized with " + "(" + this.keySerializer + ") "+ "now is ("+ keySerializer+ ")");
  }
  DataInputDeserializer inView=new DataInputDeserializer(data,0,data.length);
  final int numKeys=inView.readInt();
  HashMap<N,Map<K,SV>> stateMap=new HashMap<>(numKeys);
  for (int i=0; i < numKeys; i++) {
    N namespace=namespaceSerializer.deserialize(inView);
    final int numValues=inView.readInt();
    Map<K,SV> namespaceMap=new HashMap<>(numValues);
    stateMap.put(namespace,namespaceMap);
    for (int j=0; j < numValues; j++) {
      K key=keySerializer.deserialize(inView);
      SV value=stateSerializer.deserialize(inView);
      namespaceMap.put(key,value);
    }
  }
  return createMemState(stateMap);
}
