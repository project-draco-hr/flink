{
  Class<?> typeClass=getType().getTypeClass();
  ClassLoader cl=typeClass.getClassLoader() == null ? ClassLoader.getSystemClassLoader() : typeClass.getClassLoader();
  if (!java.io.Serializable.class.isAssignableFrom(typeClass)) {
    throw new UnsupportedOperationException("collect() can only be used with serializable data types. " + "The DataSet type '" + typeClass.getName() + "' does not implement java.io.Serializable.");
  }
  final String id=new AbstractID().toString();
  this.flatMap(new Utils.CollectHelper<T>(id)).output(new DiscardingOutputFormat<T>());
  JobExecutionResult res=getExecutionEnvironment().execute();
  ArrayList<byte[]> accResult=res.getAccumulatorResult(id);
  try {
    return SerializedListAccumulator.deserializeList(accResult,cl);
  }
 catch (  ClassNotFoundException e) {
    throw new RuntimeException("Cannot find type class of collected data type.",e);
  }
catch (  IOException e) {
    throw new RuntimeException("Serialization error while deserializing collected data",e);
  }
}
