{
  final JobID jobId=new JobID();
  final String jobName="Test Job Sample Name";
  final Configuration cfg=new Configuration();
  JobVertex v1=new JobVertex("vertex1");
  JobVertex v2=new JobVertex("vertex2");
  JobVertex v3=new JobVertex("vertex3");
  JobVertex v4=new JobVertex("vertex4");
  JobVertex v5=new JobVertex("vertex5");
  v1.setParallelism(5);
  v2.setParallelism(7);
  v3.setParallelism(2);
  v4.setParallelism(11);
  v5.setParallelism(4);
  v2.connectNewDataSetAsInput(v1,DistributionPattern.ALL_TO_ALL);
  v4.connectNewDataSetAsInput(v2,DistributionPattern.ALL_TO_ALL);
  v4.connectNewDataSetAsInput(v3,DistributionPattern.ALL_TO_ALL);
  v5.connectNewDataSetAsInput(v4,DistributionPattern.ALL_TO_ALL);
  v5.connectNewDataSetAsInput(v3,DistributionPattern.ALL_TO_ALL);
  List<JobVertex> ordered=new ArrayList<JobVertex>(Arrays.asList(v1,v2,v3,v5,v4));
  ExecutionGraph eg=new ExecutionGraph(TestingUtils.defaultExecutionContext(),jobId,jobName,cfg,new ExecutionConfig(),AkkaUtils.getDefaultTimeout(),new NoRestartStrategy());
  try {
    eg.attachJobGraph(ordered);
    fail("Attached wrong jobgraph");
  }
 catch (  JobException e) {
  }
}
