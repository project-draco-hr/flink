{
  try {
    final JobID jobId=new JobID();
    final String jobName="Test Job Sample Name";
    final Configuration cfg=new Configuration();
    JobVertex v1=new JobVertex("vertex1");
    JobVertex v2=new JobVertex("vertex2");
    JobVertex v3=new JobVertex("vertex3");
    v1.setParallelism(5);
    v2.setParallelism(7);
    v3.setParallelism(2);
    IntermediateDataSet result=v1.createAndAddResultDataSet(ResultPartitionType.PIPELINED);
    v2.connectDataSetAsInput(result,DistributionPattern.ALL_TO_ALL);
    v3.connectDataSetAsInput(result,DistributionPattern.ALL_TO_ALL);
    List<JobVertex> ordered=new ArrayList<JobVertex>(Arrays.asList(v1,v2,v3));
    ExecutionGraph eg=new ExecutionGraph(TestingUtils.defaultExecutionContext(),jobId,jobName,cfg,ExecutionConfigTest.getSerializedConfig(),AkkaUtils.getDefaultTimeout(),new NoRestartStrategy());
    try {
      eg.attachJobGraph(ordered);
      fail("Should not be possible");
    }
 catch (    RuntimeException e) {
    }
  }
 catch (  Exception e) {
    e.printStackTrace();
    fail(e.getMessage());
  }
}
