{
  int bufferSize=100;
  int bytes2Write=99;
  int segmentSize=30;
  byte[] expected=new byte[bytes2Write];
  new Random().nextBytes(expected);
  TestOutputView outputView=new TestOutputView(segmentSize);
  try {
    outputView.write(expected);
  }
 catch (  Exception e) {
    e.printStackTrace();
    fail("Unexpected exception: Could not write to TestOutputView.");
  }
  outputView.close();
  TestInputView inputView=new TestInputView(outputView.segments);
  byte[] buffer=new byte[bufferSize];
  boolean eofException=false;
  try {
    inputView.readFully(buffer);
  }
 catch (  EOFException e) {
    eofException=true;
  }
catch (  IOException e) {
    e.printStackTrace();
    fail("Unexpected exception: Could not read TestInputView.");
  }
  assertTrue("EOFException should have occurred.",eofException);
  int bytesRead=0;
  try {
    bytesRead=inputView.read(buffer);
  }
 catch (  Exception e) {
    e.printStackTrace();
    fail("Unexpected exception: Could not read TestInputView.");
  }
  assertEquals(-1,bytesRead);
}
