{
  final String awsAccessId=conf.getString("job.cloud.awsaccessid",null);
  final String awsSecretKey=conf.getString("job.cloud.awssecretkey",null);
  String imageID=conf.getString("job.ec2.image.id",null);
  LOG.info("EC2 Image ID from job conf: " + imageID);
  if (imageID == null) {
    imageID=GlobalConfiguration.getString("ec2.image.id",null);
    if (imageID == null) {
      LOG.error("Unable to allocate instance: Image ID is unknown");
      return null;
    }
  }
  final String jobManagerIPAddress=GlobalConfiguration.getString("jobmanager.rpc.address",null);
  if (jobManagerIPAddress == null) {
    LOG.error("JobManager IP address is not set (jobmanager.rpc.address)");
    return null;
  }
  final String sshKeyPair=conf.getString("job.cloud.sshkeypair",null);
  final AmazonEC2Client ec2client=EC2ClientFactory.getEC2Client(awsAccessId,awsSecretKey);
  final LinkedList<String> instanceIDs=new LinkedList<String>();
  final RunInstancesRequest request=new RunInstancesRequest(imageID,mincount,maxcount);
  request.setInstanceType(type.getIdentifier());
  final BlockDeviceMapping bdm=new BlockDeviceMapping();
  bdm.setVirtualName("ephemeral0");
  bdm.setDeviceName("/dev/sdb1");
  if (sshKeyPair != null) {
    request.setKeyName(sshKeyPair);
  }
  final LinkedList<BlockDeviceMapping> bdmlist=new LinkedList<BlockDeviceMapping>();
  bdmlist.add(bdm);
  request.setBlockDeviceMappings(bdmlist);
  request.setUserData(EC2Utilities.createTaskManagerUserData(jobManagerIPAddress));
  final RunInstancesResult result=ec2client.runInstances(request);
  for (  Instance i : result.getReservation().getInstances()) {
    instanceIDs.add(i.getInstanceId());
  }
  return instanceIDs;
}
