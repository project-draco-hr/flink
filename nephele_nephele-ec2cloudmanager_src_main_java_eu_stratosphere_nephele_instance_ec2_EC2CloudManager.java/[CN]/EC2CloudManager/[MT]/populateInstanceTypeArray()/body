{
  final List<InstanceType> instanceTypes=new ArrayList<InstanceType>();
  final int num=GlobalConfiguration.getInteger("cloudmgr.nrtypes",-1);
  if (num <= 0) {
    throw new RuntimeException("Illegal configuration, cloudmgr.nrtypes is not configured");
  }
  LOG.info("Trying to read " + num + " instance types from the configuration");
  for (int i=0; i < num; ++i) {
    final String key="cloudmgr.instancetype." + (i + 1);
    final String type=GlobalConfiguration.getString(key,null);
    if (type == null) {
      throw new RuntimeException("Illegal configuration for " + key);
    }
    final InstanceType instanceType=InstanceTypeFactory.constructFromDescription(type);
    LOG.info("Found instance type " + i + ": "+ instanceType);
    instanceTypes.add(instanceType);
  }
  Collections.sort(instanceTypes,new Comparator<InstanceType>(){
    @Override public int compare(    InstanceType o1,    InstanceType o2){
      return o1.getPricePerHour() - o2.getPricePerHour();
    }
  }
);
  return instanceTypes.toArray(new InstanceType[0]);
}
