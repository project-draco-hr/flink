{
  final InputGate<StringRecord> inGate=new InputGate<StringRecord>(new DefaultRecordDeserializer<StringRecord>(StringRecord.class),1,null);
  final OutputGate<StringRecord> outGate=new OutputGate<StringRecord>(StringRecord.class,2,null,false);
  final InMemoryInputChannel<StringRecord> in=inGate.createInMemoryInputChannel(new ChannelID(),CompressionLevel.NO_COMPRESSION);
  in.initializeBuffers(4,100);
  final InMemoryOutputChannel<StringRecord> out=outGate.createInMemoryOutputChannel(new ChannelID(),CompressionLevel.NO_COMPRESSION);
  in.setConnectedChannelID(out.getID());
  out.setConnectedChannelID(in.getID());
  final TestDirectChannelBroker broker=new TestDirectChannelBroker(in,out);
  in.setNumberOfConnectionRetries(10);
  out.setNumberOfConnectionRetries(10);
  in.setDirectChannelBroker(broker);
  out.setDirectChannelBroker(broker);
  assertEquals(in.getConnectedChannelID(),out.getID());
  assertEquals(out.getConnectedChannelID(),in.getID());
  try {
    outGate.writeRecord(new StringRecord("test"));
    outGate.flush();
    StringRecord readrecord=inGate.readRecord();
    assertEquals("test",readrecord.toString());
    outGate.writeRecord(new StringRecord("test"));
    outGate.flush();
    readrecord=inGate.readRecord();
    assertEquals("test",readrecord.toString());
    for (int i=0; i < 105; i++) {
      outGate.writeRecord(new StringRecord("test"));
    }
    int i=0;
    while (i < 100 && inGate.readRecord() != null) {
      i++;
    }
    assertEquals(i,100);
    outGate.flush();
    i=0;
    while (i < 5 && inGate.readRecord() != null) {
      i++;
    }
    assertEquals(i,5);
    inGate.publishEvent(new StringTaskEvent("test"));
    outGate.publishEvent(new StringTaskEvent("test"));
    outGate.requestClose();
    inGate.close();
    assertTrue(outGate.isClosed());
    assertTrue(inGate.isClosed());
  }
 catch (  Exception e) {
    e.printStackTrace();
    fail();
  }
}
