{
  final InputCardinality inputs=ReflectUtil.getAnnotation(this.getClass(),InputCardinality.class);
  if (inputs == null)   throw new IllegalStateException("No InputCardinality annotation found @ " + getClass());
  final OutputCardinality outputs=ReflectUtil.getAnnotation(this.getClass(),OutputCardinality.class);
  if (outputs == null)   throw new IllegalStateException("No OutputCardinality annotation found @ " + getClass());
  this.setNumberOfInputs(inputs.value() != -1 ? inputs.value() : inputs.min(),inputs.value() != -1 ? inputs.value() : inputs.max());
  this.setNumberOfOutputs(outputs.value() != -1 ? outputs.value() : outputs.min(),outputs.value() != -1 ? outputs.value() : outputs.max());
  this.name=this.getClass().getSimpleName();
}
