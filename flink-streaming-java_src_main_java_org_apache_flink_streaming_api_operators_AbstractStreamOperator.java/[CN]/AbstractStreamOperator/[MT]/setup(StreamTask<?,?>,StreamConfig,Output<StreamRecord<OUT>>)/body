{
  this.container=containingTask;
  this.config=config;
  String operatorName=containingTask.getEnvironment().getTaskInfo().getTaskName().split("->")[config.getChainIndex()].trim();
  this.metrics=container.getEnvironment().getMetricGroup().addOperator(operatorName);
  this.output=new CountingOutput(output,this.metrics.counter("numRecordsOut"));
  this.runtimeContext=new StreamingRuntimeContext(this,container.getEnvironment(),container.getAccumulatorMap());
  stateKeySelector1=config.getStatePartitioner(0,getUserCodeClassloader());
  stateKeySelector2=config.getStatePartitioner(1,getUserCodeClassloader());
  try {
    TypeSerializer<Object> keySerializer=config.getStateKeySerializer(getUserCodeClassloader());
    String operatorIdentifier=getClass().getSimpleName() + "_" + config.getVertexID()+ "_"+ runtimeContext.getIndexOfThisSubtask();
    stateBackend=container.createStateBackend(operatorIdentifier,keySerializer);
  }
 catch (  Exception e) {
    throw new RuntimeException("Could not initialize state backend. ",e);
  }
}
