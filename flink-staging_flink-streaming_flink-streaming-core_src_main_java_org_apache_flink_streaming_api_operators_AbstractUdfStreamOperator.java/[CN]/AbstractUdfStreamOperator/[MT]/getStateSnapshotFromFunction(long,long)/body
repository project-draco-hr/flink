{
  Map<String,StreamOperatorState> operatorStates=runtimeContext.getOperatorStates();
  Map<String,OperatorStateHandle> operatorStateSnapshots;
  if (operatorStates.isEmpty()) {
    operatorStateSnapshots=null;
  }
 else {
    Map<String,OperatorStateHandle> snapshots=new HashMap<String,OperatorStateHandle>();
    for (    Entry<String,StreamOperatorState> state : operatorStates.entrySet()) {
      boolean isPartitioned=state.getValue() instanceof PartitionedStreamOperatorState;
      snapshots.put(state.getKey(),new OperatorStateHandle(state.getValue().snapshotState(checkpointId,timestamp),isPartitioned));
    }
    operatorStateSnapshots=snapshots;
  }
  StateHandle<Serializable> checkpointedSnapshot=null;
  if (userFunction instanceof Checkpointed) {
    StateHandleProvider<Serializable> provider=runtimeContext.getStateHandleProvider();
    Serializable state=((Checkpointed)userFunction).snapshotState(checkpointId,timestamp);
    if (state != null) {
      checkpointedSnapshot=provider.createStateHandle(state);
    }
  }
  if (operatorStateSnapshots != null || checkpointedSnapshot != null) {
    return Tuple2.of(checkpointedSnapshot,operatorStateSnapshots);
  }
 else {
    return null;
  }
}
