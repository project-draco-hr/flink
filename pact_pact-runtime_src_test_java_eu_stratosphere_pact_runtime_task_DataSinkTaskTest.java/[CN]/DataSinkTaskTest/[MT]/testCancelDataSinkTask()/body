{
  super.initEnvironment(1);
  super.addInput(new InfiniteInputIterator());
  final DataSinkTask testTask=new DataSinkTask();
  super.getTaskConfig().setLocalStrategy(LocalStrategy.NONE);
  Configuration stubParams=new Configuration();
  stubParams.setString(DataSinkTask.SORT_ORDER,Order.NONE.name());
  super.getTaskConfig().setStubParameters(stubParams);
  super.registerFileOutputTask(testTask,MockOutputFormat.class,"file://" + tempTestPath);
  Thread taskRunner=new Thread(){
    public void run(){
      try {
        testTask.invoke();
      }
 catch (      Exception ie) {
        ie.printStackTrace();
        Assert.fail("Task threw exception although it was properly canceled");
      }
    }
  }
;
  taskRunner.start();
  TaskCancelThread tct=new TaskCancelThread(1,taskRunner,testTask);
  tct.start();
  try {
    tct.join();
    taskRunner.join();
  }
 catch (  InterruptedException ie) {
    Assert.fail("Joining threads failed");
  }
  File tempTestFile=new File(tempTestPath);
  Assert.assertTrue("Temp output file does not exist",tempTestFile.exists());
}
