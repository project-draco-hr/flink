{
  int keyCnt=100;
  int valCnt=20;
  super.initEnvironment(1);
  super.addInput(new RegularlyGeneratedInputGenerator(keyCnt,valCnt,false),1);
  DataSinkTask testTask=new DataSinkTask();
  super.getTaskConfig().setLocalStrategy(LocalStrategy.NONE);
  Configuration stubParams=new Configuration();
  stubParams.setString(DataSinkTask.SORT_ORDER,Order.NONE.name());
  super.getTaskConfig().setStubParameters(stubParams);
  super.registerFileOutputTask(testTask,MockFailingOutputFormat.class,"file://" + this.tempTestPath);
  boolean stubFailed=false;
  try {
    testTask.invoke();
  }
 catch (  Exception e) {
    stubFailed=true;
  }
  Assert.assertTrue("Stub exception was not forwarded.",stubFailed);
  File tempTestFile=new File(this.tempTestPath);
  Assert.assertTrue("Temp output file does not exist",tempTestFile.exists());
}
