{
  List<ConfigKey> configs=new ArrayList<ConfigKey>(this.configKeys.values());
  Collections.sort(configs,new Comparator<ConfigKey>(){
    public int compare(    ConfigDef.ConfigKey k1,    ConfigDef.ConfigKey k2){
      if (!k1.hasDefault() && k2.hasDefault())       return -1;
 else       if (!k2.hasDefault() && k1.hasDefault())       return 1;
      int cmp=k1.importance.compareTo(k2.importance);
      if (cmp == 0)       return k1.name.compareTo(k2.name);
 else       return cmp;
    }
  }
);
  StringBuilder b=new StringBuilder();
  b.append("<table>\n");
  b.append("<tr>\n");
  b.append("<th>Name</th>\n");
  b.append("<th>Type</th>\n");
  b.append("<th>Default</th>\n");
  b.append("<th>Importance</th>\n");
  b.append("<th>Description</th>\n");
  b.append("</tr>\n");
  for (  ConfigKey def : configs) {
    b.append("<tr>\n");
    b.append("<td>");
    b.append(def.name);
    b.append("</td>");
    b.append("<td>");
    b.append(def.type.toString().toLowerCase());
    b.append("</td>");
    b.append("<td>");
    b.append(def.defaultValue == null ? "" : def.defaultValue);
    b.append("</td>");
    b.append("<td>");
    b.append(def.importance.toString().toLowerCase());
    b.append("</td>");
    b.append("<td>");
    b.append(def.documentation);
    b.append("</td>");
    b.append("</tr>\n");
  }
  b.append("</table>");
  return b.toString();
}
