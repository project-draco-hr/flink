{
  ExecutionVertexID newVertexID;
  if (preserveVertexID) {
    newVertexID=this.vertexID;
  }
 else {
    newVertexID=ExecutionVertexID.generate();
  }
  final ExecutionVertex duplicatedVertex=new ExecutionVertex(newVertexID,this.executionGraph,this.groupVertex,this.outputGates.length,this.inputGates.length);
  for (int i=0; i < this.outputGates.length; ++i) {
    duplicatedVertex.outputGates[i]=new ExecutionGate(new GateID(),duplicatedVertex,this.outputGates[i].getGroupEdge(),false);
  }
  for (int i=0; i < this.inputGates.length; ++i) {
    duplicatedVertex.inputGates[i]=new ExecutionGate(new GateID(),duplicatedVertex,this.inputGates[i].getGroupEdge(),true);
  }
  duplicatedVertex.checkpointState.set(this.checkpointState.get());
  duplicatedVertex.setAllocatedResource(this.allocatedResource.get());
  return duplicatedVertex;
}
