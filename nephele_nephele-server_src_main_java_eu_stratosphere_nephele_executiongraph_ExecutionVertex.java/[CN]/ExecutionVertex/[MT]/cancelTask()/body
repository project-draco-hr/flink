{
  while (true) {
    final ExecutionState previousState=this.executionState.get();
    if (previousState == ExecutionState.CANCELED) {
      return new TaskCancelResult(getID(),AbstractTaskResult.ReturnCode.SUCCESS);
    }
    if (previousState == ExecutionState.FAILED) {
      return new TaskCancelResult(getID(),AbstractTaskResult.ReturnCode.SUCCESS);
    }
    if (previousState == ExecutionState.FINISHED) {
      return new TaskCancelResult(getID(),AbstractTaskResult.ReturnCode.SUCCESS);
    }
    if (previousState == ExecutionState.CANCELING) {
      return new TaskCancelResult(getID(),ReturnCode.SUCCESS);
    }
    if (previousState == ExecutionState.STARTING) {
      this.cancelRequested.set(true);
      if (this.executionState.get() != ExecutionState.STARTING) {
        this.cancelRequested.set(false);
        continue;
      }
      return new TaskCancelResult(getID(),AbstractTaskResult.ReturnCode.SUCCESS);
    }
    if (compareAndUpdateExecutionState(previousState,ExecutionState.CANCELING)) {
      if (this.groupVertex.getStageNumber() != this.executionGraph.getIndexOfCurrentExecutionStage()) {
        updateExecutionState(ExecutionState.CANCELED,null);
        return new TaskCancelResult(getID(),AbstractTaskResult.ReturnCode.SUCCESS);
      }
      if (previousState != ExecutionState.RUNNING && previousState != ExecutionState.FINISHING && previousState != ExecutionState.REPLAYING) {
        updateExecutionState(ExecutionState.CANCELED,null);
        return new TaskCancelResult(getID(),AbstractTaskResult.ReturnCode.SUCCESS);
      }
      if (this.allocatedResource == null) {
        final TaskCancelResult result=new TaskCancelResult(getID(),AbstractTaskResult.ReturnCode.NO_INSTANCE);
        result.setDescription("Assigned instance of vertex " + this.toString() + " is null!");
        return result;
      }
      try {
        return this.allocatedResource.getInstance().cancelTask(this.vertexID);
      }
 catch (      IOException e) {
        final TaskCancelResult result=new TaskCancelResult(getID(),AbstractTaskResult.ReturnCode.IPC_ERROR);
        result.setDescription(StringUtils.stringifyException(e));
        return result;
      }
    }
  }
}
