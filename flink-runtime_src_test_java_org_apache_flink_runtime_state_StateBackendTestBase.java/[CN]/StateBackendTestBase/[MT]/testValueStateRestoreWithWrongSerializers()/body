{
  try {
    backend.initializeForJob(new DummyEnvironment("test",1,0),"test_op",IntSerializer.INSTANCE);
    ValueStateDescriptor<String> kvId=new ValueStateDescriptor<>("id",null,StringSerializer.INSTANCE);
    ValueState<String> state=backend.getPartitionedState(null,VoidSerializer.INSTANCE,kvId);
    @SuppressWarnings("unchecked") KvState<Integer,Void,ValueState<String>,ValueStateDescriptor<String>,B> kv=(KvState<Integer,Void,ValueState<String>,ValueStateDescriptor<String>,B>)state;
    kv.setCurrentKey(1);
    state.update("1");
    kv.setCurrentKey(2);
    state.update("2");
    KvStateSnapshot<Integer,Void,ValueState<String>,ValueStateDescriptor<String>,B> snapshot=kv.snapshot(682375462378L,System.currentTimeMillis());
    @SuppressWarnings("unchecked") TypeSerializer<Integer> fakeIntSerializer=(TypeSerializer<Integer>)(TypeSerializer<?>)FloatSerializer.INSTANCE;
    try {
      snapshot.restoreState(backend,fakeIntSerializer,getClass().getClassLoader(),1);
      fail("should recognize wrong serializers");
    }
 catch (    IllegalArgumentException e) {
    }
catch (    Exception e) {
      fail("wrong exception");
    }
  }
 catch (  Exception e) {
    e.printStackTrace();
    fail(e.getMessage());
  }
}
