{
  try {
    CheckpointStreamFactory streamFactory=createStreamFactory();
    KeyedStateBackend<Integer> backend=createKeyedBackend(IntSerializer.INSTANCE);
    ReducingStateDescriptor<String> kvId=new ReducingStateDescriptor<>("id",new AppendingReduce(),StringSerializer.INSTANCE);
    ReducingState<String> state=backend.getPartitionedState(VoidNamespace.INSTANCE,VoidNamespaceSerializer.INSTANCE,kvId);
    backend.setCurrentKey(1);
    state.add("1");
    backend.setCurrentKey(2);
    state.add("2");
    KeyGroupsStateHandle snapshot1=runSnapshot(backend.snapshot(682375462378L,2,streamFactory));
    backend.close();
    backend=restoreKeyedBackend(IntSerializer.INSTANCE,snapshot1);
    snapshot1.discardState();
    @SuppressWarnings("unchecked") TypeSerializer<String> fakeStringSerializer=(TypeSerializer<String>)(TypeSerializer<?>)FloatSerializer.INSTANCE;
    try {
      kvId=new ReducingStateDescriptor<>("id",new AppendingReduce(),fakeStringSerializer);
      state=backend.getPartitionedState(VoidNamespace.INSTANCE,VoidNamespaceSerializer.INSTANCE,kvId);
      state.get();
      fail("should recognize wrong serializers");
    }
 catch (    RuntimeException e) {
      if (!e.getMessage().contains("Trying to access state using wrong StateDescriptor")) {
        fail("wrong exception " + e);
      }
    }
catch (    Exception e) {
      fail("wrong exception " + e);
    }
    backend.close();
  }
 catch (  Exception e) {
    e.printStackTrace();
    fail(e.getMessage());
  }
}
