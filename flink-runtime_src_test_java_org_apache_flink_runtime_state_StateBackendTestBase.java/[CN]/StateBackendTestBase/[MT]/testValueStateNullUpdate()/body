{
  try {
    LongSerializer.INSTANCE.serialize(null,new DataOutputViewStreamWrapper(new ByteArrayOutputStream()));
    fail("Should fail with NullPointerException");
  }
 catch (  NullPointerException e) {
  }
  CheckpointStreamFactory streamFactory=createStreamFactory();
  KeyedStateBackend<Integer> backend=createKeyedBackend(IntSerializer.INSTANCE);
  ValueStateDescriptor<Long> kvId=new ValueStateDescriptor<>("id",LongSerializer.INSTANCE,42L);
  kvId.initializeSerializerUnlessSet(new ExecutionConfig());
  ValueState<Long> state=backend.getPartitionedState(VoidNamespace.INSTANCE,VoidNamespaceSerializer.INSTANCE,kvId);
  backend.setCurrentKey(1);
  assertEquals(42L,(long)state.value());
  state.update(1L);
  assertEquals(1L,(long)state.value());
  backend.setCurrentKey(2);
  assertEquals(42L,(long)state.value());
  backend.setCurrentKey(1);
  state.clear();
  assertEquals(42L,(long)state.value());
  state.update(17L);
  assertEquals(17L,(long)state.value());
  state.update(null);
  assertEquals(42L,(long)state.value());
  KeyGroupsStateHandle snapshot1=runSnapshot(backend.snapshot(682375462378L,2,streamFactory));
  backend.close();
  backend=restoreKeyedBackend(IntSerializer.INSTANCE,snapshot1);
  snapshot1.discardState();
  backend.getPartitionedState(VoidNamespace.INSTANCE,VoidNamespaceSerializer.INSTANCE,kvId);
  backend.close();
}
