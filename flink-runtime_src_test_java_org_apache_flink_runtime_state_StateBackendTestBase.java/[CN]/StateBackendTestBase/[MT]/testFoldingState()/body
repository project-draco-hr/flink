{
  try {
    backend.initializeForJob(new DummyEnvironment("test",1,0),"test_op",IntSerializer.INSTANCE);
    FoldingStateDescriptor<Integer,String> kvId=new FoldingStateDescriptor<>("id","Fold-Initial:",new FoldFunction<Integer,String>(){
      private static final long serialVersionUID=1L;
      @Override public String fold(      String acc,      Integer value) throws Exception {
        return acc + "," + value;
      }
    }
,String.class);
    FoldingState<Integer,String> state=backend.getPartitionedState(null,VoidSerializer.INSTANCE,kvId);
    @SuppressWarnings("unchecked") KvState<Integer,Void,FoldingState<Integer,String>,FoldingStateDescriptor<Integer,String>,B> kv=(KvState<Integer,Void,FoldingState<Integer,String>,FoldingStateDescriptor<Integer,String>,B>)state;
    Joiner joiner=Joiner.on(",");
    kv.setCurrentKey(1);
    assertEquals("Fold-Initial:",state.get());
    state.add(1);
    kv.setCurrentKey(2);
    assertEquals("Fold-Initial:",state.get());
    state.add(2);
    kv.setCurrentKey(1);
    assertEquals("Fold-Initial:,1",state.get());
    KvStateSnapshot<Integer,Void,FoldingState<Integer,String>,FoldingStateDescriptor<Integer,String>,B> snapshot1=kv.snapshot(682375462378L,2);
    kv.setCurrentKey(1);
    state.clear();
    state.add(101);
    kv.setCurrentKey(2);
    state.add(102);
    kv.setCurrentKey(3);
    state.add(103);
    KvStateSnapshot<Integer,Void,FoldingState<Integer,String>,FoldingStateDescriptor<Integer,String>,B> snapshot2=kv.snapshot(682375462379L,4);
    kv.setCurrentKey(1);
    assertEquals("Fold-Initial:,101",state.get());
    kv.setCurrentKey(2);
    assertEquals("Fold-Initial:,2,102",state.get());
    kv.setCurrentKey(3);
    assertEquals("Fold-Initial:,103",state.get());
    kv.dispose();
    KvState<Integer,Void,FoldingState<Integer,String>,FoldingStateDescriptor<Integer,String>,B> restored1=snapshot1.restoreState(backend,IntSerializer.INSTANCE,this.getClass().getClassLoader(),10);
    snapshot1.discardState();
    @SuppressWarnings("unchecked") FoldingState<Integer,String> restored1State=(FoldingState<Integer,String>)restored1;
    restored1.setCurrentKey(1);
    assertEquals("Fold-Initial:,1",restored1State.get());
    restored1.setCurrentKey(2);
    assertEquals("Fold-Initial:,2",restored1State.get());
    restored1.dispose();
    KvState<Integer,Void,FoldingState<Integer,String>,FoldingStateDescriptor<Integer,String>,B> restored2=snapshot2.restoreState(backend,IntSerializer.INSTANCE,this.getClass().getClassLoader(),20);
    snapshot2.discardState();
    @SuppressWarnings("unchecked") FoldingState<Integer,String> restored2State=(FoldingState<Integer,String>)restored2;
    restored2.setCurrentKey(1);
    assertEquals("Fold-Initial:,101",restored2State.get());
    restored2.setCurrentKey(2);
    assertEquals("Fold-Initial:,2,102",restored2State.get());
    restored2.setCurrentKey(3);
    assertEquals("Fold-Initial:,103",restored2State.get());
  }
 catch (  Exception e) {
    e.printStackTrace();
    fail(e.getMessage());
  }
}
