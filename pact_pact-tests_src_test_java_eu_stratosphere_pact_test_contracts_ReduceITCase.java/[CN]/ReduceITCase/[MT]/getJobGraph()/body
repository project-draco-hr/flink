{
  String pathPrefix=getFilesystemProvider().getURIPrefix() + getFilesystemProvider().getTempDirPath();
  FileDataSource input=new FileDataSource(ContractITCaseInputFormat.class,pathPrefix + "/reduceInput");
  input.setParameter(DelimitedInputFormat.RECORD_DELIMITER,"\n");
  input.setDegreeOfParallelism(config.getInteger("ReduceTest#NoSubtasks",1));
  ReduceContract testReducer=new ReduceContract(TestReducer.class,PactString.class,0);
  testReducer.setDegreeOfParallelism(config.getInteger("ReduceTest#NoSubtasks",1));
  testReducer.getParameters().setString(PactCompiler.HINT_LOCAL_STRATEGY,config.getString("ReduceTest#LocalStrategy",""));
  testReducer.getParameters().setString(PactCompiler.HINT_SHIP_STRATEGY,config.getString("ReduceTest#ShipStrategy",""));
  FileDataSink output=new FileDataSink(ContractITCaseOutputFormat.class,pathPrefix + "/result.txt");
  output.setDegreeOfParallelism(1);
  output.addInput(testReducer);
  testReducer.addInput(input);
  Plan plan=new Plan(output);
  PactCompiler pc=new PactCompiler();
  OptimizedPlan op=pc.compile(plan);
  JobGraphGenerator jgg=new JobGraphGenerator();
  return jgg.compileJobGraph(op);
}
