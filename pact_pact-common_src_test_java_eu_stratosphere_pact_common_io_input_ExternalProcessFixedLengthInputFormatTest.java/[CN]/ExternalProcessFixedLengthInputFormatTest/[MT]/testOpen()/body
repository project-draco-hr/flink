{
  Configuration config=new Configuration();
  config.setInteger(ExternalProcessFixedLengthInputFormat.RECORDLENGTH_PARAMETER_KEY,8);
  ExternalProcessInputSplit split=new ExternalProcessInputSplit(1,this.neverEndingCommand);
  boolean processDestroyed=false;
  try {
    format.configure(config);
    format.open(split);
    String[] cmd={"/bin/sh","-c","ps aux | grep -v grep | grep \"cat /dev/urandom\" | wc -l"};
    byte[] wcOut=new byte[128];
    Process p=Runtime.getRuntime().exec(cmd);
    p.getInputStream().read(wcOut);
    int pCnt=Integer.parseInt(new String(wcOut).trim());
    Assert.assertTrue(pCnt > 0);
    format.close();
  }
 catch (  IOException e) {
    Assert.fail();
  }
catch (  RuntimeException e) {
    if (e.getMessage().equals("External process was destroyed although stream was not fully read.")) {
      processDestroyed=true;
    }
  }
 finally {
    Assert.assertTrue(processDestroyed);
  }
}
