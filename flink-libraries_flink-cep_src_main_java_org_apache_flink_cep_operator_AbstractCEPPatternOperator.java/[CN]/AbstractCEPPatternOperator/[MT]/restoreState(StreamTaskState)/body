{
  super.restoreState(state);
  StreamStateHandle stream=(StreamStateHandle)state.getOperatorState();
  final InputStream is=stream.getState(getUserCodeClassloader());
  final ObjectInputStream ois=new ObjectInputStream(is);
  final DataInputViewStreamWrapper div=new DataInputViewStreamWrapper(is);
  nfa=(NFA<IN>)ois.readObject();
  int numberPriorityQueueEntries=div.readInt();
  priorityQueue=new PriorityQueue<StreamRecord<IN>>(numberPriorityQueueEntries,new StreamRecordComparator<IN>());
  for (int i=0; i < numberPriorityQueueEntries; i++) {
    StreamElement streamElement=streamRecordSerializer.deserialize(div);
    priorityQueue.offer(streamElement.<IN>asRecord());
  }
  div.close();
}
