{
  final List<Method> functions=getCompatibleMethods(ReflectUtil.getMethods(clazz,staticMethodName,Modifier.STATIC | Modifier.PUBLIC));
  if (functions.isEmpty())   throw new IllegalArgumentException(String.format("Method %s not found in class %s",staticMethodName,clazz));
  Callable<?,?> javaMethod=get(registeredName);
  if (javaMethod == null || !(javaMethod instanceof JavaMethod))   this.put(registeredName,javaMethod=createJavaMethod(registeredName,functions.get(0)));
  for (  Method method : functions)   ((JavaMethod)javaMethod).addSignature(method);
}
