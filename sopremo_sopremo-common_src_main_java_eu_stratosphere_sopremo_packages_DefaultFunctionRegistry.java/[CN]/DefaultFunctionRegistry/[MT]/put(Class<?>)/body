{
  final List<Method> functions=getCompatibleMethods(ReflectUtil.getMethods(javaFunctions,null,Modifier.STATIC | Modifier.PUBLIC));
  for (  final Method method : functions)   this.put(method);
  final List<Field> fields=ReflectUtil.getFields(javaFunctions,null,Modifier.STATIC | Modifier.FINAL | Modifier.PUBLIC);
  for (  final Field field : fields)   if (Aggregation.class.isAssignableFrom(field.getType()))   try {
    final Aggregation<?,?> aggregation=(Aggregation<?,?>)field.get(null);
    String name=getName(field);
    if (name == null)     name=aggregation.getName();
    this.put(name,new AggregationFunction(aggregation));
  }
 catch (  Exception e) {
    SopremoUtil.LOG.warn(String.format("Cannot access constant %s: %s",field,e));
  }
  if (FunctionRegistryCallback.class.isAssignableFrom(javaFunctions))   ((FunctionRegistryCallback)ReflectUtil.newInstance(javaFunctions)).registerFunctions(this);
}
