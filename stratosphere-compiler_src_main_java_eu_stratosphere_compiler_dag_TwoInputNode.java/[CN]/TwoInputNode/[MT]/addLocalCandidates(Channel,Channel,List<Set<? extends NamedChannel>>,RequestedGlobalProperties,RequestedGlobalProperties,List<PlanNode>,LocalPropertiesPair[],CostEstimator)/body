{
  for (  RequestedLocalProperties ilp1 : this.input1.getInterestingProperties().getLocalProperties()) {
    final Channel in1=template1.clone();
    ilp1.parameterizeChannel(in1);
    for (    RequestedLocalProperties ilp2 : this.input2.getInterestingProperties().getLocalProperties()) {
      final Channel in2=template2.clone();
      ilp2.parameterizeChannel(in2);
      allPossibleLoop:       for (      OperatorDescriptorDual dps : this.possibleProperties) {
        for (        LocalPropertiesPair lpp : dps.getPossibleLocalProperties()) {
          if (lpp.getProperties1().isMetBy(in1.getLocalProperties()) && lpp.getProperties2().isMetBy(in2.getLocalProperties())) {
            if (dps.areCoFulfilled(lpp.getProperties1(),lpp.getProperties2(),in1.getLocalProperties(),in2.getLocalProperties())) {
              instantiate(dps,in1,in2,broadcastPlanChannels,target,estimator,rgps1,rgps2,ilp1,ilp2);
              break allPossibleLoop;
            }
 else {
              throw new CompilerException("Implements to adjust one side to the other!");
            }
          }
        }
      }
    }
  }
}
