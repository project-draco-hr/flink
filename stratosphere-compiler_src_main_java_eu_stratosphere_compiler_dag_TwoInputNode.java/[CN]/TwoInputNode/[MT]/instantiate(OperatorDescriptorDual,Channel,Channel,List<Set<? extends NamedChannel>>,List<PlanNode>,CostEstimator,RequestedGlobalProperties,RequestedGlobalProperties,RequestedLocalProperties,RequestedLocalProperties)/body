{
  for (  List<NamedChannel> broadcastChannelsCombination : Sets.cartesianProduct(broadcastPlanChannels)) {
    for (    NamedChannel nc : broadcastChannelsCombination) {
      PlanNode bcSource=nc.getSource();
      PlanNode inputSource1=in1.getSource();
      PlanNode inputSource2=in2.getSource();
      if (!(areBranchCompatible(bcSource,inputSource1) || areBranchCompatible(bcSource,inputSource2))) {
        return;
      }
    }
    placePipelineBreakersIfNecessary(operator.getStrategy(),in1,in2);
    DualInputPlanNode node=operator.instantiate(in1,in2,this);
    node.setBroadcastInputs(broadcastChannelsCombination);
    GlobalProperties gp1=in1.getGlobalProperties().clone().filterByNodesConstantSet(this,0);
    GlobalProperties gp2=in2.getGlobalProperties().clone().filterByNodesConstantSet(this,1);
    GlobalProperties combined=operator.computeGlobalProperties(gp1,gp2);
    LocalProperties lp1=in1.getLocalProperties().clone().filterByNodesConstantSet(this,0);
    LocalProperties lp2=in2.getLocalProperties().clone().filterByNodesConstantSet(this,1);
    LocalProperties locals=operator.computeLocalProperties(lp1,lp2);
    node.initProperties(combined,locals);
    node.updatePropertiesWithUniqueSets(getUniqueFields());
    target.add(node);
  }
}
