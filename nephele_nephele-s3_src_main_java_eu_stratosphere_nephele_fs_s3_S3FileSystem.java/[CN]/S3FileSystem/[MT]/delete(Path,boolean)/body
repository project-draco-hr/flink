{
  try {
    final FileStatus fileStatus=getFileStatus(f);
    final S3BucketObjectPair bop=this.directoryStructure.toBucketObjectPair(f);
    if (fileStatus.isDir()) {
      boolean retVal=false;
      final FileStatus[] dirContent=listStatus(f);
      if (dirContent.length > 0) {
        if (!recursive) {
          throw new IOException("Found non-empty directory " + f + " while performing non-recursive delete");
        }
        for (        FileStatus entry : dirContent) {
          if (delete(entry.getPath(),true)) {
            retVal=true;
          }
        }
      }
      if (!bop.hasBucket()) {
        return retVal;
      }
      if (!bop.hasObject()) {
        this.s3Client.deleteBucket(bop.getBucket());
      }
 else {
        this.s3Client.deleteObject(bop.getBucket(),bop.getObject());
      }
    }
 else {
      this.s3Client.deleteObject(bop.getBucket(),bop.getObject());
    }
  }
 catch (  AmazonClientException e) {
    throw new IOException(StringUtils.stringifyException(e));
  }
  return true;
}
