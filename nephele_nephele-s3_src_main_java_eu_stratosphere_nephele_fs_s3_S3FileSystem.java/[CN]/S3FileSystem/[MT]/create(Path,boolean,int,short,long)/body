{
  if (!overwrite && exists(f)) {
    throw new IOException(f.toUri() + " already exists");
  }
  final S3BucketObjectPair bop=this.directoryStructure.toBucketObjectPair(f);
  if (!bop.hasBucket() || !bop.hasObject()) {
    throw new IOException(f.toUri() + " is not a valid path to create a new file");
  }
  if (bufferSize < S3DataOutputStream.MINIMUM_MULTIPART_SIZE) {
    throw new IOException("Provided buffer must be at least " + S3DataOutputStream.MINIMUM_MULTIPART_SIZE + " bytes");
  }
  final byte[] buf=new byte[bufferSize];
  return new S3DataOutputStream(this.s3Client,bop.getBucket(),bop.getObject(),buf);
}
