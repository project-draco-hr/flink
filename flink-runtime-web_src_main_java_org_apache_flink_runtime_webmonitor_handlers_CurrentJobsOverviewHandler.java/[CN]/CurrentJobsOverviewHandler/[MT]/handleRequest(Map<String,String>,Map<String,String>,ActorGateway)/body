{
  try {
    if (jobManager != null) {
      Future<Object> future=jobManager.ask(new RequestJobDetails(includeRunningJobs,includeFinishedJobs),timeout);
      MultipleJobsDetails result=(MultipleJobsDetails)Await.result(future,timeout);
      final long now=System.currentTimeMillis();
      StringWriter writer=new StringWriter();
      JsonGenerator gen=JsonFactory.jacksonFactory.createGenerator(writer);
      gen.writeStartObject();
      if (includeRunningJobs && includeFinishedJobs) {
        gen.writeArrayFieldStart("running");
        for (        JobDetails detail : result.getRunningJobs()) {
          generateSingleJobDetails(detail,gen,now);
        }
        gen.writeEndArray();
        gen.writeArrayFieldStart("finished");
        for (        JobDetails detail : result.getFinishedJobs()) {
          generateSingleJobDetails(detail,gen,now);
        }
        gen.writeEndArray();
      }
 else {
        gen.writeArrayFieldStart("jobs");
        for (        JobDetails detail : includeRunningJobs ? result.getRunningJobs() : result.getFinishedJobs()) {
          generateSingleJobDetails(detail,gen,now);
        }
        gen.writeEndArray();
      }
      gen.writeEndObject();
      gen.close();
      return writer.toString();
    }
 else {
      throw new Exception("No connection to the leading JobManager.");
    }
  }
 catch (  Exception e) {
    throw new Exception("Failed to fetch the status overview: " + e.getMessage(),e);
  }
}
