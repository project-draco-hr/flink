{
  dos.writeLong(savepoint.getCheckpointId());
  Collection<TaskState> taskStates=savepoint.getTaskStates();
  dos.writeInt(taskStates.size());
  for (  TaskState taskState : savepoint.getTaskStates()) {
    dos.writeLong(taskState.getJobVertexID().getLowerPart());
    dos.writeLong(taskState.getJobVertexID().getUpperPart());
    int parallelism=taskState.getParallelism();
    dos.writeInt(parallelism);
    dos.writeInt(taskState.getNumberCollectedStates());
    for (int i=0; i < parallelism; i++) {
      SubtaskState subtaskState=taskState.getState(i);
      if (subtaskState != null) {
        dos.writeInt(i);
        SerializedValue<?> serializedValue=subtaskState.getState();
        if (serializedValue == null) {
          dos.writeInt(-1);
        }
 else {
          byte[] serialized=serializedValue.getByteArray();
          dos.writeInt(serialized.length);
          dos.write(serialized,0,serialized.length);
        }
        dos.writeLong(subtaskState.getStateSize());
        dos.writeLong(subtaskState.getDuration());
      }
    }
    dos.writeInt(taskState.getNumberCollectedKvStates());
    for (int i=0; i < parallelism; i++) {
      KeyGroupState keyGroupState=taskState.getKvState(i);
      if (keyGroupState != null) {
        dos.write(i);
        SerializedValue<?> serializedValue=keyGroupState.getKeyGroupState();
        if (serializedValue == null) {
          dos.writeInt(-1);
        }
 else {
          byte[] serialized=serializedValue.getByteArray();
          dos.writeInt(serialized.length);
          dos.write(serialized,0,serialized.length);
        }
        dos.writeLong(keyGroupState.getStateSize());
        dos.writeLong(keyGroupState.getDuration());
      }
    }
  }
}
