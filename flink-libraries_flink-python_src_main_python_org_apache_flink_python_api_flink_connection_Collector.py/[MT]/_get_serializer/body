def _get_serializer(write, value, custom_types):
    if isinstance(value, (list, tuple)):
        write(Types.TYPE_TUPLE)
        write(pack('>I', len(value)))
        return TupleSerializer(write, value, custom_types)
    elif (value is None):
        write(Types.TYPE_NULL)
        return NullSerializer()
    elif isinstance(value, stringtype):
        write(Types.TYPE_STRING)
        return StringSerializer()
    elif isinstance(value, bool):
        write(Types.TYPE_BOOLEAN)
        return BooleanSerializer()
    elif (isinstance(value, int) or (PY2 and isinstance(value, long))):
        write(Types.TYPE_LONG)
        return LongSerializer()
    elif isinstance(value, bytearray):
        write(Types.TYPE_BYTES)
        return ByteArraySerializer()
    elif isinstance(value, float):
        write(Types.TYPE_DOUBLE)
        return FloatSerializer()
    else:
        for entry in custom_types:
            if isinstance(value, entry[1]):
                write(entry[0])
                return CustomTypeSerializer(entry[2])
        raise Exception('Unsupported Type encountered.')
