def _get_type_info(value, custom_types):
    if isinstance(value, (list, tuple)):
        return ''.join([pack('>i', len(value))[3:4], ''.join([_get_type_info(field, custom_types) for field in value])])
    elif (value is None):
        return Types.TYPE_NULL
    elif isinstance(value, stringtype):
        return Types.TYPE_STRING
    elif isinstance(value, bool):
        return Types.TYPE_BOOLEAN
    elif (isinstance(value, int) or (PY2 and isinstance(value, long))):
        return Types.TYPE_LONG
    elif isinstance(value, bytearray):
        return Types.TYPE_BYTES
    elif isinstance(value, float):
        return Types.TYPE_DOUBLE
    else:
        for entry in custom_types:
            if isinstance(value, entry[1]):
                return entry[0]
        raise Exception('Unsupported Type encountered.')
