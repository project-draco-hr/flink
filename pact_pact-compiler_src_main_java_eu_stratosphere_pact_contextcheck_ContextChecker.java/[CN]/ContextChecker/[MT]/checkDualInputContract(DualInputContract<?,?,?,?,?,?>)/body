{
  List<Contract> input1=dualInputContract.getFirstInputs();
  List<Contract> input2=dualInputContract.getSecondInputs();
  if (input1.size() == 0 || input2.size() == 0) {
    throw new MissingChildException();
  }
  ContractInspector nodeInspector=new ContractInspector(dualInputContract);
  ContractInspector input1Inspector=new ContractInspector(input1.get(0));
  ContractInspector input2Inspector=new ContractInspector(input2.get(0));
  Class<?> nodeInKey1Class=nodeInspector.getInput1KeyClass();
  Class<?> nodeInValue1Class=nodeInspector.getInput1ValueClass();
  Class<?> nodeInKey2Class=nodeInspector.getInput2KeyClass();
  Class<?> nodeInValue2Class=nodeInspector.getInput2ValueClass();
  Class<?> input1OutKeyClass=input1Inspector.getOutputKeyClass();
  Class<?> input1OutValueClass=input1Inspector.getOutputValueClass();
  Class<?> input2OutKeyClass=input2Inspector.getOutputKeyClass();
  Class<?> input2OutValueClass=input2Inspector.getOutputValueClass();
  if (!nodeInKey1Class.equals(input1OutKeyClass) || !nodeInValue1Class.equals(input1OutValueClass) || !nodeInKey2Class.equals(input2OutKeyClass)|| !nodeInValue2Class.equals(input2OutValueClass)) {
    throw new ChannelTypeException();
  }
}
