{
  SharedBuffer<String,Event> sharedBuffer=new SharedBuffer<>(Event.createTypeSerializer());
  int numberEvents=8;
  Event[] events=new Event[numberEvents];
  final long timestamp=1L;
  for (int i=0; i < numberEvents; i++) {
    events[i]=new Event(i + 1,"e" + (i + 1),i);
  }
  sharedBuffer.put("a1",events[0],timestamp,null,null,0,DeweyNumber.fromString("1"));
  sharedBuffer.put("a[]",events[1],timestamp,"a1",events[0],timestamp,DeweyNumber.fromString("1.0"));
  sharedBuffer.put("a1",events[2],timestamp,null,null,0,DeweyNumber.fromString("2"));
  sharedBuffer.put("a[]",events[2],timestamp,"a[]",events[1],timestamp,DeweyNumber.fromString("1.0"));
  sharedBuffer.put("a[]",events[3],timestamp,"a[]",events[2],timestamp,DeweyNumber.fromString("1.0"));
  sharedBuffer.put("a[]",events[3],timestamp,"a1",events[2],timestamp,DeweyNumber.fromString("2.0"));
  sharedBuffer.put("a[]",events[4],timestamp,"a[]",events[3],timestamp,DeweyNumber.fromString("1.0"));
  sharedBuffer.put("a[]",events[5],timestamp,"a[]",events[4],timestamp,DeweyNumber.fromString("1.1"));
  sharedBuffer.put("b",events[5],timestamp,"a[]",events[3],timestamp,DeweyNumber.fromString("2.0.0"));
  sharedBuffer.put("b",events[5],timestamp,"a[]",events[4],timestamp,DeweyNumber.fromString("1.0.0"));
  sharedBuffer.put("a[]",events[6],timestamp,"a[]",events[5],timestamp,DeweyNumber.fromString("1.1"));
  sharedBuffer.put("b",events[7],timestamp,"a[]",events[6],timestamp,DeweyNumber.fromString("1.1.0"));
  ByteArrayOutputStream baos=new ByteArrayOutputStream();
  ObjectOutputStream oos=new ObjectOutputStream(baos);
  oos.writeObject(sharedBuffer);
  ByteArrayInputStream bais=new ByteArrayInputStream(baos.toByteArray());
  ObjectInputStream ois=new ObjectInputStream(bais);
  SharedBuffer<String,Event> copy=(SharedBuffer<String,Event>)ois.readObject();
  assertEquals(sharedBuffer,copy);
}
