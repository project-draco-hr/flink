{
  boolean alive=true;
  while (isRunning() && alive) {
    CircularElement<E> element=null;
    try {
      element=this.queues.sort.take();
    }
 catch (    InterruptedException iex) {
      if (isRunning()) {
        if (LOG.isErrorEnabled()) {
          LOG.error("Sorting thread was interrupted (without being shut down) while grabbing a buffer. " + "Retrying to grab buffer...");
        }
        continue;
      }
 else {
        return;
      }
    }
    if (element != EOF_MARKER && element != SPILLING_MARKER) {
      if (element.buffer.size() == 0) {
        element.buffer.reset();
        this.queues.empty.add(element);
        continue;
      }
      if (LOG.isDebugEnabled()) {
        LOG.debug("Sorting buffer " + element.id + ".");
      }
      this.sorter.sort(element.buffer);
      if (LOG.isDebugEnabled()) {
        LOG.debug("Sorted buffer " + element.id + ".");
      }
    }
 else     if (element == EOF_MARKER) {
      if (LOG.isDebugEnabled()) {
        LOG.debug("Sorting thread done.");
      }
      alive=false;
    }
    this.queues.spill.add(element);
  }
}
