{
  if (LOG.isDebugEnabled()) {
    LOG.debug("Performing merge of " + channelIDs.size() + " sorted streams.");
  }
  final List<MutableObjectIterator<E>> iterators=new ArrayList<MutableObjectIterator<E>>(channelIDs.size() + 1);
  for (int i=0; i < channelIDs.size(); i++) {
    final ChannelWithBlockCount channel=channelIDs.get(i);
    final List<MemorySegment> segsForChannel=inputSegments.get(i);
    final BlockChannelReader<MemorySegment> reader=this.ioManager.createBlockChannelReader(channel.getChannel());
    readerList.add(reader);
    registerOpenChannelToBeRemovedAtShudown(reader);
    unregisterChannelToBeRemovedAtShudown(channel.getChannel());
    final ChannelReaderInputView inView=new ChannelReaderInputView(reader,segsForChannel,channel.getBlockCount(),false);
    iterators.add(new ChannelReaderInputViewIterator<E>(inView,null,this.serializer));
  }
  if (largeRecords != null) {
    iterators.add(largeRecords);
  }
  return new MergeIterator<E>(iterators,this.comparator);
}
