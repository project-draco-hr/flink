{
  if (super.getType() instanceof CompositeType) {
    TypeInformation<?> sortKeyType=((CompositeType<?>)super.getType()).getTypeAt(fields);
    if (!sortKeyType.isSortKeyType()) {
      throw new InvalidProgramException("Selected sort key is not a sortable type " + sortKeyType);
    }
    Keys.ExpressionKeys<T> ek;
    try {
      ek=new Keys.ExpressionKeys<T>(new String[]{fields},super.getType());
    }
 catch (    IllegalArgumentException iae) {
      throw new InvalidProgramException("Invalid specification of field expression.",iae);
    }
    return ek.computeLogicalKeyPositions();
  }
 else {
    fields=fields.trim();
    if (!(fields.equals("*") || fields.equals("_"))) {
      throw new InvalidProgramException("Output sorting of non-composite types can only be defined on the full type. " + "Use a field wildcard for that (\"*\" or \"_\")");
    }
 else {
      if (!super.getType().isSortKeyType()) {
        throw new InvalidProgramException("Selected sort key cannot be sorted: " + super.getType());
      }
      return new int[]{0};
    }
  }
}
