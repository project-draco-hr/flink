{
  try {
    JobVertexID jid1=new JobVertexID();
    JobVertexID jid2=new JobVertexID();
    JobVertexID jid3=new JobVertexID();
    Scheduler scheduler=new Scheduler();
    Instance i1=getRandomInstance(1);
    Instance i2=getRandomInstance(1);
    scheduler.newInstanceAvailable(i1);
    scheduler.newInstanceAvailable(i2);
    assertEquals(2,scheduler.getNumberOfAvailableSlots());
    CoLocationConstraint c1=new CoLocationConstraint();
    AllocatedSlot s1=scheduler.scheduleImmediately(new ScheduledUnit(getTestVertex(jid1,0,1),c1));
    s1.releaseSlot();
    scheduler.scheduleImmediately(new ScheduledUnit(getTestVertex(jid2,0,1)));
    scheduler.scheduleImmediately(new ScheduledUnit(getTestVertex(jid2,1,2)));
    try {
      scheduler.scheduleImmediately(new ScheduledUnit(getTestVertex(jid3,0,1),c1));
      fail("Scheduled even though no resource was available.");
    }
 catch (    NoResourceAvailableException e) {
    }
    assertEquals(0,scheduler.getNumberOfLocalizedAssignments());
    assertEquals(0,scheduler.getNumberOfNonLocalizedAssignments());
    assertEquals(3,scheduler.getNumberOfUnconstrainedAssignments());
  }
 catch (  Exception e) {
    e.printStackTrace();
    fail(e.getMessage());
  }
}
