{
  final SerializationBuffer<IntegerRecord> intSerializationBuffer=new SerializationBuffer<IntegerRecord>();
  final int NUM=0xab627ef;
  IntegerRecord intRecord=new IntegerRecord(NUM);
  try {
    intSerializationBuffer.serialize(intRecord);
  }
 catch (  IOException e) {
    e.printStackTrace();
    fail();
  }
  try {
    intSerializationBuffer.serialize(intRecord);
    fail();
  }
 catch (  IOException e) {
  }
  try {
    intSerializationBuffer.read(writeable);
  }
 catch (  IOException e) {
    e.printStackTrace();
    fail();
  }
  try {
    intSerializationBuffer.serialize(intRecord);
  }
 catch (  IOException e) {
    e.printStackTrace();
    fail();
  }
  DefaultDeserializer<IntegerRecord> intDeserialitionBuffer=new DefaultDeserializer<IntegerRecord>(IntegerRecord.class,true);
  IntegerRecord record=new IntegerRecord();
  try {
    record=intDeserialitionBuffer.readData(record,readable);
  }
 catch (  IOException e) {
    e.printStackTrace();
    fail();
  }
  assertEquals(NUM,record.getValue());
  try {
    record=intDeserialitionBuffer.readData(record,readable);
    fail();
  }
 catch (  IOException e) {
  }
}
