{
switch (insn.getOpcode()) {
case PUTFIELD:
    if (!isTagged(value1)) {
      return null;
    }
  final TaggedValue taggedValue=(TaggedValue)value1;
final FieldInsnNode field=(FieldInsnNode)insn;
final boolean value2HasInputDependency=hasImportantDependencies(value2);
if (!taggedValue.isInput() && value2HasInputDependency) {
if (!taggedValue.canContainFields()) {
taggedValue.setTag(Tag.CONTAINER);
}
taggedValue.addContainerMapping(field.name,tagged(value2),currentFrame);
}
 else if (!taggedValue.isInput() && !value2HasInputDependency) {
if (!taggedValue.canContainFields()) {
taggedValue.setTag(Tag.CONTAINER);
}
taggedValue.addContainerMapping(field.name,null,currentFrame);
}
 else if (taggedValue.isInput()) {
taggedValue.makeRegular();
}
return null;
default :
return super.binaryOperation(insn,value1,value2);
}
}
