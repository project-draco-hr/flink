{
  final AbstractInvokable memOwner=new DummyInvokable();
  List<PactNull> objects=new ArrayList<PactNull>();
  final int NUM_ELEMENTS=12;
  for (int i=0; i < NUM_ELEMENTS; i++) {
    objects.add(new PactNull());
  }
  DefaultRecordDeserializer<PactNull> deserializer=new DefaultRecordDeserializer<PactNull>(PactNull.class);
  CollectionReader<PactNull> reader=new CollectionReader<PactNull>(objects);
  SpillingResettableIterator<PactNull> iterator=new SpillingResettableIterator<PactNull>(memman,ioman,reader,1000,deserializer,memOwner);
  try {
    iterator.open();
  }
 catch (  IOException e) {
    Assert.fail("Could not open resettable iterator:" + e.getMessage());
  }
  int cnt=0;
  while (iterator.hasNext()) {
    iterator.hasNext();
    iterator.next();
    cnt++;
  }
  Assert.assertTrue(cnt + " elements read from iterator, but " + NUM_ELEMENTS+ " expected",cnt == NUM_ELEMENTS);
}
