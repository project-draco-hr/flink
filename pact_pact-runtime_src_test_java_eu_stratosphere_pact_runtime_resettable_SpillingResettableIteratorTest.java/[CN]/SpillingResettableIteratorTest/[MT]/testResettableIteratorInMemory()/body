{
  final AbstractInvokable memOwner=new DummyInvokable();
  reader=new CollectionReader<PactInteger>(objects);
  SpillingResettableIterator<PactInteger> iterator=new SpillingResettableIterator<PactInteger>(memman,ioman,reader,10000,deserializer,memOwner);
  try {
    iterator.open();
  }
 catch (  IOException e) {
    Assert.fail("Could not open resettable iterator:" + e.getMessage());
  }
  int count=0;
  while (iterator.hasNext())   Assert.assertEquals("In initial run, element " + count + " does not match expected value!",count++,iterator.next().getValue());
  Assert.assertEquals("Too few elements were deserialzied in initial run!",NUMTESTRECORDS,count);
  for (int j=0; j < 10; ++j) {
    count=0;
    iterator.reset();
    while (iterator.hasNext())     Assert.assertEquals("After reset nr. " + j + 1+ " element "+ count+ " does not match expected value!",count++,iterator.next().getValue());
    Assert.assertEquals("Too few elements were deserialzied after reset nr. " + j + 1+ "!",NUMTESTRECORDS,count);
  }
  iterator.close();
}
