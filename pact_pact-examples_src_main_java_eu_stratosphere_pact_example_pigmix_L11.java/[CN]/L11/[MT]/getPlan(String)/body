{
  final int parallelism=(args != null && args.length > 0) ? Integer.parseInt(args[0]) : 1;
  final String pageViewsFile="hdfs://marrus.local:50040/user/pig/tests/data/pigmix/page_views";
  final String wideRowFile="hdfs://marrus.local:50040/user/pig/tests/data/pigmix/widerow";
  FileDataSource pageViews=new FileDataSource(TextInputFormat.class,pageViewsFile,"Read PageViews");
  pageViews.setDegreeOfParallelism(parallelism);
  FileDataSource wideRow=new FileDataSource(TextInputFormat.class,wideRowFile,"Read WideRow");
  wideRow.setDegreeOfParallelism(parallelism);
  MapContract projectPageViews=new MapContract(ProjectPageViews.class,pageViews,"Project Page Views");
  projectPageViews.setDegreeOfParallelism(parallelism);
  MapContract projectWideRow=new MapContract(ProjectWideRow.class,pageViews,"Project Wide Row");
  projectWideRow.setDegreeOfParallelism(parallelism);
  ReduceContract distinctPageView=new ReduceContract(Distinct.class,PactString.class,0,projectPageViews,"Distinct PageView");
  distinctPageView.setDegreeOfParallelism(40);
  ReduceContract distinctWideRow=new ReduceContract(Distinct.class,PactString.class,0,projectWideRow,"Distinct Wide Row");
  distinctWideRow.setDegreeOfParallelism(40);
  CoGroupContract unionDistinct=new CoGroupContract(UnionDistinct.class,PactString.class,0,0,distinctPageView,distinctWideRow,"Join");
  unionDistinct.setDegreeOfParallelism(40);
  FileDataSink sink=new FileDataSink(RecordOutputFormat.class,"hdfs://marrus.local:50040/pigmix/result_L11",unionDistinct,"Result");
  sink.setDegreeOfParallelism(parallelism);
  sink.getParameters().setInteger(RecordOutputFormat.NUM_FIELDS_PARAMETER,1);
  sink.getParameters().setClass(RecordOutputFormat.FIELD_TYPE_PARAMETER_PREFIX + 0,PactString.class);
  Plan plan=new Plan(sink,"L11 distinct, union and widerow");
  return plan;
}
