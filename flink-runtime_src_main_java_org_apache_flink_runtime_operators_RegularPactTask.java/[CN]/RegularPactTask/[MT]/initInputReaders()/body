{
  final int numInputs=getNumTaskInputs();
  final MutableReader<?>[] inputReaders=new MutableReader<?>[numInputs];
  int currentReaderOffset=0;
  AccumulatorRegistry registry=getEnvironment().getAccumulatorRegistry();
  AccumulatorRegistry.Reporter reporter=registry.getReadWriteReporter();
  for (int i=0; i < numInputs; i++) {
    final int groupSize=this.config.getGroupSize(i);
    if (groupSize == 1) {
      inputReaders[i]=new MutableRecordReader<IOReadableWritable>(getEnvironment().getInputGate(currentReaderOffset));
    }
 else     if (groupSize > 1) {
      InputGate[] readers=new InputGate[groupSize];
      for (int j=0; j < groupSize; ++j) {
        readers[j]=getEnvironment().getInputGate(currentReaderOffset + j);
      }
      inputReaders[i]=new MutableRecordReader<IOReadableWritable>(new UnionInputGate(readers));
    }
 else {
      throw new Exception("Illegal input group size in task configuration: " + groupSize);
    }
    inputReaders[i].setReporter(reporter);
    currentReaderOffset+=groupSize;
  }
  this.inputReaders=inputReaders;
  if (currentReaderOffset != this.config.getNumInputs()) {
    throw new Exception("Illegal configuration: Number of input gates and group sizes are not consistent.");
  }
}
