{
  try {
    ClassLoader userCodeClassLoader=getUserCodeClassLoader();
    S stub=config.<S>getStubWrapper(userCodeClassLoader).getUserCodeObject(stubSuperClass,userCodeClassLoader);
    if (stubSuperClass != null && !stubSuperClass.isAssignableFrom(stub.getClass())) {
      throw new RuntimeException("The class '" + stub.getClass().getName() + "' is not a subclass of '"+ stubSuperClass.getName()+ "' as is required.");
    }
    FunctionUtils.setFunctionRuntimeContext(stub,this.runtimeUdfContext);
    return stub;
  }
 catch (  ClassCastException ccex) {
    throw new Exception("The stub class is not a proper subclass of " + stubSuperClass.getName(),ccex);
  }
}
