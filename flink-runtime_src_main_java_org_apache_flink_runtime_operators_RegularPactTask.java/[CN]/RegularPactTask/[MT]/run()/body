{
  if (!this.running) {
    return;
  }
  boolean stubOpen=false;
  try {
    try {
      this.driver.prepare();
    }
 catch (    Throwable t) {
      throw new Exception("The data preparation for task '" + this.getEnvironment().getTaskName() + "' , caused an error: "+ t.getMessage(),t);
    }
    if (!this.running) {
      return;
    }
    RegularPactTask.openChainedTasks(this.chainedTasks,this);
    if (this.stub != null) {
      try {
        Configuration stubConfig=this.config.getStubParameters();
        FunctionUtils.openFunction(this.stub,stubConfig);
        stubOpen=true;
      }
 catch (      Throwable t) {
        throw new Exception("The user defined 'open()' method caused an exception: " + t.getMessage(),t);
      }
    }
    this.driver.run();
    if (this.running && this.stub != null) {
      FunctionUtils.closeFunction(this.stub);
      stubOpen=false;
    }
    this.output.close();
    RegularPactTask.closeChainedTasks(this.chainedTasks,this);
    if (this.stub != null) {
      if (FunctionUtils.getFunctionRuntimeContext(this.stub,this.runtimeUdfContext) != null) {
        Map<String,Accumulator<?,?>> accumulators=FunctionUtils.getFunctionRuntimeContext(this.stub,this.runtimeUdfContext).getAllAccumulators();
        RegularPactTask.reportAndClearAccumulators(getEnvironment(),accumulators,this.chainedTasks);
      }
    }
  }
 catch (  Exception ex) {
    if (stubOpen) {
      try {
        FunctionUtils.closeFunction(this.stub);
      }
 catch (      Throwable t) {
      }
    }
    if (this.driver instanceof ResettablePactDriver) {
      final ResettablePactDriver<?,?> resDriver=(ResettablePactDriver<?,?>)this.driver;
      try {
        resDriver.teardown();
      }
 catch (      Throwable t) {
        throw new Exception("Error while shutting down an iterative operator: " + t.getMessage(),t);
      }
    }
    RegularPactTask.cancelChainedTasks(this.chainedTasks);
    ex=ExceptionInChainedStubException.exceptionUnwrap(ex);
    if (ex instanceof CancelTaskException) {
      throw ex;
    }
 else     if (this.running) {
      RegularPactTask.logAndThrowException(ex,this);
    }
  }
 finally {
    this.driver.cleanup();
  }
}
