{
  final int numSegments=MEMORY_SIZE / MEMORY_PAGE_SIZE;
  final List<MemorySegment> memory=this.memoryManager.allocatePages(new DummyInvokable(),numSegments);
  FixedLengthRecordSorter<IntPair> sorter=newSortBuffer(memory);
  RandomIntPairGenerator generator=new RandomIntPairGenerator(SEED);
  IntPair record=new IntPair();
  int num=-1;
  do {
    generator.next(record);
    num++;
  }
 while (sorter.write(record));
  generator.reset();
  MutableObjectIterator<IntPair> iter=sorter.getIterator();
  IntPair readTarget=new IntPair();
  int count=0;
  while (iter.next(readTarget)) {
    count++;
    generator.next(record);
    int rk=readTarget.getKey();
    int gk=record.getKey();
    int rv=readTarget.getValue();
    int gv=record.getValue();
    Assert.assertEquals("The re-read key is wrong",gk,rk);
    Assert.assertEquals("The re-read value is wrong",gv,rv);
  }
  Assert.assertEquals("Incorrect number of records",num,count);
  this.memoryManager.release(sorter.dispose());
}
