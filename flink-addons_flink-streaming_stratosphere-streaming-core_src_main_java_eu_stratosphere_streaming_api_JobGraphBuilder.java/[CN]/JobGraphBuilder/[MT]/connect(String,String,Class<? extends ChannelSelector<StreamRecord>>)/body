{
  AbstractJobVertex upStreamComponent=components.get(upStreamComponentName);
  AbstractJobVertex downStreamComponent=components.get(downStreamComponentName);
  addToEdges(upStreamComponentName,downStreamComponentName,PartitionerClass);
  try {
    upStreamComponent.connectTo(downStreamComponent,ChannelType.NETWORK);
    Configuration config=new TaskConfig(upStreamComponent.getConfiguration()).getConfiguration();
    config.setClass("partitionerClass_" + (upStreamComponent.getNumberOfForwardConnections() - 1),PartitionerClass);
    String outputName=userDefinedNames.get(downStreamComponentName);
    if (outputName == null) {
      outputName="";
    }
    config.setString("outputName_" + (upStreamComponent.getNumberOfForwardConnections() - 1),outputName);
    if (log.isDebugEnabled()) {
      log.debug("CONNECTED: " + PartitionerClass.getSimpleName() + " - "+ upStreamComponentName+ " -> "+ downStreamComponentName);
    }
  }
 catch (  JobGraphDefinitionException e) {
    if (log.isErrorEnabled()) {
      log.error("Cannot connect components with " + PartitionerClass.getSimpleName() + " : "+ upStreamComponentName+ " -> "+ downStreamComponentName,e);
    }
  }
}
