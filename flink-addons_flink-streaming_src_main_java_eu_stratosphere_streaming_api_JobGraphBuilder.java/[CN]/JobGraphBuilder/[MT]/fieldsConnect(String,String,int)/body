{
  AbstractJobVertex upStreamComponent=components.get(upStreamComponentName);
  AbstractJobVertex downStreamComponent=components.get(downStreamComponentName);
  try {
    upStreamComponent.connectTo(downStreamComponent,ChannelType.NETWORK);
    Configuration config=new TaskConfig(upStreamComponent.getConfiguration()).getConfiguration();
    config.setClass("partitionerClass_" + (upStreamComponent.getNumberOfForwardConnections() - 1),FieldsPartitioner.class);
    config.setInteger("partitionerIntParam_" + (upStreamComponent.getNumberOfForwardConnections() - 1),keyPosition);
    addOutputChannels(upStreamComponentName,1);
    if (log.isDebugEnabled()) {
      log.debug("CONNECTED: FIELD PARTITIONING - " + upStreamComponentName + " -> "+ downStreamComponentName+ ", KEY: "+ keyPosition);
    }
  }
 catch (  JobGraphDefinitionException e) {
    if (log.isErrorEnabled()) {
      log.error("Cannot connect components by field: " + upStreamComponentName + " to "+ downStreamComponentName,e);
    }
  }
  log.info("Fieldsconnected " + upStreamComponentName + " to "+ downStreamComponentName+ " on "+ keyPosition);
}
