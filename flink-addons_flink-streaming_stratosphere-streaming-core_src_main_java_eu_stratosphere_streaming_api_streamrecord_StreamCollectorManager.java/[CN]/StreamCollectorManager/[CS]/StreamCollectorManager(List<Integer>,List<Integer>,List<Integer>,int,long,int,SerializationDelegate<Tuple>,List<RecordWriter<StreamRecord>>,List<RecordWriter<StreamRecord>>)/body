{
  notPartitionedCollectors=new ArrayList<StreamCollector<Tuple>>(batchSizesOfNotPartitioned.size());
  partitionedCollectors=new ArrayList<StreamCollector<Tuple>[]>(batchSizesOfPartitioned.size());
  this.keyPostition=keyPosition;
  for (int i=0; i < batchSizesOfNotPartitioned.size(); i++) {
    notPartitionedCollectors.add(new StreamCollector<Tuple>(batchSizesOfNotPartitioned.get(i),batchTimeout,channelID,serializationDelegate,notPartitionedOutputs.get(i)));
  }
  for (int i=0; i < batchSizesOfPartitioned.size(); i++) {
    @SuppressWarnings("unchecked") StreamCollector<Tuple>[] collectors=new StreamCollector[parallelismOfOutput.get(i)];
    for (int j=0; j < collectors.length; j++) {
      collectors[j]=new StreamCollector<Tuple>(batchSizesOfPartitioned.get(i),batchTimeout,channelID,serializationDelegate,partitionedOutputs.get(i));
    }
    partitionedCollectors.add(collectors);
  }
}
