{
  try {
    ActorGateway jobManager=retriever.getJobManagerGateway();
    if (jobManager != null) {
      Future<Object> future=jobManager.ask(RequestStatusOverview.getInstance(),timeout);
      StatusOverview overview=(StatusOverview)Await.result(future,timeout);
      StringWriter writer=new StringWriter();
      JsonGenerator gen=JsonFactory.jacksonFactory.createJsonGenerator(writer);
      gen.writeStartObject();
      gen.writeNumberField("taskmanagers",overview.getNumTaskManagersConnected());
      gen.writeNumberField("slots-total",overview.getNumSlotsTotal());
      gen.writeNumberField("slots-available",overview.getNumSlotsAvailable());
      gen.writeNumberField("jobs-running",overview.getNumJobsRunningOrPending());
      gen.writeNumberField("jobs-finished",overview.getNumJobsFinished());
      gen.writeNumberField("jobs-cancelled",overview.getNumJobsCancelled());
      gen.writeNumberField("jobs-failed",overview.getNumJobsFailed());
      gen.writeEndObject();
      gen.close();
      return writer.toString();
    }
 else {
      throw new Exception("No connection to the leading JobManager.");
    }
  }
 catch (  Exception e) {
    throw new RuntimeException("Failed to fetch list of all running jobs: " + e.getMessage(),e);
  }
}
