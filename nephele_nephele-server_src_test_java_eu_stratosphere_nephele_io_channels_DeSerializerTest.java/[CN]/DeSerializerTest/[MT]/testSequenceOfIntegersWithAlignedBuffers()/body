{
  try {
    final Random rnd=this.rnd;
    final int NUM_INTS=1000000;
    final Iterator<SerializationTestType> intSource=new Iterator<SerializationTestType>(){
      private final Random random=rnd;
      private final int limit=NUM_INTS;
      private int pos=0;
      @Override public boolean hasNext(){
        return this.pos < this.limit;
      }
      @Override public IntType next(){
        if (hasNext()) {
          this.pos++;
          return new IntType(this.random.nextInt());
        }
 else {
          throw new NoSuchElementException();
        }
      }
      @Override public void remove(){
        throw new UnsupportedOperationException();
      }
    }
;
    testSequenceOfTypes(intSource,2048);
  }
 catch (  Exception e) {
    e.printStackTrace();
    fail("Test encountered an unexpected exception.");
  }
}
