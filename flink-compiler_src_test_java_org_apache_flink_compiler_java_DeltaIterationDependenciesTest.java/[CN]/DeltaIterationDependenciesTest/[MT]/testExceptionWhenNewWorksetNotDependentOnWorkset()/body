{
  try {
    ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
    DataSet<Tuple2<Long,Long>> input=env.fromElements(new Tuple2<Long,Long>(0L,0L));
    DeltaIteration<Tuple2<Long,Long>,Tuple2<Long,Long>> deltaIteration=input.iterateDelta(input,10,0);
    DataSet<Tuple2<Long,Long>> delta=deltaIteration.getSolutionSet().join(deltaIteration.getWorkset()).where(0).equalTo(0).projectFirst(1).projectSecond(1);
    DataSet<Tuple2<Long,Long>> nextWorkset=deltaIteration.getSolutionSet().join(input).where(0).equalTo(0).projectFirst(1).projectSecond(1);
    DataSet<Tuple2<Long,Long>> result=deltaIteration.closeWith(delta,nextWorkset);
    result.print();
    Plan p=env.createProgramPlan();
    try {
      compileNoStats(p);
      fail("Should not be able to compile, since the next workset does not depend on the workset");
    }
 catch (    CompilerException e) {
    }
catch (    Exception e) {
      fail("wrong exception type");
    }
  }
 catch (  Exception e) {
    e.printStackTrace();
    fail(e.getMessage());
  }
}
