{
  try {
    ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
    env.setDegreeOfParallelism(8);
    DataSet<Tuple2<Long,Long>> initialWorkset=env.readCsvFile("/some/file/path").types(Long.class).map(new DuplicateValue());
    DataSet<Tuple2<Long,Long>> initialSolutionSet=env.readCsvFile("/some/file/path").types(Long.class).map(new DuplicateValue());
    DeltaIteration<Tuple2<Long,Long>,Tuple2<Long,Long>> iteration=initialSolutionSet.iterateDelta(initialWorkset,100,0);
    DataSet<Tuple2<Long,Long>> next=iteration.getWorkset().map(new IdentityMapper<Tuple2<Long,Long>>());
    DataSet<Tuple2<Long,Long>> result=iteration.closeWith(next,next);
    initialWorkset.join(result,JoinHint.REPARTITION_HASH_FIRST).where(0).equalTo(0).print();
    Plan p=env.createProgramPlan();
    compileNoStats(p);
  }
 catch (  Exception e) {
    e.printStackTrace();
    fail(e.getMessage());
  }
}
