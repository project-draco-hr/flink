{
  if (args.length < 7) {
    System.err.println("Please specify at least the following parameters:");
    System.err.println("<address of job manager> <instance type> <topology tree> <number of runs> <number of consumers> <number of records> <output path>");
    System.exit(-1);
  }
  JOB_MANAGER_ADDRESS=args[0];
  INSTANCE_TYPE=args[1];
  TOPOLOGY_TREE=args[2];
  try {
    NUMBER_OF_RUNS=Integer.parseInt(args[3]);
  }
 catch (  NumberFormatException nfe) {
    System.err.println("Invalid number of runs specified: " + args[3]);
    System.exit(-1);
  }
  if (NUMBER_OF_RUNS <= 0) {
    System.err.println("Number of runs must be greater than 0");
    System.exit(-1);
  }
  try {
    NUMBER_OF_CONSUMERS=Integer.parseInt(args[4]);
  }
 catch (  NumberFormatException nfe) {
    System.err.println("Invalid number of consumers specified: " + args[4]);
    System.exit(-1);
  }
  if (NUMBER_OF_CONSUMERS <= 0) {
    System.err.println("Number of consumers must be greater than 0");
    System.exit(-1);
  }
  try {
    NUMBER_OF_RECORDS=Integer.parseInt(args[5]);
  }
 catch (  NumberFormatException nfe) {
    System.err.println("Invalid number of records specified: " + args[5]);
    System.exit(-1);
  }
  if (NUMBER_OF_RECORDS <= 0) {
    System.err.println("Number of records to send must be greater or equal to 0");
    System.exit(-1);
  }
  OUTPUT_PATH=args[6];
  JAR_FILE=new File("/tmp/broadcastJob.jar");
  final JarFileCreator jarFileCreator=new JarFileCreator(JAR_FILE);
  jarFileCreator.addClass(BroadcastProducer.class);
  jarFileCreator.addClass(BroadcastConsumer.class);
  jarFileCreator.addClass(BroadcastRecord.class);
  try {
    jarFileCreator.createJarFile();
  }
 catch (  IOException ioe) {
    if (JAR_FILE.exists()) {
      JAR_FILE.delete();
    }
    System.err.println("Error creating jar file: " + StringUtils.stringifyException(ioe));
    System.exit(-1);
  }
  try {
    final BufferedWriter writer=new BufferedWriter(new FileWriter(getFilename()));
    for (int i=0; i < NUMBER_OF_RUNS; ++i) {
      try {
        runJob(i,writer);
      }
 catch (      Exception e) {
        System.err.println("Error executing run " + i + ": "+ StringUtils.stringifyException(e));
        break;
      }
    }
    writer.close();
  }
 catch (  IOException ioe) {
    System.err.println("An IO exception occurred " + StringUtils.stringifyException(ioe));
  }
  if (JAR_FILE.exists()) {
    JAR_FILE.delete();
  }
}
