{
  if (currentInput == null) {
    throw new IllegalStateException("Need a valid input for accessing the state.");
  }
 else {
    if (!restored) {
      restoreWithCheckpointer();
    }
    Serializable key;
    try {
      key=keySelector.getKey(currentInput);
    }
 catch (    Exception e) {
      throw new RuntimeException("User-defined key selector threw an exception.",e);
    }
    if (stateStore.containsKey(key)) {
      return stateStore.getStateForKey(key);
    }
 else {
      try {
        return (S)checkpointer.restoreState((C)InstantiationUtil.deserializeObject(defaultState,cl));
      }
 catch (      ClassNotFoundException e) {
        throw new RuntimeException("Could not deserialize default state value.",e);
      }
    }
  }
}
