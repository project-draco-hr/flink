{
  this.jobID.read(in);
  if (in.readBoolean()) {
    final ClassLoader cl=LibraryCacheManager.getClassLoader(this.jobID);
    if (cl == null) {
      throw new IOException("Cannot find class loader for job " + this.jobID);
    }
    final String className=StringRecord.readString(in);
    Class<? extends InputSplit> splitClass=null;
    try {
      splitClass=(Class<? extends InputSplit>)Class.forName(className,true,cl);
    }
 catch (    ClassNotFoundException e) {
      throw new IOException(StringUtils.stringifyException(e));
    }
    try {
      this.inputSplit=splitClass.newInstance();
    }
 catch (    InstantiationException e) {
      throw new IOException(StringUtils.stringifyException(e));
    }
catch (    IllegalAccessException e) {
      throw new IOException(StringUtils.stringifyException(e));
    }
    this.inputSplit.read(in);
  }
 else {
    this.inputSplit=null;
  }
}
