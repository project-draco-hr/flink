{
  DeltaIteration<Tuple2<Long,Long>,Tuple2<Long,Long>> depIteration=vertices.iterateDelta(vertices,100,0);
  DataSet<Tuple1<Long>> candidates=depIteration.getWorkset().join(edges).where(0).equalTo(0).projectSecond(1).types(Long.class);
  DataSet<Tuple1<Long>> grouped=candidates.groupBy(0).reduceGroup(new Reduce101());
  DataSet<Tuple2<Long,Long>> candidatesDependencies=grouped.join(edges).where(0).equalTo(1).projectSecond(0,1).types(Long.class,Long.class);
  DataSet<Tuple2<Long,Long>> verticesWithNewComponents=candidatesDependencies.join(depIteration.getSolutionSet()).where(0).equalTo(0).with(new Join222()).groupBy(0).aggregate(Aggregations.MIN,1);
  DataSet<Tuple2<Long,Long>> updatedComponentId=verticesWithNewComponents.join(depIteration.getSolutionSet()).where(0).equalTo(0).flatMap(new FlatMapJoin());
  DataSet<Tuple2<Long,Long>> depResult=depIteration.closeWith(updatedComponentId,updatedComponentId);
  return depResult;
}
