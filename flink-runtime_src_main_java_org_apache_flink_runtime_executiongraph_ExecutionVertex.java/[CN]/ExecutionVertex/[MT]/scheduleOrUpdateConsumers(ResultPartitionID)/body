{
  final Execution execution=currentExecution;
  if (!partitionId.getProducerId().equals(execution.getAttemptId())) {
    return;
  }
  final IntermediateResultPartition partition=resultPartitions.get(partitionId.getPartitionId());
  if (partition == null) {
    throw new IllegalStateException("Unknown partition " + partitionId + ".");
  }
  if (partition.getIntermediateResult().getResultType().isPipelined()) {
    execution.scheduleOrUpdateConsumers(partition.getConsumers());
  }
 else {
    throw new IllegalArgumentException("ScheduleOrUpdateConsumers msg is only valid for" + "pipelined partitions.");
  }
}
