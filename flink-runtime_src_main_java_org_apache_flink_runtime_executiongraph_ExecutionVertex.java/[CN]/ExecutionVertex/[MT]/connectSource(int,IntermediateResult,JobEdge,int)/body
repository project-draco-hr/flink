{
  final DistributionPattern pattern=edge.getDistributionPattern();
  final IntermediateResultPartition[] sourcePartitions=source.getPartitions();
  ExecutionEdge[] edges;
switch (pattern) {
case POINTWISE:
    edges=connectPointwise(sourcePartitions,inputNumber);
  break;
case ALL_TO_ALL:
edges=connectAllToAll(sourcePartitions,inputNumber);
break;
default :
throw new RuntimeException("Unrecognized distribution pattern.");
}
this.inputEdges[inputNumber]=edges;
for (ExecutionEdge ee : edges) {
ee.getSource().addConsumer(ee,consumerNumber);
}
}
