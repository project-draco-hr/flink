{
  List<GateDeploymentDescriptor> inputGates=new ArrayList<GateDeploymentDescriptor>(inputEdges.length);
  for (  ExecutionEdge[] channels : inputEdges) {
    inputGates.add(GateDeploymentDescriptor.fromEdges(channels));
  }
  List<GateDeploymentDescriptor> outputGates=new ArrayList<GateDeploymentDescriptor>(resultPartitions.length);
  for (  IntermediateResultPartition partition : resultPartitions) {
    for (    List<ExecutionEdge> channels : partition.getConsumers()) {
      outputGates.add(GateDeploymentDescriptor.fromEdges(channels));
    }
  }
  String[] jarFiles=getExecutionGraph().getUserCodeJarFiles();
  return new TaskDeploymentDescriptor(getJobId(),getJobvertexId(),executionId,getTaskName(),subTaskIndex,getTotalNumberOfParallelSubtasks(),getExecutionGraph().getJobConfiguration(),jobVertex.getJobVertex().getConfiguration(),jobVertex.getJobVertex().getInvokableClassName(),outputGates,inputGates,jarFiles,slot.getSlotNumber());
}
