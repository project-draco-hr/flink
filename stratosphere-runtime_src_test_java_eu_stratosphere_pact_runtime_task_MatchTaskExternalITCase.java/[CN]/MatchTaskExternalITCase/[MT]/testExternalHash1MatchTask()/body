{
  final int keyCnt1=32768;
  final int valCnt1=8;
  final int keyCnt2=65536;
  final int valCnt2=8;
  final int expCnt=valCnt1 * valCnt2 * Math.min(keyCnt1,keyCnt2);
  addInput(new UniformRecordGenerator(keyCnt1,valCnt1,false));
  addInput(new UniformRecordGenerator(keyCnt2,valCnt2,false));
  addInputComparator(this.comparator1);
  addInputComparator(this.comparator2);
  getTaskConfig().setDriverPairComparator(RecordPairComparatorFactory.get());
  setOutput(this.output);
  getTaskConfig().setDriverStrategy(DriverStrategy.HYBRIDHASH_BUILD_FIRST);
  getTaskConfig().setRelativeMemoryDriver(hash_frac);
  MatchDriver<Record,Record,Record> testTask=new MatchDriver<Record,Record,Record>();
  try {
    testDriver(testTask,MockMatchStub.class);
  }
 catch (  Exception e) {
    e.printStackTrace();
    Assert.fail("Test caused an exception.");
  }
  Assert.assertEquals("Wrong result set size.",expCnt,this.output.getNumberOfRecords());
}
