{
  SpillingQueueElement elem=this.startElem;
  if (elem == null) {
    LOG.error("SpillingQueueThread has been started with startElem == null");
    return;
  }
  int usedMemory=0;
  while (elem != null) {
synchronized (elem) {
synchronized (this.monitorObject) {
        if (!this.firstLockAcquired) {
          this.firstLockAcquired=true;
          this.monitorObject.notify();
        }
      }
      try {
        usedMemory+=elem.unspill(this.bufferProvider);
      }
 catch (      IOException ioe) {
        LOG.error(StringUtils.stringifyException(ioe));
      }
      if (usedMemory >= this.unspillLimit) {
        this.spillingQueue.increaseAmountOfMainMemoryInQueue(usedMemory);
        return;
      }
    }
    elem=elem.getNextElement();
  }
  this.spillingQueue.increaseAmountOfMainMemoryInQueue(usedMemory);
}
