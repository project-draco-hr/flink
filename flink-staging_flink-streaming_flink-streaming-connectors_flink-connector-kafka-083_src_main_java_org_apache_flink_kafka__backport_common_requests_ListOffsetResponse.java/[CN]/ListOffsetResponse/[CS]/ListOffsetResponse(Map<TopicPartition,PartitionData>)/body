{
  super(new Struct(CURRENT_SCHEMA));
  Map<String,Map<Integer,PartitionData>> topicsData=CollectionUtils.groupDataByTopic(responseData);
  List<Struct> topicArray=new ArrayList<Struct>();
  for (  Map.Entry<String,Map<Integer,PartitionData>> topicEntry : topicsData.entrySet()) {
    Struct topicData=struct.instance(RESPONSES_KEY_NAME);
    topicData.set(TOPIC_KEY_NAME,topicEntry.getKey());
    List<Struct> partitionArray=new ArrayList<Struct>();
    for (    Map.Entry<Integer,PartitionData> partitionEntry : topicEntry.getValue().entrySet()) {
      PartitionData offsetPartitionData=partitionEntry.getValue();
      Struct partitionData=topicData.instance(PARTITIONS_KEY_NAME);
      partitionData.set(PARTITION_KEY_NAME,partitionEntry.getKey());
      partitionData.set(ERROR_CODE_KEY_NAME,offsetPartitionData.errorCode);
      partitionData.set(OFFSETS_KEY_NAME,offsetPartitionData.offsets.toArray());
      partitionArray.add(partitionData);
    }
    topicData.set(PARTITIONS_KEY_NAME,partitionArray.toArray());
    topicArray.add(topicData);
  }
  struct.set(RESPONSES_KEY_NAME,topicArray.toArray());
  this.responseData=responseData;
}
