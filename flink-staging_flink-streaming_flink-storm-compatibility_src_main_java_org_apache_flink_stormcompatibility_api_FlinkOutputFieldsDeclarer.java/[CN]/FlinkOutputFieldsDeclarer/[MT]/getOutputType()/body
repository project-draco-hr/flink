{
  if ((this.outputSchema == null) || (this.outputSchema.size() == 0)) {
    return null;
  }
  Tuple t;
  final int numberOfAttributes=this.outputSchema.size();
  if (numberOfAttributes == 1) {
    return TypeExtractor.getForClass(Object.class);
  }
 else   if (numberOfAttributes <= 25) {
    try {
      t=Tuple.getTupleClass(numberOfAttributes).newInstance();
    }
 catch (    final InstantiationException e) {
      throw new RuntimeException(e);
    }
catch (    final IllegalAccessException e) {
      throw new RuntimeException(e);
    }
  }
 else {
    throw new IllegalArgumentException("Flink supports only a maximum number of 25 attributes.");
  }
  for (int i=0; i < numberOfAttributes; ++i) {
    t.setField(new DefaultComparable(),i);
  }
  return TypeExtractor.getForObject(t);
}
