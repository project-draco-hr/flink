{
  JobID jobID=new JobID();
  String filePath="file://" + new Path(System.getProperty("java.io.tmpdir"),"cacheFile").toString();
  fileCache.createTmpFile("test_file",filePath,jobID);
  try {
    Thread.sleep(1000);
  }
 catch (  InterruptedException e) {
    throw new RuntimeException("Interrupted error",e);
  }
  fileCache.deleteTmpFile("test_file",jobID);
  try {
    Thread.sleep(1000);
  }
 catch (  InterruptedException e) {
    throw new RuntimeException("Interrupted error",e);
  }
  try {
    Assert.assertTrue("Local cache file should not be deleted when another task comes in 5 seconds!",lfs.exists(fileCache.getTempDir(jobID,"test_file")));
  }
 catch (  IOException e) {
    throw new RuntimeException("Interrupted error",e);
  }
  fileCache.createTmpFile("test_file",filePath,jobID);
  try {
    Thread.sleep(1000);
  }
 catch (  InterruptedException e) {
    throw new RuntimeException("Interrupted error",e);
  }
  fileCache.deleteTmpFile("test_file",jobID);
  try {
    Thread.sleep(7000);
  }
 catch (  InterruptedException e) {
    throw new RuntimeException("Interrupted error",e);
  }
  try {
    Assert.assertTrue("Local cache file should be deleted when no task comes in 5 seconds!",!lfs.exists(fileCache.getTempDir(jobID,"test_file")));
  }
 catch (  IOException e) {
    throw new RuntimeException("Interrupted error",e);
  }
}
