{
  final CompensatedSum smallSum=new CompensatedSum(0.001,0.0);
  final CompensatedSum largeSum=new CompensatedSum(1000,0.0);
  CompensatedSum compensatedResult1=smallSum;
  CompensatedSum compensatedResult2=largeSum;
  double naiveResult1=smallSum.value();
  double naiveResult2=largeSum.value();
  for (int i=0; i < 10; i++) {
    compensatedResult1=compensatedResult1.add(smallSum);
    compensatedResult2=compensatedResult2.add(smallSum);
    naiveResult1+=smallSum.value();
    naiveResult2+=smallSum.value();
  }
  compensatedResult1=compensatedResult1.add(largeSum);
  compensatedResult2=compensatedResult2.add(smallSum);
  naiveResult1+=largeSum.value();
  naiveResult2+=smallSum.value();
  Assert.assertEquals(1000.011,compensatedResult1.value(),0.0);
  Assert.assertEquals(1000.011,compensatedResult2.value(),0.0);
  Assert.assertEquals(1000.011,naiveResult1,0.0);
  Assert.assertEquals(1000.0109999999997,naiveResult2,0.0);
  Assert.assertEquals(compensatedResult1.value(),compensatedResult2.value(),0.0);
  Assert.assertEquals(naiveResult1,naiveResult2,0.0001);
  Assert.assertNotEquals(naiveResult1,naiveResult2,0.0);
}
