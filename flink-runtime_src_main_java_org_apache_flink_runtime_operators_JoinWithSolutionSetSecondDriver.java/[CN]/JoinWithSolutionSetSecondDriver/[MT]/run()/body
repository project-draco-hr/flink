{
  final FlatJoinFunction<IT1,IT2,OT> joinFunction=taskContext.getStub();
  final Collector<OT> collector=taskContext.getOutputCollector();
  IT2 buildSideRecord=this.solutionSideRecord;
  IT1 probeSideRecord=this.probeSideRecord;
  final CompactingHashTable<IT2> join=hashTable;
  final MutableObjectIterator<IT1> probeSideInput=taskContext.getInput(0);
  final CompactingHashTable<IT2>.HashTableProber<IT1> prober=join.getProber(probeSideComparator,pairComparator);
  while (this.running && ((probeSideRecord=probeSideInput.next(probeSideRecord)) != null)) {
    buildSideRecord=prober.getMatchFor(probeSideRecord,buildSideRecord);
    joinFunction.join(probeSideRecord,buildSideRecord,collector);
  }
}
