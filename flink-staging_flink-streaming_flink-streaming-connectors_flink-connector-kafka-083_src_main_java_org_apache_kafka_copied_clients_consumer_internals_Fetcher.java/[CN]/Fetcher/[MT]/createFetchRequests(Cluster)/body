{
  Map<Node,Map<TopicPartition,FetchRequest.PartitionData>> fetchable=new HashMap<Node,Map<TopicPartition,FetchRequest.PartitionData>>();
  for (  TopicPartition partition : subscriptions.assignedPartitions()) {
    Node node=cluster.leaderFor(partition);
    if (node == null) {
      metadata.requestUpdate();
    }
 else     if (this.client.pendingRequestCount(node) == 0) {
      Map<TopicPartition,FetchRequest.PartitionData> fetch=fetchable.get(node);
      if (fetch == null) {
        fetch=new HashMap<TopicPartition,FetchRequest.PartitionData>();
        fetchable.put(node,fetch);
      }
      long offset=this.subscriptions.fetched(partition);
      fetch.put(partition,new FetchRequest.PartitionData(offset,this.fetchSize));
    }
  }
  Map<Node,FetchRequest> requests=new HashMap<Node,FetchRequest>();
  for (  Map.Entry<Node,Map<TopicPartition,FetchRequest.PartitionData>> entry : fetchable.entrySet()) {
    Node node=entry.getKey();
    FetchRequest fetch=new FetchRequest(this.maxWaitMs,this.minBytes,entry.getValue());
    requests.put(node,fetch);
  }
  return requests;
}
