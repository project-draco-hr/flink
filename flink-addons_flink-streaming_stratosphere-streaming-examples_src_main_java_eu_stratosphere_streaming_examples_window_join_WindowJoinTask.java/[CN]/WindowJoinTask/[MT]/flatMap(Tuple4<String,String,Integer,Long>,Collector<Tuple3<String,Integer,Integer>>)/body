{
  String streamId=value.f0;
  String name=value.f1;
  Long progress=value.f3;
  if (streamId.equals("grade")) {
    if (salaryHashmap.containsKey(name)) {
      Iterator<SalaryProgress> iterator=salaryHashmap.get(name).iterator();
      while (iterator.hasNext()) {
        SalaryProgress entry=iterator.next();
        if (progress - entry.progress > windowSize) {
          iterator.remove();
        }
 else {
          Tuple3<String,Integer,Integer> outputTuple=new Tuple3<String,Integer,Integer>(name,value.f2,entry.salary);
          out.collect(outputTuple);
        }
      }
      if (!gradeHashmap.containsKey(name)) {
        gradeHashmap.put(name,new LinkedList<GradeProgress>());
      }
      gradeHashmap.get(name).add(new GradeProgress(value.f2,progress));
    }
 else {
      if (gradeHashmap.containsKey(name)) {
        Iterator<GradeProgress> iterator=gradeHashmap.get(name).iterator();
        while (iterator.hasNext()) {
          GradeProgress entry=iterator.next();
          if (progress - entry.progress > windowSize) {
            iterator.remove();
          }
 else {
            Tuple3<String,Integer,Integer> outputTuple=new Tuple3<String,Integer,Integer>(name,entry.grade,value.f2);
            out.collect(outputTuple);
          }
        }
      }
      if (!salaryHashmap.containsKey(name)) {
        salaryHashmap.put(name,new LinkedList<SalaryProgress>());
      }
      salaryHashmap.get(name).add(new SalaryProgress(value.f2,progress));
    }
  }
}
