@register(DictProxyType)
def save_dictproxy(pickler, obj):
    log.info(('Dp: %s' % obj))
    attr = obj.get('__dict__')
    if ((type(attr) == GetSetDescriptorType) and (attr.__name__ == '__dict__') and (getattr(attr.__objclass__, '__dict__', None) == obj)):
        pickler.save_reduce(getattr, (attr.__objclass__, '__dict__'), obj=obj)
        return
    from weakref import ReferenceError
    raise ReferenceError(('%s does not reference a class __dict__' % obj))
