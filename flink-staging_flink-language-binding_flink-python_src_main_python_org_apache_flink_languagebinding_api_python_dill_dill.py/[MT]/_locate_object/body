def _locate_object(address, module=None):
    'get object located at the given memory address (inverse of id(obj))'
    special = [None, True, False]
    for obj in special:
        if (address == id(obj)):
            return obj
    if module:
        if PY3:
            objects = iter(module.__dict__.values())
        else:
            objects = module.__dict__.itervalues()
    else:
        objects = iter(gc.get_objects())
    for obj in objects:
        if (address == id(obj)):
            return obj
    from weakref import ReferenceError
    try:
        address = hex(address)
    except TypeError:
        raise TypeError(("'%s' is not a valid memory address" % str(address)))
    raise ReferenceError(("Cannot reference object at '%s'" % address))
