def dump(obj, file, protocol=None, byref=False, fmode=HANDLE_FMODE):
    'pickle an object to a file'
    strictio = False
    if (protocol is None):
        protocol = DEFAULT_PROTOCOL
    pik = Pickler(file, protocol)
    pik._main_module = _main_module
    _byref = pik._byref
    _strictio = pik._strictio
    _fmode = pik._fmode
    pik._byref = bool(byref)
    pik._strictio = bool(strictio)
    pik._fmode = fmode
    if (NumpyArrayType and ndarrayinstance(obj)):

        @register(type(obj))
        def save_numpy_array(pickler, obj):
            log.info(('Nu: (%s, %s)' % (obj.shape, obj.dtype)))
            npdict = getattr(obj, '__dict__', None)
            (f, args, state) = obj.__reduce__()
            pik.save_reduce(_create_array, (f, args, state, npdict), obj=obj)
            return
    pik.dump(obj)
    pik._byref = _byref
    pik._strictio = _strictio
    pik._fmode = _fmode
    return
