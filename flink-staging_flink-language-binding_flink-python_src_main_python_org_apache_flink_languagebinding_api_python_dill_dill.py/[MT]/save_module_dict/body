@register(dict)
def save_module_dict(pickler, obj):
    if (is_dill(pickler) and (obj == pickler._main_module.__dict__) and (not pickler._session)):
        log.info(('D1: <dict%s' % str(obj.__repr__).split('dict')[(-1)]))
        if PY3:
            pickler.write(bytes('c__builtin__\n__main__\n', 'UTF-8'))
        else:
            pickler.write('c__builtin__\n__main__\n')
    elif ((not is_dill(pickler)) and (obj == _main_module.__dict__)):
        log.info(('D3: <dict%s' % str(obj.__repr__).split('dict')[(-1)]))
        if PY3:
            pickler.write(bytes('c__main__\n__dict__\n', 'UTF-8'))
        else:
            pickler.write('c__main__\n__dict__\n')
    elif (('__name__' in obj) and (obj != _main_module.__dict__) and (obj is getattr(_import_module(obj['__name__'], True), '__dict__', None))):
        log.info(('D4: <dict%s' % str(obj.__repr__).split('dict')[(-1)]))
        if PY3:
            pickler.write(bytes(('c%s\n__dict__\n' % obj['__name__']), 'UTF-8'))
        else:
            pickler.write(('c%s\n__dict__\n' % obj['__name__']))
    else:
        log.info(('D2: <dict%s' % str(obj.__repr__).split('dict')[(-1)]))
        if (is_dill(pickler) and pickler._session):
            pickler._session = False
        StockPickler.save_dict(pickler, obj)
    return
