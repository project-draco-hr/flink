{
  if (!ExecutionEnvironment.areExplicitEnvironmentsAllowed()) {
    throw new InvalidProgramException("The RemoteEnvironment cannot be used when submitting a program through a client, " + "or running in a TestEnvironment context.");
  }
  if (host == null) {
    throw new NullPointerException("Host must not be null.");
  }
  if (port < 1 || port >= 0xffff) {
    throw new IllegalArgumentException("Port out of range");
  }
  this.host=host;
  this.port=port;
  this.clientConfiguration=clientConfiguration == null ? new Configuration() : clientConfiguration;
  this.jarFiles=new ArrayList<>(jarFiles.length);
  for (  String jarFile : jarFiles) {
    try {
      URL jarFileUrl=new File(jarFile).getAbsoluteFile().toURI().toURL();
      this.jarFiles.add(jarFileUrl);
      JobWithJars.checkJarFile(jarFileUrl);
    }
 catch (    MalformedURLException e) {
      throw new IllegalArgumentException("JAR file path is invalid '" + jarFile + "'",e);
    }
catch (    IOException e) {
      throw new RuntimeException("Problem with jar file " + jarFile,e);
    }
  }
  if (globalClasspaths == null) {
    this.globalClasspaths=Collections.emptyList();
  }
 else {
    this.globalClasspaths=Arrays.asList(globalClasspaths);
  }
}
