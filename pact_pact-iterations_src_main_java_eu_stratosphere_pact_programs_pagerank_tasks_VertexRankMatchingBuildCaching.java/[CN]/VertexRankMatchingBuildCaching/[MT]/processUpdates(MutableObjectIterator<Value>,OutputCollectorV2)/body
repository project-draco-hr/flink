{
  VertexNeighbourPartial state=new VertexNeighbourPartial();
  VertexPageRank pageRank=new VertexPageRank();
  VertexPageRank result=new VertexPageRank();
  while (iter.next(pageRank)) {
    HashBucketIterator<Value,VertexPageRank> tableIter=table.getMatchesFor(pageRank);
    while (tableIter.next(state)) {
      double rank=pageRank.getRank();
      double partial=state.getPartial();
      if (Double.isNaN(rank * partial)) {
        LOG.info("NAN: " + pageRank.getVid() + "::"+ rank+ " // "+ pageRank.getRank()+ "::"+ state.getPartial());
      }
 else {
        result.setVid(state.getNid());
        result.setRank(rank * partial);
        output.collect(result);
      }
    }
  }
}
