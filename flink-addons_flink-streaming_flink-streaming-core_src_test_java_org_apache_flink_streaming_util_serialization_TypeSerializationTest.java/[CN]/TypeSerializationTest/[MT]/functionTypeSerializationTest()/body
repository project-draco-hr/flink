{
  TypeSerializerWrapper<Tuple1<Integer>,Tuple,Tuple1<Integer>> ser=new FunctionTypeWrapper<Tuple1<Integer>,Tuple,Tuple1<Integer>>(new MyMap(),MapFunction.class,0,-1,1);
  byte[] serializedType=SerializationUtils.serialize(ser);
  TypeSerializerWrapper<Tuple1<Integer>,Tuple,Tuple1<Integer>> ser2=(TypeSerializerWrapper<Tuple1<Integer>,Tuple,Tuple1<Integer>>)SerializationUtils.deserialize(serializedType);
  assertNotNull(ser.getInputTupleTypeInfo1());
  assertNotNull(ser2.getInputTupleTypeInfo1());
  assertNotNull(ser.getOutputTupleTypeInfo());
  assertNotNull(ser2.getOutputTupleTypeInfo());
  assertEquals(ser.getInputTupleTypeInfo1(),ser2.getInputTupleTypeInfo1());
  assertEquals(ser.getInputTupleTypeInfo2(),ser2.getInputTupleTypeInfo2());
  assertEquals(ser.getOutputTupleTypeInfo(),ser2.getOutputTupleTypeInfo());
}
