{
  if (forward) {
    while (true) {
      if (this.confinedToStage && te.getCurrentChannel() == 0) {
        while (currentGateLeadsToOtherStage(te,this.forward)) {
          te.increaseCurrentGate();
        }
      }
      if (te.getCurrentGate() >= te.getExecutionVertex().getNumberOfOutputGates()) {
        break;
      }
      if (te.getCurrentChannel() >= te.getExecutionVertex().getOutputGate(te.getCurrentGate()).getNumberOfEdges()) {
        te.increaseCurrentGate();
        te.resetCurrentChannel();
      }
 else {
        final ExecutionEdge outputChannel=te.getExecutionVertex().getOutputGate(te.getCurrentGate()).getEdge(te.getCurrentChannel());
        final ExecutionVertex tmp=outputChannel.getInputGate().getVertex();
        if (tmp == null) {
          LOG.error("Inconsistency in vertex map found (forward)!");
        }
        te.increaseCurrentChannel();
        if (!this.alreadyVisited.contains(tmp)) {
          return tmp;
        }
      }
    }
  }
 else {
    while (true) {
      if (te.getCurrentGate() >= te.getExecutionVertex().getNumberOfInputGates()) {
        break;
      }
      if (te.getCurrentChannel() >= te.getExecutionVertex().getInputGate(te.getCurrentGate()).getNumberOfEdges()) {
        te.increaseCurrentGate();
        te.resetCurrentChannel();
      }
 else {
        final ExecutionEdge inputChannel=te.getExecutionVertex().getInputGate(te.getCurrentGate()).getEdge(te.getCurrentChannel());
        final ExecutionVertex tmp=inputChannel.getOutputGate().getVertex();
        if (tmp == null) {
          LOG.error("Inconsistency in vertex map found (backward)!");
        }
        te.increaseCurrentChannel();
        if (!this.alreadyVisited.contains(tmp)) {
          return tmp;
        }
      }
    }
  }
  return null;
}
