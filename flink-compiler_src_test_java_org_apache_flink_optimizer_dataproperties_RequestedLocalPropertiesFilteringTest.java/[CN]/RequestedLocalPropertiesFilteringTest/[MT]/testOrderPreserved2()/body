{
  SingleInputSemanticProperties sProps=new SingleInputSemanticProperties();
  SemanticPropUtil.getSemanticPropsSingleFromString(sProps,new String[]{"5->1;0->4;2->6"},null,null,tupleInfo,tupleInfo);
  Ordering o=new Ordering();
  o.appendOrdering(4,LongValue.class,Order.DESCENDING);
  o.appendOrdering(1,IntValue.class,Order.ASCENDING);
  o.appendOrdering(6,ByteValue.class,Order.DESCENDING);
  RequestedLocalProperties rlProp=new RequestedLocalProperties();
  rlProp.setOrdering(o);
  RequestedLocalProperties filtered=rlProp.filterBySemanticProperties(sProps,0);
  assertNotNull(filtered);
  assertNotNull(filtered.getOrdering());
  assertEquals(3,filtered.getOrdering().getNumberOfFields());
  assertEquals(0,filtered.getOrdering().getFieldNumber(0).intValue());
  assertEquals(5,filtered.getOrdering().getFieldNumber(1).intValue());
  assertEquals(2,filtered.getOrdering().getFieldNumber(2).intValue());
  assertEquals(LongValue.class,filtered.getOrdering().getType(0));
  assertEquals(IntValue.class,filtered.getOrdering().getType(1));
  assertEquals(ByteValue.class,filtered.getOrdering().getType(2));
  assertEquals(Order.DESCENDING,filtered.getOrdering().getOrder(0));
  assertEquals(Order.ASCENDING,filtered.getOrdering().getOrder(1));
  assertEquals(Order.DESCENDING,filtered.getOrdering().getOrder(2));
  assertNull(filtered.getGroupedFields());
}
