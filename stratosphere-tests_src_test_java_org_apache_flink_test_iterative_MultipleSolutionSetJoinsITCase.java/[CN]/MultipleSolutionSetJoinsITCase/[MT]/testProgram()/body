{
  final int NUM_ITERS=4;
  final double expectedFactor=(int)Math.pow(7,NUM_ITERS);
  ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
  @SuppressWarnings("unchecked") DataSet<Tuple2<Long,Double>> initialData=env.fromElements(new Tuple2<Long,Double>(1L,1.0),new Tuple2<Long,Double>(2L,2.0),new Tuple2<Long,Double>(3L,3.0),new Tuple2<Long,Double>(4L,4.0),new Tuple2<Long,Double>(5L,5.0),new Tuple2<Long,Double>(6L,6.0));
  DataSet<Tuple2<Long,Double>> result=MultipleJoinsWithSolutionSetCompilerTest.constructPlan(initialData,NUM_ITERS);
  List<Tuple2<Long,Double>> resultCollector=new ArrayList<Tuple2<Long,Double>>();
  result.output(new LocalCollectionOutputFormat<Tuple2<Long,Double>>(resultCollector));
  env.execute();
  for (  Tuple2<Long,Double> tuple : resultCollector) {
    Assert.assertEquals(expectedFactor * tuple.f0,tuple.f1.doubleValue(),0.0);
  }
}
