{
  LinkedList<HashSet<MulticastCluster>> clusterlist=new LinkedList<HashSet<MulticastCluster>>();
  TreeNode source=nodes.pollFirst();
  MulticastCluster initialcluster=createInitialCluster(nodes);
  HashSet<MulticastCluster> firstlaycluster=initialcluster.splitCluster(maxclustersize);
  clusterlist.add(firstlaycluster);
  while (clusterlist.getFirst().size() > maxclustersize) {
    MulticastCluster nextlayercluster=new MulticastCluster();
    HashSet<MulticastCluster> lowerlayer=clusterlist.getFirst();
    for (    MulticastCluster c : lowerlayer) {
      nextlayercluster.addNode(c.getMaster());
    }
    HashSet<MulticastCluster> nextlayerclusters=nextlayercluster.splitCluster(maxclustersize);
    clusterlist.addFirst(nextlayerclusters);
  }
  MulticastForwardingTable table=new MulticastForwardingTable();
  HashSet<MulticastCluster> initialclusterlevel=clusterlist.getFirst();
  ConnectionInfoLookupResponse sourceentry=ConnectionInfoLookupResponse.createReceiverFoundAndReady();
  for (  ChannelID id : source.getLocalTargets()) {
    System.out.println("local target: " + id);
    sourceentry.addLocalTarget(id);
  }
  for (  MulticastCluster c : initialclusterlevel) {
    sourceentry.addRemoteTarget(c.getMaster().getConnectionInfo());
  }
  table.addConnectionInfo(source.getConnectionInfo(),sourceentry);
  System.out.println("forwards for node: " + source.getConnectionInfo());
  System.out.println(sourceentry);
  while (clusterlist.size() > 0) {
    HashSet<MulticastCluster> actualclusterlevel=clusterlist.pollFirst();
    for (    MulticastCluster c : actualclusterlevel) {
      TreeNode master=c.getMaster();
      for (Iterator<TreeNode> i=c.getNodes().iterator(); i.hasNext(); ) {
        TreeNode actualnode=i.next();
        if (!actualnode.equals(master)) {
          master.addRemoteTarget(actualnode.getConnectionInfo());
        }
      }
    }
  }
  for (  TreeNode n : nodes) {
    ConnectionInfoLookupResponse actualentry=ConnectionInfoLookupResponse.createReceiverFoundAndReady();
    for (    ChannelID localTarget : n.getLocalTargets()) {
      actualentry.addLocalTarget(localTarget);
    }
    for (    InstanceConnectionInfo remoteTarget : n.getRemoteTargets()) {
      actualentry.addRemoteTarget(remoteTarget);
    }
    table.addConnectionInfo(n.getConnectionInfo(),actualentry);
    System.out.println("forwards for node: " + n.getConnectionInfo());
    System.out.println(actualentry);
  }
  return table;
}
