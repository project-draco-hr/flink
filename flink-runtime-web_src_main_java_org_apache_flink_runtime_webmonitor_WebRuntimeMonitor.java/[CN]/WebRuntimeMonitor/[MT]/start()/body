{
  ChannelInitializer<SocketChannel> initializer=new ChannelInitializer<SocketChannel>(){
    @Override protected void initChannel(    SocketChannel ch){
      Handler handler=new Handler(router);
      ch.pipeline().addLast(new HttpServerCodec()).addLast(handler.name(),handler).addLast(new BadClientSilencer());
    }
  }
;
  NioEventLoopGroup bossGroup=new NioEventLoopGroup(1);
  NioEventLoopGroup workerGroup=new NioEventLoopGroup();
  this.bootstrap=new ServerBootstrap();
  this.bootstrap.group(bossGroup,workerGroup).childOption(ChannelOption.TCP_NODELAY,java.lang.Boolean.TRUE).childOption(ChannelOption.SO_KEEPALIVE,java.lang.Boolean.TRUE).channel(NioServerSocketChannel.class).childHandler(initializer);
  Channel ch=this.bootstrap.bind(configuredPort).sync().channel();
  InetSocketAddress bindAddress=(InetSocketAddress)ch.localAddress();
  String address=bindAddress.getAddress().getHostAddress();
  int port=bindAddress.getPort();
  LOG.info("Web frontend listening at " + address + ':'+ port);
}
