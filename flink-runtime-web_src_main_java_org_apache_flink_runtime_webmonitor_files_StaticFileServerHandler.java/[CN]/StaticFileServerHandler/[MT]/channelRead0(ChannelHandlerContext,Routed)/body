{
  final HttpRequest request=routed.request();
  String requestPath=routed.path();
  if (requestPath.endsWith("/")) {
    requestPath=requestPath + "index.html";
  }
  if (File.separatorChar != '/') {
    requestPath=requestPath.replace('/',File.separatorChar);
  }
  final File file=new File(rootPath,requestPath);
  if (!file.exists() || file.isHidden() || file.isDirectory()|| !file.isFile()) {
    sendError(ctx,NOT_FOUND);
    return;
  }
  final String ifModifiedSince=request.headers().get(IF_MODIFIED_SINCE);
  if (ifModifiedSince != null && !ifModifiedSince.isEmpty()) {
    SimpleDateFormat dateFormatter=new SimpleDateFormat(HTTP_DATE_FORMAT,Locale.US);
    Date ifModifiedSinceDate=dateFormatter.parse(ifModifiedSince);
    long ifModifiedSinceDateSeconds=ifModifiedSinceDate.getTime() / 1000;
    long fileLastModifiedSeconds=file.lastModified() / 1000;
    if (ifModifiedSinceDateSeconds == fileLastModifiedSeconds) {
      if (logger.isDebugEnabled()) {
        logger.debug("Responding 'NOT MODIFIED' for file '" + file.getAbsolutePath() + '\'');
      }
      sendNotModified(ctx);
      return;
    }
  }
  if (logger.isDebugEnabled()) {
    logger.debug("Responding with file '" + file.getAbsolutePath() + '\'');
  }
  final RandomAccessFile raf;
  try {
    raf=new RandomAccessFile(file,"r");
  }
 catch (  FileNotFoundException e) {
    sendError(ctx,NOT_FOUND);
    return;
  }
  long fileLength=raf.length();
  HttpResponse response=new DefaultHttpResponse(HTTP_1_1,OK);
  setContentTypeHeader(response,file);
  setDateAndCacheHeaders(response,file);
  if (HttpHeaders.isKeepAlive(request)) {
    response.headers().set(CONNECTION,HttpHeaders.Values.KEEP_ALIVE);
  }
  HttpHeaders.setContentLength(response,fileLength);
  ctx.write(response);
  ctx.write(new DefaultFileRegion(raf.getChannel(),0,fileLength),ctx.newProgressivePromise());
  ChannelFuture lastContentFuture=ctx.writeAndFlush(LastHttpContent.EMPTY_LAST_CONTENT);
  if (!HttpHeaders.isKeepAlive(request)) {
    lastContentFuture.addListener(ChannelFutureListener.CLOSE);
  }
}
