{
  StringBuilder bld=new StringBuilder();
  bld.append("[");
  Collections.sort(graphs,new Comparator<ExecutionGraph>(){
    @Override public int compare(    ExecutionGraph o1,    ExecutionGraph o2){
      if (o1.getStatusTimestamp(o1.getState()) < o2.getStatusTimestamp(o2.getState())) {
        return 1;
      }
 else {
        return -1;
      }
    }
  }
);
  for (int i=0; i < graphs.size(); i++) {
    ExecutionGraph graph=graphs.get(i);
    bld.append("{");
    bld.append("\"jobid\": \"").append(graph.getJobID()).append("\",");
    bld.append("\"jobname\": \"").append(graph.getJobName()).append("\",");
    bld.append("\"status\": \"").append(graph.getState()).append("\",");
    bld.append("\"time\": ").append(graph.getStatusTimestamp(graph.getState()));
    bld.append("}");
    if (i != graphs.size() - 1) {
      bld.append(",");
    }
  }
  bld.append("]");
  return bld.toString();
}
