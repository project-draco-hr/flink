{
  try {
    this.context.setContextNode(value);
    for (    final ValidationRule rule : this.rules) {
      final List<EvaluationExpression> targetPath=rule.getTargetPath();
      if (targetPath.isEmpty()) {
        if (!rule.validate(value,this.context)) {
          this.context.setViolatedRule(rule);
          value=rule.fix(value,this.context);
        }
      }
 else {
        JsonNode parent=value;
        final int lastIndex=targetPath.size() - 1;
        for (int index=0; index < lastIndex; index++)         parent=targetPath.get(index).evaluate(parent,this.context);
        final EvaluationExpression lastSegment=targetPath.get(lastIndex);
        final JsonNode validationValue=lastSegment.evaluate(parent,this.context);
        if (!rule.validate(validationValue,this.context)) {
          this.context.setViolatedRule(rule);
          ((WritableEvaluable)lastSegment).set(parent,rule.fix(validationValue,this.context),this.context);
        }
      }
    }
    out.collect(key,value);
  }
 catch (  final UnresolvableEvaluationException e) {
    if (SopremoUtil.LOG.isDebugEnabled())     SopremoUtil.LOG.debug(String.format("Cannot fix validation rule for tuple %s: %s",value,e.getMessage()));
  }
}
