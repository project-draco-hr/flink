{
  TypeInformation<Vertex<VertexKey,VertexValue>> vertexTypes=initialVertices.getType();
  final DeltaIteration<Vertex<VertexKey,VertexValue>,Vertex<VertexKey,VertexValue>> iteration=setUpIteration(this.initialVertices);
switch (messagingDirection) {
case IN:
    messages=buildMessagingFunction(iteration,messageTypeInfo,1,0);
  break;
case OUT:
messages=buildMessagingFunction(iteration,messageTypeInfo,0,0);
break;
case ALL:
messages=buildMessagingFunction(iteration,messageTypeInfo,1,0).union(buildMessagingFunction(iteration,messageTypeInfo,0,0));
break;
default :
throw new IllegalArgumentException("Illegal edge direction");
}
VertexUpdateUdf<VertexKey,VertexValue,VertexValue,Message> updateUdf=new VertexUpdateUdfSimpleVertexValue<VertexKey,VertexValue,Message>(updateFunction,vertexTypes);
CoGroupOperator<?,?,Vertex<VertexKey,VertexValue>> updates=messages.coGroup(iteration.getSolutionSet()).where(0).equalTo(0).with(updateUdf);
configureUpdateFunction(updates);
return iteration.closeWith(updates,updates);
}
