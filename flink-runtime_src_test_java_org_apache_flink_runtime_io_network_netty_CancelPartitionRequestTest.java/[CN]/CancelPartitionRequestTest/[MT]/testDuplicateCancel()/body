{
  NettyServerAndClient serverAndClient=null;
  try {
    TestPooledBufferProvider outboundBuffers=new TestPooledBufferProvider(16);
    ResultPartitionManager partitions=mock(ResultPartitionManager.class);
    ResultPartitionID pid=new ResultPartitionID();
    CountDownLatch sync=new CountDownLatch(1);
    ResultSubpartitionView view=spy(new InfiniteSubpartitionView(outboundBuffers,sync));
    when(partitions.createSubpartitionView(eq(pid),eq(0),any(BufferProvider.class))).thenReturn(view);
    PartitionRequestProtocol protocol=new PartitionRequestProtocol(partitions,mock(TaskEventDispatcher.class),mock(NetworkBufferPool.class));
    serverAndClient=initServerAndClient(protocol);
    Channel ch=connect(serverAndClient);
    InputChannelID inputChannelId=new InputChannelID();
    ch.writeAndFlush(new PartitionRequest(pid,0,inputChannelId)).await();
    if (!sync.await(TestingUtils.TESTING_DURATION().toMillis(),TimeUnit.MILLISECONDS)) {
      fail("Timed out after waiting for " + TestingUtils.TESTING_DURATION().toMillis() + " ms to be notified about cancelled partition.");
    }
    ch.writeAndFlush(new CancelPartitionRequest(inputChannelId)).await();
    ch.close();
    NettyTestUtil.awaitClose(ch);
    verify(view,times(1)).releaseAllResources();
    verify(view,times(0)).notifySubpartitionConsumed();
  }
  finally {
    shutdown(serverAndClient);
  }
}
