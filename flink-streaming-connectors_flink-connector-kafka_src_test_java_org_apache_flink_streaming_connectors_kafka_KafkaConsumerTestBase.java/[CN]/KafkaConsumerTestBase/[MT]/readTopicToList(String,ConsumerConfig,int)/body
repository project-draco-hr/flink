{
  ConsumerConnector consumerConnector=Consumer.createJavaConsumerConnector(config);
  Map<String,Integer> topicCountMap=Collections.singletonMap(topicName,1);
  Map<String,List<KafkaStream<byte[],byte[]>>> streams=consumerConnector.createMessageStreams(topicCountMap);
  if (streams.size() != 1) {
    throw new RuntimeException("Expected only one message stream but got " + streams.size());
  }
  List<KafkaStream<byte[],byte[]>> kafkaStreams=streams.get(topicName);
  if (kafkaStreams == null) {
    throw new RuntimeException("Requested stream not available. Available streams: " + streams.toString());
  }
  if (kafkaStreams.size() != 1) {
    throw new RuntimeException("Requested 1 stream from Kafka, bot got " + kafkaStreams.size() + " streams");
  }
  LOG.info("Opening Consumer instance for topic '{}' on group '{}'",topicName,config.groupId());
  ConsumerIterator<byte[],byte[]> iteratorToRead=kafkaStreams.get(0).iterator();
  List<MessageAndMetadata<byte[],byte[]>> result=new ArrayList<>();
  int read=0;
  while (iteratorToRead.hasNext()) {
    read++;
    result.add(iteratorToRead.next());
    if (read == stopAfter) {
      LOG.info("Read " + read + " elements");
      return result;
    }
  }
  return result;
}
