{
  final String topicName="testOffsetAutocommit";
  final int parallelism=3;
  createTestTopic(topicName,parallelism,1);
  StreamExecutionEnvironment env1=StreamExecutionEnvironment.createRemoteEnvironment("localhost",flinkPort);
  env1.getConfig().disableSysoutLogging();
  env1.setNumberOfExecutionRetries(0);
  env1.setParallelism(parallelism);
  StreamExecutionEnvironment env2=StreamExecutionEnvironment.createRemoteEnvironment("localhost",flinkPort);
  env2.getConfig().disableSysoutLogging();
  env2.setNumberOfExecutionRetries(0);
  env2.setParallelism(parallelism);
  writeSequence(env1,topicName,100,parallelism);
  Properties readProps=new Properties();
  readProps.putAll(standardProps);
  readProps.setProperty("auto.commit.interval.ms","500");
  readSequence(env2,readProps,parallelism,topicName,100,0);
  ZkClient zkClient=createZookeeperClient();
  long o1=ZookeeperOffsetHandler.getOffsetFromZooKeeper(zkClient,standardCC.groupId(),topicName,0);
  long o2=ZookeeperOffsetHandler.getOffsetFromZooKeeper(zkClient,standardCC.groupId(),topicName,1);
  long o3=ZookeeperOffsetHandler.getOffsetFromZooKeeper(zkClient,standardCC.groupId(),topicName,2);
  LOG.info("Got final offsets from zookeeper o1={}, o2={}, o3={}",o1,o2,o3);
  assertTrue("Offset of o1=" + o1 + " was not in range",o1 > 0 && o1 <= 100);
  assertTrue("Offset of o2=" + o2 + " was not in range",o2 > 0 && o2 <= 100);
  assertTrue("Offset of o3=" + o3 + " was not in range",o3 > 0 && o3 <= 100);
  deleteTestTopic(topicName);
}
