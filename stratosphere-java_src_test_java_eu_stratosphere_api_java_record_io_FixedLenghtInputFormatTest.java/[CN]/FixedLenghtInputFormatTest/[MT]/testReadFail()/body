{
  final int[] fileContent={1,2,3,4,5,6,7,8,9};
  final FileInputSplit split=createTempFile(fileContent);
  final Configuration parameters=new Configuration();
  parameters.setInteger(FixedLengthInputFormat.RECORDLENGTH_PARAMETER_KEY,8);
  format.configure(parameters);
  format.open(split);
  Record record=new Record();
  try {
    assertNotNull(format.nextRecord(record));
    assertEquals(1,record.getField(0,IntValue.class).getValue());
    assertEquals(2,record.getField(1,IntValue.class).getValue());
    assertNotNull(format.nextRecord(record));
    assertEquals(3,record.getField(0,IntValue.class).getValue());
    assertEquals(4,record.getField(1,IntValue.class).getValue());
    assertNotNull(format.nextRecord(record));
    assertEquals(5,record.getField(0,IntValue.class).getValue());
    assertEquals(6,record.getField(1,IntValue.class).getValue());
    assertNotNull(format.nextRecord(record));
    assertEquals(7,record.getField(0,IntValue.class).getValue());
    assertEquals(8,record.getField(1,IntValue.class).getValue());
    assertNull(format.nextRecord(record));
  }
 catch (  IOException ioe) {
    assertTrue(ioe.getMessage().equals("Unable to read full record"));
  }
}
