{
  String name=getName() != null ? getName() : function.getClass().getName();
  if (grouper == null) {
    PlanGroupReduceOperator<IN,OUT> po=new PlanGroupReduceOperator<IN,OUT>(function,new int[0],name,getInputType(),getResultType());
    po.setInput(input);
    return po;
  }
  if (grouper.getKeys() instanceof Keys.SelectorFunctionKeys) {
    @SuppressWarnings("unchecked") Keys.SelectorFunctionKeys<IN,?> selectorKeys=(Keys.SelectorFunctionKeys<IN,?>)grouper.getKeys();
    PlanUnwrappingReduceGroupOperator<IN,OUT,?> po=translateSelectorFunctionReducer(selectorKeys,function,getInputType(),getResultType(),name,input);
    return po;
  }
 else   if (grouper.getKeys() instanceof Keys.FieldPositionKeys) {
    int[] logicalKeyPositions=grouper.getKeys().computeLogicalKeyPositions();
    PlanGroupReduceOperator<IN,OUT> po=new PlanGroupReduceOperator<IN,OUT>(function,logicalKeyPositions,name,getInputType(),getResultType());
    po.setInput(input);
    if (grouper.getGroupSortKeyPositions() != null) {
      int[] sortKeyPositions=grouper.getGroupSortKeyPositions();
      Order[] sortOrders=grouper.getGroupSortOrders();
      Ordering o=new Ordering();
      for (int i=0; i < sortKeyPositions.length; i++) {
        o.appendOrdering(sortKeyPositions[i],null,sortOrders[i]);
      }
      po.setGroupOrder(o);
    }
    return po;
  }
 else {
    throw new UnsupportedOperationException("Unrecognized key type.");
  }
}
