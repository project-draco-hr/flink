{
  int noSubTasks=(args.length > 0 ? Integer.parseInt(args[0]) : 1);
  String dataInput=(args.length > 1 ? args[1] : "");
  String output=(args.length > 2 ? args[2] : "");
  FileDataSourceContract<PactNull,PactString> data1=new FileDataSourceContract<PactNull,PactString>(LineInFormat.class,dataInput,"Input Lines");
  data1.setDegreeOfParallelism(noSubTasks);
  FileDataSourceContract<PactNull,PactString> data2=new FileDataSourceContract<PactNull,PactString>(LineInFormat.class,dataInput,"Input Lines");
  data2.setDegreeOfParallelism(noSubTasks);
  MapContract<PactNull,PactString,PactString,PactInteger> mapper1=new MapContract<PactNull,PactString,PactString,PactInteger>(TokenizeLine.class,"Tokenize Lines");
  mapper1.setDegreeOfParallelism(noSubTasks);
  MapContract<PactNull,PactString,PactString,PactInteger> mapper2=new MapContract<PactNull,PactString,PactString,PactInteger>(TokenizeLine.class,"Tokenize Lines");
  mapper2.setDegreeOfParallelism(noSubTasks);
  ReduceContract<PactString,PactInteger,PactString,PactInteger> reducer=new ReduceContract<PactString,PactInteger,PactString,PactInteger>(CountWords.class,"Count Words");
  reducer.setDegreeOfParallelism(noSubTasks);
  FileDataSinkContract<PactString,PactInteger> out=new FileDataSinkContract<PactString,PactInteger>(WordCountOutFormat.class,output,"Output");
  out.setDegreeOfParallelism(noSubTasks);
  out.addInput(reducer);
  reducer.addInput(mapper1);
  reducer.addInput(mapper2);
  mapper1.addInput(data1);
  mapper2.addInput(data2);
  return new Plan(out,"WordCount Example");
}
