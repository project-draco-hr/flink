{
  final Channel.ID channel=ioManager.createChannel();
  final IntegerRecord rec=new IntegerRecord(0);
  ChannelWriter writer=null;
  ChannelReader reader=null;
  try {
    Collection<MemorySegment> segments=memManager.allocate(memoryOwner,numSegments,segmentSize);
    writer=ioManager.createChannelWriter(channel,segments);
    long writeStart=System.currentTimeMillis();
    int valsLeft=NUM_INTS_WRITTEN;
    while (valsLeft-- > 0) {
      rec.setValue(valsLeft);
      writer.write(rec);
    }
    segments=writer.close();
    writer=null;
    long writeElapsed=System.currentTimeMillis() - writeStart;
    reader=ioManager.createChannelReader(channel,segments,false);
    long readStart=System.currentTimeMillis();
    valsLeft=NUM_INTS_WRITTEN;
    while (valsLeft-- > 0) {
      reader.read(rec);
    }
    segments=reader.close();
    long readElapsed=System.currentTimeMillis() - readStart;
    reader.deleteChannel();
    reader=null;
    LOG.info("IOManager with " + numSegments + " buffer of "+ segmentSize+ " bytes: write "+ (writeElapsed / 1000)+ " secs, read "+ (readElapsed / 1000)+ " secs.");
    memManager.release(segments);
  }
  finally {
    if (reader != null) {
      memManager.release(reader.close());
      reader.deleteChannel();
    }
    if (writer != null) {
      memManager.release(writer.close());
      writer.deleteChannel();
    }
  }
}
