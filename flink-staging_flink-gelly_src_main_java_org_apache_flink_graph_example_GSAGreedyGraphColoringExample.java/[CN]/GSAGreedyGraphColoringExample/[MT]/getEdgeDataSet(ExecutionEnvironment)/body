{
  if (fileOutput) {
    return env.readCsvFile(edgeInputPath).fieldDelimiter(" ").lineDelimiter("\n").types(Long.class,Long.class,Double.class).map(new MapFunction<Tuple3<Long,Long,Double>,Edge<Long,Double>>(){
      @Override public Edge<Long,Double> map(      Tuple3<Long,Long,Double> value) throws Exception {
        return new Edge<Long,Double>(value.f0,value.f1,value.f2);
      }
    }
);
  }
  return env.generateSequence(0,5).flatMap(new FlatMapFunction<Long,Edge<Long,Double>>(){
    @Override public void flatMap(    Long value,    Collector<Edge<Long,Double>> out) throws Exception {
      out.collect(new Edge<Long,Double>(value,(value + 1) % 6,0.0));
      out.collect(new Edge<Long,Double>(value,(value + 2) % 6,0.0));
    }
  }
);
}
