{
  final ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
  Graph<Long,Tuple3<Long,Long,Boolean>,Long> graph=Graph.fromCollection(TestGraphUtils.getLongVerticesWithDegrees(),TestGraphUtils.getLongLongEdges(),env);
  IterationConfiguration parameters=new IterationConfiguration();
  parameters.setOptDegrees(true);
  DataSet<Vertex<Long,Tuple3<Long,Long,Boolean>>> verticesWithDegrees=graph.runVertexCentricIteration(new UpdateFunctionDegrees(),new DegreeMessageFunction(),5,parameters).getVertices();
  verticesWithDegrees.map(new MapFunction<Vertex<Long,Tuple3<Long,Long,Boolean>>,Tuple2<Long,Boolean>>(){
    @Override public Tuple2<Long,Boolean> map(    Vertex<Long,Tuple3<Long,Long,Boolean>> vertex) throws Exception {
      return new Tuple2<Long,Boolean>(vertex.getId(),vertex.getValue().f2);
    }
  }
).writeAsCsv(resultPath,"\n","\t");
  env.execute();
  expectedResult="1	true\n" + "2	true\n" + "3	true\n"+ "4	true\n"+ "5	true";
}
