{
  final ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
  Graph<Long,Long,Long> graph=Graph.fromCollection(TestGraphUtils.getLongLongVertices(),TestGraphUtils.getLongLongEdges(),env).mapVertices(new AssignOneMapper());
  VertexCentricConfiguration parameters=new VertexCentricConfiguration();
  parameters.addBroadcastSetForUpdateFunction("updateBcastSet",env.fromElements(1,2,3));
  parameters.addBroadcastSetForMessagingFunction("messagingBcastSet",env.fromElements(4,5,6));
  parameters.registerAggregator("superstepAggregator",new LongSumAggregator());
  parameters.setOptNumVertices(true);
  Graph<Long,Long,Long> res=graph.runVertexCentricIteration(new UpdateFunction(),new MessageFunction(),10,parameters);
  DataSet<Vertex<Long,Long>> data=res.getVertices();
  List<Vertex<Long,Long>> result=data.collect();
  expectedResult="1,11\n" + "2,11\n" + "3,11\n"+ "4,11\n"+ "5,11";
  CompareResults.compareResultAsTuples(result,expectedResult);
}
