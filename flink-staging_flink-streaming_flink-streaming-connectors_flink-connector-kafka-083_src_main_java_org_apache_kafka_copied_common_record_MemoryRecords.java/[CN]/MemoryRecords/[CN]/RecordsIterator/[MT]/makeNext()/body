{
  if (innerDone()) {
    try {
      long offset=stream.readLong();
      int size=stream.readInt();
      if (size < 0)       throw new IllegalStateException("Record with size " + size);
      ByteBuffer rec;
      if (type == CompressionType.NONE) {
        rec=buffer.slice();
        int newPos=buffer.position() + size;
        if (newPos > buffer.limit())         return allDone();
        buffer.position(newPos);
        rec.limit(size);
      }
 else {
        byte[] recordBuffer=new byte[size];
        stream.readFully(recordBuffer,0,size);
        rec=ByteBuffer.wrap(recordBuffer);
      }
      LogEntry entry=new LogEntry(offset,new Record(rec));
      CompressionType compression=entry.record().compressionType();
      if (compression == CompressionType.NONE || shallow) {
        return entry;
      }
 else {
        ByteBuffer value=entry.record().value();
        innerIter=new RecordsIterator(value,compression,true);
        return innerIter.next();
      }
    }
 catch (    EOFException e) {
      return allDone();
    }
catch (    IOException e) {
      throw new KafkaException(e);
    }
  }
 else {
    return innerIter.next();
  }
}
