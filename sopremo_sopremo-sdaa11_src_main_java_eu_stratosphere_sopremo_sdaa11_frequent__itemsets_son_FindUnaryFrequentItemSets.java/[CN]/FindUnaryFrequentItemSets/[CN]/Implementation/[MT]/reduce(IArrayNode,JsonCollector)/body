{
  final Object2IntOpenHashMap<String> counts=new Object2IntOpenHashMap<String>();
  counts.defaultReturnValue(0);
  for (  final IJsonNode value : values) {
    final ObjectNode basket=(ObjectNode)AnnotatorNodes.getAnnotatee((ObjectNode)value);
    final IArrayNode items=BasketNodes.getItems(basket);
    for (    final IJsonNode item : items) {
      final String itemValue=((TextNode)item).getTextValue();
      final int count=counts.getInt(itemValue);
      counts.put(itemValue,count + 1);
    }
  }
  for (  final Entry<String> entry : counts.object2IntEntrySet())   if (entry.getIntValue() >= this.minSupport) {
    this.outputTextNode.setValue(entry.getKey());
    this.itemsNode.clear();
    this.itemsNode.add(this.outputTextNode);
    this.supportNode.setValue(entry.getIntValue());
    this.outputNode.clear();
    FrequentItemsetNodes.write(this.outputNode,this.itemsNode,this.supportNode);
    out.collect(this.outputNode);
  }
}
