{
  final ArrayList<IntStringPair> source=new ArrayList<IntStringPair>();
  source.add(new IntStringPair(new PactInteger(1),new PactString("A")));
  source.add(new IntStringPair(new PactInteger(2),new PactString("B")));
  source.add(new IntStringPair(new PactInteger(3),new PactString("C")));
  source.add(new IntStringPair(new PactInteger(3),new PactString("D")));
  source.add(new IntStringPair(new PactInteger(4),new PactString("E")));
  source.add(new IntStringPair(new PactInteger(4),new PactString("F")));
  source.add(new IntStringPair(new PactInteger(4),new PactString("G")));
  source.add(new IntStringPair(new PactInteger(5),new PactString("H")));
  source.add(new IntStringPair(new PactInteger(5),new PactString("I")));
  source.add(new IntStringPair(new PactInteger(5),new PactString("J")));
  source.add(new IntStringPair(new PactInteger(5),new PactString("K")));
  source.add(new IntStringPair(new PactInteger(5),new PactString("L")));
  this.sourceIter=new MutableObjectIterator<PactRecord>(){
    final Iterator<IntStringPair> it=source.iterator();
    @Override public boolean next(    PactRecord target) throws IOException {
      if (it.hasNext()) {
        IntStringPair pair=it.next();
        target.setField(0,pair.getInteger());
        target.setField(1,pair.getString());
        return true;
      }
 else {
        return false;
      }
    }
  }
;
  final PactRecordSerializer serializer=PactRecordSerializer.get();
  @SuppressWarnings("unchecked") final PactRecordComparator comparator=new PactRecordComparator(new int[]{0},new Class[]{PactInteger.class});
  this.psi=new KeyGroupedIterator<PactRecord>(this.sourceIter,serializer,comparator);
}
