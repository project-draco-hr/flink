{
  Assert.assertTrue("KeyGroupedIterator must have another key.",this.psi.nextKey());
  Assert.assertTrue("KeyGroupedIterator must have another value.",this.psi.getValues().hasNext());
  Assert.assertTrue("KeyGroupedIterator returned a wrong key.",this.psi.getComparatorWithCurrentReference().equalToReference(new PactRecord(new PactInteger(1))));
  Assert.assertEquals("KeyGroupedIterator returned a wrong key.",1,this.psi.getCurrent().getField(0,PactInteger.class).getValue());
  Assert.assertEquals("KeyGroupedIterator returned a wrong value.",new PactString("A"),this.psi.getValues().next().getField(1,PactString.class));
  Assert.assertFalse("KeyGroupedIterator must not have another value.",this.psi.getValues().hasNext());
  Assert.assertTrue("KeyGroupedIterator must have another key.",this.psi.nextKey());
  Assert.assertTrue("KeyGroupedIterator must have another value.",this.psi.getValues().hasNext());
  Assert.assertTrue("KeyGroupedIterator returned a wrong key.",this.psi.getComparatorWithCurrentReference().equalToReference(new PactRecord(new PactInteger(2))));
  Assert.assertEquals("KeyGroupedIterator returned a wrong key.",2,this.psi.getCurrent().getField(0,PactInteger.class).getValue());
  Assert.assertEquals("KeyGroupedIterator returned a wrong value.",new PactString("B"),this.psi.getValues().next().getField(1,PactString.class));
  Assert.assertFalse("KeyGroupedIterator must not have another value.",this.psi.getValues().hasNext());
  Assert.assertTrue("KeyGroupedIterator must have another key.",this.psi.nextKey());
  Assert.assertTrue("KeyGroupedIterator must have another value.",this.psi.getValues().hasNext());
  Assert.assertTrue("KeyGroupedIterator returned a wrong key.",this.psi.getComparatorWithCurrentReference().equalToReference(new PactRecord(new PactInteger(3))));
  Assert.assertEquals("KeyGroupedIterator returned a wrong key.",3,this.psi.getCurrent().getField(0,PactInteger.class).getValue());
  Assert.assertEquals("KeyGroupedIterator returned a wrong value.",new PactString("C"),this.psi.getValues().next().getField(1,PactString.class));
  Assert.assertTrue("KeyGroupedIterator must have another value.",this.psi.getValues().hasNext());
  Assert.assertTrue("KeyGroupedIterator returned a wrong key.",this.psi.getComparatorWithCurrentReference().equalToReference(new PactRecord(new PactInteger(3))));
  Assert.assertEquals("KeyGroupedIterator returned a wrong key.",3,this.psi.getCurrent().getField(0,PactInteger.class).getValue());
  Assert.assertEquals("KeyGroupedIterator returned a wrong value.",new PactString("D"),this.psi.getValues().next().getField(1,PactString.class));
  Assert.assertTrue("KeyGroupedIterator returned a wrong key.",this.psi.getComparatorWithCurrentReference().equalToReference(new PactRecord(new PactInteger(3))));
  Assert.assertEquals("KeyGroupedIterator returned a wrong key.",3,this.psi.getCurrent().getField(0,PactInteger.class).getValue());
  try {
    this.psi.getValues().next();
    Assert.fail("A new KeyGroupedIterator must not have any value available and hence throw an exception on next().");
  }
 catch (  NoSuchElementException nseex) {
  }
  Assert.assertFalse("KeyGroupedIterator must not have another value.",this.psi.getValues().hasNext());
  try {
    this.psi.getValues().next();
    Assert.fail("A new KeyGroupedIterator must not have any value available and hence throw an exception on next().");
  }
 catch (  NoSuchElementException nseex) {
  }
  Assert.assertTrue("KeyGroupedIterator returned a wrong key.",this.psi.getComparatorWithCurrentReference().equalToReference(new PactRecord(new PactInteger(3))));
  Assert.assertEquals("KeyGroupedIterator returned a wrong key.",3,this.psi.getCurrent().getField(0,PactInteger.class).getValue());
  Assert.assertTrue("KeyGroupedIterator must have another key.",this.psi.nextKey());
  Assert.assertTrue("KeyGroupedIterator must have another value.",this.psi.getValues().hasNext());
  Assert.assertTrue("KeyGroupedIterator returned a wrong key.",this.psi.getComparatorWithCurrentReference().equalToReference(new PactRecord(new PactInteger(4))));
  Assert.assertEquals("KeyGroupedIterator returned a wrong key.",4,this.psi.getCurrent().getField(0,PactInteger.class).getValue());
  Assert.assertEquals("KeyGroupedIterator returned a wrong value.",new PactString("E"),this.psi.getValues().next().getField(1,PactString.class));
  Assert.assertTrue("KeyGroupedIterator must have another value.",this.psi.getValues().hasNext());
  Assert.assertTrue("KeyGroupedIterator returned a wrong key.",this.psi.getComparatorWithCurrentReference().equalToReference(new PactRecord(new PactInteger(4))));
  Assert.assertEquals("KeyGroupedIterator returned a wrong key.",4,this.psi.getCurrent().getField(0,PactInteger.class).getValue());
  Assert.assertEquals("KeyGroupedIterator returned a wrong value.",new PactString("F"),this.psi.getValues().next().getField(1,PactString.class));
  Assert.assertTrue("KeyGroupedIterator must have another value.",this.psi.getValues().hasNext());
  Assert.assertTrue("KeyGroupedIterator returned a wrong key.",this.psi.getComparatorWithCurrentReference().equalToReference(new PactRecord(new PactInteger(4))));
  Assert.assertEquals("KeyGroupedIterator returned a wrong key.",4,this.psi.getCurrent().getField(0,PactInteger.class).getValue());
  Assert.assertEquals("KeyGroupedIterator returned a wrong value.",new PactString("G"),this.psi.getValues().next().getField(1,PactString.class));
  Assert.assertTrue("KeyGroupedIterator returned a wrong key.",this.psi.getComparatorWithCurrentReference().equalToReference(new PactRecord(new PactInteger(4))));
  Assert.assertEquals("KeyGroupedIterator returned a wrong key.",4,this.psi.getCurrent().getField(0,PactInteger.class).getValue());
  Assert.assertFalse("KeyGroupedIterator must not have another value.",this.psi.getValues().hasNext());
  Assert.assertTrue("KeyGroupedIterator returned a wrong key.",this.psi.getComparatorWithCurrentReference().equalToReference(new PactRecord(new PactInteger(4))));
  Assert.assertEquals("KeyGroupedIterator returned a wrong key.",4,this.psi.getCurrent().getField(0,PactInteger.class).getValue());
  Assert.assertTrue("KeyGroupedIterator must have another key.",this.psi.nextKey());
  Assert.assertTrue("KeyGroupedIterator must have another value.",this.psi.getValues().hasNext());
  Assert.assertTrue("KeyGroupedIterator returned a wrong key.",this.psi.getComparatorWithCurrentReference().equalToReference(new PactRecord(new PactInteger(5))));
  Assert.assertEquals("KeyGroupedIterator returned a wrong key.",5,this.psi.getCurrent().getField(0,PactInteger.class).getValue());
  Assert.assertEquals("KeyGroupedIterator returned a wrong value.",new PactString("H"),this.psi.getValues().next().getField(1,PactString.class));
  Assert.assertTrue("KeyGroupedIterator must have another value.",this.psi.getValues().hasNext());
  Assert.assertTrue("KeyGroupedIterator returned a wrong key.",this.psi.getComparatorWithCurrentReference().equalToReference(new PactRecord(new PactInteger(5))));
  Assert.assertEquals("KeyGroupedIterator returned a wrong key.",5,this.psi.getCurrent().getField(0,PactInteger.class).getValue());
  Assert.assertEquals("KeyGroupedIterator returned a wrong value.",new PactString("I"),this.psi.getValues().next().getField(1,PactString.class));
  Assert.assertTrue("KeyGroupedIterator must have another value.",this.psi.getValues().hasNext());
  Assert.assertTrue("KeyGroupedIterator returned a wrong key.",this.psi.getComparatorWithCurrentReference().equalToReference(new PactRecord(new PactInteger(5))));
  Assert.assertEquals("KeyGroupedIterator returned a wrong key.",5,this.psi.getCurrent().getField(0,PactInteger.class).getValue());
  Assert.assertEquals("KeyGroupedIterator returned a wrong value.",new PactString("J"),this.psi.getValues().next().getField(1,PactString.class));
  Assert.assertTrue("KeyGroupedIterator must have another value.",this.psi.getValues().hasNext());
  Assert.assertTrue("KeyGroupedIterator returned a wrong key.",this.psi.getComparatorWithCurrentReference().equalToReference(new PactRecord(new PactInteger(5))));
  Assert.assertEquals("KeyGroupedIterator returned a wrong key.",5,this.psi.getCurrent().getField(0,PactInteger.class).getValue());
  Assert.assertEquals("KeyGroupedIterator returned a wrong value.",new PactString("K"),this.psi.getValues().next().getField(1,PactString.class));
  Assert.assertTrue("KeyGroupedIterator must have another value.",this.psi.getValues().hasNext());
  Assert.assertTrue("KeyGroupedIterator returned a wrong key.",this.psi.getComparatorWithCurrentReference().equalToReference(new PactRecord(new PactInteger(5))));
  Assert.assertEquals("KeyGroupedIterator returned a wrong key.",5,this.psi.getCurrent().getField(0,PactInteger.class).getValue());
  Assert.assertEquals("KeyGroupedIterator returned a wrong value.",new PactString("L"),this.psi.getValues().next().getField(1,PactString.class));
  Assert.assertTrue("KeyGroupedIterator returned a wrong key.",this.psi.getComparatorWithCurrentReference().equalToReference(new PactRecord(new PactInteger(5))));
  Assert.assertEquals("KeyGroupedIterator returned a wrong key.",5,this.psi.getCurrent().getField(0,PactInteger.class).getValue());
  try {
    this.psi.getValues().next();
    Assert.fail("A new KeyGroupedIterator must not have any value available and hence throw an exception on next().");
  }
 catch (  NoSuchElementException nseex) {
  }
  Assert.assertFalse("KeyGroupedIterator must not have another value.",this.psi.getValues().hasNext());
  Assert.assertTrue("KeyGroupedIterator returned a wrong key.",this.psi.getComparatorWithCurrentReference().equalToReference(new PactRecord(new PactInteger(5))));
  Assert.assertEquals("KeyGroupedIterator returned a wrong key.",5,this.psi.getCurrent().getField(0,PactInteger.class).getValue());
  try {
    this.psi.getValues().next();
    Assert.fail("A new KeyGroupedIterator must not have any value available and hence throw an exception on next().");
  }
 catch (  NoSuchElementException nseex) {
  }
  Assert.assertFalse("KeyGroupedIterator must not have another key.",this.psi.nextKey());
  Assert.assertFalse("KeyGroupedIterator must not have another key.",this.psi.nextKey());
}
