{
  while (importIterator.hasNext()) {
    int nextValue=importIterator.next();
    HashMap<Integer,Object> mapForCurrentLevel=rootMap;
    for (int i=0; i < maxLevel - 1; i++) {
      int hashValue=MutableHashTable.hash(nextValue,i);
      int bucket=rangeCalculators[i].getBucket(hashValue);
      Object nextObject=mapForCurrentLevel.get(bucket);
      if (nextObject == null) {
        HashMap<Integer,Object> mapForNextLevel=new HashMap<Integer,Object>();
        mapForCurrentLevel.put(bucket,mapForNextLevel);
        mapForCurrentLevel=mapForNextLevel;
      }
 else {
        mapForCurrentLevel=(HashMap<Integer,Object>)nextObject;
      }
    }
    int lastHashValue=MutableHashTable.hash(nextValue,maxLevel - 1);
    int deepestBucketNr=rangeCalculators[maxLevel - 1].getBucket(lastHashValue);
    Object countOnDeepestLevel=mapForCurrentLevel.get(deepestBucketNr);
    if (countOnDeepestLevel == null) {
      mapForCurrentLevel.put(deepestBucketNr,1);
    }
 else {
      mapForCurrentLevel.put(deepestBucketNr,((Integer)countOnDeepestLevel) + 1);
    }
  }
}
