{
  final Class<? extends TaskManagerProfiler> profilerClass;
  try {
    profilerClass=(Class<? extends TaskManagerProfiler>)Class.forName(profilerClassName);
  }
 catch (  ClassNotFoundException e) {
    LOG.error("Cannot find class " + profilerClassName + ": "+ StringUtils.stringifyException(e));
    return null;
  }
  Constructor<? extends TaskManagerProfiler> constructor=null;
  try {
    constructor=profilerClass.getConstructor(InetAddress.class,InstanceConnectionInfo.class);
  }
 catch (  SecurityException e1) {
    LOG.error("Security exception while retrieving constructor for class " + profilerClass.getCanonicalName() + ".",e1);
    return null;
  }
catch (  NoSuchMethodException e1) {
    LOG.error("Class " + profilerClass.getCanonicalName() + " does not have a constructor taking a "+ "InetAddress and InstanceConnectionInfo parameter.",e1);
    return null;
  }
  TaskManagerProfiler profiler=null;
  try {
    profiler=constructor.newInstance(jobManagerAddress,instanceConnectionInfo);
  }
 catch (  IllegalArgumentException e) {
    LOG.error("IllegalArgumentException while creating object of class " + profilerClass.getCanonicalName() + ".",e);
  }
catch (  InstantiationException e) {
    LOG.error("Could not instantiate object of class " + profilerClass.getCanonicalName() + ".",e);
  }
catch (  IllegalAccessException e) {
    LOG.error("IllegalAccessException while creating object of class " + profilerClass.getCanonicalName() + ".",e);
  }
catch (  InvocationTargetException e) {
    LOG.error("InvocationTargetException while creating object of class " + profilerClass.getCanonicalName() + ".",e);
  }
  return profiler;
}
