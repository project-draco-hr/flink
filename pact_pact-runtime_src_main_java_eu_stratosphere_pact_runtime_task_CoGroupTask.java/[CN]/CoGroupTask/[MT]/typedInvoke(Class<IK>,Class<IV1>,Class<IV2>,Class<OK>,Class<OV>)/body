{
  if (LOG.isInfoEnabled())   LOG.info(getLogString("Start PACT code"));
  final CoGroupStub<IK,IV1,IV2,OK,OV> coGroup=getCoGroupStub();
  final OutputCollector<OK,OV> collector=getOutputCollector();
  CoGroupTaskIterator<IK,IV1,IV2> coGroupIterator=null;
  try {
    coGroupIterator=getIterator(ikClass,iv1Class,iv2Class);
    coGroupIterator.open();
    if (LOG.isDebugEnabled()) {
      LOG.debug(getLogString("Iterator obtained"));
      LOG.debug(getLogString("Start processing"));
    }
    coGroup.open();
    while (coGroupIterator.next() && !this.taskCanceled) {
      coGroup.coGroup(coGroupIterator.getKey(),coGroupIterator.getValues1(),coGroupIterator.getValues2(),collector);
    }
  }
 catch (  Exception ex) {
    if (!this.taskCanceled) {
      if (LOG.isErrorEnabled())       LOG.error(getLogString("Unexpected ERROR in PACT code"));
      throw ex;
    }
  }
 finally {
    if (coGroupIterator != null) {
      coGroupIterator.close();
    }
    try {
      coGroup.close();
    }
 catch (    Throwable t) {
      if (LOG.isErrorEnabled())       LOG.error(getLogString("Error while closing the CoGroup user function"),t);
    }
    collector.close();
  }
  if (!this.taskCanceled) {
    if (LOG.isInfoEnabled())     LOG.info(getLogString("Finished PACT code"));
  }
 else {
    if (LOG.isWarnEnabled())     LOG.warn(getLogString("PACT code cancelled"));
  }
}
