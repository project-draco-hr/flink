{
  config=new TaskConfig(getRuntimeConfiguration());
  this.availableMemory=config.getMemorySize();
  this.maxFileHandles=config.getNumFilehandles();
  if (this.availableMemory < MIN_REQUIRED_MEMORY) {
    throw new RuntimeException("The CoGroup task was initialized with too little memory: " + this.availableMemory + ". Required is at least "+ MIN_REQUIRED_MEMORY+ " bytes.");
  }
  try {
    ClassLoader cl=LibraryCacheManager.getClassLoader(getEnvironment().getJobID());
    @SuppressWarnings("unchecked") Class<? extends CoGroupStub<? extends Key,? extends Value,? extends Value,? extends Key,? extends Value>> coGroupClass=(Class<? extends CoGroupStub<? extends Key,? extends Value,? extends Value,? extends Key,? extends Value>>)config.getStubClass(CoGroupStub.class,cl);
    coGroup=coGroupClass.newInstance();
    coGroup.configure(config.getStubParameters());
  }
 catch (  IOException ioe) {
    throw new RuntimeException("Library cache manager could not be instantiated.",ioe);
  }
catch (  ClassNotFoundException cnfe) {
    throw new RuntimeException("Stub implementation class was not found.",cnfe);
  }
catch (  InstantiationException ie) {
    throw new RuntimeException("Stub implementation could not be instanciated.",ie);
  }
catch (  IllegalAccessException iae) {
    throw new RuntimeException("Stub implementations nullary constructor is not accessible.",iae);
  }
}
