{
  final MemoryManager memoryManager=getEnvironment().getMemoryManager();
  final IOManager ioManager=getEnvironment().getIOManager();
  RecordReader<KeyValuePair<K,V1>> reader1=getReader1();
  RecordReader<KeyValuePair<K,V2>> reader2=getReader2();
switch (config.getLocalStrategy()) {
case SORT_BOTH_MERGE:
    return new SortMergeCoGroupIterator<K,V1,V2>(memoryManager,ioManager,reader1,reader2,ikClass,iv1Class,iv2Class,this.availableMemory,this.maxFileHandles,this.spillThreshold,config.getLocalStrategy(),this);
case SORT_FIRST_MERGE:
  return new SortMergeCoGroupIterator<K,V1,V2>(memoryManager,ioManager,reader1,reader2,ikClass,iv1Class,iv2Class,this.availableMemory,this.maxFileHandles,this.spillThreshold,config.getLocalStrategy(),this);
case SORT_SECOND_MERGE:
return new SortMergeCoGroupIterator<K,V1,V2>(memoryManager,ioManager,reader1,reader2,ikClass,iv1Class,iv2Class,this.availableMemory,this.maxFileHandles,this.spillThreshold,config.getLocalStrategy(),this);
case MERGE:
return new SortMergeCoGroupIterator<K,V1,V2>(memoryManager,ioManager,reader1,reader2,ikClass,iv1Class,iv2Class,this.availableMemory,this.maxFileHandles,this.spillThreshold,config.getLocalStrategy(),this);
default :
throw new RuntimeException("Supported local strategy for CoGroupTask: " + config.getLocalStrategy());
}
}
