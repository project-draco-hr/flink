{
  if (type == null || type.isPrimitive() || type == Object.class) {
    return;
  }
  if (!alreadySeen.add(type)) {
    return;
  }
  if (type.isArray()) {
    recursivelyRegisterType(type.getComponentType(),config,alreadySeen);
  }
 else {
    config.registerKryoType(type);
    checkAndAddSerializerForTypeAvro(config,type);
    Field[] fields=type.getDeclaredFields();
    for (    Field field : fields) {
      if (Modifier.isStatic(field.getModifiers()) || Modifier.isTransient(field.getModifiers())) {
        continue;
      }
      Type fieldType=field.getGenericType();
      recursivelyRegisterGenericType(fieldType,config,alreadySeen);
    }
  }
}
