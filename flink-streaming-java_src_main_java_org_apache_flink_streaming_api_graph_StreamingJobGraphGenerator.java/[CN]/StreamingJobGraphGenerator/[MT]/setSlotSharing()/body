{
  Map<String,SlotSharingGroup> slotSharingGroups=new HashMap<>();
  for (  Entry<Integer,JobVertex> entry : jobVertices.entrySet()) {
    String slotSharingGroup=streamGraph.getStreamNode(entry.getKey()).getSlotSharingGroup();
    SlotSharingGroup group=slotSharingGroups.get(slotSharingGroup);
    if (group == null) {
      group=new SlotSharingGroup();
      slotSharingGroups.put(slotSharingGroup,group);
    }
    entry.getValue().setSlotSharingGroup(group);
  }
  for (  Tuple2<StreamNode,StreamNode> pair : streamGraph.getIterationSourceSinkPairs()) {
    CoLocationGroup ccg=new CoLocationGroup();
    JobVertex source=jobVertices.get(pair.f0.getId());
    JobVertex sink=jobVertices.get(pair.f1.getId());
    ccg.addVertex(source);
    ccg.addVertex(sink);
    source.updateCoLocationGroup(ccg);
    sink.updateCoLocationGroup(ccg);
  }
}
