{
  List<MutableObjectIterator<PactRecord>> iterators=new ArrayList<MutableObjectIterator<PactRecord>>();
  iterators.add(newIterator(new int[]{1,2,4,5,10},new String[]{"1","2","4","5","10"}));
  iterators.add(newIterator(new int[]{3,6,7,10,12},new String[]{"3","6","7","10","12"}));
  final int[] expected=new int[]{1,2,3,4,5,6,7,10,10,12};
  Comparator<TestData.Key> comparator=new TestData.KeyComparator();
  MutableObjectIterator<PactRecord> iterator=new MergeIterator<PactRecord>(iterators,this.serializer,this.comparator);
  PactRecord rec1=new PactRecord();
  PactRecord rec2=new PactRecord();
  final Key k1=new Key();
  final Key k2=new Key();
  int pos=1;
  Assert.assertTrue(iterator.next(rec1));
  Assert.assertEquals(expected[0],rec1.getField(0,TestData.Key.class).getKey());
  while (iterator.next(rec2)) {
    k1.setKey(rec1.getField(0,TestData.Key.class).getKey());
    k2.setKey(rec2.getField(0,TestData.Key.class).getKey());
    Assert.assertTrue(comparator.compare(k1,k2) <= 0);
    Assert.assertEquals(expected[pos++],k2.getKey());
    PactRecord tmp=rec1;
    rec1=rec2;
    rec2=tmp;
  }
}
