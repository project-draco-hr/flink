{
  for (int level=0; level < boundaries.length; level++) {
    int lowerBound=boundaries[level].getLowerBound();
    int upperBound=boundaries[level].getUpperBound();
    int bucketCountInLevel=0;
    int bucketCountOutOfRange=0;
    SortedMap<Integer,Integer> levelMap=bucketSizesPerLevel.get(level);
    Iterator<Integer> bucketSizeIterator=levelMap.keySet().iterator();
    while (bucketSizeIterator.hasNext()) {
      int bucketSize=bucketSizeIterator.next();
      if (bucketSize != 0) {
        int countForBucketSize=levelMap.get(bucketSize);
        bucketCountInLevel+=countForBucketSize;
        if (lowerBound > bucketSize || upperBound < bucketSize) {
          bucketCountOutOfRange+=countForBucketSize;
        }
      }
    }
    double bucketsOutOfRange=(double)bucketCountOutOfRange / (double)bucketCountInLevel;
    double maxBucketsOutOfRange=boundaries[level].getPercentOutOfRange();
    Assert.assertTrue("More than " + maxBucketsOutOfRange + "% of buckets out of range in level "+ level,bucketsOutOfRange <= maxBucketsOutOfRange);
    Assert.assertTrue("More than " + boundaries[level].getMaxEmpty() + " empty buckets in level "+ level,levelMap.get(0) <= boundaries[level].getMaxEmpty());
  }
}
