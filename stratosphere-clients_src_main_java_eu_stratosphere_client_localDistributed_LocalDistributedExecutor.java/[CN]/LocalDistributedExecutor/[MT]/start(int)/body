{
  if (this.running) {
    return;
  }
  Configuration conf=NepheleMiniCluster.getMiniclusterDefaultConfig(JOB_MANAGER_RPC_PORT,6500,7501,null,true);
  GlobalConfiguration.includeConfiguration(conf);
  JobManager jobManager;
  try {
    jobManager=new JobManager(ExecutionMode.CLUSTER);
  }
 catch (  Exception e) {
    e.printStackTrace();
    return;
  }
  this.jobManagerThread=new JobManagerThread(jobManager);
  this.jobManagerThread.setDaemon(true);
  this.jobManagerThread.start();
  for (int tm=0; tm < numTaskMgr; tm++) {
    Configuration tmConf=new Configuration();
    tmConf.setInteger(ConfigConstants.TASK_MANAGER_IPC_PORT_KEY,ConfigConstants.DEFAULT_TASK_MANAGER_IPC_PORT + tm + numTaskMgr);
    tmConf.setInteger(ConfigConstants.TASK_MANAGER_DATA_PORT_KEY,ConfigConstants.DEFAULT_TASK_MANAGER_DATA_PORT + tm);
    GlobalConfiguration.includeConfiguration(tmConf);
    LocalTaskManagerThread t=new LocalTaskManagerThread("LocalDistributedExecutor: LocalTaskManagerThread-#" + tm,numTaskMgr);
    t.start();
    taskManagerThreads.add(t);
  }
  int timeout=START_STOP_TIMEOUT * this.taskManagerThreads.size();
  for (int sleep=0; sleep < timeout; sleep+=SLEEP_TIME) {
    if (jobManager.getNumberOfTaskTrackers() >= numTaskMgr) {
      break;
    }
    Thread.sleep(SLEEP_TIME);
  }
  if (jobManager.getNumberOfTaskTrackers() < numTaskMgr) {
    throw new RuntimeException(String.format("Task manager start up timed out (%d ms).",timeout));
  }
  this.running=true;
}
