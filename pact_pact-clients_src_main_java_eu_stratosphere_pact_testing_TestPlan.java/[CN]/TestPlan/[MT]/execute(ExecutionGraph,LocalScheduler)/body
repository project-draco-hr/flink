{
  while (!eg.isExecutionFinished() && eg.getJobStatus() != InternalJobStatus.FAILED) {
    final Set<ExecutionVertex> verticesReadyToBeExecuted=localScheduler.getVerticesReadyToBeExecuted();
    for (    final ExecutionVertex executionVertex : verticesReadyToBeExecuted) {
      if (executionVertex.isInputVertex())       new FileInputSplitAssigner().assignInputSplits(executionVertex.getGroupVertex());
      executionVertex.getEnvironment().registerExecutionListener(new ExecutionExceptionHandler(executionVertex));
      final TaskSubmissionResult submissionResult=executionVertex.startTask();
      if (submissionResult.getReturnCode() == AbstractTaskResult.ReturnCode.ERROR)       fail(submissionResult.getDescription());
    }
    try {
      Thread.sleep(10);
    }
 catch (    final InterruptedException e) {
    }
  }
  if (this.executionError != null)   fail(this.executionError,this.erroneousVertex);
}
