{
  final Iterator<ExecutionVertex> it=verticesToBeDeployed.iterator();
  while (it.hasNext()) {
    final ExecutionVertex executionVertex=it.next();
    ExecutionExceptionHandler executionListener=new ExecutionExceptionHandler(executionVertex);
    final Environment environment=executionVertex.getEnvironment();
    environment.registerExecutionListener(executionListener);
    environment.setInputSplitProvider(new MockInputSplitProvider(executionVertex));
    errorHandlers.add(executionListener);
    final TaskSubmissionResult submissionResult=executionVertex.startTask();
    if (submissionResult.getReturnCode() == AbstractTaskResult.ReturnCode.ERROR)     Assert.fail(submissionResult.getDescription() + " @ " + executionVertex);
  }
}
