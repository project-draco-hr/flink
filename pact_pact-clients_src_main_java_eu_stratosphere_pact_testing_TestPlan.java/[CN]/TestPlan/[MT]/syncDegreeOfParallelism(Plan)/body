{
  plan.accept(new Visitor<Contract>(){
    @Override public void postVisit(    final Contract visitable){
    }
    @Override public boolean preVisit(    final Contract visitable){
      int degree=TestPlan.this.getDegreeOfParallelism();
      if (visitable instanceof GenericDataSource<?>)       degree=1;
 else       if (degree > 1 && visitable instanceof FileDataSink)       try {
        Path path=new Path(((FileDataSink)visitable).getFilePath());
        final FileSystem fs=path.getFileSystem();
        final FileStatus f=fs.getFileStatus(path);
        if (!f.isDir()) {
          fs.delete(path,false);
          fs.mkdirs(path);
        }
      }
 catch (      IOException e) {
        e.printStackTrace();
      }
      if (visitable.getDegreeOfParallelism() == -1)       visitable.setDegreeOfParallelism(degree);
      return true;
    }
  }
);
}
