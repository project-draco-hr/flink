{
  KeyValuePair<Key,Value> actualPair=null;
  while (actualIterator.hasNext()) {
    actualPair=actualIterator.next();
    int keyComparison=actualPair.getKey().compareTo(currentKey);
    if (keyComparison < 0)     throw new ArrayComparisonFailure(String.format("Data sink %s contains unexpected values: ",dataSinkContract.getName()),new AssertionFailedError(Assert.format(" ",new KeyValuePair<Key,Value>(currentKey,expectedValuesWithCurrentKey.get(0)),actualPair)),itemIndex + expectedValuesWithCurrentKey.size() - 1);
    if (keyComparison != 0)     break;
    actualValuesWithCurrentKey.add(actualPair.getValue());
    actualPair=null;
  }
  FuzzyTestValueMatcher<Value> fuzzyMatcher=this.getFuzzyMatcher(dataSinkContract);
  FuzzyTestValueSimilarity<Value> fuzzySimilarity=this.getFuzzySimilarity(dataSinkContract);
  fuzzyMatcher.removeMatchingValues(fuzzySimilarity,expectedValuesWithCurrentKey,actualValuesWithCurrentKey);
  if (!expectedValuesWithCurrentKey.isEmpty() || !actualValuesWithCurrentKey.isEmpty())   throw new ArrayComparisonFailure(String.format("Data sink %s contains unexpected values: ",dataSinkContract.getName()),new AssertionFailedError(Assert.format(" ",expectedValuesWithCurrentKey,actualValuesWithCurrentKey)),itemIndex + expectedValuesWithCurrentKey.size() - 1);
  if (actualPair != null)   actualValuesWithCurrentKey.add(actualPair.getValue());
}
