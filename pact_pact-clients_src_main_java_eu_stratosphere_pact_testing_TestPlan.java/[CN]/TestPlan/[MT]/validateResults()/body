{
  for (  final DataSinkContract<?,?> dataSinkContract : this.getDataSinks())   if (dataSinkContract.getStubClass() == SequentialOutputFormat.class && this.getExpectedOutput(dataSinkContract).isInitialized()) {
    final TestPairs<Key,Value> actualValues=new TestPairs<Key,Value>();
    actualValues.fromFile(SequentialInputFormat.class,dataSinkContract.getFilePath());
    final TestPairs<Key,Value> expectedValues=(TestPairs<Key,Value>)this.getExpectedOutput(dataSinkContract);
    final Iterator<KeyValuePair<Key,Value>> actualIterator=actualValues.iterator();
    final Iterator<KeyValuePair<Key,Value>> expectedIterator=expectedValues.iterator();
    Key currentKey=null;
    int itemIndex=0;
    List<KeyValuePair<Key,Value>> expectedPairsWithCurrentKey=new ArrayList<KeyValuePair<Key,Value>>();
    while (actualIterator.hasNext() && expectedIterator.hasNext()) {
      final KeyValuePair<Key,Value> expected=expectedIterator.next();
      if (currentKey == null || expected.getKey().compareTo(currentKey) != 0) {
        KeyValuePair<Key,Value> unmatched=matchAllExpectedItems(actualIterator,expectedPairsWithCurrentKey);
        if (unmatched != null)         throw new ArrayComparisonFailure(String.format("Data sink %s contains unexpected values: ",dataSinkContract.getName()),new AssertionFailedError(Assert.format(" ",expectedPairsWithCurrentKey,unmatched)),itemIndex + expectedPairsWithCurrentKey.size() - 1);
        currentKey=expected.getKey();
      }
      expectedPairsWithCurrentKey.add(expected);
      itemIndex++;
    }
    KeyValuePair<Key,Value> unmatched=matchAllExpectedItems(actualIterator,expectedPairsWithCurrentKey);
    if (unmatched != null)     throw new ArrayComparisonFailure(String.format("Data sink %s contains unexpected values: ",dataSinkContract.getName()),new AssertionFailedError(Assert.format(" ",expectedPairsWithCurrentKey,unmatched)),itemIndex - expectedPairsWithCurrentKey.size());
    if (!expectedPairsWithCurrentKey.isEmpty())     fail("More elements expected: " + toString(expectedPairsWithCurrentKey.iterator()),dataSinkContract.getName());
    if (expectedIterator.hasNext())     fail("More elements expected: " + toString(expectedIterator),dataSinkContract.getName());
    if (actualIterator.hasNext())     fail("Less elements expected: " + toString(actualIterator),dataSinkContract.getName());
  }
}
