{
  for (  final Contract contract : this.contracts)   contract.accept(new Visitor<Contract>(){
    @Override public void postVisit(    final Contract visitable){
    }
    @Override public boolean preVisit(    final Contract visitable){
      if (visitable instanceof FileDataSinkContract<?,?> && !TestPlan.this.sinks.contains(visitable))       TestPlan.this.sinks.add((FileDataSinkContract<?,?>)visitable);
      if (visitable instanceof FileDataSourceContract<?,?> && !TestPlan.this.sources.contains(visitable))       TestPlan.this.sources.add((FileDataSourceContract<?,?>)visitable);
      return true;
    }
  }
);
  for (  FileDataSourceContract<?,?> source : this.sources) {
    getInput(source).fromFile(source.getFormatClass(),source.getFilePath());
  }
}
