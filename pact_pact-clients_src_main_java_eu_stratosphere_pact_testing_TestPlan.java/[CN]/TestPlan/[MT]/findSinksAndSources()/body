{
  for (  final Contract contract : this.contracts)   contract.accept(new Visitor<Contract>(){
    @Override public void postVisit(    final Contract visitable){
    }
    @Override public boolean preVisit(    final Contract visitable){
      if (visitable instanceof DataSinkContract<?,?> && !TestPlan.this.sinks.contains(visitable))       TestPlan.this.sinks.add((DataSinkContract<?,?>)visitable);
      if (visitable instanceof DataSourceContract<?,?> && !TestPlan.this.sources.contains(visitable))       TestPlan.this.sources.add((DataSourceContract<?,?>)visitable);
      return true;
    }
  }
);
  for (  DataSourceContract<?,?> source : this.sources)   this.getInput(source).fromFile(source.getStubClass(),source.getFilePath());
}
