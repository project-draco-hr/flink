{
  final ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
  env.setParallelism(DEFAULT_PARALLELISM);
  DataSet<String> lines=env.readTextFile(IN_FILE).name("Input Lines");
  lines.map(new MapFunction<String,Tuple2<String,Integer>>(){
    private static final long serialVersionUID=-3952739820618875030L;
    @Override public Tuple2<String,Integer> map(    String v) throws Exception {
      return new Tuple2<>(v,1);
    }
  }
).name("Tokenize Lines").groupBy(0).sum(1).name("Count Words").output(new DiscardingOutputFormat<Tuple2<String,Integer>>()).name("Word Counts");
  Plan p=env.createProgramPlan();
  p.setExecutionConfig(new ExecutionConfig());
  OptimizedPlan plan;
  if (estimates) {
    GenericDataSourceBase<?,?> source=getContractResolver(p).getNode("Input Lines");
    setSourceStatistics(source,1024 * 1024 * 1024* 1024L,24f);
    plan=compileWithStats(p);
  }
 else {
    plan=compileNoStats(p);
  }
  OptimizerPlanNodeResolver resolver=getOptimizerPlanNodeResolver(plan);
  SinkPlanNode sink=resolver.getNode("Word Counts");
  SingleInputPlanNode reducer=resolver.getNode("Count Words");
  SingleInputPlanNode mapper=resolver.getNode("Tokenize Lines");
  Assert.assertEquals(ShipStrategyType.FORWARD,mapper.getInput().getShipStrategy());
  Assert.assertEquals(ShipStrategyType.PARTITION_HASH,reducer.getInput().getShipStrategy());
  Assert.assertEquals(ShipStrategyType.FORWARD,sink.getInput().getShipStrategy());
  Channel c=reducer.getInput();
  Assert.assertEquals(LocalStrategy.COMBININGSORT,c.getLocalStrategy());
  FieldList l=new FieldList(0);
  Assert.assertEquals(l,c.getShipStrategyKeys());
  Assert.assertEquals(l,c.getLocalStrategyKeys());
  Assert.assertTrue(Arrays.equals(c.getLocalStrategySortOrder(),reducer.getSortOrders(0)));
  SingleInputPlanNode combiner=(SingleInputPlanNode)reducer.getPredecessor();
  Assert.assertEquals(DriverStrategy.SORTED_GROUP_COMBINE,combiner.getDriverStrategy());
  Assert.assertEquals(l,combiner.getKeys(0));
  Assert.assertEquals(ShipStrategyType.FORWARD,combiner.getInput().getShipStrategy());
}
