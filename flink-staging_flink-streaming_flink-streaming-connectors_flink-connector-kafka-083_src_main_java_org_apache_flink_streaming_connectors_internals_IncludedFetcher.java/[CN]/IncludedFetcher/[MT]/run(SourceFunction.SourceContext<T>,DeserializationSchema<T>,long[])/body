{
  long pollTimeout=DEFAULT_POLL_TIMEOUT;
  if (props.contains(POLL_TIMEOUT)) {
    pollTimeout=Long.valueOf(props.getProperty(POLL_TIMEOUT));
  }
  while (running) {
    ConsumerRecords<byte[],byte[]> consumed;
synchronized (fetcher) {
      consumed=fetcher.poll(pollTimeout);
    }
    if (!consumed.isEmpty()) {
      for (      ConsumerRecord<byte[],byte[]> record : consumed) {
synchronized (sourceContext.getCheckpointLock()) {
          T value=valueDeserializer.deserialize(record.value());
          sourceContext.collect(value);
          lastOffsets[record.partition()]=record.offset();
        }
      }
    }
  }
  sourceContext.close();
}
