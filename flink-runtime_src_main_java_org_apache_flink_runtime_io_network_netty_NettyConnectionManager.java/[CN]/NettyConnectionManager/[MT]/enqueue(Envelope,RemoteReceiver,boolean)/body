{
  final Object entry=this.outConnections.get(receiver);
  final OutboundConnectionQueue channel;
  if (entry != null) {
    if (entry instanceof OutboundConnectionQueue) {
      channel=(OutboundConnectionQueue)entry;
    }
 else {
      ChannelInBuildup future=(ChannelInBuildup)entry;
      channel=future.waitForChannel();
    }
  }
 else {
    ChannelInBuildup inBuildup=new ChannelInBuildup(this.out,receiver);
    Object old=this.outConnections.putIfAbsent(receiver,inBuildup);
    if (old == null) {
      this.out.connect(receiver.getConnectionAddress()).addListener(inBuildup);
      channel=inBuildup.waitForChannel();
      Object previous=this.outConnections.put(receiver,channel);
      if (inBuildup != previous) {
        throw new IOException("Race condition during channel build up.");
      }
    }
 else     if (old instanceof ChannelInBuildup) {
      channel=((ChannelInBuildup)old).waitForChannel();
    }
 else {
      channel=(OutboundConnectionQueue)old;
    }
  }
  if (isFirstEnvelope) {
    if (channel.incrementReferenceCounter()) {
      channel.enqueue(envelope);
    }
 else {
      outConnections.remove(receiver,channel);
      enqueue(envelope,receiver,isFirstEnvelope);
    }
  }
 else {
    channel.enqueue(envelope);
  }
}
