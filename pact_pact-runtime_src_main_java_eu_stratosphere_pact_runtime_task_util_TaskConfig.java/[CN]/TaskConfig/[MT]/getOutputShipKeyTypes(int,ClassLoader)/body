{
  final int outputCnt=this.config.getInteger(NUM_OUTPUTS,-1);
  if (!(outputId < outputCnt)) {
    return null;
  }
  final int numKeys=this.config.getInteger(OUTPUT_SHIP_NUM_KEYS_PREFIX + outputCnt,-1);
  if (numKeys <= 0) {
    return null;
  }
  @SuppressWarnings("unchecked") final Class<? extends Key>[] keyTypes=(Class<? extends Key>[])new Class[numKeys];
  for (int i=0; i < numKeys; i++) {
    String name=this.config.getString(OUTPUT_SHIP_KEY_CLASS_PREFIX + outputCnt + '.'+ i,null);
    if (name != null) {
      keyTypes[i]=Class.forName(name,true,cl).asSubclass(Key.class);
    }
 else {
      throw new IllegalStateException("Config is invalid - contained number of keys, but no types for keys.");
    }
  }
  return keyTypes;
}
