{
  try {
    T[] data=getSortedData();
    T reuse=getSortedData()[0];
    TypeComparator<T> comp1=getComparator(true);
    if (!comp1.supportsSerializationWithKeyNormalization()) {
      return;
    }
    TypeComparator<T> comp2=comp1.duplicate();
    comp2.setReference(reuse);
    TestOutputView out=new TestOutputView();
    TestInputView in;
    for (    T value : data) {
      comp1.setReference(value);
      comp1.writeWithKeyNormalization(value,out);
      in=out.getInputView();
      comp1.readWithKeyDenormalization(reuse,in);
      assertTrue(comp1.compareToReference(comp2) == 0);
    }
  }
 catch (  Exception e) {
    System.err.println(e.getMessage());
    e.printStackTrace();
    fail("Exception in test: " + e.getMessage());
  }
}
