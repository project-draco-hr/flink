{
  try {
    int _type=STRING;
    int _channel=DEFAULT_TOKEN_CHANNEL;
{
      int alt10=2;
      int LA10_0=input.LA(1);
      if ((LA10_0 == '\"')) {
        alt10=1;
      }
 else       if ((LA10_0 == '\'')) {
        alt10=2;
      }
 else {
        NoViableAltException nvae=new NoViableAltException("",10,0,input);
        throw nvae;
      }
switch (alt10) {
case 1:
{
          mQUOTATION();
          loop8:           do {
            int alt8=2;
            int LA8_0=input.LA(1);
            if ((LA8_0 == '\"')) {
              alt8=2;
            }
 else             if (((LA8_0 >= '\u0000' && LA8_0 <= '!') || (LA8_0 >= '#' && LA8_0 <= '\uFFFF'))) {
              alt8=1;
            }
switch (alt8) {
case 1:
{
                matchAny();
              }
            break;
default :
          break loop8;
      }
    }
 while (true);
    mQUOTATION();
  }
break;
case 2:
{
mAPOSTROPHE();
loop9: do {
  int alt9=2;
  int LA9_0=input.LA(1);
  if ((LA9_0 == '\'')) {
    alt9=2;
  }
 else   if (((LA9_0 >= '\u0000' && LA9_0 <= '&') || (LA9_0 >= '(' && LA9_0 <= '\uFFFF'))) {
    alt9=1;
  }
switch (alt9) {
case 1:
{
      matchAny();
    }
  break;
default :
break loop9;
}
}
 while (true);
mAPOSTROPHE();
}
break;
}
setText(getText().substring(1,getText().length() - 1));
}
state.type=_type;
state.channel=_channel;
}
  finally {
}
}
