{
  try {
    ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
    env.setParallelism(43);
    DataSet<Tuple2<Long,Long>> input=env.generateSequence(1,20).map(new MapFunction<Long,Tuple2<Long,Long>>(){
      @Override public Tuple2<Long,Long> map(      Long value){
        return null;
      }
    }
);
    DeltaIteration<Tuple2<Long,Long>,Tuple2<Long,Long>> iter=input.iterateDelta(input,100,0);
    iter.closeWith(iter.getWorkset(),iter.getWorkset()).output(new DiscardingOutputFormat<Tuple2<Long,Long>>());
    Plan p=env.createProgramPlan();
    OptimizedPlan op=compileNoStats(p);
    new JobGraphGenerator().compileJobGraph(op);
  }
 catch (  Exception e) {
    e.printStackTrace();
    fail(e.getMessage());
  }
}
