{
  final ExecutionGraph eg=this.scheduler.getExecutionGraphByID(jobID);
  if (eg == null) {
    LOG.error("Cannot find execution graph for job " + jobID);
    return;
  }
  final ExecutionVertex vertex=eg.getVertexByID(ExecutionVertexID.fromManagementVertexID(id));
  if (vertex == null) {
    LOG.error("Cannot find execution vertex with ID " + id);
    return;
  }
  LOG.info("Killing task " + vertex + " of job "+ jobID);
  final Runnable runnable=new Runnable(){
    @Override public void run(){
      final TaskKillResult result=vertex.killTask();
      if (result.getReturnCode() != AbstractTaskResult.ReturnCode.SUCCESS) {
        LOG.error(result.getDescription());
      }
    }
  }
;
  eg.executeCommand(runnable);
}
