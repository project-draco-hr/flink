{
  if (executionState == null) {
    LOG.error("Received call to updateTaskExecutionState with executionState == null");
    return;
  }
  final ExecutionGraph eg=this.scheduler.getExecutionGraphByID(executionState.getJobID());
  if (eg == null) {
    LOG.error("Cannot find execution graph for ID " + executionState.getJobID() + " to change state to "+ executionState.getExecutionState());
    return;
  }
  ExecutionVertex tmpVertex=null;
synchronized (eg) {
    tmpVertex=eg.getVertexByID(executionState.getID());
    if (tmpVertex == null) {
      LOG.error("Cannot find vertex with ID " + executionState.getID() + " of job "+ eg.getJobID()+ " to change state to "+ executionState.getExecutionState());
      return;
    }
  }
  final ExecutionVertex vertex=tmpVertex;
  final Runnable taskStateChangeRunnable=new Runnable(){
    @Override public void run(){
synchronized (eg) {
        vertex.updateExecutionState(executionState.getExecutionState(),executionState.getDescription());
      }
    }
  }
;
  this.executorService.execute(taskStateChangeRunnable);
}
