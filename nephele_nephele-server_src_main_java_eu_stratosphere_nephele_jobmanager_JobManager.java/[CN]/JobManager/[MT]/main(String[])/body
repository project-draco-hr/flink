{
  final Option configDirOpt=OptionBuilder.withArgName("config directory").hasArg().withDescription("Specify configuration directory.").create("configDir");
  final Option executionModeOpt=OptionBuilder.withArgName("execution mode").hasArg().withDescription("Specify execution mode.").create("executionMode");
  final Options options=new Options();
  options.addOption(configDirOpt);
  options.addOption(executionModeOpt);
  CommandLineParser parser=new GnuParser();
  CommandLine line=null;
  try {
    line=parser.parse(options,args);
  }
 catch (  ParseException e) {
    LOG.error("CLI Parsing failed. Reason: " + e.getMessage());
    System.exit(FAILURERETURNCODE);
  }
  final String configDir=line.getOptionValue(configDirOpt.getOpt(),null);
  final String executionModeName=line.getOptionValue(executionModeOpt.getOpt(),"local");
  final ExecutionMode executionMode;
  if ("local".equals(executionModeName)) {
    executionMode=ExecutionMode.LOCAL;
  }
 else   if ("local".equals(executionModeName)) {
    executionMode=ExecutionMode.CLUSTER;
  }
 else   if ("local".equals(executionModeName)) {
    executionMode=ExecutionMode.CLOUD;
  }
 else {
    System.err.println("Unrecognized execution mode: " + executionModeName);
    System.exit(FAILURERETURNCODE);
    return;
  }
  GlobalConfiguration.loadConfiguration(configDir);
  JobManager jobManager=new JobManager(executionMode,configDir);
  jobManager.runTaskLoop();
}
