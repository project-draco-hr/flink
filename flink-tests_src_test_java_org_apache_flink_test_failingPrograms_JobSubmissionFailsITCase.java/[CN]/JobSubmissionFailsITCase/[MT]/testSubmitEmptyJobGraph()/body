{
  new JavaTestKit(system){
{
      final int numSlots=20;
      final ForkableFlinkMiniCluster cluster=ForkableFlinkMiniCluster.startCluster(numSlots / 2,2,TestingUtils.TESTING_DURATION().toString());
      final ActorRef jobClient=cluster.getJobClient();
      final JobGraph jobGraph=new JobGraph("Testing job");
      try {
        new Within(TestingUtils.TESTING_DURATION()){
          @Override protected void run(){
            try {
              submitJob(jobGraph,jobClient);
              fail("Expected JobSubmissionException.");
            }
 catch (            JobSubmissionException e) {
              assertEquals("Job is empty.",e.getMessage());
            }
catch (            Throwable t) {
              fail("Caught wrong exception of type " + t.getClass() + ".");
              t.printStackTrace();
            }
            try {
              JobClient.submitJobAndWait(workingJobGraph,false,jobClient,TestingUtils.TESTING_DURATION());
            }
 catch (            Throwable t) {
              fail("Caught unexpected exception " + t.getMessage() + ".");
            }
          }
        }
;
      }
  finally {
        cluster.stop();
      }
    }
  }
;
}
