{
  int lenght=100;
  final IJsonNode lower=this.lowerNode();
  final IJsonNode higher=this.higherNode();
  lenght=higher.getMaxNormalizedKeyLen() < lenght ? higher.getMaxNormalizedKeyLen() : lenght;
  final byte[] lowerTarget=new byte[lenght];
  final byte[] higherTarget=new byte[lenght];
  lower.copyNormalizedKey(lowerTarget,0,lenght);
  higher.copyNormalizedKey(higherTarget,0,lenght);
  for (int i=0; i < lenght; i++) {
    final byte lowerByte=lowerTarget[i];
    final byte higherByte=higherTarget[i];
    if (lowerByte < higherByte)     break;
    Assert.assertTrue(lowerByte == higherByte);
  }
}
