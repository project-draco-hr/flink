{
  int numHosts=5;
  int slotsPerHost=2;
  int parallelism=10;
  TestLocatableInputSplit[] splits=new TestLocatableInputSplit[]{new TestLocatableInputSplit(7,"host4"),new TestLocatableInputSplit(8,"host4"),new TestLocatableInputSplit(1,"host1"),new TestLocatableInputSplit(2,"host1"),new TestLocatableInputSplit(3,"host2"),new TestLocatableInputSplit(4,"host2"),new TestLocatableInputSplit(5,"host3"),new TestLocatableInputSplit(6,"host3"),new TestLocatableInputSplit(9,"host5"),new TestLocatableInputSplit(10,"host5")};
  try {
    String[] hostsForTasks=runTests(numHosts,slotsPerHost,parallelism,splits);
    assertEquals("host1",hostsForTasks[0]);
    assertEquals("host1",hostsForTasks[1]);
    assertEquals("host2",hostsForTasks[2]);
    assertEquals("host2",hostsForTasks[3]);
    assertEquals("host3",hostsForTasks[4]);
    assertEquals("host3",hostsForTasks[5]);
    assertEquals("host4",hostsForTasks[6]);
    assertEquals("host4",hostsForTasks[7]);
    assertEquals("host5",hostsForTasks[8]);
    assertEquals("host5",hostsForTasks[9]);
  }
 catch (  Exception e) {
    e.printStackTrace();
    fail(e.getMessage());
  }
}
