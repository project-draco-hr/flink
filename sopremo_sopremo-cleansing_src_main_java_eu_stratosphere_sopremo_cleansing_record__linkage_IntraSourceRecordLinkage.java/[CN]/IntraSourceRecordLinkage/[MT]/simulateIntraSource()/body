{
  RecordLinkageInput recordLinkageInput=this.getRecordLinkageInput(0).clone();
  EvaluationExpression resultProjection=recordLinkageInput.getResultProjection(), idProjection=EvaluationExpression.VALUE;
  if (resultProjection != EvaluationExpression.VALUE && !recordLinkageInput.getResultProjection().equals(recordLinkageInput.getIdProjection()))   if (recordLinkageInput.getIdProjection() == EvaluationExpression.VALUE)   recordLinkageInput.setResultProjection(EvaluationExpression.VALUE);
 else {
    recordLinkageInput.setResultProjection(new ArrayCreation(recordLinkageInput.getIdProjection(),recordLinkageInput.getResultProjection()));
    idProjection=new ArrayAccess(0);
    resultProjection=new ArrayAccess(1);
  }
  Operator<?> allPairs=this.getAlgorithm().getDuplicatePairStream(this.getSimilarityCondition(),Arrays.asList(recordLinkageInput,recordLinkageInput));
  Selection orderedPairs=new Selection().withInputs(allPairs).withCondition(new ComparativeExpression(new PathExpression(new ArrayAccess(0),idProjection),BinaryOperator.LESS,new PathExpression(new ArrayAccess(1),idProjection)));
  return new Projection().withValueTransformation(resultProjection).withInputs(orderedPairs);
}
