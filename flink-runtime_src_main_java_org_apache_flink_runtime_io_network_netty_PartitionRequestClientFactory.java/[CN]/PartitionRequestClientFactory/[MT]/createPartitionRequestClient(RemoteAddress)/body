{
  final Object entry=clients.get(remoteAddress);
  final PartitionRequestClient client;
  if (entry != null) {
    if (entry instanceof PartitionRequestClient) {
      client=(PartitionRequestClient)entry;
    }
 else {
      ConnectingChannel future=(ConnectingChannel)entry;
      client=future.waitForChannel();
    }
  }
 else {
    ConnectingChannel connectingChannel=new ConnectingChannel(remoteAddress,this);
    Object old=clients.putIfAbsent(remoteAddress,connectingChannel);
    if (old == null) {
      nettyClient.connect(remoteAddress.getAddress()).addListener(connectingChannel);
      client=connectingChannel.waitForChannel();
      Object previous=clients.put(remoteAddress,client);
      if (connectingChannel != previous) {
        throw new IOException("Race condition while establishing channel connection.");
      }
    }
 else     if (old instanceof ConnectingChannel) {
      client=((ConnectingChannel)old).waitForChannel();
    }
 else {
      client=(PartitionRequestClient)old;
    }
  }
  if (client.incrementReferenceCounter()) {
    return client;
  }
 else {
    destroyPartitionRequestClient(remoteAddress,client);
    return createPartitionRequestClient(remoteAddress);
  }
}
