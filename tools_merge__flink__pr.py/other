import json
import os
import re
import subprocess
import sys
import tempfile
import urllib2
try:
    import jira.client
    JIRA_IMPORTED = True
except ImportError:
    JIRA_IMPORTED = False
FLINK_HOME = os.environ.get('FLINK_HOME', '/home/patrick/Documents/spark')
PR_REMOTE_NAME = os.environ.get('PR_REMOTE_NAME', 'apache-github')
PUSH_REMOTE_NAME = os.environ.get('PUSH_REMOTE_NAME', 'apache')
JIRA_USERNAME = os.environ.get('JIRA_USERNAME', 'pwendell')
JIRA_PASSWORD = os.environ.get('JIRA_PASSWORD', '1234')
GITHUB_BASE = 'https://github.com/apache/incubator-flink/pull'
GITHUB_API_BASE = 'https://api.github.com/repos/apache/incubator-flink'
JIRA_BASE = 'https://issues.apache.org/jira/browse'
JIRA_API_BASE = 'https://issues.apache.org/jira'
BRANCH_PREFIX = 'PR_TOOL'
os.chdir(FLINK_HOME)
original_head = run_cmd('git rev-parse HEAD')[:8]
latest_branch = 'master'
pr_num = raw_input('Which pull request would you like to merge? (e.g. 34): ')
pr = get_json(('%s/pulls/%s' % (GITHUB_API_BASE, pr_num)))
url = pr['url']
title = pr['title']
body = pr['body']
target_ref = pr['base']['ref']
user_login = pr['user']['login']
base_ref = pr['head']['ref']
pr_repo_desc = ('%s/%s' % (user_login, base_ref))
if (pr['merged'] is True):
    print ('Pull request %s has already been merged, assuming you want to backport' % pr_num)
    merge_commit_desc = run_cmd(['git', 'log', '--merges', '--first-parent', ('--grep=pull request #%s' % pr_num), '--oneline']).split('\n')[0]
    if (merge_commit_desc == ''):
        fail(("Couldn't find any merge commit for #%s, you may need to update HEAD." % pr_num))
    merge_hash = merge_commit_desc[:7]
    message = merge_commit_desc[8:]
    print ('Found: %s' % message)
    maybe_cherry_pick(pr_num, merge_hash, latest_branch)
    sys.exit(0)
if (not bool(pr['mergeable'])):
    msg = (('Pull request %s is not mergeable in its current form.\n' % pr_num) + 'Continue? (experts only!)')
    continue_maybe(msg)
print ('\n=== Pull Request #%s ===' % pr_num)
print ('title\t%s\nsource\t%s\ntarget\t%s\nurl\t%s' % (title, pr_repo_desc, target_ref, url))
continue_maybe(('Proceed with merging pull request #%s?' % pr_num))
merged_refs = [target_ref]
merge_hash = merge_pr(pr_num, target_ref)
pick_prompt = ('Would you like to pick %s into another branch?' % merge_hash)
while (raw_input(('\n%s (y/n): ' % pick_prompt)).lower() == 'y'):
    merged_refs = (merged_refs + [cherry_pick(pr_num, merge_hash, latest_branch)])
if JIRA_IMPORTED:
    continue_maybe('Would you like to update an associated JIRA?')
    jira_comment = ('Issue resolved by pull request %s\n[%s/%s]' % (pr_num, GITHUB_BASE, pr_num))
    resolve_jira(title, merged_refs, jira_comment)
else:
    print "Could not find jira-python library. Run 'sudo pip install jira-python' to install."
    print 'Exiting without trying to close the associated JIRA.'
