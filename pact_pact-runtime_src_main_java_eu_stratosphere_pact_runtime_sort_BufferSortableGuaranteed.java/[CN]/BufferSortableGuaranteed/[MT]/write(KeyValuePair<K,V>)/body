{
  try {
    outputView.skip(4);
    final int keystart=outputView.getPosition();
    keySerializer.serialize(pair.getKey());
    final int valstart=outputView.getPosition();
    valSerializer.serialize(pair.getValue());
    memory.randomAccessView.putInt(position,outputView.getPosition() - position - 4);
    final int free=outputView.getStackEndRel() - outputView.getHeapEndRel();
    if (free < STACK_ENTRY_SIZE) {
      return false;
    }
    outputView.growStack(INDEX_ENTRY_SIZE);
    memory.randomAccessView.putInt(outputView.getStackEndRel() + KEY_START,keystart);
    memory.randomAccessView.putInt(outputView.getStackEndRel() + VAL_START,valstart);
    final int offset=outputView.getStackEndRel();
    outputView.growStack(OFFSET_ENTRY_SIZE);
    memory.randomAccessView.putInt(outputView.getStackEndRel(),offset);
    pairsCount++;
    position=outputView.getPosition();
    return true;
  }
 catch (  IOException e) {
    return false;
  }
}
