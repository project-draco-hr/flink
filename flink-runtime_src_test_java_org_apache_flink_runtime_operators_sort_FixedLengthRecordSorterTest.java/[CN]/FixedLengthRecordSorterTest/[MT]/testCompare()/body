{
  final int numSegments=MEMORY_SIZE / MEMORY_PAGE_SIZE;
  final List<MemorySegment> memory=this.memoryManager.allocatePages(new DummyInvokable(),numSegments);
  FixedLengthRecordSorter<IntPair> sorter=newSortBuffer(memory);
  UniformIntPairGenerator generator=new UniformIntPairGenerator(Integer.MAX_VALUE,1,true);
  IntPair record=new IntPair();
  int num=-1;
  do {
    generator.next(record);
    num++;
  }
 while (sorter.write(record) && num < 3354624);
  Random rnd=new Random(SEED << 1);
  for (int i=0; i < 2 * num; i++) {
    int pos1=rnd.nextInt(num);
    int pos2=rnd.nextInt(num);
    int cmp=sorter.compare(pos1,pos2);
    if (pos1 < pos2) {
      Assert.assertTrue(cmp <= 0);
    }
 else {
      Assert.assertTrue(cmp >= 0);
    }
  }
  sorter.dispose();
  this.memoryManager.release(memory);
}
