{
  try {
    AbstractJobVertex source=new AbstractJobVertex("source");
    AbstractJobVertex op1=new AbstractJobVertex("op4");
    AbstractJobVertex op2=new AbstractJobVertex("op2");
    AbstractJobVertex op3=new AbstractJobVertex("op3");
    op1.connectNewDataSetAsInput(source,DistributionPattern.POINTWISE);
    op2.connectNewDataSetAsInput(op1,DistributionPattern.POINTWISE);
    op2.connectNewDataSetAsInput(source,DistributionPattern.POINTWISE);
    op3.connectNewDataSetAsInput(op2,DistributionPattern.POINTWISE);
    JobGraph graph=new JobGraph("TestGraph",source,op1,op2,op3);
    List<AbstractJobVertex> sorted=graph.getVerticesSortedTopologicallyFromSources();
    assertEquals(4,sorted.size());
    assertBefore(source,op1,sorted);
    assertBefore(source,op2,sorted);
    assertBefore(op1,op2,sorted);
    assertBefore(op2,op3,sorted);
  }
 catch (  Exception e) {
    e.printStackTrace();
    fail(e.getMessage());
  }
}
