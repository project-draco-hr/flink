{
  try {
    JobVertex source=new JobVertex("source");
    JobVertex v1=new JobVertex("1");
    JobVertex v2=new JobVertex("2");
    JobVertex v3=new JobVertex("3");
    JobVertex v4=new JobVertex("4");
    JobVertex target=new JobVertex("target");
    v1.connectNewDataSetAsInput(source,DistributionPattern.POINTWISE);
    v1.connectNewDataSetAsInput(v4,DistributionPattern.POINTWISE);
    v2.connectNewDataSetAsInput(v1,DistributionPattern.POINTWISE);
    v3.connectNewDataSetAsInput(v2,DistributionPattern.POINTWISE);
    v4.connectNewDataSetAsInput(v3,DistributionPattern.POINTWISE);
    target.connectNewDataSetAsInput(v3,DistributionPattern.POINTWISE);
    JobGraph jg=new JobGraph("Cyclic Graph",new ExecutionConfig(),v1,v2,v3,v4,source,target);
    try {
      jg.getVerticesSortedTopologicallyFromSources();
      fail("Failed to raise error on topologically sorting cyclic graph.");
    }
 catch (    InvalidProgramException e) {
    }
  }
 catch (  Exception e) {
    e.printStackTrace();
    fail(e.getMessage());
  }
}
