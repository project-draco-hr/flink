{
  final JobGraph jg=new JobGraph();
  final JobTaskVertex v1=new JobTaskVertex("v1",jg);
  final JobTaskVertex v2=new JobTaskVertex("v2",jg);
  final JobTaskVertex v3=new JobTaskVertex("v3",jg);
  final JobTaskVertex v4=new JobTaskVertex("v4",jg);
  try {
    v1.connectTo(v2);
    v2.connectTo(v3);
    v3.connectTo(v4);
  }
 catch (  JobGraphDefinitionException ex) {
    Logger.getLogger(JobGraphTest.class.getName()).log(Level.SEVERE,null,ex);
  }
  v1.setVertexToShareInstancesWith(v2);
  v3.setVertexToShareInstancesWith(v2);
  v4.setVertexToShareInstancesWith(v1);
  assertEquals(jg.isInstanceDependencyChainAcyclic(),true);
  v2.setVertexToShareInstancesWith(v4);
  assertEquals(jg.isInstanceDependencyChainAcyclic(),false);
}
