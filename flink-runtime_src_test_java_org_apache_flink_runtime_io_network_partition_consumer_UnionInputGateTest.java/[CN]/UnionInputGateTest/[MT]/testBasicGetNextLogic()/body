{
  final String testTaskName="Test Task";
  final SingleInputGate ig1=new SingleInputGate(testTaskName,new JobID(),new ExecutionAttemptID(),new IntermediateDataSetID(),0,3,mock(TaskActions.class),new UnregisteredTaskMetricsGroup.DummyIOMetricGroup());
  final SingleInputGate ig2=new SingleInputGate(testTaskName,new JobID(),new ExecutionAttemptID(),new IntermediateDataSetID(),0,5,mock(TaskActions.class),new UnregisteredTaskMetricsGroup.DummyIOMetricGroup());
  final UnionInputGate union=new UnionInputGate(new SingleInputGate[]{ig1,ig2});
  assertEquals(ig1.getNumberOfInputChannels() + ig2.getNumberOfInputChannels(),union.getNumberOfInputChannels());
  final TestInputChannel[][] inputChannels=new TestInputChannel[][]{TestInputChannel.createInputChannels(ig1,3),TestInputChannel.createInputChannels(ig2,5)};
  inputChannels[0][0].readBuffer();
  inputChannels[0][0].readEndOfPartitionEvent();
  inputChannels[1][2].readBuffer();
  inputChannels[1][2].readEndOfPartitionEvent();
  inputChannels[1][0].readBuffer();
  inputChannels[1][1].readBuffer();
  inputChannels[0][1].readBuffer();
  inputChannels[1][3].readBuffer();
  inputChannels[0][1].readEndOfPartitionEvent();
  inputChannels[1][3].readEndOfPartitionEvent();
  inputChannels[0][2].readBuffer();
  inputChannels[0][2].readEndOfPartitionEvent();
  inputChannels[1][4].readBuffer();
  inputChannels[1][4].readEndOfPartitionEvent();
  inputChannels[1][1].readEndOfPartitionEvent();
  inputChannels[1][0].readEndOfPartitionEvent();
  SingleInputGateTest.verifyBufferOrEvent(union,true,0);
  SingleInputGateTest.verifyBufferOrEvent(union,false,0);
  SingleInputGateTest.verifyBufferOrEvent(union,true,5);
  SingleInputGateTest.verifyBufferOrEvent(union,false,5);
  SingleInputGateTest.verifyBufferOrEvent(union,true,3);
  SingleInputGateTest.verifyBufferOrEvent(union,true,4);
  SingleInputGateTest.verifyBufferOrEvent(union,true,1);
  SingleInputGateTest.verifyBufferOrEvent(union,true,6);
  SingleInputGateTest.verifyBufferOrEvent(union,false,1);
  SingleInputGateTest.verifyBufferOrEvent(union,false,6);
  SingleInputGateTest.verifyBufferOrEvent(union,true,2);
  SingleInputGateTest.verifyBufferOrEvent(union,false,2);
  SingleInputGateTest.verifyBufferOrEvent(union,true,7);
  SingleInputGateTest.verifyBufferOrEvent(union,false,7);
  SingleInputGateTest.verifyBufferOrEvent(union,false,4);
  SingleInputGateTest.verifyBufferOrEvent(union,false,3);
  assertTrue(union.isFinished());
  assertNull(union.getNextBufferOrEvent());
}
