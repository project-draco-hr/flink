{
  try {
    this.contextNodes.clear();
    if (this.multipleRecordsPerSource) {
      final Iterator<JsonNode> iterator=((ArrayNode)values).iterator();
      final IntList sourceIndexes=new IntArrayList();
      for (int sourceIndex=0; iterator.hasNext(); sourceIndex++)       for (      final JsonNode value : (ArrayNode)iterator.next()) {
        this.contextNodes.add(value);
        sourceIndexes.add(sourceIndex);
      }
      this.context.setSourceIndexes(sourceIndexes.toIntArray());
    }
 else {
      for (      final JsonNode value : (ArrayNode)values)       this.contextNodes.add(value);
      final int[] sourceIndexes=new int[this.contextNodes.size()];
      for (int index=0; index < sourceIndexes.length; index++)       sourceIndexes[index]=index;
      this.context.setSourceIndexes(sourceIndexes);
    }
    JsonNode[] contextArray=this.contextNodes.toArray(new JsonNode[this.contextNodes.size()]);
    this.context.setContextNodes(contextArray);
    final double[] initialWeights=new double[this.contextNodes.size()];
    for (int index=0; index < initialWeights.length; index++)     initialWeights[index]=this.getWeight(index,new PathExpression());
    out.collect(key,this.fuse(contextArray,initialWeights,new PathExpression()));
  }
 catch (  final UnresolvableEvaluationException e) {
  }
}
