{
  KvStateRegistry registry=new KvStateRegistry();
  KvStateRequestStats stats=new AtomicKvStateRequestStats();
  KvStateServerHandler handler=new KvStateServerHandler(registry,TEST_THREAD_POOL,stats);
  EmbeddedChannel channel=new EmbeddedChannel(getFrameDecoder(),handler);
  ValueStateDescriptor<byte[]> desc=new ValueStateDescriptor<>("any",BytePrimitiveArraySerializer.INSTANCE,null);
  desc.setQueryable("any");
  MemValueState<Integer,VoidNamespace,byte[]> kvState=new MemValueState<>(IntSerializer.INSTANCE,VoidNamespaceSerializer.INSTANCE,desc);
  KvStateID kvStateId=registry.registerKvState(new JobID(),new JobVertexID(),0,"vanilla",kvState);
  byte[] bytes=new byte[2 * channel.config().getWriteBufferHighWaterMark()];
  byte current=0;
  for (int i=0; i < bytes.length; i++) {
    bytes[i]=current++;
  }
  int key=99812822;
  kvState.setCurrentKey(key);
  kvState.setCurrentNamespace(VoidNamespace.INSTANCE);
  kvState.update(bytes);
  byte[] serializedKeyAndNamespace=KvStateRequestSerializer.serializeKeyAndNamespace(key,IntSerializer.INSTANCE,VoidNamespace.INSTANCE,VoidNamespaceSerializer.INSTANCE);
  long requestId=Integer.MAX_VALUE + 182828L;
  ByteBuf request=KvStateRequestSerializer.serializeKvStateRequest(channel.alloc(),requestId,kvStateId,serializedKeyAndNamespace);
  channel.writeInbound(request);
  Object msg=readInboundBlocking(channel);
  assertTrue("Not ChunkedByteBuf",msg instanceof ChunkedByteBuf);
}
