{
  KvStateRegistry registry=new KvStateRegistry();
  AtomicKvStateRequestStats stats=new AtomicKvStateRequestStats();
  KvStateServerHandler handler=new KvStateServerHandler(registry,TEST_THREAD_POOL,stats);
  EmbeddedChannel channel=new EmbeddedChannel(getFrameDecoder(),handler);
  int numKeyGroups=1;
  AbstractStateBackend abstractBackend=new MemoryStateBackend();
  DummyEnvironment dummyEnv=new DummyEnvironment("test",1,0);
  dummyEnv.setKvStateRegistry(registry);
  KeyedStateBackend<Integer> backend=abstractBackend.createKeyedStateBackend(dummyEnv,new JobID(),"test_op",IntSerializer.INSTANCE,numKeyGroups,new KeyGroupRange(0,0),registry.createTaskRegistry(dummyEnv.getJobID(),dummyEnv.getJobVertexId()));
  final TestRegistryListener registryListener=new TestRegistryListener();
  registry.registerListener(registryListener);
  ValueStateDescriptor<Integer> desc=new ValueStateDescriptor<>("any",IntSerializer.INSTANCE,null);
  desc.setQueryable("vanilla");
  ValueState<Integer> state=backend.getPartitionedState(VoidNamespace.INSTANCE,VoidNamespaceSerializer.INSTANCE,desc);
  int key=99812822;
  backend.setCurrentKey(key);
  state.update(712828289);
  byte[] wrongKeyAndNamespace=KvStateRequestSerializer.serializeKeyAndNamespace("wrong-key-type",StringSerializer.INSTANCE,"wrong-namespace-type",StringSerializer.INSTANCE);
  byte[] wrongNamespace=KvStateRequestSerializer.serializeKeyAndNamespace(key,IntSerializer.INSTANCE,"wrong-namespace-type",StringSerializer.INSTANCE);
  assertTrue(registryListener.registrationName.equals("vanilla"));
  ByteBuf request=KvStateRequestSerializer.serializeKvStateRequest(channel.alloc(),182828,registryListener.kvStateId,wrongKeyAndNamespace);
  channel.writeInbound(request);
  ByteBuf buf=(ByteBuf)readInboundBlocking(channel);
  buf.skipBytes(4);
  assertEquals(KvStateRequestType.REQUEST_FAILURE,KvStateRequestSerializer.deserializeHeader(buf));
  KvStateRequestFailure response=KvStateRequestSerializer.deserializeKvStateRequestFailure(buf);
  assertEquals(182828,response.getRequestId());
  assertTrue(response.getCause().getMessage().contains("IllegalArgumentException"));
  request=KvStateRequestSerializer.serializeKvStateRequest(channel.alloc(),182829,registryListener.kvStateId,wrongNamespace);
  channel.writeInbound(request);
  buf=(ByteBuf)readInboundBlocking(channel);
  buf.skipBytes(4);
  assertEquals(KvStateRequestType.REQUEST_FAILURE,KvStateRequestSerializer.deserializeHeader(buf));
  response=KvStateRequestSerializer.deserializeKvStateRequestFailure(buf);
  assertEquals(182829,response.getRequestId());
  assertTrue(response.getCause().getMessage().contains("IllegalArgumentException"));
  assertEquals(2,stats.getNumRequests());
  assertEquals(2,stats.getNumFailed());
}
