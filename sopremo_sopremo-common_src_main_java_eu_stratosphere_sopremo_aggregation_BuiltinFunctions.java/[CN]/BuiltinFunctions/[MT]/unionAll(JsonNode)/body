{
  boolean hasStream=false, resettable=false;
  for (  final JsonNode param : arrays) {
    final boolean stream=param instanceof StreamArrayNode;
    hasStream|=stream;
    if (stream && ((StreamArrayNode)param).isResettable()) {
      resettable=true;
      break;
    }
  }
  if (hasStream) {
    final Iterator<?>[] iterators=new Iterator[arrays.length];
    for (int index=0; index < iterators.length; index++)     iterators[index]=arrays[index].iterator();
    return StreamArrayNode.valueOf(new ConcatenatingIterator<JsonNode>(iterators),resettable);
  }
  final ArrayNode union=JsonUtil.NODE_FACTORY.arrayNode();
  for (  final JsonNode param : arrays)   for (  final JsonNode child : param)   union.add(child);
  return union;
}
