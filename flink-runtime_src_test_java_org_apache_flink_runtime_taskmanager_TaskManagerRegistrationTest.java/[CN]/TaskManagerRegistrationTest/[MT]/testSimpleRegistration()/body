{
  new JavaTestKit(actorSystem){
{
      ActorGateway jobManager=null;
      ActorGateway taskManager1=null;
      ActorGateway taskManager2=null;
      try {
        jobManager=createJobManager(actorSystem,config);
        taskManager1=createTaskManager(actorSystem,jobManager,config,true,false);
        taskManager2=createTaskManager(actorSystem,jobManager,config,true,false);
        Future<Object> responseFuture1=taskManager1.ask(TaskManagerMessages.getNotifyWhenRegisteredAtJobManagerMessage(),new FiniteDuration(5000,TimeUnit.MILLISECONDS));
        Future<Object> responseFuture2=taskManager2.ask(TaskManagerMessages.getNotifyWhenRegisteredAtJobManagerMessage(),new FiniteDuration(5000,TimeUnit.MILLISECONDS));
        Object response1=Await.result(responseFuture1,new FiniteDuration(5,TimeUnit.SECONDS));
        Object response2=Await.result(responseFuture2,new FiniteDuration(5,TimeUnit.SECONDS));
        Class<?> confirmClass=TaskManagerMessages.getRegisteredAtJobManagerMessage().getClass();
        assertTrue(response1 != null && confirmClass.isAssignableFrom(response1.getClass()));
        assertTrue(response2 != null && confirmClass.isAssignableFrom(response2.getClass()));
        Future<Object> numTaskManagersFuture=jobManager.ask(JobManagerMessages.getRequestNumberRegisteredTaskManager(),new FiniteDuration(1000,TimeUnit.MILLISECONDS));
        Integer count=(Integer)Await.result(numTaskManagersFuture,new FiniteDuration(1,TimeUnit.SECONDS));
        assertEquals(2,count.intValue());
      }
 catch (      Exception e) {
        e.printStackTrace();
        fail(e.getMessage());
      }
 finally {
        stopActor(taskManager1);
        stopActor(taskManager2);
        stopActor(jobManager);
      }
    }
  }
;
}
