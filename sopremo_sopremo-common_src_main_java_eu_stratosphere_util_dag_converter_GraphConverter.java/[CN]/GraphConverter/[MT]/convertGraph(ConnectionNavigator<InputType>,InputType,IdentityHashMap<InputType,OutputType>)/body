{
  if (convertedNodes.containsKey(root))   return convertedNodes.get(root);
  final NodeConverterInfo<InputType,OutputType> converterInfo=this.getNodeConverterInfo(root.getClass());
  for (  final GraphConversionListener<InputType,OutputType> listener : this.conversionListener)   listener.beforeSubgraphConversion(root);
  final List<OutputType> childTypes=this.convertChildren(navigator,root,converterInfo);
  this.lastChildren=converterInfo != null && converterInfo.shouldAppendChildren() ? childTypes.subList(converterInfo.getAppendIndex(),childTypes.size()) : Collections.EMPTY_LIST;
  final OutputType convertedType=this.convertNode(root,childTypes);
  for (  final GraphConversionListener<InputType,OutputType> listener : this.conversionListener)   listener.afterSubgraphConversion(root,convertedType);
  if (convertedType == null)   return childTypes.isEmpty() ? null : childTypes.get(0);
  return convertedType;
}
