{
  try {
    SourcePlanNode target=new SourcePlanNode(getSourceNode(),"Source");
    Channel toMap1=new Channel(target);
    SingleInputPlanNode map1=new SingleInputPlanNode(getMapNode(),"Mapper 1",toMap1,DriverStrategy.MAP);
    Channel toMap2=new Channel(map1);
    SingleInputPlanNode map2=new SingleInputPlanNode(getMapNode(),"Mapper 2",toMap2,DriverStrategy.MAP);
    Channel toMap3=new Channel(map2);
    SingleInputPlanNode map3=new SingleInputPlanNode(getMapNode(),"Mapper 3",toMap3,DriverStrategy.MAP);
{
      GlobalProperties gp=new GlobalProperties();
      LocalProperties lp=LocalProperties.forOrdering(new Ordering(3,null,Order.ASCENDING).appendOrdering(1,null,Order.DESCENDING));
      RequestedLocalProperties reqLp=new RequestedLocalProperties();
      reqLp.setGroupedFields(new FieldList(4,1));
      toMap1.setShipStrategy(ShipStrategyType.FORWARD,DataExchangeMode.PIPELINED);
      toMap1.setLocalStrategy(LocalStrategy.SORT,new FieldList(5,7),new boolean[]{false,false});
      toMap2.setShipStrategy(ShipStrategyType.FORWARD,DataExchangeMode.PIPELINED);
      toMap2.setLocalStrategy(LocalStrategy.NONE);
      toMap3.setShipStrategy(ShipStrategyType.FORWARD,DataExchangeMode.PIPELINED);
      toMap3.setLocalStrategy(LocalStrategy.NONE);
      toMap1.setRequiredGlobalProps(null);
      toMap1.setRequiredLocalProps(null);
      toMap2.setRequiredGlobalProps(null);
      toMap2.setRequiredLocalProps(null);
      toMap3.setRequiredGlobalProps(null);
      toMap3.setRequiredLocalProps(reqLp);
      FeedbackPropertiesMeetRequirementsReport report=map3.checkPartialSolutionPropertiesMet(target,gp,lp);
      assertTrue(report != null && report != NO_PARTIAL_SOLUTION && report != NOT_MET);
    }
{
      GlobalProperties gp=new GlobalProperties();
      gp.setHashPartitioned(new FieldList(5,3));
      LocalProperties lp=LocalProperties.EMPTY;
      RequestedGlobalProperties reqGp=new RequestedGlobalProperties();
      reqGp.setAnyPartitioning(new FieldSet(2,3));
      toMap1.setShipStrategy(ShipStrategyType.PARTITION_HASH,new FieldList(1,2),DataExchangeMode.PIPELINED);
      toMap1.setLocalStrategy(LocalStrategy.NONE);
      toMap2.setShipStrategy(ShipStrategyType.FORWARD,DataExchangeMode.PIPELINED);
      toMap2.setLocalStrategy(LocalStrategy.NONE);
      toMap3.setShipStrategy(ShipStrategyType.FORWARD,DataExchangeMode.PIPELINED);
      toMap3.setLocalStrategy(LocalStrategy.NONE);
      toMap1.setRequiredGlobalProps(null);
      toMap1.setRequiredLocalProps(null);
      toMap2.setRequiredGlobalProps(null);
      toMap2.setRequiredLocalProps(null);
      toMap3.setRequiredGlobalProps(reqGp);
      toMap3.setRequiredLocalProps(null);
      FeedbackPropertiesMeetRequirementsReport report=map3.checkPartialSolutionPropertiesMet(target,gp,lp);
      assertTrue(report != null && report != NO_PARTIAL_SOLUTION && report != NOT_MET);
    }
  }
 catch (  Exception e) {
    e.printStackTrace();
    fail(e.getMessage());
  }
}
