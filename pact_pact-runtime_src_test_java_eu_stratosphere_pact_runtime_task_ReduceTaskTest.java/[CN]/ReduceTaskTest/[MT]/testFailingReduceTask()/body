{
  int keyCnt=100;
  int valCnt=20;
  addInput(new UniformPactRecordGenerator(keyCnt,valCnt,false));
  addOutput(this.outList);
  ReduceDriver<PactRecord,PactRecord> testTask=new ReduceDriver<PactRecord,PactRecord>();
  super.getTaskConfig().setLocalStrategy(LocalStrategy.SORT);
  super.getTaskConfig().setMemorySize(3 * 1024 * 1024);
  super.getTaskConfig().setNumFilehandles(4);
  final int[] keyPos=new int[]{0};
  @SuppressWarnings("unchecked") final Class<? extends Key>[] keyClasses=(Class<? extends Key>[])new Class[]{PactInteger.class};
  addInputComparator(new PactRecordComparator(keyPos,keyClasses));
  boolean stubFailed=false;
  try {
    testDriver(testTask,MockFailingReduceStub.class);
  }
 catch (  Exception e) {
    stubFailed=true;
  }
  Assert.assertTrue("Stub exception was not forwarded.",stubFailed);
  this.outList.clear();
}
