{
  int keyCnt=100;
  int valCnt=20;
  super.initEnvironment(3 * 1024 * 1024);
  super.addInput(new RegularlyGeneratedInputGenerator(keyCnt,valCnt,false));
  super.addOutput(outList);
  ReduceTask testTask=new ReduceTask();
  super.getTaskConfig().setLocalStrategy(LocalStrategy.SORT);
  super.getTaskConfig().setMemorySize(3 * 1024 * 1024);
  super.getTaskConfig().setNumFilehandles(4);
  super.registerTask(testTask,MockReduceStub.class);
  try {
    testTask.invoke();
  }
 catch (  Exception e) {
    LOG.debug(e);
  }
  Assert.assertTrue("Resultset size was " + outList.size() + ". Expected was "+ keyCnt,outList.size() == keyCnt);
  for (  KeyValuePair<PactInteger,PactInteger> pair : outList) {
    Assert.assertTrue("Incorrect result",pair.getValue().getValue() == valCnt - pair.getKey().getValue());
  }
  outList.clear();
}
