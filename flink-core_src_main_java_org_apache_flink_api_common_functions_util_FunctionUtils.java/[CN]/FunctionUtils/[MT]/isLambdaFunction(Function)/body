{
  if (function == null) {
    throw new IllegalArgumentException();
  }
  for (Class<?> clazz=function.getClass(); clazz != null; clazz=clazz.getSuperclass()) {
    try {
      Method replaceMethod=clazz.getDeclaredMethod("writeReplace");
      replaceMethod.setAccessible(true);
      Object serialVersion=replaceMethod.invoke(function);
      if (serialVersion.getClass().getName().equals("java.lang.invoke.SerializedLambda")) {
        return true;
      }
    }
 catch (    NoSuchMethodException e) {
    }
catch (    Throwable t) {
      throw new RuntimeException("Error while checking whether function is a lambda.",t);
    }
  }
  return false;
}
