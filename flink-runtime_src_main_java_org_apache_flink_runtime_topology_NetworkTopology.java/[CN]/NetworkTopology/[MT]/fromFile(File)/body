{
  final NetworkTopology topology=new NetworkTopology();
  final FileInputStream fstream=new FileInputStream(topologyFile);
  final DataInputStream in=new DataInputStream(fstream);
  final BufferedReader br=new BufferedReader(new InputStreamReader(in));
  String strLine;
  final Pattern pattern=Pattern.compile("^(\\S+)\\s*(\\S*)\\s*$");
  try {
    while ((strLine=br.readLine()) != null && !strLine.isEmpty()) {
      final Matcher m=pattern.matcher(strLine);
      if (!m.matches()) {
        throw new IOException("Cannot extract topology information from line \"" + strLine + "\"");
      }
      strLine=m.group(1);
      if (strLine.charAt(0) == SEPARATOR.charAt(0)) {
        strLine=strLine.substring(1);
      }
      final String[] splits=strLine.split(SEPARATOR);
      NetworkNode previousNode=topology.getRootNode();
      for (int i=0; i < splits.length; i++) {
        NetworkNode networkNode=topology.getNodeByName(splits[i]);
        if (networkNode == null) {
          networkNode=new NetworkNode(splits[i],previousNode,topology);
        }
        previousNode=networkNode;
      }
    }
  }
  finally {
    br.close();
  }
  return topology;
}
