{
  final Configuration config=new Configuration();
  config.setString(ConfigConstants.JOB_MANAGER_IPC_ADDRESS_KEY,"localhost");
  config.setInteger(ConfigConstants.JOB_MANAGER_IPC_PORT_KEY,jobManagerRpcPort);
  config.setInteger(ConfigConstants.TASK_MANAGER_IPC_PORT_KEY,taskManagerRpcPort);
  config.setInteger(ConfigConstants.TASK_MANAGER_DATA_PORT_KEY,taskManagerDataPort);
  config.setInteger(ConfigConstants.JOB_MANAGER_IPC_HANDLERS_KEY,2);
  config.setBoolean(ConfigConstants.TASK_MANAGER_MEMORY_LAZY_ALLOCATION_KEY,lazyMemory);
  config.setInteger(ConfigConstants.JOBCLIENT_POLLING_INTERVAL_KEY,2);
  if (hdfsConfigFile != null) {
    config.setString(ConfigConstants.HDFS_DEFAULT_CONFIG,hdfsConfigFile);
  }
  config.setBoolean(ConfigConstants.FILESYSTEM_DEFAULT_OVERWRITE_KEY,defaultOverwriteFiles);
  config.setBoolean(ConfigConstants.FILESYSTEM_OUTPUT_ALWAYS_CREATE_DIRECTORY_KEY,defaultAlwaysCreateDirectory);
  if (memorySize < 0) {
    memorySize=HardwareDescriptionFactory.extractFromSystem().getSizeOfFreeMemory();
    long bufferMem=GlobalConfiguration.getLong(ConfigConstants.TASK_MANAGER_NETWORK_NUM_BUFFERS_KEY,ConfigConstants.DEFAULT_TASK_MANAGER_NETWORK_NUM_BUFFERS) * GlobalConfiguration.getLong(ConfigConstants.TASK_MANAGER_NETWORK_BUFFER_SIZE_KEY,ConfigConstants.DEFAULT_TASK_MANAGER_NETWORK_BUFFER_SIZE);
    memorySize=memorySize - (bufferMem * numTaskManager);
    memorySize=(long)(memorySize * ConfigConstants.DEFAULT_MEMORY_MANAGER_MEMORY_FRACTION);
    memorySize>>>=20;
  }
  memorySize/=numTaskManager;
  config.setLong(ConfigConstants.TASK_MANAGER_MEMORY_SIZE_KEY,memorySize);
  config.setInteger(ConfigConstants.LOCAL_INSTANCE_MANAGER_NUMBER_TASK_MANAGER,numTaskManager);
  config.setInteger(ConfigConstants.TASK_MANAGER_NUM_TASK_SLOTS,taskManagerNumSlots);
  return config;
}
