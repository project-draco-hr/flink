{
  this.metrics=metrics;
  this.metricGrpName=metricGrpPrefix + "-coordinator-metrics";
  this.commitLatency=metrics.sensor("commit-latency");
  this.commitLatency.add(new MetricName("commit-latency-avg",this.metricGrpName,"The average time taken for a commit request",tags),new Avg());
  this.commitLatency.add(new MetricName("commit-latency-max",this.metricGrpName,"The max time taken for a commit request",tags),new Max());
  this.commitLatency.add(new MetricName("commit-rate",this.metricGrpName,"The number of commit calls per second",tags),new Rate(new Count()));
  this.heartbeatLatency=metrics.sensor("heartbeat-latency");
  this.heartbeatLatency.add(new MetricName("heartbeat-response-time-max",this.metricGrpName,"The max time taken to receive a response to a hearbeat request",tags),new Max());
  this.heartbeatLatency.add(new MetricName("heartbeat-rate",this.metricGrpName,"The average number of heartbeats per second",tags),new Rate(new Count()));
  this.partitionReassignments=metrics.sensor("reassignment-latency");
  this.partitionReassignments.add(new MetricName("reassignment-time-avg",this.metricGrpName,"The average time taken for a partition reassignment",tags),new Avg());
  this.partitionReassignments.add(new MetricName("reassignment-time-max",this.metricGrpName,"The max time taken for a partition reassignment",tags),new Avg());
  this.partitionReassignments.add(new MetricName("reassignment-rate",this.metricGrpName,"The number of partition reassignments per second",tags),new Rate(new Count()));
  Measurable numParts=new Measurable(){
    public double measure(    MetricConfig config,    long now){
      return subscriptions.assignedPartitions().size();
    }
  }
;
  metrics.addMetric(new MetricName("assigned-partitions",this.metricGrpName,"The number of partitions currently assigned to this consumer",tags),numParts);
  Measurable lastHeartbeat=new Measurable(){
    public double measure(    MetricConfig config,    long now){
      return TimeUnit.SECONDS.convert(now - heartbeat.lastHeartbeatSend(),TimeUnit.MILLISECONDS);
    }
  }
;
  metrics.addMetric(new MetricName("last-heartbeat-seconds-ago",this.metricGrpName,"The number of seconds since the last controller heartbeat",tags),lastHeartbeat);
}
