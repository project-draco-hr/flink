{
  Map<TopicPartition,Long> offsets=new HashMap<TopicPartition,Long>(response.responseData().size());
  for (  Map.Entry<TopicPartition,OffsetFetchResponse.PartitionData> entry : response.responseData().entrySet()) {
    TopicPartition tp=entry.getKey();
    OffsetFetchResponse.PartitionData data=entry.getValue();
    if (data.hasError()) {
      log.debug("Error fetching offset for topic-partition {}: {}",tp,Errors.forCode(data.errorCode).exception().getMessage());
      if (data.errorCode == Errors.OFFSET_LOAD_IN_PROGRESS.code()) {
        future.raise(Errors.OFFSET_LOAD_IN_PROGRESS);
      }
 else       if (data.errorCode == Errors.NOT_COORDINATOR_FOR_CONSUMER.code()) {
        coordinatorDead();
        future.raise(Errors.NOT_COORDINATOR_FOR_CONSUMER);
      }
 else       if (data.errorCode == Errors.UNKNOWN_CONSUMER_ID.code() || data.errorCode == Errors.ILLEGAL_GENERATION.code()) {
        subscriptions.needReassignment();
        future.raise(Errors.forCode(data.errorCode));
      }
 else {
        future.raise(new KafkaException("Unexpected error in fetch offset response: " + Errors.forCode(data.errorCode).exception().getMessage()));
      }
      return;
    }
 else     if (data.offset >= 0) {
      offsets.put(tp,data.offset);
    }
 else {
      log.debug("No committed offset for partition " + tp);
    }
  }
  future.complete(offsets);
}
