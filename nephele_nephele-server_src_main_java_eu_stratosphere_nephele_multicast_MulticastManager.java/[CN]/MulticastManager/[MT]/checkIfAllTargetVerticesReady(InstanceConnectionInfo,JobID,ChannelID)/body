{
  final ExecutionGraph eg=this.scheduler.getExecutionGraphByID(jobID);
  final AbstractOutputChannel<? extends Record> outputChannel=eg.getOutputChannelByID(sourceChannelID);
  final OutputGate<? extends Record> broadcastgate=outputChannel.getOutputGate();
  for (  AbstractOutputChannel<? extends Record> c : broadcastgate.getOutputChannels()) {
    if (c.isBroadcastChannel()) {
      ExecutionVertex targetVertex=eg.getVertexByChannelID(c.getConnectedChannelID());
      if (targetVertex.getExecutionState() != ExecutionState.RUNNING && targetVertex.getExecutionState() != ExecutionState.FINISHING && targetVertex.getExecutionState() != ExecutionState.ASSIGNED && targetVertex.getExecutionState() != ExecutionState.READY && targetVertex.getExecutionState() != ExecutionState.STARTING) {
        return false;
      }
    }
  }
  return true;
}
