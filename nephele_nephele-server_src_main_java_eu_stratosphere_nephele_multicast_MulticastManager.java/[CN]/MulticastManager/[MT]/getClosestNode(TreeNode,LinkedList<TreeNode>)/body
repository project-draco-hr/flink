{
  if (indicator == null || !this.topologyaware && !this.usepenalties) {
    return nodes.getFirst();
  }
  TreeNode closestnode=null;
  if (this.topologyaware) {
    for (    TreeNode n : nodes) {
      if (closestnode == null || n.getDistance(indicator) < closestnode.getDistance(indicator)) {
        closestnode=n;
      }
    }
  }
 else   if (this.usepenalties) {
    System.out.println("polling node with lowest penalty...");
    int actualpenalty=Integer.MAX_VALUE;
    for (    TreeNode n : nodes) {
      if (closestnode == null || n.getProperty("penalty") < actualpenalty) {
        actualpenalty=n.getProperty("penalty");
        closestnode=n;
      }
    }
  }
  return closestnode;
}
