{
  MulticastForwardingTable table=new MulticastForwardingTable();
  LinkedList<TreeNode> unconnectedNodes=new LinkedList<TreeNode>();
  unconnectedNodes.addAll(nodes);
  unconnectedNodes.removeFirst();
  TreeNode actualnode=null;
  while (nodes.size() > 0) {
    actualnode=pollClosestNode(actualnode,nodes);
    ConnectionInfoLookupResponse actualentry=ConnectionInfoLookupResponse.createReceiverFoundAndReady();
    for (    ChannelID id : actualnode.getLocalTargets()) {
      System.out.println("local target: " + id);
      actualentry.addLocalTarget(id);
    }
    if (unconnectedNodes.size() > 0) {
      actualentry.addRemoteTarget(pollClosestNode(actualnode,unconnectedNodes).getConnectionInfo());
      if (unconnectedNodes.size() > 0) {
        actualentry.addRemoteTarget(pollClosestNode(actualnode,unconnectedNodes).getConnectionInfo());
      }
    }
    String out="STRUCT " + actualnode.toString();
    for (int i=0; i < actualentry.getRemoteTargets().size(); i++) {
      out=out + " " + actualentry.getRemoteTargets().get(i).toString();
    }
    System.out.println(out);
    table.addConnectionInfo(actualnode.getConnectionInfo(),actualentry);
  }
  return table;
}
