{
  final ExecutionGraph eg=this.scheduler.getExecutionGraphByID(jobID);
  final AbstractOutputChannel<? extends Record> outputChannel=eg.getOutputChannelByID(sourceChannelID);
  final OutputGate<? extends Record> broadcastgate=outputChannel.getOutputGate();
  final LinkedList<AbstractOutputChannel<? extends Record>> outputChannels=new LinkedList<AbstractOutputChannel<? extends Record>>();
  for (  AbstractOutputChannel<? extends Record> c : broadcastgate.getOutputChannels()) {
    if (c.isBroadcastChannel()) {
      outputChannels.add(c);
    }
  }
  final LinkedList<TreeNode> treenodes=new LinkedList<TreeNode>();
  LinkedList<ChannelID> actualLocalTargets=new LinkedList<ChannelID>();
  for (Iterator<AbstractOutputChannel<? extends Record>> iter=outputChannels.iterator(); iter.hasNext(); ) {
    AbstractOutputChannel<? extends Record> actualoutputchannel=iter.next();
    ExecutionVertex targetVertex=eg.getVertexByChannelID(actualoutputchannel.getConnectedChannelID());
    if (targetVertex.getAllocatedResource().getInstance().getInstanceConnectionInfo().equals(source)) {
      actualLocalTargets.add(actualoutputchannel.getConnectedChannelID());
      iter.remove();
    }
  }
  TreeNode actualnode=new TreeNode(eg.getVertexByChannelID(sourceChannelID).getAllocatedResource().getInstance(),source,actualLocalTargets);
  treenodes.add(actualnode);
  LinkedList<TreeNode> receivernodes=new LinkedList<TreeNode>();
  while (outputChannels.size() > 0) {
    AbstractOutputChannel<? extends Record> firstChannel=outputChannels.pollFirst();
    ExecutionVertex firstTarget=eg.getVertexByChannelID(firstChannel.getConnectedChannelID());
    InstanceConnectionInfo actualinstance=firstTarget.getAllocatedResource().getInstance().getInstanceConnectionInfo();
    actualLocalTargets=new LinkedList<ChannelID>();
    actualLocalTargets.add(firstChannel.getConnectedChannelID());
    for (Iterator<AbstractOutputChannel<? extends Record>> iter=outputChannels.iterator(); iter.hasNext(); ) {
      AbstractOutputChannel<? extends Record> actualoutputchannel=iter.next();
      ExecutionVertex actualTarget=eg.getVertexByChannelID(actualoutputchannel.getConnectedChannelID());
      if (actualTarget.getAllocatedResource().getInstance().getInstanceConnectionInfo().equals(actualinstance)) {
        actualLocalTargets.add(actualoutputchannel.getConnectedChannelID());
        iter.remove();
      }
    }
    actualnode=new TreeNode(firstTarget.getAllocatedResource().getInstance(),actualinstance,actualLocalTargets);
    receivernodes.add(actualnode);
  }
  if (randomize) {
    Collections.shuffle(receivernodes);
  }
 else {
    Collections.sort(receivernodes);
  }
  treenodes.addAll(receivernodes);
  return treenodes;
}
