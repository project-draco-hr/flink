{
  final ExecutionGraph eg=this.scheduler.getExecutionGraphByID(jobID);
  final ExecutionEdge outputChannel=eg.getEdgeByID(sourceChannelID);
  final ExecutionGate broadcastGate=outputChannel.getOutputGate();
  final LinkedList<ExecutionEdge> outputChannels=new LinkedList<ExecutionEdge>();
  final int numberOfOutputChannels=broadcastGate.getNumberOfEdges();
  for (int i=0; i < numberOfOutputChannels; ++i) {
    final ExecutionEdge c=broadcastGate.getEdge(i);
    if (c.isBroadcast()) {
      outputChannels.add(c);
    }
  }
  final LinkedList<TreeNode> treeNodes=new LinkedList<TreeNode>();
  LinkedList<ChannelID> actualLocalTargets=new LinkedList<ChannelID>();
  for (Iterator<ExecutionEdge> iter=outputChannels.iterator(); iter.hasNext(); ) {
    final ExecutionEdge actualOutputChannel=iter.next();
    final ExecutionVertex targetVertex=actualOutputChannel.getInputGate().getVertex();
    if (targetVertex.getAllocatedResource().getInstance().getInstanceConnectionInfo().equals(source)) {
      actualLocalTargets.add(actualOutputChannel.getInputChannelID());
      iter.remove();
    }
  }
  TreeNode actualNode=new TreeNode(eg.getVertexByChannelID(sourceChannelID).getAllocatedResource().getInstance(),source,actualLocalTargets);
  treeNodes.add(actualNode);
  LinkedList<TreeNode> receivernodes=new LinkedList<TreeNode>();
  while (outputChannels.size() > 0) {
    final ExecutionEdge firstChannel=outputChannels.pollFirst();
    final ExecutionVertex firstTarget=firstChannel.getInputGate().getVertex();
    final InstanceConnectionInfo actualInstance=firstTarget.getAllocatedResource().getInstance().getInstanceConnectionInfo();
    actualLocalTargets=new LinkedList<ChannelID>();
    actualLocalTargets.add(firstChannel.getInputChannelID());
    for (Iterator<ExecutionEdge> iter=outputChannels.iterator(); iter.hasNext(); ) {
      final ExecutionEdge actualOutputChannel=iter.next();
      final ExecutionVertex actualTarget=actualOutputChannel.getInputGate().getVertex();
      if (actualTarget.getAllocatedResource().getInstance().getInstanceConnectionInfo().equals(actualInstance)) {
        actualLocalTargets.add(actualOutputChannel.getInputChannelID());
        iter.remove();
      }
    }
    actualNode=new TreeNode(firstTarget.getAllocatedResource().getInstance(),actualInstance,actualLocalTargets);
    receivernodes.add(actualNode);
  }
  if (randomize) {
    Collections.shuffle(receivernodes);
  }
 else {
    Collections.sort(receivernodes);
  }
  treeNodes.addAll(receivernodes);
  return treeNodes;
}
