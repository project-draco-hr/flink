{
  List<Field> result=new ArrayList<Field>();
  while (clazz != null) {
    Field[] fields=clazz.getDeclaredFields();
    for (    Field field : fields) {
      if (Modifier.isTransient(field.getModifiers()) || Modifier.isStatic(field.getModifiers())) {
        continue;
      }
      if (hasFieldWithSameName(field.getName(),result)) {
        throw new RuntimeException("The field " + field + " is already contained in the hierarchy of the "+ clazz+ "."+ "Please use unique field names through your classes hierarchy");
      }
      result.add(field);
    }
    clazz=clazz.getSuperclass();
  }
  return result;
}
