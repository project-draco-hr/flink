{
  TypeInformation<?> info=null;
  if (inType instanceof TypeVariable) {
    inType=materializeTypeVariable(returnTypeHierarchy,(TypeVariable<?>)inType);
    info=findCorrespondingInfo(returnTypeVar,inType,inTypeInfo);
  }
 else   if (inType instanceof ParameterizedType && Tuple.class.isAssignableFrom(((Class<?>)((ParameterizedType)inType).getRawType()))) {
    Type[] tupleElements=((ParameterizedType)inType).getActualTypeArguments();
    for (int i=0; i < tupleElements.length; i++) {
      info=createTypeInfoFromInput(returnTypeVar,returnTypeHierarchy,tupleElements[i],((TupleTypeInfo<?>)inTypeInfo).getTypeAt(i));
      if (info != null) {
        break;
      }
    }
  }
  return info;
}
