{
  InterestingProperties p=new InterestingProperties();
  int[] keySet=getPactContract().getKeyColumnNumbers(inputNum);
  p.getGlobalProperties().setPartitioning(PartitionProperty.ANY,keySet.clone());
  Ordering ordering=new Ordering();
  for (  Integer index : getPactContract().getKeyColumnNumbers(inputNum)) {
    ordering.appendOrdering(index,Order.ANY);
  }
  p.getLocalProperties().setOrdering(ordering);
  estimator.getHashPartitioningCost(input,p.getMaximalCosts());
  Costs c=new Costs();
  estimator.getLocalSortCost(this,Collections.<PactConnection>singletonList(input),c);
  p.getMaximalCosts().addCosts(c);
  InterestingProperties.mergeUnionOfInterestingProperties(target,p);
  p=new InterestingProperties();
  p.getGlobalProperties().setPartitioning(PartitionProperty.ANY,keySet.clone());
  estimator.getHashPartitioningCost(input,p.getMaximalCosts());
  InterestingProperties.mergeUnionOfInterestingProperties(target,p);
}
