{
  final int size1=allPreds1.size();
  final int size2=allPreds2.size();
  List<OptimizerNode> copy1=new ArrayList<OptimizerNode>(size1);
  List<OptimizerNode> copy2=new ArrayList<OptimizerNode>(size2);
  for (int i=0; i < size1; ++i)   copy1.add(allPreds1.get(i));
  for (int i=0; i < size2; ++i)   copy2.add(allPreds2.get(i));
  outter:   for (int i=0; i < copy1.size(); ++i) {
    OptimizerNode nodeToTest=copy1.get(i);
    for (int j=i + i; j < copy2.size(); ++j) {
      if (nodeToTest.equals(copy2.get(j))) {
        copy1.remove(i);
        --i;
        copy2.remove(j);
        continue outter;
      }
    }
    return false;
  }
  assert(copy1.size() == 0 && copy2.size() == 0);
  return true;
}
