{
  GlobalProperties gp1=PactConnection.getGlobalPropertiesAfterConnection(pred1,this,ss1);
  GlobalProperties gp2=PactConnection.getGlobalPropertiesAfterConnection(pred2,this,ss2);
  LocalProperties outLp=outLpp;
  GlobalProperties outGp=new GlobalProperties();
  outGp.setPartitioning(gp1.getPartitioning(),gp1.getPartitionedFiels());
  outGp.setOrdering(gp1.getOrdering());
  if (outLpp == null) {
    int[] keyColumns=getPactContract().getKeyColumnNumbers(0);
    outLp=new LocalProperties();
    if (order != Order.NONE) {
      Ordering ordering=new Ordering();
      for (      int keyColumn : keyColumns) {
        ordering.appendOrdering(keyColumn,order);
      }
      outLp.setOrdering(ordering);
    }
 else {
      outLp.setOrdering(null);
    }
    outLp.setGrouped(grouped,new FieldSet(keyColumns));
  }
  MatchNode n=new MatchNode(this,pred1,pred2,input1,input2,outGp,outLp);
  if (n.input1 != null) {
    n.input1.setShipStrategy(ss1);
  }
  if (n.input2 != null) {
    n.input2.setShipStrategy(ss2);
  }
  n.setLocalStrategy(ls);
  n.getGlobalProperties().filterByKeepSet(getKeepSet(0));
  n.getLocalProperties().filterByKeepSet(getKeepSet(0));
  estimator.costOperator(n);
  target.add(n);
  outGp=new GlobalProperties();
  outGp.setPartitioning(gp2.getPartitioning(),gp2.getPartitionedFiels());
  outGp.setOrdering(gp2.getOrdering());
  if (outLpp == null) {
    int[] keyColumns=getPactContract().getKeyColumnNumbers(1);
    outLp=new LocalProperties();
    if (order != Order.NONE) {
      Ordering ordering=new Ordering();
      for (      int keyColumn : keyColumns) {
        ordering.appendOrdering(keyColumn,order);
      }
      outLp.setOrdering(ordering);
    }
 else {
      outLp.setOrdering(null);
    }
    outLp.setGrouped(grouped,new FieldSet(keyColumns));
  }
  n=new MatchNode(this,pred1,pred2,input1,input2,outGp,outLp);
  if (n.input1 != null) {
    n.input1.setShipStrategy(ss1);
  }
  if (n.input2 != null) {
    n.input2.setShipStrategy(ss2);
  }
  n.setLocalStrategy(ls);
  n.getGlobalProperties().filterByKeepSet(getKeepSet(1));
  n.getLocalProperties().filterByKeepSet(getKeepSet(1));
  estimator.costOperator(n);
  target.add(n);
}
