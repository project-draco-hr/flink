{
  FieldList partitionedFields=gp.getPartitionedFields();
  if (partitionedFields == null || partitionedFields.size() == 0) {
    return false;
  }
  FieldList keyFields;
switch (inputNum) {
case 0:
    keyFields=this.keySet1;
  break;
case 1:
keyFields=this.keySet2;
break;
default :
throw new CompilerException("Invalid input number " + inputNum + " for Match.");
}
if (gp.getPartitioning() == PartitioningProperty.RANGE_PARTITIONED) {
return keyFields.equals(partitionedFields);
}
for (int partitionedField : partitionedFields) {
boolean foundField=false;
for (int keyField : keyFields) {
if (keyField == partitionedField) {
foundField=true;
break;
}
}
if (foundField == false) {
return false;
}
}
return true;
}
