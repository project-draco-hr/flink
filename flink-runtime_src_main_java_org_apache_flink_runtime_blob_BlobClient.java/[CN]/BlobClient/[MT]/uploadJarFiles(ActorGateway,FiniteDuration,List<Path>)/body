{
  if (jars.isEmpty()) {
    return Collections.emptyList();
  }
 else {
    Object msg=JobManagerMessages.getRequestBlobManagerPort();
    Future<Object> futureBlobPort=jobManager.ask(msg,askTimeout);
    try {
      Object result=Await.result(futureBlobPort,askTimeout);
      if (result instanceof Integer) {
        int port=(Integer)result;
        Option<String> jmHost=jobManager.actor().path().address().host();
        String jmHostname=jmHost.isDefined() ? jmHost.get() : "localhost";
        InetSocketAddress serverAddress=new InetSocketAddress(jmHostname,port);
        return uploadJarFiles(serverAddress,jars);
      }
 else {
        throw new Exception("Expected port number (int) as answer, received " + result);
      }
    }
 catch (    Exception e) {
      throw new IOException("Could not retrieve the JobManager's blob port.",e);
    }
  }
}
