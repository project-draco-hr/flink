{
  final ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
  Graph<Long,Long,Long> graph=Graph.fromDataSet(TestGraphUtils.getLongLongVertexData(env),TestGraphUtils.getLongLongEdgeData(env),env);
  DataSet<Edge<Long,Long>> data=graph.subgraph(new FilterFunction<Vertex<Long,Long>>(){
    public boolean filter(    Vertex<Long,Long> vertex) throws Exception {
      return (vertex.getValue() > 2);
    }
  }
,new FilterFunction<Edge<Long,Long>>(){
    public boolean filter(    Edge<Long,Long> edge) throws Exception {
      return (edge.getValue() > 34);
    }
  }
).getEdges();
  List<Edge<Long,Long>> result=data.collect();
  expectedResult="3,5,35\n" + "4,5,45\n";
  compareResultAsTuples(result,expectedResult);
}
