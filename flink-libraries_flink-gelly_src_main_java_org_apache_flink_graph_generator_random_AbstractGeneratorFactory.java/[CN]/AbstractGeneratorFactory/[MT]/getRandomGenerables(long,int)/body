{
  long cycles=elementCount * cyclesPerElement;
  int blockCount=Math.min((int)Math.ceil(cycles / (float)getMinimumCyclesPerBlock()),MAXIMUM_BLOCK_COUNT);
  long elementsPerBlock=elementCount / blockCount;
  long elementRemainder=elementCount % blockCount;
  List<BlockInfo<T>> blocks=new ArrayList<>(blockCount);
  long blockStart=0;
  for (int blockIndex=0; blockIndex < blockCount; blockIndex++) {
    if (blockIndex == blockCount - elementRemainder) {
      elementsPerBlock++;
    }
    RandomGenerable<T> randomGenerable=next();
    blocks.add(new BlockInfo<>(randomGenerable,blockIndex,blockCount,blockStart,elementsPerBlock));
    blockStart+=elementsPerBlock;
  }
  return blocks;
}
