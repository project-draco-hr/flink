{
synchronized (connectLock) {
    if (failureCause != null) {
      return Futures.failed(failureCause);
    }
 else     if (closed) {
      return Futures.failed(new ClosedChannelException());
    }
 else {
      if (established != null) {
        return established.getKvState(kvStateId,serializedKeyAndNamespace);
      }
 else {
        PendingRequest pending=new PendingRequest(kvStateId,serializedKeyAndNamespace);
        queuedRequests.add(pending);
        return pending.promise.future();
      }
    }
  }
}
