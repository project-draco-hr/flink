{
  List<BufferOrEvent> input=new LinkedList<BufferOrEvent>();
  input.add(createBuffer(0));
  input.add(createBuffer(0));
  input.add(createSuperstep(1,0));
  input.add(createBuffer(0));
  input.add(createBuffer(0));
  input.add(createSuperstep(2,0));
  input.add(createBuffer(0));
  InputGate mockIG=new MockInputGate(1,input);
  AbstractReader mockAR=new MockReader(mockIG);
  BarrierBuffer bb=new BarrierBuffer(mockIG,mockAR);
  BufferOrEvent nextBoe;
  assertEquals(input.get(0),nextBoe=bb.getNextNonBlocked());
  assertEquals(input.get(1),nextBoe=bb.getNextNonBlocked());
  assertEquals(input.get(2),nextBoe=bb.getNextNonBlocked());
  bb.processSuperstep(nextBoe);
  assertEquals(input.get(3),nextBoe=bb.getNextNonBlocked());
  assertEquals(input.get(4),nextBoe=bb.getNextNonBlocked());
  assertEquals(input.get(5),nextBoe=bb.getNextNonBlocked());
  bb.processSuperstep(nextBoe);
  assertEquals(input.get(6),nextBoe=bb.getNextNonBlocked());
  bb.cleanup();
}
