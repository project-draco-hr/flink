{
  final EmbeddedChannel ch=new EmbeddedChannel(new OutboundEnvelopeEncoder(),new InboundEnvelopeDecoder(this.bufferProviderBroker));
  when(this.bufferProviderBroker.getBufferProvider(anyJobId(),anyChannelId())).thenReturn(this.bufferProvider);
  when(this.bufferProvider.requestBuffer(anyInt())).thenReturn(null);
  when(this.bufferProvider.registerBufferAvailabilityListener(Matchers.<BufferAvailabilityListener>anyObject())).thenReturn(BufferAvailabilityRegistration.FAILED_BUFFER_POOL_DESTROYED);
  Envelope[] envelopes=new Envelope[]{nextEnvelope(true),nextEnvelope(),nextEnvelope()};
  Envelope[] expectedEnvelopes=new Envelope[]{envelopes[1],envelopes[2]};
  ByteBuf buf=encode(ch,envelopes);
  int bufferSize=envelopes[0].getBuffer().size();
{
    ByteBuf[] slices=slice(buf,OutboundEnvelopeEncoder.HEADER_SIZE + bufferSize);
    int refCount=slices[0].refCnt();
    decodeAndVerify(ch,slices[0]);
    Assert.assertEquals(refCount - 1,slices[0].refCnt());
    refCount=slices[1].refCnt();
    decodeAndVerify(ch,slices[1],expectedEnvelopes);
    Assert.assertEquals(refCount - 1,slices[1].refCnt());
  }
{
    ByteBuf[] slices=slice(buf,OutboundEnvelopeEncoder.HEADER_SIZE + bufferSize + 16);
    int refCount=slices[0].refCnt();
    decodeAndVerify(ch,slices[0]);
    Assert.assertEquals(refCount - 1,slices[0].refCnt());
    refCount=slices[1].refCnt();
    decodeAndVerify(ch,slices[1],expectedEnvelopes);
    Assert.assertEquals(refCount - 1,slices[1].refCnt());
  }
{
    ByteBuf[] slices=slice(buf,OutboundEnvelopeEncoder.HEADER_SIZE + bufferSize + OutboundEnvelopeEncoder.HEADER_SIZE);
    int refCount=slices[0].refCnt();
    decodeAndVerify(ch,slices[0],expectedEnvelopes[0]);
    Assert.assertEquals(refCount - 1,slices[0].refCnt());
    refCount=slices[1].refCnt();
    decodeAndVerify(ch,slices[1],expectedEnvelopes[1]);
    Assert.assertEquals(refCount - 1,slices[1].refCnt());
  }
{
    ByteBuf[] slices=slice(buf,OutboundEnvelopeEncoder.HEADER_SIZE + bufferSize - 32);
    int refCount=slices[0].refCnt();
    decodeAndVerify(ch,slices[0]);
    Assert.assertEquals(refCount - 1,slices[0].refCnt());
    refCount=slices[1].refCnt();
    decodeAndVerify(ch,slices[1],expectedEnvelopes);
    Assert.assertEquals(refCount - 1,slices[1].refCnt());
  }
{
    ByteBuf[] slices=slice(buf,OutboundEnvelopeEncoder.HEADER_SIZE + bufferSize - 32,16);
    int refCount=slices[0].refCnt();
    decodeAndVerify(ch,slices[0]);
    Assert.assertEquals(refCount - 1,slices[0].refCnt());
    refCount=slices[1].refCnt();
    decodeAndVerify(ch,slices[1]);
    Assert.assertEquals(refCount - 1,slices[1].refCnt());
    refCount=slices[2].refCnt();
    decodeAndVerify(ch,slices[2],expectedEnvelopes);
    Assert.assertEquals(refCount - 1,slices[2].refCnt());
  }
  Assert.assertEquals(1,buf.refCnt());
}
