{
  this.reader=reader;
  this.returnQueue=returnQueue;
  this.freeMemTarget=freeMemTarget;
  this.numRequestsRemaining=numBlocks;
  for (; !segments.isEmpty() && this.numRequestsRemaining > 0; numRequestsRemaining--) {
    this.reader.readBlock(segments.remove(segments.size() - 1));
  }
  while (!segments.isEmpty()) {
    freeMemTarget.add(segments.remove(segments.size() - 1));
  }
  this.numReturnsRemaining=numBlocks - 1;
  try {
    this.currentSegment=returnQueue.take();
    this.currentSegment.inputView.setPosition(PARTITION_BLOCK_HEADER_LEN);
    this.currentEndPos=this.currentSegment.getInt(PARTITION_BLOCK_SIZE_OFFSET);
  }
 catch (  InterruptedException iex) {
    throw new RuntimeException(iex);
  }
}
