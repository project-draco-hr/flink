{
  if (isInMemory()) {
    for (int k=0; k < this.numOverflowSegments; k++) {
      freeMemory.add(this.overflowSegments[k]);
    }
    this.overflowSegments=null;
    this.numOverflowSegments=0;
    this.nextOverflowBucket=0;
    for (int k=this.inMemoryBuffers.size() - 1; k >= 0; --k) {
      freeMemory.add(this.inMemoryBuffers.get(k));
    }
    this.inMemoryBuffers.clear();
    return 0;
  }
 else   if (this.probeBlockCounter == 1 && this.currentPartitionBuffer.outputView.getPosition() == PARTITION_BLOCK_HEADER_LEN) {
    freeMemory.add(this.currentPartitionBuffer);
    this.currentPartitionBuffer=null;
    this.probeSideChannel.close();
    this.buildSideChannel.deleteChannel();
    this.probeSideChannel.deleteChannel();
    return 0;
  }
 else {
    spillBuffer(this.currentPartitionBuffer,this.probeSideChannel);
    this.currentPartitionBuffer=null;
    this.probeSideChannel.close();
    spilledPartitions.add(this);
    return 1;
  }
}
