{
synchronized (this.closeLock) {
    if (this.closed) {
      return;
    }
    this.closed=true;
  }
  releaseTable();
  clearPartitions();
  for (int i=0; i < this.partitionsPending.size(); i++) {
    final Partition p=this.partitionsPending.get(i);
    p.buildSideChannel.deleteChannel();
    p.probeSideChannel.deleteChannel();
  }
  for (int i=0; i < this.numWriteBehindBuffers + this.writeBehindBuffersAvailable; i++) {
    try {
      this.availableMemory.add(this.writeBehindBuffers.take().dispose());
    }
 catch (    InterruptedException iex) {
      throw new RuntimeException("Hashtable closing was interrupted");
    }
  }
}
