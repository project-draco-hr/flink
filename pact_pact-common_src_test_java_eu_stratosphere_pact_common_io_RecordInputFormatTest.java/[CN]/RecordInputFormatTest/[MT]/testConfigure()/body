{
  try {
    Configuration config=new Configuration();
    config.setString(RecordInputFormat.FILE_PARAMETER_KEY,"file:///some/file/that/will/not/be/read");
    boolean validConfig=true;
    try {
      format.configure(config);
    }
 catch (    IllegalArgumentException iae) {
      validConfig=false;
    }
    assertFalse(validConfig);
    config.setInteger(RecordInputFormat.NUM_FIELDS_PARAMETER,2);
    validConfig=true;
    try {
      format.configure(config);
    }
 catch (    IllegalArgumentException iae) {
      validConfig=false;
    }
    assertFalse(validConfig);
    config.setClass(RecordInputFormat.FIELD_PARSER_PARAMETER_PREFIX + 0,DecimalTextIntParser.class);
    config.setClass(RecordInputFormat.FIELD_PARSER_PARAMETER_PREFIX + 1,DecimalTextIntParser.class);
    validConfig=true;
    try {
      format.configure(config);
    }
 catch (    IllegalArgumentException iae) {
      validConfig=false;
    }
    assertTrue(validConfig);
    config.setInteger(RecordInputFormat.NUM_FIELDS_PARAMETER,3);
    validConfig=true;
    try {
      format.configure(config);
    }
 catch (    IllegalArgumentException iae) {
      validConfig=false;
    }
    assertFalse(validConfig);
    config.setClass(RecordInputFormat.FIELD_PARSER_PARAMETER_PREFIX + 2,DecimalTextIntParser.class);
    config.setString(RecordInputFormat.FIELD_DELIMITER_PARAMETER,"||");
    validConfig=true;
    try {
      format.configure(config);
    }
 catch (    IllegalArgumentException iae) {
      validConfig=false;
    }
    assertFalse(validConfig);
    config.setString(RecordInputFormat.FIELD_DELIMITER_PARAMETER,"|");
    validConfig=true;
    try {
      format.configure(config);
    }
 catch (    IllegalArgumentException iae) {
      validConfig=false;
    }
    assertTrue(validConfig);
    config.setInteger(RecordInputFormat.TEXT_POSITION_PARAMETER_PREFIX + 1,0);
    validConfig=true;
    try {
      format.configure(config);
    }
 catch (    IllegalArgumentException iae) {
      validConfig=false;
    }
    assertFalse(validConfig);
    config.setInteger(RecordInputFormat.TEXT_POSITION_PARAMETER_PREFIX + 0,3);
    config.setInteger(RecordInputFormat.TEXT_POSITION_PARAMETER_PREFIX + 2,9);
    validConfig=true;
    try {
      format.configure(config);
    }
 catch (    IllegalArgumentException iae) {
      validConfig=false;
    }
    assertTrue(validConfig);
    config.setInteger(RecordInputFormat.RECORD_POSITION_PARAMETER_PREFIX + 1,0);
    validConfig=true;
    try {
      format.configure(config);
    }
 catch (    IllegalArgumentException iae) {
      validConfig=false;
    }
    assertFalse(validConfig);
    config.setInteger(RecordInputFormat.RECORD_POSITION_PARAMETER_PREFIX + 0,3);
    config.setInteger(RecordInputFormat.RECORD_POSITION_PARAMETER_PREFIX + 2,9);
    validConfig=true;
    try {
      format.configure(config);
    }
 catch (    IllegalArgumentException iae) {
      validConfig=false;
    }
    assertTrue(validConfig);
    config=new Configuration();
    config.setString(RecordInputFormat.FILE_PARAMETER_KEY,"file:///some/file/that/will/not/be/read");
    config.setString(RecordInputFormat.FIELD_DELIMITER_PARAMETER,"|");
    config.setInteger(RecordInputFormat.NUM_FIELDS_PARAMETER,2);
    config.setClass(RecordInputFormat.FIELD_PARSER_PARAMETER_PREFIX + 0,ConfigForwardCheckParser.class);
    config.setInteger(RecordInputFormat.TEXT_POSITION_PARAMETER_PREFIX + 0,0);
    config.setInteger(RecordInputFormat.RECORD_POSITION_PARAMETER_PREFIX + 0,0);
    config.setClass(RecordInputFormat.FIELD_PARSER_PARAMETER_PREFIX + 1,ConfigForwardCheckParser.class);
    config.setInteger(RecordInputFormat.TEXT_POSITION_PARAMETER_PREFIX + 1,1);
    config.setInteger(RecordInputFormat.RECORD_POSITION_PARAMETER_PREFIX + 1,1);
    config.setString("MY-PARSER-TEST-KEY-1","MY-PARSER-TEST-VALUE");
    config.setInteger("MY-PARSER-TEST-KEY-2",42);
    new RecordInputFormat().configure(config);
  }
 catch (  Exception ex) {
    Assert.fail("Test failed due to a " + ex.getClass().getSimpleName() + ": "+ ex.getMessage());
  }
}
