{
  if (hasBeenStopped()) {
    throw new RuntimeException("The FlinkYarnCluster has alread been stopped");
  }
  List<String> ret=new ArrayList<String>();
  while (true) {
    Future<Object> messageOptionFuture=ask(applicationClient,Messages.LocalGetYarnMessage$.MODULE$,akkaTimeout);
    Object messageOption=awaitUtil(messageOptionFuture,"Error getting new messages from Appliation Client");
    if (messageOption instanceof None$) {
      break;
    }
 else     if (messageOption instanceof org.apache.flink.yarn.Messages.YarnMessage) {
      Messages.YarnMessage msg=(Messages.YarnMessage)messageOption;
      ret.add("[" + msg.date() + "] "+ msg.message());
    }
 else {
      LOG.warn("LocalGetYarnMessage returned unexpected type: " + messageOption);
    }
  }
  return ret;
}
