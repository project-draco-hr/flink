{
  if (!isConnected) {
    throw new IllegalStateException("The cluster is not connected to the ApplicationMaster.");
  }
  if (hasBeenStopped()) {
    throw new RuntimeException("The FlinkYarnCluster has already been stopped");
  }
  Future<Object> clusterStatusOption=ask(applicationClient,YarnMessages.getLocalGetyarnClusterStatus(),akkaTimeout);
  Object clusterStatus;
  try {
    clusterStatus=Await.result(clusterStatusOption,akkaDuration);
  }
 catch (  Exception e) {
    throw new RuntimeException("Unable to get Cluster status from Application Client",e);
  }
  if (clusterStatus instanceof None$) {
    return null;
  }
 else   if (clusterStatus instanceof Some) {
    return (GetClusterStatusResponse)(((Some)clusterStatus).get());
  }
 else {
    throw new RuntimeException("Unexpected type: " + clusterStatus.getClass().getCanonicalName());
  }
}
