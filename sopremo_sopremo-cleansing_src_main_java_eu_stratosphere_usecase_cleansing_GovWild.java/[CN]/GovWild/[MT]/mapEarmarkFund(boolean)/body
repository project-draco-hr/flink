{
  if (simulate) {
    this.funds.add(new Source(PersistenceType.HDFS,String.format("%s/EarmarkFunds.json",this.outputDir)));
    return;
  }
  ObjectCreation fundProjection=new ObjectCreation();
  final BatchAggregationExpression batch=new BatchAggregationExpression();
  fundProjection.addMapping("id",new FunctionCall("format",new ConstantExpression("earmark%d"),new PathExpression(batch.add(CleansFunctions.FIRST),new ObjectAccess("earmarkId"))));
  fundProjection.addMapping("amount",batch.add(CleansFunctions.SUM,new TernaryExpression(new ObjectAccess("amount"),new ObjectAccess("amount"),new ConstantExpression(0))));
  fundProjection.addMapping("currency",new ConstantExpression("dollar"));
  ObjectCreation date=new ObjectCreation();
  date.addMapping("year",batch.add(CleansFunctions.FIRST,new ObjectAccess("enactedYear")));
  fundProjection.addMapping("date",date);
  fundProjection.addMapping("subject",new PathExpression(batch.add(CleansFunctions.FIRST),new ObjectAccess("shortDescription")));
  if (this.scrubbedEarmarks == null)   this.scrubEarmark(true);
  Grouping grouping=new Grouping(fundProjection,this.scrubbedEarmarks);
  grouping.withKeyProjection(new ObjectAccess("earmarkId"));
  this.funds.add(grouping);
  this.sinks.add(new Sink(PersistenceType.HDFS,String.format("%s/EarmarkFunds.json",this.outputDir),grouping));
}
