{
  if (simulate) {
    this.cluster[SPENDING][LEGAL_ENTITY]=new Source(this.getInternalInputFormat(),String.format("%s/LegalEntityCluster2.json",this.outputDir));
    return;
  }
  SimmetricFunction simmFunction=new SimmetricFunction(new JaroWinkler(),new PathExpression(new InputSelection(0),new ObjectAccess("names"),new ArrayAccess(0)),new PathExpression(new InputSelection(1),new ObjectAccess("names"),new ArrayAccess(0)));
  DisjunctPartitioning partitioning=new DisjunctPartitioning(new TernaryExpression(new AndExpression(new ObjectAccess("addresses"),new ComparativeExpression(new ConstantExpression(2),BinaryOperator.LESS_EQUAL,new FunctionCall("length",new PathExpression(new ObjectAccess("addresses"),new ArrayAccess(0),new ObjectAccess("zipCode"))))),new FunctionCall("substring",new PathExpression(new ObjectAccess("addresses"),new ArrayAccess(0),new ObjectAccess("zipCode")),new ConstantExpression(0),new ConstantExpression(2)),new ConstantExpression("")),new FunctionCall("extract",new ConstantExpression("([^ ])*"),new PathExpression(new ObjectAccess("names"),new ArrayAccess(0))));
  InterSourceRecordLinkage recordLinkage=new InterSourceRecordLinkage().withAlgorithm(partitioning).withSimilarityExpression(simmFunction).withThreshold(0.8).withLinkageMode(LinkageMode.ALL_CLUSTERS_FLAT).withInputs(this.fused[EARMARK][LEGAL_ENTITY],this.inputs[SPENDING][LEGAL_ENTITY]);
  recordLinkage.getRecordLinkageInput(0).setIdProjection(new ObjectAccess("id"));
  recordLinkage.getRecordLinkageInput(1).setIdProjection(new ObjectAccess("id"));
  this.cluster[SPENDING][LEGAL_ENTITY]=recordLinkage;
  this.sinks.add(new Sink(this.getInternalOutputFormat(),String.format("%s/LegalEntityCluster2.json",this.outputDir)).withInputs(recordLinkage));
}
