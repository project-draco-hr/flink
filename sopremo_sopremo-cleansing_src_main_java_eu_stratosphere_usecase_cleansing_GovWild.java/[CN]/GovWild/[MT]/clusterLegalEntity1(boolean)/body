{
  if (simulate) {
    this.cluster[EARMARK][LEGAL_ENTITY]=new Source(this.getInternalInputFormat(),String.format("%s/LegalEntityCluster1.json",this.outputDir));
    return;
  }
  SimmetricFunction simmFunction=new SimmetricFunction(new JaroWinkler(),new PathExpression(new InputSelection(0),new ObjectAccess("names"),new ArrayAccess(0)),new PathExpression(new InputSelection(1),new ObjectAccess("names"),new ArrayAccess(0)));
  InterSourceRecordLinkage recordLinkage=new InterSourceRecordLinkage().withAlgorithm(new Naive()).withDuplicateCondition(this.getDuplicateCondition(simmFunction,0.8)).withLinkageMode(LinkageMode.ALL_CLUSTERS_FLAT).withInputs(this.inputs[CONGRESS][LEGAL_ENTITY],this.inputs[EARMARK][LEGAL_ENTITY]);
  recordLinkage.getRecordLinkageInput(0).setIdProjection(new ObjectAccess("id"));
  recordLinkage.getRecordLinkageInput(1).setIdProjection(new ObjectAccess("id"));
  this.cluster[EARMARK][LEGAL_ENTITY]=recordLinkage;
  this.sinks.add(new Sink(this.getInternalOutputFormat(),String.format("%s/LegalEntityCluster1.json",this.outputDir)).withInputs(recordLinkage));
}
