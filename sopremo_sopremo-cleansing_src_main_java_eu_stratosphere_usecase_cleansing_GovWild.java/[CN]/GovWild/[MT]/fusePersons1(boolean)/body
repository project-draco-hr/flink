{
  if (simulate) {
    this.fused[EARMARK][PERSON]=new Source(this.getInternalInputFormat(),String.format("%s/Persons1.json",this.outputDir));
    return;
  }
  Selection links=new Selection().withInputs(this.cluster[EARMARK][PERSON]).withCondition(new ComparativeExpression(new FunctionCall("count",EvaluationExpression.VALUE),BinaryOperator.GREATER,new ConstantExpression(1)));
  Selection earmarksOnly=new Selection().withInputs(this.cluster[EARMARK][PERSON]).withCondition(new ComparativeExpression(new FunctionCall("count",EvaluationExpression.VALUE),BinaryOperator.EQUAL,new ConstantExpression(1)));
  ObjectCreation merge=new ObjectCreation();
  merge.addMapping(new ObjectCreation.CopyFields(new InputSelection(0)));
  merge.addMapping("funds",new PathExpression(new InputSelection(1),new ObjectAccess("enactedFunds")));
  Projection linksProjection=new Projection().withValueTransformation(merge).withInputs(links);
  Projection earmarkProjection=new Projection().withValueTransformation(new InputSelection(0)).withInputs(earmarksOnly);
  this.fused[EARMARK][PERSON]=new UnionAll().withInputs(linksProjection,earmarkProjection);
  this.sinks.add(new Sink(this.getInternalOutputFormat(),String.format("%s/Person1.json",this.outputDir)).withInputs(this.fused[EARMARK][PERSON]));
}
