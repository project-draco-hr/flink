{
  String key=redisSinkMapper.getKeyFromData(input);
  String value=redisSinkMapper.getValueFromData(input);
switch (redisCommand) {
case RPUSH:
    this.redisCommandsContainer.rpush(key,value);
  break;
case LPUSH:
this.redisCommandsContainer.lpush(key,value);
break;
case SADD:
this.redisCommandsContainer.sadd(key,value);
break;
case SET:
this.redisCommandsContainer.set(key,value);
break;
case PFADD:
this.redisCommandsContainer.pfadd(key,value);
break;
case PUBLISH:
this.redisCommandsContainer.publish(key,value);
break;
case ZADD:
this.redisCommandsContainer.zadd(this.additionalKey,value,key);
break;
case HSET:
this.redisCommandsContainer.hset(this.additionalKey,key,value);
break;
default :
throw new IllegalArgumentException("Cannot process such data type: " + redisCommand);
}
}
