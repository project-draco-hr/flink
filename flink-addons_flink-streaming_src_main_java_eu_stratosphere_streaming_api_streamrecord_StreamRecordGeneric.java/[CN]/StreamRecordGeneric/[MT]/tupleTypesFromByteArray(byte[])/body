{
  TypeInformation[] basicTypes=new TypeInformation[representation.length];
  for (int i=0; i < basicTypes.length; i++) {
switch (representation[i]) {
case 0:
      basicTypes[i]=BasicTypeInfo.BOOLEAN_TYPE_INFO;
    break;
case 1:
  basicTypes[i]=BasicTypeInfo.BYTE_TYPE_INFO;
break;
case 2:
basicTypes[i]=BasicTypeInfo.CHAR_TYPE_INFO;
break;
case 3:
basicTypes[i]=BasicTypeInfo.DOUBLE_TYPE_INFO;
break;
case 4:
basicTypes[i]=BasicTypeInfo.FLOAT_TYPE_INFO;
break;
case 5:
basicTypes[i]=BasicTypeInfo.INT_TYPE_INFO;
break;
case 6:
basicTypes[i]=BasicTypeInfo.LONG_TYPE_INFO;
break;
case 7:
basicTypes[i]=BasicTypeInfo.SHORT_TYPE_INFO;
break;
case 8:
basicTypes[i]=BasicTypeInfo.STRING_TYPE_INFO;
break;
case 9:
basicTypes[i]=BasicArrayTypeInfo.BOOLEAN_ARRAY_TYPE_INFO;
break;
case 10:
basicTypes[i]=BasicArrayTypeInfo.BYTE_ARRAY_TYPE_INFO;
break;
case 11:
basicTypes[i]=BasicArrayTypeInfo.CHAR_ARRAY_TYPE_INFO;
break;
case 12:
basicTypes[i]=BasicArrayTypeInfo.DOUBLE_ARRAY_TYPE_INFO;
break;
case 13:
basicTypes[i]=BasicArrayTypeInfo.FLOAT_ARRAY_TYPE_INFO;
break;
case 14:
basicTypes[i]=BasicArrayTypeInfo.INT_ARRAY_TYPE_INFO;
break;
case 15:
basicTypes[i]=BasicArrayTypeInfo.LONG_ARRAY_TYPE_INFO;
break;
case 16:
basicTypes[i]=BasicArrayTypeInfo.SHORT_ARRAY_TYPE_INFO;
break;
case 17:
basicTypes[i]=BasicArrayTypeInfo.STRING_ARRAY_TYPE_INFO;
break;
default :
basicTypes[i]=BasicTypeInfo.STRING_TYPE_INFO;
break;
}
}
return basicTypes;
}
