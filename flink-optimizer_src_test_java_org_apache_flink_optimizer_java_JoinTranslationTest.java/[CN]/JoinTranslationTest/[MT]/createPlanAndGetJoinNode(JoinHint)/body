{
  ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();
  DataSet<Long> i1=env.generateSequence(1,1000);
  DataSet<Long> i2=env.generateSequence(1,1000);
  i1.join(i2,hint).where(new IdentityKeySelector<Long>()).equalTo(new IdentityKeySelector<Long>()).output(new DiscardingOutputFormat<Tuple2<Long,Long>>());
  Plan plan=env.createProgramPlan();
  plan.accept(new Visitor<Operator<?>>(){
    @Override public boolean preVisit(    Operator<?> visitable){
      if (visitable instanceof GenericDataSourceBase) {
        GenericDataSourceBase<?,?> source=(GenericDataSourceBase<?,?>)visitable;
        setSourceStatistics(source,10000000,1000);
      }
      return true;
    }
    @Override public void postVisit(    Operator<?> visitable){
    }
  }
);
  OptimizedPlan op=compileWithStats(plan);
  return (DualInputPlanNode)((SinkPlanNode)op.getDataSinks().iterator().next()).getInput().getSource();
}
