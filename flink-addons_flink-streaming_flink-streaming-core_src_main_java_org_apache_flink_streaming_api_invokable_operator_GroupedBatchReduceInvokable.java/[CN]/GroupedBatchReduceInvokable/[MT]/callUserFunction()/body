{
  Iterator<Map<Object,OUT>> reducedIterator=intermediateValues.getBufferIterator();
  Map<Object,OUT> reducedValues=reducedIterator.next();
  while (reducedIterator.hasNext()) {
    Map<Object,OUT> nextValues=reducedIterator.next();
    for (    Entry<Object,OUT> entry : nextValues.entrySet()) {
      OUT currentValue=reducedValues.get(entry.getKey());
      if (currentValue == null) {
        reducedValues.put(entry.getKey(),entry.getValue());
      }
 else {
        OUT next=typeSerializer.copy(entry.getValue(),reduceReuse);
        reducedValues.put(entry.getKey(),reducer.reduce(currentValue,next));
      }
    }
  }
  for (  OUT value : reducedValues.values()) {
    collector.collect(value);
  }
}
