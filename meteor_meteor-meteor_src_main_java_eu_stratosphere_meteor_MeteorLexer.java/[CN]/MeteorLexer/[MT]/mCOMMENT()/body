{
  try {
    int _type=COMMENT;
    int _channel=DEFAULT_TOKEN_CHANNEL;
    int alt5=2;
    int LA5_0=input.LA(1);
    if ((LA5_0 == '/')) {
      int LA5_1=input.LA(2);
      if ((LA5_1 == '/')) {
        alt5=1;
      }
 else       if ((LA5_1 == '*')) {
        alt5=2;
      }
 else {
        NoViableAltException nvae=new NoViableAltException("",5,1,input);
        throw nvae;
      }
    }
 else {
      NoViableAltException nvae=new NoViableAltException("",5,0,input);
      throw nvae;
    }
switch (alt5) {
case 1:
{
        match("//");
        loop2:         do {
          int alt2=2;
          int LA2_0=input.LA(1);
          if (((LA2_0 >= '\u0000' && LA2_0 <= '\t') || (LA2_0 >= '\u000B' && LA2_0 <= '\f') || (LA2_0 >= '\u000E' && LA2_0 <= '\uFFFF'))) {
            alt2=1;
          }
switch (alt2) {
case 1:
{
              if ((input.LA(1) >= '\u0000' && input.LA(1) <= '\t') || (input.LA(1) >= '\u000B' && input.LA(1) <= '\f') || (input.LA(1) >= '\u000E' && input.LA(1) <= '\uFFFF')) {
                input.consume();
              }
 else {
                MismatchedSetException mse=new MismatchedSetException(null,input);
                recover(mse);
                throw mse;
              }
            }
          break;
default :
        break loop2;
    }
  }
 while (true);
  int alt3=2;
  int LA3_0=input.LA(1);
  if ((LA3_0 == '\r')) {
    alt3=1;
  }
switch (alt3) {
case 1:
{
      match('\r');
    }
  break;
}
match('\n');
_channel=HIDDEN;
}
break;
case 2:
{
match("/*");
loop4: do {
int alt4=2;
int LA4_0=input.LA(1);
if ((LA4_0 == '*')) {
int LA4_1=input.LA(2);
if ((LA4_1 == '/')) {
alt4=2;
}
 else if (((LA4_1 >= '\u0000' && LA4_1 <= '.') || (LA4_1 >= '0' && LA4_1 <= '\uFFFF'))) {
alt4=1;
}
}
 else if (((LA4_0 >= '\u0000' && LA4_0 <= ')') || (LA4_0 >= '+' && LA4_0 <= '\uFFFF'))) {
alt4=1;
}
switch (alt4) {
case 1:
{
matchAny();
}
break;
default :
break loop4;
}
}
 while (true);
match("*/");
_channel=HIDDEN;
}
break;
}
state.type=_type;
state.channel=_channel;
}
  finally {
}
}
