{
  final String ACC_NAME="test_accumulator";
  try {
    ExecutionEnvironment env=ExecutionEnvironment.createRemoteEnvironment("localhost",cluster.getLeaderRPCPort());
    env.setParallelism(6);
    env.getConfig().disableSysoutLogging();
    env.generateSequence(1,1000000).rebalance().flatMap(new RichFlatMapFunction<Long,Long>(){
      private LongCounter counter;
      @Override public void open(      Configuration parameters){
        counter=getRuntimeContext().getLongCounter(ACC_NAME);
      }
      @Override public void flatMap(      Long value,      Collector<Long> out){
        counter.add(1L);
      }
    }
).output(new DiscardingOutputFormat<Long>());
    JobExecutionResult result=env.execute();
    assertEquals(1000000L,result.getAllAccumulatorResults().get(ACC_NAME));
  }
 catch (  Exception e) {
    e.printStackTrace();
    fail(e.getMessage());
  }
}
