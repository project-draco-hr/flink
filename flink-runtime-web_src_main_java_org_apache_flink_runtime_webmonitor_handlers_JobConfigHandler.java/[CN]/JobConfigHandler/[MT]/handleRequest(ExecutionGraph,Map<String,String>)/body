{
  StringWriter writer=new StringWriter();
  JsonGenerator gen=JsonFactory.jacksonFactory.createGenerator(writer);
  gen.writeStartObject();
  gen.writeStringField("jid",graph.getJobID().toString());
  gen.writeStringField("name",graph.getJobName());
  ExecutionConfig ec=graph.getExecutionConfig();
  if (ec != null) {
    gen.writeObjectFieldStart("execution-config");
    gen.writeStringField("execution-mode",ec.getExecutionMode().name());
    final String restartStrategyDescription=ec.getRestartStrategy() != null ? ec.getRestartStrategy().getDescription() : "default";
    gen.writeStringField("restart-strategy",restartStrategyDescription);
    gen.writeNumberField("job-parallelism",ec.getParallelism());
    gen.writeBooleanField("object-reuse-mode",ec.isObjectReuseEnabled());
    ExecutionConfig.GlobalJobParameters uc=ec.getGlobalJobParameters();
    if (uc != null) {
      Map<String,String> ucVals=uc.toMap();
      if (ucVals != null) {
        gen.writeObjectFieldStart("user-config");
        for (        Map.Entry<String,String> ucVal : ucVals.entrySet()) {
          gen.writeStringField(ucVal.getKey(),ucVal.getValue());
        }
        gen.writeEndObject();
      }
    }
    gen.writeEndObject();
  }
  gen.writeEndObject();
  gen.close();
  return writer.toString();
}
