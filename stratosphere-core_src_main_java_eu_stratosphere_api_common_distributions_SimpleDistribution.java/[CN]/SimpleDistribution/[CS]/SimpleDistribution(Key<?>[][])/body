{
  if (bucketBoundaries == null) {
    throw new IllegalArgumentException("Bucket boundaries must not be null.");
  }
  if (bucketBoundaries.length == 0) {
    throw new IllegalArgumentException("Bucket boundaries must not be empty.");
  }
  dim=bucketBoundaries[0].length;
  Class<? extends Key<?>>[] types=new Class[dim];
  for (int i=0; i < dim; i++) {
    types[i]=(Class<? extends Key<?>>)bucketBoundaries[0][i].getClass();
  }
  for (int i=1; i < bucketBoundaries.length; i++) {
    if (bucketBoundaries[i].length != dim) {
      throw new IllegalArgumentException("All bucket boundaries must have the same dimensionality.");
    }
    for (int d=0; d < dim; d++) {
      if (types[d] != bucketBoundaries[i][d].getClass()) {
        throw new IllegalArgumentException("The bucket boundaries are of different class types.");
      }
    }
  }
  boundaries=bucketBoundaries;
}
