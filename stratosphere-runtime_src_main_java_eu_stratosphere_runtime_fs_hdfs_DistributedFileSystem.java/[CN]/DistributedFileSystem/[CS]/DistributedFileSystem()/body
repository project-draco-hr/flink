{
  this.conf=new Configuration();
  final String hdfsDefaultPath=GlobalConfiguration.getString(ConfigConstants.HDFS_DEFAULT_CONFIG,null);
  if (hdfsDefaultPath != null) {
    this.conf.addResource(new org.apache.hadoop.fs.Path(hdfsDefaultPath));
  }
 else {
    LOG.debug("Cannot find hdfs-default configuration file");
  }
  final String hdfsSitePath=GlobalConfiguration.getString(ConfigConstants.HDFS_SITE_CONFIG,null);
  if (hdfsSitePath != null) {
    conf.addResource(new org.apache.hadoop.fs.Path(hdfsSitePath));
  }
 else {
    LOG.debug("Cannot find hdfs-site configuration file");
  }
  String[] possibleHadoopConfPaths=new String[4];
  possibleHadoopConfPaths[0]=GlobalConfiguration.getString(ConfigConstants.PATH_HADOOP_CONFIG,null);
  possibleHadoopConfPaths[1]=System.getenv("HADOOP_CONF_DIR");
  if (System.getenv("HADOOP_HOME") != null) {
    possibleHadoopConfPaths[2]=System.getenv("HADOOP_HOME") + "/conf";
    possibleHadoopConfPaths[3]=System.getenv("HADOOP_HOME") + "/etc/hadoop";
  }
  for (int i=0; i < possibleHadoopConfPaths.length; i++) {
    if (possibleHadoopConfPaths[i] == null) {
      continue;
    }
    if (new File(possibleHadoopConfPaths[i]).exists()) {
      if (new File(possibleHadoopConfPaths[i] + "/core-site.xml").exists()) {
        conf.addResource(new org.apache.hadoop.fs.Path(possibleHadoopConfPaths[i] + "/core-site.xml"));
        LOG.debug("Adding " + possibleHadoopConfPaths[i] + "/core-site.xml to hadoop configuration");
      }
      if (new File(possibleHadoopConfPaths[i] + "/hdfs-site.xml").exists()) {
        conf.addResource(new org.apache.hadoop.fs.Path(possibleHadoopConfPaths[i] + "/hdfs-site.xml"));
        LOG.debug("Adding " + possibleHadoopConfPaths[i] + "/hdfs-site.xml to hadoop configuration");
      }
    }
  }
  if (conf.get(HDFS_IMPLEMENTATION_KEY,null) == null) {
    conf.set(HDFS_IMPLEMENTATION_KEY,"org.apache.hadoop.hdfs.DistributedFileSystem");
  }
  Class<?> clazz=null;
  try {
    Method newApi=org.apache.hadoop.fs.FileSystem.class.getMethod("getFileSystemClass",String.class,org.apache.hadoop.conf.Configuration.class);
    clazz=(Class<?>)newApi.invoke(null,"hdfs",conf);
  }
 catch (  Exception e) {
  }
  if (clazz == null) {
    clazz=conf.getClass(HDFS_IMPLEMENTATION_KEY,null);
    if (clazz == null) {
      this.fs=org.apache.hadoop.fs.FileSystem.get(conf);
    }
  }
 else {
    try {
      this.fs=(org.apache.hadoop.fs.FileSystem)clazz.newInstance();
    }
 catch (    InstantiationException e) {
      throw new IOException("InstantiationException occured: " + StringUtils.stringifyException(e));
    }
catch (    IllegalAccessException e) {
      throw new IOException("IllegalAccessException occured: " + StringUtils.stringifyException(e));
    }
  }
}
