{
  int numInputs=this.getInputOperators().size();
  PactModule module=new PactModule(numInputs,1);
  if (isWithSetSemantic()) {
    Contract leftInput=SopremoUtil.addKeyExtraction(module,getSetKeyExtractor(0),context);
    for (int index=1; index < numInputs; index++) {
      Contract rightInput=SopremoUtil.addKeyExtraction(module,getSetKeyExtractor(index),context);
      CoGroupContract<PactJsonObject.Key,PactJsonObject,PactJsonObject,PactNull,PactJsonObject> union=new CoGroupContract<PactJsonObject.Key,PactJsonObject,PactJsonObject,PactNull,PactJsonObject>(SetUnion.class);
      union.setFirstInput(leftInput);
      union.setSecondInput(rightInput);
      SopremoUtil.setTransformationAndContext(union.getStubParameters(),null,context);
      leftInput=union;
    }
    module.getOutput(0).setInput(leftInput);
  }
 else {
    Contract leftInput=module.getInput(0);
    for (int index=1; index < numInputs; index++) {
      Contract rightInput=module.getInput(index);
      CoGroupContract<PactNull,PactJsonObject,PactJsonObject,PactNull,PactJsonObject> union=new CoGroupContract<PactNull,PactJsonObject,PactJsonObject,PactNull,PactJsonObject>(BagUnion.class);
      union.setFirstInput(leftInput);
      union.setSecondInput(rightInput);
      SopremoUtil.setTransformationAndContext(union.getStubParameters(),null,context);
      leftInput=union;
    }
    module.getOutput(0).setInput(leftInput);
  }
  return module;
}
