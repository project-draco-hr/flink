{
  super.initEnvironment(MEMORY_MANAGER_SIZE,NETWORK_BUFFER_SIZE);
  super.addInput(new InfiniteInputIterator(),0);
  final DataSinkTask<Record> testTask=new DataSinkTask<>();
  Configuration stubParams=new Configuration();
  super.getTaskConfig().setStubParameters(stubParams);
  super.registerFileOutputTask(testTask,MockOutputFormat.class,new File(tempTestPath).toURI().toString());
  Thread taskRunner=new Thread(){
    @Override public void run(){
      try {
        testTask.invoke();
      }
 catch (      Exception ie) {
        ie.printStackTrace();
        Assert.fail("Task threw exception although it was properly canceled");
      }
    }
  }
;
  taskRunner.start();
  File tempTestFile=new File(this.tempTestPath);
  long deadline=System.currentTimeMillis() + 60000;
  while (!tempTestFile.exists() && System.currentTimeMillis() < deadline) {
    Thread.sleep(10);
  }
  assertTrue("Task did not create file within 60 seconds",tempTestFile.exists());
  Thread.sleep(500);
  testTask.cancel();
  taskRunner.interrupt();
  taskRunner.join();
  assertFalse("Temp output file has not been removed",tempTestFile.exists());
}
