{
  LOG.info("recovery running");
  if (this.failedVertices.isEmpty()) {
    LOG.error("No failed vertices to recover");
  }
  Iterator<ExecutionVertex> vertexIter=this.failedVertices.iterator();
  while (vertexIter.hasNext()) {
    ExecutionVertex failed=vertexIter.next();
    List<ExecutionVertex> restart=findRestarts(failed);
    Iterator<ExecutionVertex> restartIterator=restart.iterator();
    while (restartIterator.hasNext()) {
      ExecutionVertex vertex=restartIterator.next();
      if (!vertex.equals(failed)) {
        LOG.info("---------------");
        LOG.info("Restarting " + vertex.getName());
        vertex.getAllocatedResource().getInstance().restart(vertex.getID());
        LOG.info("---------------");
      }
    }
    Iterator<ExecutionVertex> checkpointIterator=this.globalConsistentCheckpoint.iterator();
    while (checkpointIterator.hasNext()) {
      ExecutionVertex checkpoint=checkpointIterator.next();
      AbstractInstance instance=checkpoint.getAllocatedResource().getInstance();
      instance.recoverAll(checkpoint.getEnvironment().getOutputGate(0).getOutputChannel(0).getID());
    }
    LOG.info("Finished recovery for " + failed);
  }
  this.job.executionStateChanged(null,ExecutionState.RERUNNING,null);
  LOG.info("Recovery Finsihed");
}
