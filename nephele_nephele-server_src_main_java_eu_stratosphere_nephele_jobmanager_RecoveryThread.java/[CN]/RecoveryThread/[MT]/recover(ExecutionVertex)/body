{
  List<CheckpointReplayResult> replayCheckpoints=new ArrayList<CheckpointReplayResult>();
  LOG.info("Staring Recovery for " + failed);
  final List<ExecutionVertex> restart=findRestarts(failed);
  Iterator<ExecutionVertex> restartIterator=restart.iterator();
  while (restartIterator.hasNext()) {
    ExecutionVertex vertex=restartIterator.next();
    if (vertex.getID() != failed.getID()) {
      try {
        vertex.getAllocatedResource().getInstance().restartTask(vertex.getID(),this.job.getJobConfiguration(),vertex.getEnvironment(),vertex.constructInitialActiveOutputChannelsSet());
      }
 catch (      IOException e) {
        e.printStackTrace();
        this.job.executionStateChanged(this.job.getJobID(),null,ExecutionState.FAILED,null);
        return false;
      }
    }
  }
  try {
    failed.getAllocatedResource().getInstance().submitTask(failed.getID(),this.job.getJobConfiguration(),failed.getEnvironment(),failed.constructInitialActiveOutputChannelsSet());
  }
 catch (  IOException e1) {
    e1.printStackTrace();
    this.job.executionStateChanged(this.job.getJobID(),null,ExecutionState.FAILED,null);
    return false;
  }
  List<AbstractInstance> instances=new SerializableArrayList<AbstractInstance>();
  for (  ExecutionVertexID id : this.globalConsistentCheckpoint) {
    AbstractInstance instance=this.job.getVertexByID(id).getAllocatedResource().getInstance();
    if (!instances.contains(instance)) {
      instances.add(instance);
    }
  }
  Iterator<AbstractInstance> instanceIterator=instances.iterator();
  while (instanceIterator.hasNext()) {
    try {
      AbstractInstance instance=instanceIterator.next();
      replayCheckpoints.addAll(instance.replayCheckpoints(this.globalConsistentCheckpoint));
    }
 catch (    IOException e) {
      e.printStackTrace();
      this.job.executionStateChanged(this.job.getJobID(),null,ExecutionState.FAILED,null);
      return false;
    }
  }
  for (  CheckpointReplayResult replayResult : replayCheckpoints) {
    if (replayResult.getReturnCode() == ReturnCode.ERROR) {
      LOG.info("Replay of Checkpoints return Error " + replayResult.getDescription());
      this.job.executionStateChanged(this.job.getJobID(),null,ExecutionState.FAILED,null);
      return false;
    }
  }
  LOG.info("FINISHED RECOVERY for " + failed.getName());
  this.job.executionStateChanged(this.job.getJobID(),failed.getID(),ExecutionState.RERUNNING,null);
  return true;
}
