{
  for (int i=0; i < PARALLELISM; i++) {
    for (    Long value : MinEvictingQueueSink.queues[i]) {
      Assert.assertTrue("Value different from 1 found, was " + value + ".",value == 1);
    }
  }
  for (int i=0; i < PARALLELISM; i++) {
    long prevCount=NUM_INPUT - NUM_OUTPUT;
    long sum=prevCount * (prevCount + 1) / 2;
    while (!SumEvictingQueueSink.queues[i].isEmpty()) {
      sum+=++prevCount;
      Long value=SumEvictingQueueSink.queues[i].remove();
      Assert.assertTrue("Unexpected reduce value " + value + " instead of "+ sum+ ".",value == sum);
    }
  }
  for (int i=0; i < PARALLELISM; i++) {
    long prevCount=NUM_INPUT - NUM_OUTPUT;
    long sum=prevCount * (prevCount + 1) / 2;
    while (!FoldEvictingQueueSink.queues[i].isEmpty()) {
      sum+=++prevCount;
      Long value=FoldEvictingQueueSink.queues[i].remove();
      Assert.assertTrue("Unexpected fold value " + value + " instead of "+ sum+ ".",value == sum);
    }
  }
}
