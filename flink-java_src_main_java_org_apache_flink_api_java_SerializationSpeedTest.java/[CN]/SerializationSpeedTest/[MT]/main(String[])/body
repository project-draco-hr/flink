{
  final long RUNS=1000000000L;
  final RuntimeMXBean bean=ManagementFactory.getRuntimeMXBean();
  String jvm=bean.getVmName() + " - " + bean.getVmVendor()+ " - "+ bean.getSpecVersion()+ '/'+ bean.getVmVersion();
  System.err.println("Jvm info : " + jvm);
  WC word0=new WC(14,"Hallo");
  WC word1=new WC(3,"Hola");
  System.err.println("warming up");
  for (long i=0; i < 100000000; i++) {
    compareCodeGenPublicFields(word0,word1);
    compareCodeGenMethods(word0,word1);
    compareReflective(word0,word1);
  }
  System.err.println("Code gen public fields");
  long startTime=System.currentTimeMillis();
  for (long i=0; i < RUNS; i++) {
    int a=compareCodeGenPublicFields(word0,word1);
    if (a == 0) {
      System.err.println("hah");
    }
  }
  long stopTime=System.currentTimeMillis();
  long elapsedTimeGen=stopTime - startTime;
  System.err.println(elapsedTimeGen);
  System.err.println("Code gen methods");
  startTime=System.currentTimeMillis();
  for (long i=0; i < RUNS; i++) {
    int a=compareCodeGenPublicFields(word0,word1);
    if (a == 0) {
      System.err.println("hah");
    }
  }
  stopTime=System.currentTimeMillis();
  long elapsedTimeGenMethods=stopTime - startTime;
  System.err.println(elapsedTimeGenMethods);
  System.err.println("Reflection");
  startTime=System.currentTimeMillis();
  for (long i=0; i < RUNS; i++) {
    int a=compareReflective(word0,word1);
    if (a == 0) {
      System.err.println("hah");
    }
  }
  stopTime=System.currentTimeMillis();
  long elapsedTimeRef=stopTime - startTime;
  System.err.println(elapsedTimeRef);
  System.err.println("Factor vs public = " + (elapsedTimeRef / (float)elapsedTimeGen));
  System.err.println("Factor vs methods = " + (elapsedTimeRef / (float)elapsedTimeGenMethods));
}
