{
  GlobalProperties gp=source.getGlobalPropertiesForParent(target);
switch (shipMode.type()) {
case BROADCAST:
    gp.reset();
  break;
case PARTITION_RANGE:
gp.setPartitioning(PartitionProperty.RANGE_PARTITIONED,((PartitionShipStrategy)shipMode).getPartitionFields());
gp.setOrdering(null);
break;
case PARTITION_HASH:
gp.setPartitioning(PartitionProperty.HASH_PARTITIONED,((PartitionShipStrategy)shipMode).getPartitionFields());
gp.setOrdering(null);
break;
case FORWARD:
if (source.getDegreeOfParallelism() > target.getDegreeOfParallelism()) {
gp.setOrdering(null);
}
if (gp.getPartitioning() == PartitionProperty.NONE) {
if (source.getUniqueFields().size() > 0) {
FieldList partitionedFields=new FieldList();
for (Integer field : source.getUniqueFields().iterator().next()) {
partitionedFields.add(field);
}
gp.setPartitioning(PartitionProperty.ANY,partitionedFields);
}
}
break;
case NONE:
throw new CompilerException("Cannot determine properties after connection, id shipping strategy is not set.");
case SFR:
default :
throw new CompilerException("Unsupported shipping strategy: " + shipMode.name());
}
return gp;
}
