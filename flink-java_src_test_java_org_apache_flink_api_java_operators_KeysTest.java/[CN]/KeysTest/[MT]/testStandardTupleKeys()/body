{
  TupleTypeInfo<Tuple7<String,String,String,String,String,String,String>> typeInfo=new TupleTypeInfo<Tuple7<String,String,String,String,String,String,String>>(BasicTypeInfo.STRING_TYPE_INFO,BasicTypeInfo.STRING_TYPE_INFO,BasicTypeInfo.STRING_TYPE_INFO,BasicTypeInfo.STRING_TYPE_INFO,BasicTypeInfo.STRING_TYPE_INFO,BasicTypeInfo.STRING_TYPE_INFO,BasicTypeInfo.STRING_TYPE_INFO);
  ExpressionKeys<Tuple7<String,String,String,String,String,String,String>> ek;
  for (int i=1; i < 8; i++) {
    int[] ints=new int[i];
    for (int j=0; j < i; j++) {
      ints[j]=j;
    }
    int[] inInts=Arrays.copyOf(ints,ints.length);
    ek=new ExpressionKeys<Tuple7<String,String,String,String,String,String,String>>(inInts,typeInfo);
    Assert.assertArrayEquals(ints,ek.computeLogicalKeyPositions());
    Assert.assertEquals(ints.length,ek.computeLogicalKeyPositions().length);
    ArrayUtils.reverse(ints);
    inInts=Arrays.copyOf(ints,ints.length);
    ek=new ExpressionKeys<Tuple7<String,String,String,String,String,String,String>>(inInts,typeInfo);
    Assert.assertArrayEquals(ints,ek.computeLogicalKeyPositions());
    Assert.assertEquals(ints.length,ek.computeLogicalKeyPositions().length);
  }
}
