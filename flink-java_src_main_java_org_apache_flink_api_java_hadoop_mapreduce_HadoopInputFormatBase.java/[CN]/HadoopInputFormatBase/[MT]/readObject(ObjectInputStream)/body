{
  super.read(in);
  String hadoopInputFormatClassName=in.readUTF();
  String keyClassName=in.readUTF();
  String valueClassName=in.readUTF();
  org.apache.hadoop.conf.Configuration configuration=new org.apache.hadoop.conf.Configuration();
  configuration.readFields(in);
  if (this.configuration == null) {
    this.configuration=configuration;
  }
  try {
    this.mapreduceInputFormat=(org.apache.hadoop.mapreduce.InputFormat<K,V>)Class.forName(hadoopInputFormatClassName,true,Thread.currentThread().getContextClassLoader()).newInstance();
  }
 catch (  Exception e) {
    throw new RuntimeException("Unable to instantiate the hadoop input format",e);
  }
  try {
    this.keyClass=(Class<K>)Class.forName(keyClassName,true,Thread.currentThread().getContextClassLoader());
  }
 catch (  Exception e) {
    throw new RuntimeException("Unable to find key class.",e);
  }
  try {
    this.valueClass=(Class<V>)Class.forName(valueClassName,true,Thread.currentThread().getContextClassLoader());
  }
 catch (  Exception e) {
    throw new RuntimeException("Unable to find value class.",e);
  }
}
