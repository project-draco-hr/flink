{
  List<Integer> batchSizesOfNotPartitioned=new ArrayList<Integer>();
  List<Integer> batchSizesOfPartitioned=new ArrayList<Integer>();
  batchSizesOfPartitioned.add(2);
  batchSizesOfPartitioned.add(2);
  List<Integer> parallelismOfOutput=new ArrayList<Integer>();
  parallelismOfOutput.add(2);
  parallelismOfOutput.add(2);
  int keyPosition=0;
  long batchTimeout=1000;
  int channelID=1;
  List<RecordWriter<StreamRecord>> fOut=new ArrayList<RecordWriter<StreamRecord>>();
  MockRecordWriter rw1=MockRecordWriterFactory.create();
  MockRecordWriter rw2=MockRecordWriterFactory.create();
  fOut.add(rw1);
  fOut.add(rw2);
  collector=new StreamCollector2<Tuple>(batchSizesOfNotPartitioned,batchSizesOfPartitioned,parallelismOfOutput,keyPosition,batchTimeout,channelID,null,fOut,fOut);
  Tuple1<Integer> t=new Tuple1<Integer>();
  StreamCollector<Tuple> sc1=new StreamCollector<Tuple>(1,batchTimeout,channelID,null);
  t.f0=0;
  collector.collect(t);
  t.f0=1;
  collector.collect(t);
  t.f0=0;
  collector.collect(t);
  System.out.println(rw1.emittedRecords);
  System.out.println(rw2.emittedRecords);
  t.f0=1;
  collector.collect(t);
}
