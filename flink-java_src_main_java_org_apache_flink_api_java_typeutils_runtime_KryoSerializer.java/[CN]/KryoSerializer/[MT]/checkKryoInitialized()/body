{
  if (this.kryo == null) {
    this.kryo=new ScalaKryoInstantiator().newKryo();
    kryo.addDefaultSerializer(Throwable.class,new JavaSerializer());
    kryo.register(type);
    for (    Class<?> type : registeredTypes) {
      kryo.register(type);
    }
    for (    Map.Entry<Class<?>,Class<? extends Serializer<?>>> e : registeredSerializersClasses.entrySet()) {
      Class<?> typeClass=e.getKey();
      Class<? extends Serializer<?>> serializerClass=e.getValue();
      Serializer<?> serializer=ReflectionSerializerFactory.makeSerializer(kryo,serializerClass,typeClass);
      kryo.register(typeClass,serializer);
    }
    for (    Map.Entry<Class<?>,Serializer<?>> e : registeredSerializers.entrySet()) {
      kryo.register(e.getKey(),e.getValue());
    }
    kryo.setRegistrationRequired(false);
    kryo.setClassLoader(Thread.currentThread().getContextClassLoader());
  }
}
