{
  OperatorStateStore operatorStateStore=mock(OperatorStateStore.class);
  TestingListState<Serializable> expectedState=new TestingListState<>();
  expectedState.add(Tuple2.of(new KafkaTopicPartition("abc",13),16768L));
  expectedState.add(Tuple2.of(new KafkaTopicPartition("def",7),987654321L));
  TestingListState<Serializable> listState=new TestingListState<>();
  FlinkKafkaConsumerBase<String> consumer=getConsumer(null,new LinkedMap(),true);
  when(operatorStateStore.getSerializableListState(Matchers.any(String.class))).thenReturn(expectedState);
  consumer.initializeState(operatorStateStore);
  when(operatorStateStore.getSerializableListState(Matchers.any(String.class))).thenReturn(listState);
  consumer.prepareSnapshot(17L,17L);
  Set<Serializable> expected=new HashSet<>();
  for (  Serializable serializable : expectedState.get()) {
    expected.add(serializable);
  }
  int counter=0;
  for (  Serializable serializable : listState.get()) {
    assertTrue(expected.contains(serializable));
    counter++;
  }
  assertEquals(expected.size(),counter);
}
