{
  try {
    new DummyFlinkKafkaConsumer<>().assignTimestampsAndWatermarks((AssignerWithPeriodicWatermarks<Object>)null);
    fail();
  }
 catch (  NullPointerException ignored) {
  }
  try {
    new DummyFlinkKafkaConsumer<>().assignTimestampsAndWatermarks((AssignerWithPunctuatedWatermarks<Object>)null);
    fail();
  }
 catch (  NullPointerException ignored) {
  }
  @SuppressWarnings("unchecked") final AssignerWithPeriodicWatermarks<String> periodicAssigner=mock(AssignerWithPeriodicWatermarks.class);
  @SuppressWarnings("unchecked") final AssignerWithPunctuatedWatermarks<String> punctuatedAssigner=mock(AssignerWithPunctuatedWatermarks.class);
  DummyFlinkKafkaConsumer<String> c1=new DummyFlinkKafkaConsumer<>();
  c1.assignTimestampsAndWatermarks(periodicAssigner);
  try {
    c1.assignTimestampsAndWatermarks(punctuatedAssigner);
    fail();
  }
 catch (  IllegalStateException ignored) {
  }
  DummyFlinkKafkaConsumer<String> c2=new DummyFlinkKafkaConsumer<>();
  c2.assignTimestampsAndWatermarks(punctuatedAssigner);
  try {
    c2.assignTimestampsAndWatermarks(periodicAssigner);
    fail();
  }
 catch (  IllegalStateException ignored) {
  }
}
