{
  if (subGeneratorLists.isEmpty()) {
    return null;
  }
  final long globalWatermark=getWatermark();
  final int choice=randomGenerator.choseRandomIndex(subGeneratorLists);
  for (int i=choice; i < choice + subGeneratorLists.size(); ++i) {
    final int index=i % subGeneratorLists.size();
    EventGenerator<K,E> subGenerator=subGeneratorLists.get(index);
    if (subGenerator.canGenerateEventAtWatermark(globalWatermark)) {
      E event=subGenerator.generateEvent(globalWatermark);
      if (!subGenerator.hasMoreEvents()) {
        if (generatorFactory.getProducedGeneratorsCount() < sessionCountLimit) {
          subGeneratorLists.set(index,generatorFactory.newSessionGeneratorForKey(randomGenerator.choseRandomElement(sessionKeys),getWatermark()));
        }
 else {
          subGeneratorLists.remove(index);
        }
      }
      return event;
    }
  }
  throw new IllegalStateException("Unable to find an open sub-generator that can produce events");
}
