{
  LocalFlinkMiniCluster miniCluster=null;
  final int numTMs=3;
  final int numSlots=14;
  try {
    Configuration config=new Configuration();
    config.setInteger(ConfigConstants.LOCAL_INSTANCE_MANAGER_NUMBER_TASK_MANAGER,numTMs);
    config.setInteger(ConfigConstants.TASK_MANAGER_NUM_TASK_SLOTS,numSlots);
    miniCluster=new LocalFlinkMiniCluster(config,true);
    final ActorGateway jmGateway=miniCluster.getJobManagerGateway();
    new JavaTestKit(system){
{
        final ActorGateway selfGateway=new AkkaActorGateway(getRef(),Option.<UUID>empty());
        new Within(TestingUtils.TESTING_DURATION()){
          @Override protected void run(){
            jmGateway.tell(JobManagerMessages.getRequestNumberRegisteredTaskManager(),selfGateway);
            expectMsgEquals(TestingUtils.TESTING_DURATION(),numTMs);
            jmGateway.tell(JobManagerMessages.getRequestTotalNumberOfSlots(),selfGateway);
            expectMsgEquals(TestingUtils.TESTING_DURATION(),numTMs * numSlots);
          }
        }
;
      }
    }
;
  }
  finally {
    if (miniCluster != null) {
      miniCluster.stop();
    }
  }
}
