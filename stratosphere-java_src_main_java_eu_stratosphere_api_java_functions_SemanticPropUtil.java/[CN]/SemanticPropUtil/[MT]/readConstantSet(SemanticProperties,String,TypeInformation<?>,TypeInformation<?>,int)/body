{
  if (s.equals("*")) {
    if (sp instanceof SingleInputSemanticProperties) {
      for (int i=0; i < inType.getArity() && i < outType.getArity(); i++) {
        ((SingleInputSemanticProperties)sp).addForwardedField(i,i);
      }
    }
 else     if (sp instanceof DualInputSemanticProperties) {
      for (int i=0; i < inType.getArity() && i < outType.getArity(); i++) {
        if (input == 0) {
          ((DualInputSemanticProperties)sp).addForwardedField1(i,i);
        }
 else         if (input == 1) {
          ((DualInputSemanticProperties)sp).addForwardedField2(i,i);
        }
      }
    }
    return;
  }
  Matcher matcher=PATTERN.matcher(s);
  int sourceField=0;
  if (!matcher.matches()) {
    throw new RuntimeException("Unrecognized annotation string format.");
  }
  sourceField=Integer.valueOf(matcher.group(1));
  if (!isValidField(inType,sourceField)) {
    throw new IndexOutOfBoundsException("Annotation: Field " + sourceField + " not available in the input tuple.");
  }
  if (matcher.group(6) != null) {
    if (sp instanceof SingleInputSemanticProperties) {
      for (int i=0; i < outType.getArity(); i++) {
        ((SingleInputSemanticProperties)sp).addForwardedField(sourceField,i);
      }
    }
 else     if (sp instanceof DualInputSemanticProperties) {
      for (int i=0; i < outType.getArity(); i++) {
        if (input == 0) {
          ((DualInputSemanticProperties)sp).addForwardedField1(sourceField,i);
        }
 else         if (input == 1) {
          ((DualInputSemanticProperties)sp).addForwardedField2(sourceField,i);
        }
      }
    }
    return;
  }
  FieldSet fs=readFieldSetFromString(matcher.group(3),inType,outType);
  if (sp instanceof SingleInputSemanticProperties) {
    ((SingleInputSemanticProperties)sp).addForwardedField(sourceField,fs);
  }
 else   if (sp instanceof DualInputSemanticProperties) {
    if (input == 0) {
      ((DualInputSemanticProperties)sp).addForwardedField1(sourceField,fs);
    }
 else     if (input == 1) {
      ((DualInputSemanticProperties)sp).addForwardedField2(sourceField,fs);
    }
  }
}
