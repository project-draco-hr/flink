{
  if (set == null) {
    return null;
  }
  Iterator<Annotation> it=set.iterator();
  DualInputSemanticProperties result=null;
  if (!inType1.isTupleType() || !inType2.isTupleType() || !outType.isTupleType()) {
    return null;
  }
  while (it.hasNext()) {
    if (result == null) {
      result=new DualInputSemanticProperties();
    }
    Annotation ann=it.next();
    if (ann instanceof ConstantFieldsFirst) {
      ConstantFieldsFirst cff=(ConstantFieldsFirst)ann;
      parseConstantFieldsFirst(cff.value(),result,inType1,outType);
    }
 else     if (ann instanceof ConstantFieldsSecond) {
      ConstantFieldsSecond cfs=(ConstantFieldsSecond)ann;
      parseConstantFieldsSecond(cfs.value(),result,inType2,outType);
    }
 else     if (ann instanceof ConstantFieldsFirstExcept) {
      ConstantFieldsFirstExcept cffe=(ConstantFieldsFirstExcept)ann;
      parseConstantFieldsFirstExcept(cffe.value(),result,inType1,outType);
    }
 else     if (ann instanceof ConstantFieldsSecondExcept) {
      ConstantFieldsSecondExcept cfse=(ConstantFieldsSecondExcept)ann;
      parseConstantFieldsSecondExcept(cfse.value(),result,inType2,outType);
    }
 else     if (ann instanceof ReadFieldsFirst) {
      ReadFieldsFirst rff=(ReadFieldsFirst)ann;
      parseReadFieldsFirst(rff.value(),result,inType1,outType);
    }
 else     if (ann instanceof ReadFieldsSecond) {
      ReadFieldsSecond rfs=(ReadFieldsSecond)ann;
      parseReadFieldsSecond(rfs.value(),result,inType2,outType);
    }
  }
  return result;
}
