{
  ArgumentCaptor<String> argument=ArgumentCaptor.forClass(String.class);
  error.set(null);
  ServerSocket serverSo=new ServerSocket(0);
  SocketSource source=new SocketSource(serverSo,10);
  source.socketSource.CONNECTION_RETRY_SLEEP=200;
  assertEquals(0,source.socketSource.retries);
  source.start();
  Socket channel;
  channel=serverSo.accept();
  DataOutputStream dataOutputStream=new DataOutputStream(channel.getOutputStream());
  dataOutputStream.write("testFirstSocketpass\n".getBytes());
  channel.close();
  serverSo.close();
  while (source.socketSource.retries < 10) {
    long lastRetry=source.socketSource.retries;
    sleep(100);
    assertTrue(source.socketSource.retries >= lastRetry);
  }
  ;
  assertEquals(10,source.socketSource.retries);
  source.cancel();
  verify(ctx).collect(argument.capture());
  if (error.get() != null) {
    Throwable t=error.get();
    t.printStackTrace();
    fail("Error in spawned thread: " + t.getMessage());
  }
  assertEquals("testFirstSocketpass",argument.getValue());
  assertEquals(10,source.socketSource.retries);
}
