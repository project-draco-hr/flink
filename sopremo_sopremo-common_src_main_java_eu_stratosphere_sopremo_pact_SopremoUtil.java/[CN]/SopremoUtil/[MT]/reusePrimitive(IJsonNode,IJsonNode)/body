{
  final Class<? extends IJsonNode> sourceClass=source.getClass();
  if (sourceClass != target.getClass() || sourceClass.equals(BooleanNode.class) || source.isNull())   return source;
  if (!(source instanceof IPrimitiveNode))   return source;
  if (sourceClass.equals(IntNode.class))   ((IntNode)target).setValue(((IntNode)source).getIntValue());
 else   if (sourceClass.equals(DoubleNode.class))   ((DoubleNode)target).setValue(((DoubleNode)source).getDoubleValue());
 else   if (sourceClass.equals(LongNode.class))   ((LongNode)target).setValue(((LongNode)source).getLongValue());
 else   if (sourceClass.equals(DecimalNode.class))   ((DecimalNode)target).setValue(((DecimalNode)source).getDecimalValue());
 else   if (sourceClass.equals(BigIntegerNode.class))   ((BigIntegerNode)target).setValue(((BigIntegerNode)source).getBigIntegerValue());
  return target;
}
