{
  if (ois.readBoolean())   return (T)ois.readObject();
  T object;
  try {
    object=(T)Class.forName(ois.readUTF()).newInstance();
  }
 catch (  InstantiationException e) {
    throw new IOException(e);
  }
catch (  IllegalAccessException e) {
    throw new IOException(e);
  }
  Map<String,Object> values=(Map<String,Object>)ois.readObject();
  BeanInfo beanInfo;
  try {
    beanInfo=Introspector.getBeanInfo(object.getClass());
  }
 catch (  IntrospectionException e) {
    LOG.info(String.format("Cannot retrieve bean info for type %s: %s",object.getClass(),e.getMessage()));
    ois.readObject();
    return object;
  }
  for (  PropertyDescriptor propertyDescriptor : beanInfo.getPropertyDescriptors()) {
    String name=propertyDescriptor.getName();
    if (values.containsKey(name))     try {
      propertyDescriptor.getWriteMethod().invoke(object,values.get(name));
    }
 catch (    Exception e) {
      LOG.debug(String.format("Cannot deserialize field %s of type %s: %s",propertyDescriptor.getName(),object.getClass(),e.getMessage()));
    }
  }
  return object;
}
