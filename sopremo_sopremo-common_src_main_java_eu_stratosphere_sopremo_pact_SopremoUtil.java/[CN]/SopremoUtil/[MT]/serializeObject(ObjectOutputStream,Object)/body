{
  if (object instanceof Serializable) {
    oos.writeBoolean(true);
    oos.writeObject(object);
    return;
  }
  oos.writeBoolean(false);
  oos.writeUTF(object.getClass().getName());
  Map<String,Object> values=new HashMap<String,Object>();
  BeanInfo beanInfo;
  try {
    beanInfo=Introspector.getBeanInfo(object.getClass());
  }
 catch (  IntrospectionException e) {
    LOG.info(String.format("Cannot retrieve bean info for type %s: %s",object.getClass(),e.getMessage()));
    oos.writeObject(values);
    return;
  }
  for (  PropertyDescriptor propertyDescriptor : beanInfo.getPropertyDescriptors())   if (Serializable.class.isAssignableFrom(propertyDescriptor.getPropertyType()) && propertyDescriptor.getReadMethod() != null && propertyDescriptor.getWriteMethod() != null)   try {
    values.put(propertyDescriptor.getName(),propertyDescriptor.getReadMethod().invoke(object));
  }
 catch (  Exception e) {
    LOG.debug(String.format("Cannot serialize field %s of type %s: %s",propertyDescriptor.getName(),object.getClass(),e.getMessage()));
  }
  oos.writeObject(values);
}
