{
  final ObjectInputStream ois=new ObjectInputStream(new ByteArrayInputStream(buffer)){
    @Override protected Class<?> resolveClass(    ObjectStreamClass desc) throws IOException, ClassNotFoundException {
      try {
        return classLoader.loadClass(desc.getName());
      }
 catch (      ClassNotFoundException e) {
        return super.resolveClass(desc);
      }
    }
  }
;
  try {
    return (T)ois.readObject();
  }
 catch (  ClassNotFoundException e) {
    throw new IllegalStateException("Cannot deserialize the object",e);
  }
}
