{
  try {
    final String fileContent="111|222|333|444|555|666|777|888|999|000|\n000|999|888|777|666|555|444|333|222|111|";
    final FileInputSplit split=createTempFile(fileContent);
    final Configuration parameters=new Configuration();
    new CsvInputFormat.ConfigBuilder(null,parameters).fieldDelimiter('|').field(IntValue.class,8).field(IntValue.class,1).field(IntValue.class,3);
    format.configure(parameters);
    format.open(split);
    Record record=new Record();
    assertNotNull(format.nextRecord(record));
    assertEquals(999,record.getField(0,IntValue.class).getValue());
    assertEquals(222,record.getField(1,IntValue.class).getValue());
    assertEquals(444,record.getField(2,IntValue.class).getValue());
    assertNotNull(format.nextRecord(record));
    assertEquals(222,record.getField(0,IntValue.class).getValue());
    assertEquals(999,record.getField(1,IntValue.class).getValue());
    assertEquals(777,record.getField(2,IntValue.class).getValue());
    assertNull(format.nextRecord(record));
    assertTrue(format.reachedEnd());
  }
 catch (  Exception ex) {
    Assert.fail("Test failed due to a " + ex.getClass().getSimpleName() + ": "+ ex.getMessage());
  }
}
