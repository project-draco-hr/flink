{
  int numSubTasks=(args.length > 0 ? Integer.parseInt(args[0]) : 1);
  String dataInput=(args.length > 1 ? args[1] : "");
  String output=(args.length > 2 ? args[2] : "");
  FileDataSource source=new FileDataSource(new StringInputFormat(),dataInput,"Input Lines");
  source.setParameter(TextInputFormat.CHARSET_NAME,"ASCII");
  MapOperatorBase<TokenizeLine> mapper=new MapOperatorBase<TokenizeLine>(TokenizeLine.class,"Tokenize Lines");
  mapper.setInput(source);
  ReduceOperatorBase<CountWords> reducer=new ReduceOperatorBase<CountWords>(CountWords.class,new int[]{0},"Count Words");
  reducer.setInput(mapper);
  FileDataSink out=new FileDataSink(new StringIntOutputFormat(),output,reducer,"Word Counts");
  StringIntOutputFormat.configureArrayFormat(out).recordDelimiter('\n').fieldDelimiter(' ').lenient(true);
  ArrayModelJob plan=new ArrayModelJob(out,"WordCount Example");
  plan.setDefaultParallelism(numSubTasks);
  return plan;
}
