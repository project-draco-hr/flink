{
  if (isTrivial()) {
    channel.setShipStrategy(globalDopChange ? ShipStrategyType.PARTITION_RANDOM : ShipStrategyType.FORWARD);
    return;
  }
  final GlobalProperties inGlobals=channel.getSource().getGlobalProperties();
  if (!globalDopChange && isMetBy(inGlobals)) {
    if (localDopChange) {
      if (inGlobals.getPartitioning() == PartitioningProperty.HASH_PARTITIONED) {
        channel.setShipStrategy(ShipStrategyType.PARTITION_LOCAL_HASH,inGlobals.getPartitioningFields());
        return;
      }
    }
 else {
      channel.setShipStrategy(ShipStrategyType.FORWARD);
      return;
    }
  }
switch (this.partitioning) {
case FULL_REPLICATION:
    channel.setShipStrategy(ShipStrategyType.BROADCAST);
  break;
case ANY_PARTITIONING:
case HASH_PARTITIONED:
channel.setShipStrategy(ShipStrategyType.PARTITION_HASH,Utils.createOrderedFromSet(this.partitioningFields));
break;
case RANGE_PARTITIONED:
channel.setShipStrategy(ShipStrategyType.PARTITION_RANGE,this.ordering.getInvolvedIndexes(),this.ordering.getFieldSortDirections());
if (this.dataDistribution != null) {
channel.setDataDistribution(this.dataDistribution);
}
break;
default :
throw new CompilerException();
}
}
