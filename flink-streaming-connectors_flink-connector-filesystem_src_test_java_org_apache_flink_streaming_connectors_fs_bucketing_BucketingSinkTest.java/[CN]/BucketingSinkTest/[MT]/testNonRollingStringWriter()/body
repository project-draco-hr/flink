{
  final String outPath=hdfsURI + "/string-non-rolling-out";
  final int numElements=20;
  TestTimeServiceProvider clock=new TestTimeServiceProvider();
  clock.setCurrentTime(0L);
  BucketingSink<String> sink=new BucketingSink<String>(outPath).setBucketer(new BasePathBucketer<String>()).setPartPrefix("part").setPendingPrefix("").setPendingSuffix("");
  OneInputStreamOperatorTestHarness<String,Object> testHarness=createTestSink(sink,clock);
  testHarness.setup();
  testHarness.open();
  for (int i=0; i < numElements; i++) {
    testHarness.processElement(new StreamRecord<>("message #" + Integer.toString(i)));
  }
  testHarness.close();
  FSDataInputStream inStream=dfs.open(new Path(outPath + "/part-0-0"));
  BufferedReader br=new BufferedReader(new InputStreamReader(inStream));
  for (int i=0; i < numElements; i++) {
    String line=br.readLine();
    Assert.assertEquals("message #" + i,line);
  }
  inStream.close();
}
