{
  Queue<QueueElem> instanceSplitList=this.instanceMap.get(instance);
  if (instanceSplitList == null) {
    instanceSplitList=new PriorityQueue<FileInputSplitList.QueueElem>();
    final Iterator<FileInputSplit> it=this.masterSet.iterator();
    while (it.hasNext()) {
      final FileInputSplit split=it.next();
      final String[] hostNames=split.getHostNames();
      if (hostNames == null) {
        instanceSplitList.add(new QueueElem(split,Integer.MAX_VALUE));
      }
 else {
        int minDistance=Integer.MAX_VALUE;
        for (int i=0; i < hostNames.length; ++i) {
          final int distance=instance.getDistance(hostNames[i]);
          if (LOG.isDebugEnabled()) {
            LOG.debug("Distance between " + instance + " and "+ hostNames[i]+ " is "+ distance);
          }
          if (distance < minDistance) {
            minDistance=distance;
          }
        }
        instanceSplitList.add(new QueueElem(split,minDistance));
      }
    }
    this.instanceMap.put(instance,instanceSplitList);
  }
  return instanceSplitList;
}
