{
  if (instanceConnectionInfo == null) {
    LOG.warn("Supplied instance connection info is null");
    return null;
  }
synchronized (this.reservedInstances) {
    if (this.reservedInstances.size() == 0) {
      return null;
    }
    final HashSet<JobID> jobsWithReservedInstances=new HashSet<JobID>();
    for (    JobID id : this.reservedInstances.values()) {
      jobsWithReservedInstances.add(id);
    }
    for (    JobID id : jobsWithReservedInstances) {
      JobToInstancesMapping mapping=null;
synchronized (this.jobToInstancesMap) {
        mapping=this.jobToInstancesMap.get(id);
      }
      if (mapping == null) {
        LOG.error("Unknown mapping for job ID " + id);
        continue;
      }
      AmazonEC2Client ec2client=EC2ClientFactory.getEC2Client(mapping.getAwsAccessId(),mapping.getAwsSecretKey());
      DescribeInstancesRequest request=new DescribeInstancesRequest();
      DescribeInstancesResult result=ec2client.describeInstances(request);
      for (      Reservation r : result.getReservations()) {
        for (        Instance t : r.getInstances()) {
          InetAddress candidateAddress=null;
          try {
            candidateAddress=InetAddress.getByName(t.getPrivateIpAddress());
          }
 catch (          UnknownHostException e) {
            LOG.warn("Cannot convert " + t.getPrivateIpAddress() + " into an IP address");
            continue;
          }
          if (instanceConnectionInfo.getAddress().equals(candidateAddress)) {
            return convertIntoCloudInstance(t,instanceConnectionInfo);
          }
        }
      }
    }
  }
  return null;
}
