{
  final ByteArrayOutputStream baos=new ByteArrayOutputStream();
  final DataOutputStream dos=new DataOutputStream(baos);
  original.write(new OutputViewDataOutputStreamWrapper(dos));
  final String className=original.getClass().getName();
  Class<T> clazz=null;
  try {
    clazz=(Class<T>)Class.forName(className);
  }
 catch (  ClassNotFoundException e) {
    fail(e.getMessage());
  }
  T copy=null;
  try {
    copy=clazz.newInstance();
  }
 catch (  Throwable t) {
    t.printStackTrace();
    fail(t.getMessage());
  }
  final ByteArrayInputStream bais=new ByteArrayInputStream(baos.toByteArray());
  final DataInputStream dis=new DataInputStream(bais);
  copy.read(new InputViewDataInputStreamWrapper(dis));
  if (dis.available() > 0) {
    throw new IOException("The coped result was not fully consumed.");
  }
  return copy;
}
