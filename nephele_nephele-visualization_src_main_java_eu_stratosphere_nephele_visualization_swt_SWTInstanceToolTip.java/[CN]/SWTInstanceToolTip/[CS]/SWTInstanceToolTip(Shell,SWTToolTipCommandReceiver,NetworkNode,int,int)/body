{
  super(parent,x,y);
  this.networkNode=networkNode;
  boolean isProfilingEnabled=false;
  final InstanceVisualizationData instanceVisualizationData=(InstanceVisualizationData)networkNode.getAttachment();
  if (instanceVisualizationData != null) {
    isProfilingEnabled=instanceVisualizationData.isProfilingEnabledForJob();
  }
  int height;
  setTitle(networkNode.getName());
  if (isProfilingEnabled) {
    this.cpuChart=createCPUChart(instanceVisualizationData);
    this.cpuChart.setLayoutData(new GridData(GridData.FILL_BOTH));
    this.memoryChart=createMemoryChart(instanceVisualizationData);
    this.memoryChart.setLayoutData(new GridData(GridData.FILL_BOTH));
    this.networkChart=createNetworkChart(instanceVisualizationData);
    this.networkChart.setLayoutData(new GridData(GridData.FILL_BOTH));
    height=460;
  }
 else {
    this.cpuChart=null;
    this.memoryChart=null;
    this.networkChart=null;
    height=75;
  }
  final Composite instanceActionComposite=new Composite(getShell(),SWT.NONE);
  instanceActionComposite.setLayout(new RowLayout(SWT.HORIZONTAL));
  final Button killInstanceButton=new Button(instanceActionComposite,SWT.PUSH);
  final String instanceName=this.networkNode.getName();
  killInstanceButton.setText("Kill instance...");
  killInstanceButton.setEnabled(this.networkNode.isLeafNode());
  killInstanceButton.addListener(SWT.Selection,new Listener(){
    @Override public void handleEvent(    Event arg0){
      commandReceiver.killInstance(instanceName);
    }
  }
);
  getShell().setSize(WIDTH,height);
  finishInstantiation(x,y,WIDTH);
}
