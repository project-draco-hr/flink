{
  try {
    ClosableBlockingQueue<Integer> queue=new ClosableBlockingQueue<>(asList(1,2,3));
    assertTrue(queue.isOpen());
    assertFalse(queue.close());
    assertFalse(queue.close());
    queue.poll();
    assertFalse(queue.close());
    assertFalse(queue.close());
    queue.pollBatch();
    assertTrue(queue.close());
    assertFalse(queue.isOpen());
    assertFalse(queue.addIfOpen(42));
    assertTrue(queue.isEmpty());
    try {
      queue.add(99);
      fail("should cause an exception");
    }
 catch (    IllegalStateException ignored) {
    }
  }
 catch (  Exception e) {
    e.printStackTrace();
    fail(e.getMessage());
  }
}
