{
  try {
    final long oneYear=365L * 24 * 60* 60* 1000;
    final ClosableBlockingQueue<String> queue1=new ClosableBlockingQueue<>();
    QueueCall call1=new QueueCall(){
      @Override public void call() throws Exception {
        queue1.getBatchBlocking();
      }
    }
;
    testCallExitsOnClose(call1,queue1);
    final ClosableBlockingQueue<String> queue2=new ClosableBlockingQueue<>();
    QueueCall call2=new QueueCall(){
      @Override public void call() throws Exception {
        queue2.getBatchBlocking(oneYear);
      }
    }
;
    testCallExitsOnClose(call2,queue2);
    final ClosableBlockingQueue<String> queue3=new ClosableBlockingQueue<>();
    QueueCall call3=new QueueCall(){
      @Override public void call() throws Exception {
        queue3.getElementBlocking();
      }
    }
;
    testCallExitsOnClose(call3,queue3);
    final ClosableBlockingQueue<String> queue4=new ClosableBlockingQueue<>();
    QueueCall call4=new QueueCall(){
      @Override public void call() throws Exception {
        queue4.getElementBlocking(oneYear);
      }
    }
;
    testCallExitsOnClose(call4,queue4);
  }
 catch (  Exception e) {
    e.printStackTrace();
    fail(e.getMessage());
  }
}
