{
  @SuppressWarnings("unchecked") final TypeComparator<PactRecord> doubleComp=new PactRecordComparatorFactory(new int[]{0},new Class[]{PactDouble.class}).createComparator();
  final ChannelSelector<SerializationDelegate<PactRecord>> oe1=new OutputEmitter<PactRecord>(ShipStrategyType.PARTITION_HASH,doubleComp);
  final SerializationDelegate<PactRecord> delegate=new SerializationDelegate<PactRecord>(new PactRecordSerializerFactory().getSerializer());
  PipedInputStream pipedInput=new PipedInputStream(1024 * 1024);
  DataInputStream in=new DataInputStream(pipedInput);
  DataOutputStream out;
  PactRecord rec=null;
  try {
    out=new DataOutputStream(new PipedOutputStream(pipedInput));
    rec=new PactRecord(1);
    rec.setField(0,new PactInteger());
    rec.write(out);
    rec=new PactRecord();
    rec.read(in);
  }
 catch (  IOException e) {
    fail("Test erroneous");
  }
  try {
    delegate.setInstance(rec);
    oe1.selectChannels(delegate,100);
  }
 catch (  DeserializationException re) {
    return;
  }
  Assert.fail("Expected a NullKeyFieldException.");
}
