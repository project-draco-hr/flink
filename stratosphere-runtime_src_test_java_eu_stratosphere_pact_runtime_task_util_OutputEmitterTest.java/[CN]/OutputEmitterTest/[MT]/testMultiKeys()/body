{
  @SuppressWarnings("unchecked") final TypeComparator<PactRecord> multiComp=new PactRecordComparatorFactory(new int[]{0,1,3},new Class[]{PactInteger.class,PactString.class,PactDouble.class}).createComparator();
  final ChannelSelector<SerializationDelegate<PactRecord>> oe1=new OutputEmitter<PactRecord>(ShipStrategyType.PARTITION_HASH,multiComp);
  final SerializationDelegate<PactRecord> delegate=new SerializationDelegate<PactRecord>(new PactRecordSerializerFactory().getSerializer());
  int numChannels=100;
  int numRecords=5000;
  int[] hit=new int[numChannels];
  for (int i=0; i < numRecords; i++) {
    PactRecord rec=new PactRecord(4);
    rec.setField(0,new PactInteger(i));
    rec.setField(1,new PactString("AB" + i + "CD"+ i));
    rec.setField(3,new PactDouble(i * 3.141d));
    delegate.setInstance(rec);
    int[] chans=oe1.selectChannels(delegate,hit.length);
    for (int j=0; j < chans.length; j++) {
      hit[chans[j]]++;
    }
  }
  int cnt=0;
  for (int i=0; i < hit.length; i++) {
    assertTrue(hit[i] > 0);
    cnt+=hit[i];
  }
  assertTrue(cnt == numRecords);
}
