{
  if (descr_pattern == null) {
    try {
      descr_pattern=Pattern.compile("^([^,]+),(\\d+),(\\d+),(\\d+),(\\d+),(\\d+)$");
    }
 catch (    PatternSyntaxException psex) {
      throw new RuntimeException("Invalid Regex Pattern to parse instance description.",psex);
    }
  }
  try {
    final Matcher m=descr_pattern.matcher(description);
    if (!m.matches()) {
      throw new IllegalArgumentException("The value '" + description + "' does not match pattern "+ descr_pattern.toString());
    }
    final String identifier=m.group(1);
    final int numComputeUnits=Integer.parseInt(m.group(2));
    final int numCores=Integer.parseInt(m.group(3));
    final int memorySize=Integer.parseInt(m.group(4));
    final int diskCapacity=Integer.parseInt(m.group(5));
    final int pricePerHour=Integer.parseInt(m.group(6));
    return new InstanceType(identifier,numComputeUnits,numCores,memorySize,diskCapacity,pricePerHour);
  }
 catch (  Exception e) {
    throw new IllegalArgumentException("The value '" + description + "' does not match pattern "+ descr_pattern.toString());
  }
}
