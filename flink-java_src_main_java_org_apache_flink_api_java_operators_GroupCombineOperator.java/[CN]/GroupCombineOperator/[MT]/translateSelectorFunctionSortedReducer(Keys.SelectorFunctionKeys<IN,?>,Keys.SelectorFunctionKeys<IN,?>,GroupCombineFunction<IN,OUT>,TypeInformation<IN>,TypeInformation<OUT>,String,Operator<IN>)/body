{
  @SuppressWarnings("unchecked") final Keys.SelectorFunctionKeys<IN,K1> groupingKey=(Keys.SelectorFunctionKeys<IN,K1>)rawGroupingKey;
  @SuppressWarnings("unchecked") final Keys.SelectorFunctionKeys<IN,K2> sortingKey=(Keys.SelectorFunctionKeys<IN,K2>)rawSortingKey;
  TypeInformation<Tuple3<K1,K2,IN>> typeInfoWithKey=new TupleTypeInfo<Tuple3<K1,K2,IN>>(groupingKey.getKeyType(),sortingKey.getKeyType(),inputType);
  TwoKeyExtractingMapper<IN,K1,K2> extractor=new TwoKeyExtractingMapper<IN,K1,K2>(groupingKey.getKeyExtractor(),sortingKey.getKeyExtractor());
  PlanUnwrappingSortedGroupCombineOperator<IN,OUT,K1,K2> reducer=new PlanUnwrappingSortedGroupCombineOperator<IN,OUT,K1,K2>(function,groupingKey,sortingKey,name,outputType,typeInfoWithKey);
  MapOperatorBase<IN,Tuple3<K1,K2,IN>,MapFunction<IN,Tuple3<K1,K2,IN>>> mapper=new MapOperatorBase<IN,Tuple3<K1,K2,IN>,MapFunction<IN,Tuple3<K1,K2,IN>>>(extractor,new UnaryOperatorInformation<IN,Tuple3<K1,K2,IN>>(inputType,typeInfoWithKey),"Key Extractor");
  reducer.setInput(mapper);
  mapper.setInput(input);
  mapper.setParallelism(input.getParallelism());
  return reducer;
}
